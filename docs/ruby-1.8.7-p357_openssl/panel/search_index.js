var search_data = {"index":{"info":[["Integer","ext/openssl/lib/openssl/bn.rb","classes/Integer.html"," < Object","Add double dispatch to Integer ",1],["Net","ext/openssl/lib/net/ftptls.rb","classes/Net.html"," < ","",1],["FTPTLS","Net","classes/Net/FTPTLS.html"," < FTP","",1],["Telnet","Net","classes/Net/Telnet.html"," < Object","",1],["Object","ext/openssl/lib/openssl/config.rb","classes/Object.html"," < Object","",1],["OpenSSL","ext/openssl/lib/openssl/bn.rb","classes/OpenSSL.html"," < ","## # Should we care what if somebody require this file directly? #require 'openssl'  # --- ## # Should",1],["ASN1","OpenSSL","classes/OpenSSL/ASN1.html"," < ","   let rdoc know about mOSSL   ",1],["ASN1Data","OpenSSL::ASN1","classes/OpenSSL/ASN1/ASN1Data.html"," < Object","   let rdoc know about mOSSL   ",1],["ASN1Error","OpenSSL::ASN1","classes/OpenSSL/ASN1/ASN1Error.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["Constructive","OpenSSL::ASN1","classes/OpenSSL/ASN1/Constructive.html"," < OpenSSL::ASN1::ASN1Data","   let rdoc know about mOSSL   ",1],["Primitive","OpenSSL::ASN1","classes/OpenSSL/ASN1/Primitive.html"," < OpenSSL::ASN1::ASN1Data","   let rdoc know about mOSSL   ",1],["BN","OpenSSL","classes/OpenSSL/BN.html"," < Object","   let rdoc know about mOSSL   ",1],["BNError","OpenSSL","classes/OpenSSL/BNError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["Buffering","OpenSSL","classes/OpenSSL/Buffering.html"," < ","",1],["Cipher","OpenSSL","classes/OpenSSL/Cipher.html"," < Object","   let rdoc know about mOSSL   ",1],["Cipher","OpenSSL::Cipher","classes/OpenSSL/Cipher/Cipher.html"," < Cipher","This class is only provided for backwards compatibility.  Use OpenSSL::Digest in the future. ",1],["CipherError","OpenSSL::Cipher","classes/OpenSSL/Cipher/CipherError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["Config","OpenSSL","classes/OpenSSL/Config.html"," < Object","      INIT    ",1],["ConfigError","OpenSSL","classes/OpenSSL/ConfigError.html"," < eOSSLError","      INIT    ",1],["Digest","OpenSSL","classes/OpenSSL/Digest.html"," < Object","",1],["Digest","OpenSSL::Digest","classes/OpenSSL/Digest/Digest.html"," < Digest","This class is only provided for backwards compatibility.  Use OpenSSL::Digest in the future. ",1],["Engine","OpenSSL","classes/OpenSSL/Engine.html"," < Object","   HAVE_ENGINE_LOAD_BUILTIN_ENGINES   ",1],["EngineError","OpenSSL::Engine","classes/OpenSSL/Engine/EngineError.html"," < eOSSLError","   HAVE_ENGINE_LOAD_BUILTIN_ENGINES   ",1],["HMAC","OpenSSL","classes/OpenSSL/HMAC.html"," < Object","   let rdoc know about mOSSL   ",1],["HMACError","OpenSSL","classes/OpenSSL/HMACError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["Netscape","OpenSSL","classes/OpenSSL/Netscape.html"," < ","      NETSCAPE_SPKI init    ",1],["SPKI","OpenSSL::Netscape","classes/OpenSSL/Netscape/SPKI.html"," < Object","      NETSCAPE_SPKI init    ",1],["SPKIError","OpenSSL::Netscape","classes/OpenSSL/Netscape/SPKIError.html"," < eOSSLError","      NETSCAPE_SPKI init    ",1],["OCSP","OpenSSL","classes/OpenSSL/OCSP.html"," < ","   NO NEED TO DUP   ",1],["BasicResponse","OpenSSL::OCSP","classes/OpenSSL/OCSP/BasicResponse.html"," < Object","   NO NEED TO DUP   ",1],["CertificateId","OpenSSL::OCSP","classes/OpenSSL/OCSP/CertificateId.html"," < Object","   NO NEED TO DUP   ",1],["OCSPError","OpenSSL::OCSP","classes/OpenSSL/OCSP/OCSPError.html"," < eOSSLError","   NO NEED TO DUP   ",1],["Request","OpenSSL::OCSP","classes/OpenSSL/OCSP/Request.html"," < Object","   NO NEED TO DUP   ",1],["Response","OpenSSL::OCSP","classes/OpenSSL/OCSP/Response.html"," < Object","   NO NEED TO DUP   ",1],["OpenSSLError","OpenSSL","classes/OpenSSL/OpenSSLError.html"," < StandardError","          Generic error,        common for all classes under OpenSSL module        ",1],["PKCS12","OpenSSL","classes/OpenSSL/PKCS12.html"," < Object","          Defines a file format commonly used to store private keys with        accompanying public key",1],["PKCS12Error","OpenSSL::PKCS12","classes/OpenSSL/PKCS12/PKCS12Error.html"," < eOSSLError","          Defines a file format commonly used to store private keys with        accompanying public key",1],["PKCS5","OpenSSL","classes/OpenSSL/PKCS5.html"," < ","          Password-based Encryption               ",1],["PKCS5Error","OpenSSL::PKCS5","classes/OpenSSL/PKCS5/PKCS5Error.html"," < eOSSLError","          Password-based Encryption               ",1],["PKCS7","OpenSSL","classes/OpenSSL/PKCS7.html"," < Object","      INIT    ",1],["PKCS7","OpenSSL::PKCS7","classes/OpenSSL/PKCS7/PKCS7.html"," < PKCS7","This class is only provided for backwards compatibility.  Use OpenSSL::PKCS7 in the future. ",1],["PKCS7Error","OpenSSL::PKCS7","classes/OpenSSL/PKCS7/PKCS7Error.html"," < eOSSLError","      INIT    ",1],["RecipientInfo","OpenSSL::PKCS7","classes/OpenSSL/PKCS7/RecipientInfo.html"," < Object","      INIT    ",1],["SignerInfo","OpenSSL::PKCS7","classes/OpenSSL/PKCS7/SignerInfo.html"," < Object","      INIT    ",1],["PKey","OpenSSL","classes/OpenSSL/PKey.html"," < ","   let rdoc know about mOSSL    # ---    let rdoc know about mOSSL and mPKey    # ---    let rdoc know",1],["DH","OpenSSL::PKey","classes/OpenSSL/PKey/DH.html"," < cPKey","   let rdoc know about mOSSL and mPKey   ",1],["DHError","OpenSSL::PKey","classes/OpenSSL/PKey/DHError.html"," < ePKeyError","   let rdoc know about mOSSL and mPKey   ",1],["DSA","OpenSSL::PKey","classes/OpenSSL/PKey/DSA.html"," < cPKey","   let rdoc know about mOSSL and mPKey   ",1],["DSAError","OpenSSL::PKey","classes/OpenSSL/PKey/DSAError.html"," < ePKeyError","   let rdoc know about mOSSL and mPKey   ",1],["EC","OpenSSL::PKey","classes/OpenSSL/PKey/EC.html"," < cPKey","       call-seq:        point.to_bn   => OpenSSL::BN        See the OpenSSL documentation for EC_POINT_point2bn()",1],["Group","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC/Group.html"," < Object","       call-seq:        point.to_bn   => OpenSSL::BN        See the OpenSSL documentation for EC_POINT_point2bn()",1],["Error","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group/Error.html"," < eOSSLError","       call-seq:        point.to_bn   => OpenSSL::BN        See the OpenSSL documentation for EC_POINT_point2bn()",1],["Point","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC/Point.html"," < Object","       call-seq:        point.to_bn   => OpenSSL::BN        See the OpenSSL documentation for EC_POINT_point2bn()",1],["Error","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point/Error.html"," < eOSSLError","       call-seq:        point.to_bn   => OpenSSL::BN        See the OpenSSL documentation for EC_POINT_point2bn()",1],["ECError","OpenSSL::PKey","classes/OpenSSL/PKey/ECError.html"," < ePKeyError","       call-seq:        point.to_bn   => OpenSSL::BN        See the OpenSSL documentation for EC_POINT_point2bn()",1],["PKey","OpenSSL::PKey","classes/OpenSSL/PKey/PKey.html"," < Object","   let rdoc know about mOSSL   ",1],["PKeyError","OpenSSL::PKey","classes/OpenSSL/PKey/PKeyError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["RSA","OpenSSL::PKey","classes/OpenSSL/PKey/RSA.html"," < cPKey","   let rdoc know about mOSSL and mPKey   ",1],["RSAError","OpenSSL::PKey","classes/OpenSSL/PKey/RSAError.html"," < ePKeyError","   let rdoc know about mOSSL and mPKey   ",1],["Random","OpenSSL","classes/OpenSSL/Random.html"," < ","   let rdoc know about mOSSL   ",1],["RandomError","OpenSSL::Random","classes/OpenSSL/Random/RandomError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["SSL","OpenSSL","classes/OpenSSL/SSL.html"," < ","   let rdoc know about mOSSL    # ---    let rdoc know about mOSSL   ",1],["Nonblock","OpenSSL::SSL","classes/OpenSSL/SSL/Nonblock.html"," < ","",1],["SSLContext","OpenSSL::SSL","classes/OpenSSL/SSL/SSLContext.html"," < Object","   class SSLContext               The following attributes are available but don't show up in rdoc. ",1],["SSLError","OpenSSL::SSL","classes/OpenSSL/SSL/SSLError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["SSLServer","OpenSSL::SSL","classes/OpenSSL/SSL/SSLServer.html"," < Object","",1],["SSLSocket","OpenSSL::SSL","classes/OpenSSL/SSL/SSLSocket.html"," < Object","   class SSLSocket               The following attributes are available but don't show up in rdoc.  ",1],["Session","OpenSSL::SSL","classes/OpenSSL/SSL/Session.html"," < Object","   let rdoc know about mOSSL   ",1],["SessionError","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session/SessionError.html"," < eOSSLError","   let rdoc know about mOSSL   ",1],["SocketForwarder","OpenSSL::SSL","classes/OpenSSL/SSL/SocketForwarder.html"," < ","",1],["X509","OpenSSL","classes/OpenSSL/X509.html"," < ","      This program is licenced under the same licence as Ruby.    (See the file 'LICENCE'.)     # ---",1],["Attribute","OpenSSL::X509","classes/OpenSSL/X509/Attribute.html"," < Object","      X509_ATTRIBUTE init    ",1],["AttributeError","OpenSSL::X509","classes/OpenSSL/X509/AttributeError.html"," < eOSSLError","      X509_ATTRIBUTE init    ",1],["CRL","OpenSSL::X509","classes/OpenSSL/X509/CRL.html"," < Object","      INIT    ",1],["CRLError","OpenSSL::X509","classes/OpenSSL/X509/CRLError.html"," < eOSSLError","      INIT    ",1],["Certificate","OpenSSL::X509","classes/OpenSSL/X509/Certificate.html"," < Object","      INIT    ",1],["CertificateError","OpenSSL::X509","classes/OpenSSL/X509/CertificateError.html"," < eOSSLError","      INIT    ",1],["Extension","OpenSSL::X509","classes/OpenSSL/X509/Extension.html"," < Object","      INIT    ",1],["ExtensionError","OpenSSL::X509","classes/OpenSSL/X509/ExtensionError.html"," < eOSSLError","      INIT    ",1],["ExtensionFactory","OpenSSL::X509","classes/OpenSSL/X509/ExtensionFactory.html"," < Object","      INIT    ",1],["Name","OpenSSL::X509","classes/OpenSSL/X509/Name.html"," < Object","      INIT    ",1],["RFC2253DN","OpenSSL::X509::Name","classes/OpenSSL/X509/Name/RFC2253DN.html"," < ","",1],["NameError","OpenSSL::X509","classes/OpenSSL/X509/NameError.html"," < eOSSLError","      INIT    ",1],["Request","OpenSSL::X509","classes/OpenSSL/X509/Request.html"," < Object","      X509_REQUEST init    ",1],["RequestError","OpenSSL::X509","classes/OpenSSL/X509/RequestError.html"," < eOSSLError","      X509_REQUEST init    ",1],["Revoked","OpenSSL::X509","classes/OpenSSL/X509/Revoked.html"," < Object","      INIT    ",1],["RevokedError","OpenSSL::X509","classes/OpenSSL/X509/RevokedError.html"," < eOSSLError","      INIT    ",1],["Store","OpenSSL::X509","classes/OpenSSL/X509/Store.html"," < Object","      INIT    ",1],["StoreContext","OpenSSL::X509","classes/OpenSSL/X509/StoreContext.html"," < Object","      INIT    ",1],["StoreError","OpenSSL::X509","classes/OpenSSL/X509/StoreError.html"," < eOSSLError","      INIT    ",1],["cASN1ObjectId","ext/openssl/ossl_asn1.c","classes/cASN1ObjectId.html"," < Object","",1],["cDigest","ext/openssl/ossl_digest.c","classes/cDigest.html"," < Object","",1],["/","OpenSSL::BN","classes/OpenSSL/BN.html#M000115","(p1)","      call-seq:       bn1 / bn2 => [result, remainder]     ",2],["<<","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000027","(s)","",2],["<<","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000131","(p1)","            === Parameters     +data+ is a nonempty string.       This method is deprecated and not available",2],["<<","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000180","(p1)","Alias for #update",2],["==","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000358","(p1)","Alias for #eql?",2],["==","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000359","(p1)","Alias for #eql?",2],["==","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000361","(p1)","          ",2],["[]","OpenSSL::Config","classes/OpenSSL/Config.html#M000052","(section)","",2],["[]=","OpenSSL::Config","classes/OpenSSL/Config.html#M000055","(section, pairs)","",2],["accept","OpenSSL::SSL::SSLServer","classes/OpenSSL/SSL/SSLServer.html#M000079","()","",2],["accept","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000391","()","      call-seq:       ssl.accept => self     ",2],["add_entry","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000468","(...)","      call-seq:       name.add_entry(oid, value [, type]) => self     ",2],["add_extension","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000428","(p1)","      call-seq:       cert.add_extension(extension) => extension     ",2],["add_value","OpenSSL::Config","classes/OpenSSL/Config.html#M000051","(section, key, value)","",2],["addr","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000058","()","",2],["asn1_flag","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000340","()","         See the OpenSSL documentation for EC_GROUP_get_asn1_flag()     ",2],["asn1_flag=","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000341","(p1)","         See the OpenSSL documentation for EC_GROUP_set_asn1_flag()     ",2],["bit_set?","OpenSSL::BN","classes/OpenSSL/BN.html#M000155","(p1)","      call-seq:       bn.bit_set?(bit) => true | false     ",2],["block_size","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000140","()","            ",2],["builtin_curves","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000314","()","         See the OpenSSL documentation for EC_builtin_curves()     ",2],["cert","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000395","()","      call-seq:       ssl.cert => cert or nil     ",2],["check_key","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000325","()","            Raises an exception if the key is invalid.        See the OpenSSL documentation for EC_KEY_check_key()",2],["check_modify","OpenSSL::Config","classes/OpenSSL/Config.html#M000069","()","",2],["check_nonce","OpenSSL::OCSP::Request","classes/OpenSSL/OCSP/Request.html#M000208","(p1)","   Check nonce validity in a request and response.    Return value reflects result:     1: nonces present",2],["check_private_key","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000425","(p1)","          Checks if 'key' is PRIV key for this cert     ",2],["cipher","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000398","()","      call-seq:       ssl.cipher => [name, version, bits, alg_bits]     ",2],["ciphers","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000124","()","            Returns the names of all available ciphers in an array.     ",2],["ciphers","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000378","()","      call-seq:       ctx.ciphers => [[name, version, bits, alg_bits], ...]     ",2],["ciphers=","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000379","(p1)","      call-seq:       ctx.ciphers = \"cipher1:cipher2:...\"       ctx.ciphers = [name, ...]       ctx.ciphers",2],["clear_comments","OpenSSL::Config","classes/OpenSSL/Config.html#M000044","(line)","",2],["close","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000032","()","",2],["close","OpenSSL::SSL::SSLServer","classes/OpenSSL/SSL/SSLServer.html#M000080","()","",2],["closed?","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000063","()","",2],["cofactor","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000337","()","         See the OpenSSL documentation for EC_GROUP_get_cofactor()     ",2],["compute_key","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000277","(p1)","            === Parameters     * +pub_bn+ is a OpenSSL::BN.        Returns aString containing a shared",2],["connect","Net::FTPTLS","classes/Net/FTPTLS.html#M000000","(host, port=FTP_PORT)","",2],["connect","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000390","()","      call-seq:       ssl.connect => self     ",2],["consume_rbuff","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000010","(size=nil)","",2],["create","OpenSSL::OCSP::Response","classes/OpenSSL/OCSP/Response.html#M000216","(p1, p2)","      OCSP::Response     ",2],["create","OpenSSL::PKCS12","classes/OpenSSL/PKCS12.html#M000203","(...)","          === Parameters    * +pass+ - string    * +name+ - A string describing the key.    * +key+ -",2],["create_ext","OpenSSL::X509::ExtensionFactory","classes/OpenSSL/X509/ExtensionFactory.html#M000451","(...)","      Array to X509_EXTENSION    Structure:    [\"ln\", \"value\", bool_critical] or    [\"sn\", \"value\", bool_critical]",2],["create_ext_from_array","OpenSSL::X509::ExtensionFactory","classes/OpenSSL/X509/ExtensionFactory.html#M000082","(ary)","",2],["create_ext_from_hash","OpenSSL::X509::ExtensionFactory","classes/OpenSSL/X509/ExtensionFactory.html#M000084","(hash)","",2],["create_ext_from_string","OpenSSL::X509::ExtensionFactory","classes/OpenSSL/X509/ExtensionFactory.html#M000083","(str)","",2],["create_extension","OpenSSL::X509::ExtensionFactory","classes/OpenSSL/X509/ExtensionFactory.html#M000081","(*arg)","",2],["curve_name","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000338","()","         See the OpenSSL documentation for EC_GROUP_get_curve_name()     ",2],["data","OpenSSL::Config","classes/OpenSSL/Config.html#M000067","()","",2],["debug","OpenSSL","classes/OpenSSL.html#M000094","()","      call-seq:      OpenSSL.debug -> true | false     ",2],["debug=","OpenSSL","classes/OpenSSL.html#M000095","(p1)","          Turns on or off CRYPTO_MEM_CHECK.    Also shows some debugging message on stderr.     ",2],["decrypt","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000128","(...)","            Make sure to call .encrypt or .decrypt before using any of the following methods:     * [key=,",2],["degree","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000346","()","         See the OpenSSL documentation for EC_GROUP_get_degree()     ",2],["detect_sub_negotiation","Net::Telnet","classes/Net/Telnet.html#M000022","(data, pos)","",2],["dh_compute_key","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000326","(p1)","            See the OpenSSL documentation for ECDH_compute_key()     ",2],["digest","OpenSSL::Digest","classes/OpenSSL/Digest.html#M000040","(name, data)","",2],["digest","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000178","()","            ",2],["digest","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000173","(p1, p2, p3)","            ",2],["do_not_reverse_lookup=","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000064","(flag)","",2],["do_write","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000025","(s)","for writing. ",2],["dsa_sign_asn1","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000327","(p1)","            See the OpenSSL documentation for ECDSA_sign()     ",2],["dsa_verify_asn1","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000328","(p1, p2)","            See the OpenSSL documentation for ECDSA_verify()     ",2],["each","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000014","(eol=$/)","",2],["each","OpenSSL::Config","classes/OpenSSL/Config.html#M000065","()","",2],["each_byte","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000019","()","",2],["each_line","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000015","(eol=$/)","Alias for #each",2],["encrypt","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000127","(...)","            Make sure to call .encrypt or .decrypt before using any of the following methods:     * [key=,",2],["encrypt","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000229","(...)","      call-seq:       PKCS7.encrypt(certs, data, [, cipher [, flags]]) => pkcs7     ",2],["eof","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000024","()","Alias for #eof?",2],["eof?","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000023","()","",2],["eql?","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000333","(p1)","         ",2],["eql?","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000351","(p1)","            ",2],["errors","OpenSSL","classes/OpenSSL.html#M000096","()","          See any remaining errors held in queue.       Any errors you see here are probably due to a",2],["expand_hexstring","OpenSSL::X509::Name::RFC2253DN","classes/OpenSSL/X509/Name/RFC2253DN.html#M000089","(str)","",2],["expand_pair","OpenSSL::X509::Name::RFC2253DN","classes/OpenSSL/X509/Name/RFC2253DN.html#M000088","(str)","",2],["expand_value","OpenSSL::X509::Name::RFC2253DN","classes/OpenSSL/X509/Name/RFC2253DN.html#M000090","(str1, str2, str3)","",2],["export","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000272","()","            ",2],["export","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000289","(...)","            === Parameters     +cipher+ is an OpenSSL::Cipher.     +password+ is a string containing",2],["export","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000302","(...)","            === Parameters     * +cipher+ is a Cipher object.     * +pass+ is a string.        === Examples",2],["extensions","OpenSSL::X509::CRL","classes/OpenSSL/X509/CRL.html#M000460","()","      Gets X509v3 extensions as array of X509Ext objects     ",2],["extensions","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000426","()","      call-seq:       cert.extensions => [extension...]     ",2],["extensions","OpenSSL::X509::Revoked","classes/OpenSSL/X509/Revoked.html#M000493","()","      Gets X509v3 extensions as array of X509Ext objects     ",2],["extensions=","OpenSSL::X509::CRL","classes/OpenSSL/X509/CRL.html#M000461","(p1)","      Sets X509_EXTENSIONs     ",2],["extensions=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000427","(p1)","      call-seq:       cert.extensions = [ext...] => [ext...]     ",2],["extensions=","OpenSSL::X509::Revoked","classes/OpenSSL/X509/Revoked.html#M000494","(p1)","      Sets X509_EXTENSIONs     ",2],["extract_reference","OpenSSL::Config","classes/OpenSSL/Config.html#M000043","(value)","",2],["fcntl","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000062","(*args)","",2],["fill_rbuff","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000007","()","for reading. ",2],["final","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000132","()","            Returns the remaining data held in the cipher object.  Further calls to update() or final()",2],["flush","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000031","()","",2],["flush_sessions","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000388","(...)","            ",2],["generate","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000267","(...)","            === Parameters     * +size+ is an integer representing the desired key size.  Keys smaller",2],["generate","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000284","(p1)","            === Parameters     * +size+ is an integer representing the desired key size.        ",2],["generate","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000297","(...)","            === Parameters     * +size+ is an integer representing the desired key size.  Keys smaller",2],["generate_key","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000324","()","            See the OpenSSL documentation for EC_KEY_generate_key()     ",2],["generate_key!","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000276","()","            ",2],["generate_prime","OpenSSL::BN","classes/OpenSSL/BN.html#M000151","(...)","          === Parameters    * +bits+ - integer    * +safe+ - boolean    * +add+ - BN    * +rem+ - BN",2],["generator","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000334","()","         See the OpenSSL documentation for EC_GROUP_get0_generator()     ",2],["get_definition","OpenSSL::Config","classes/OpenSSL/Config.html#M000046","(io)","",2],["get_key_string","OpenSSL::Config","classes/OpenSSL/Config.html#M000072","(section, key)","",2],["get_line","OpenSSL::Config","classes/OpenSSL/Config.html#M000047","(io)","",2],["get_value","OpenSSL::Config","classes/OpenSSL/Config.html#M000049","(section, key)","",2],["getc","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000018","()","",2],["gets","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000013","(eol=$/)","",2],["getsockopt","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000061","(level, optname)","",2],["group","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000316","()","            Returns a constant <code>OpenSSL::EC::Group</code> that is tied to the key.     Modifying",2],["group=","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000317","(p1)","            Returns the same object passed, not the group object associated with the key.     If you",2],["hash","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000473","()","      call-seq:       name.hash => integer     ",2],["hash_old","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000474","()","          hash_old returns MD5 based hash used in OpenSSL 0.9.X.     ",2],["hexdigest","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000174","(p1, p2, p3)","            ",2],["hexdigest","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000179","()","            ",2],["id","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000366","()","          Returns the Session ID.    ",2],["infinity?","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000352","()","            ",2],["initialize_copy","OpenSSL::Config","classes/OpenSSL/Config.html#M000068","(other)","",2],["inspect","OpenSSL::Config","classes/OpenSSL/Config.html#M000066","()","",2],["inspect","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000181","()","Alias for #hexdigest",2],["invert!","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000355","()","            ",2],["issuer","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000415","()","      call-seq:       cert.issuer => name     ",2],["issuer=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000416","(p1)","      call-seq:       cert.issuer = name => name     ",2],["iv=","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000138","(p1)","            Sets the cipher iv.        Only call this method after calling cipher.encrypt or cipher.decrypt.",2],["iv_len","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000139","()","            ",2],["key=","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000134","(p1)","            Sets the cipher key.        Only call this method after calling cipher.encrypt or cipher.decrypt.",2],["key_len","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000137","()","            ",2],["key_len=","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000135","(p1)","            Sets the key length of the cipher.  If the cipher is a fixed length cipher then attempting",2],["listen","OpenSSL::SSL::SSLServer","classes/OpenSSL/SSL/SSLServer.html#M000077","(backlog=5)","",2],["login","Net::FTPTLS","classes/Net/FTPTLS.html#M000001","(user = \"anonymous\", passwd = nil, acct = nil)","",2],["make_affine!","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000354","()","            ",2],["name","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000133","()","            Returns the name of the cipher which may differ slightly from the original name provided.",2],["new","OpenSSL::BN","classes/OpenSSL/BN.html#M000104","(...)","      call-seq:       BN.new => aBN       BN.new(bn) => aBN       BN.new(string) => aBN       BN.new(string,",2],["new","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000006","(*args)","",2],["new","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000125","(p1)","            The string must contain a valid cipher name like \"AES-128-CBC\" or \"3DES\".        A list of",2],["new","OpenSSL::Config","classes/OpenSSL/Config.html#M000048","(filename = nil)","",2],["new","OpenSSL::Digest::Digest","classes/OpenSSL/Digest/Digest.html#M000041","(*args)","",2],["new","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000175","(p1, p2)","            ",2],["new","OpenSSL::PKCS12","classes/OpenSSL/PKCS12.html#M000204","(...)","          === Parameters    * +str+ - Must be a DER encoded PKCS12 string.    * +pass+ - string     ",2],["new","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000230","(...)","          Many methods in this class aren't documented.     ",2],["new","OpenSSL::PKCS7::PKCS7","classes/OpenSSL/PKCS7/PKCS7.html#M000045","(*args)","",2],["new","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000268","(...)","            === Parameters     * +size+ is an integer representing the desired key size.  Keys smaller",2],["new","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000285","(...)","            === Parameters     * +size+ is an integer representing the desired key size.     * +string+",2],["new","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000315","(...)","         See the OpenSSL documentation for:        EC_KEY_*     ",2],["new","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000332","(...)","         See the OpenSSL documentation for EC_GROUP_*     ",2],["new","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000350","(...)","            See the OpenSSL documentation for EC_POINT_*     ",2],["new","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000298","(...)","            === Parameters     * +size+ is an integer representing the desired key size.     * +encoded_key+",2],["new","OpenSSL::SSL::Nonblock","classes/OpenSSL/SSL/Nonblock.html#M000070","(*args)","",2],["new","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000371","(...)","          You can get a list of valid methods with OpenSSL::SSL::SSLContext::METHODS     ",2],["new","OpenSSL::SSL::SSLServer","classes/OpenSSL/SSL/SSLServer.html#M000075","(svr, ctx)","",2],["new","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000389","(...)","          === Parameters    * +io+ is a real ruby IO object.  Not an IO like object that responds to",2],["new","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000360","(p1)","          === Parameters    +SSLSocket+ is an OpenSSL::SSL::SSLSocket    +string+ must be a DER or PEM",2],["new","OpenSSL::X509::Attribute","classes/OpenSSL/X509/Attribute.html#M000370","(...)","      call-seq:       Attribute.new(oid [, value]) => attr     ",2],["new","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000404","(...)","      call-seq:       Certificate.new => cert       Certificate.new(string) => cert     ",2],["new","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000467","(...)","      call-seq:       X509::Name.new => name       X509::Name.new(string) => name       X509::Name.new(dn)",2],["new","OpenSSL::X509::Store","classes/OpenSSL/X509/Store.html#M000500","(...)","           ",2],["not_after","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000419","()","      call-seq:       cert.not_after => time     ",2],["not_after=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000420","(p1)","      call-seq:       cert.not_before = time => time     ",2],["not_before","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000417","()","      call-seq:       cert.not_before => time     ",2],["not_before=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000418","(p1)","      call-seq:       cert.not_before = time => time     ",2],["oid","OpenSSL::X509::Attribute","classes/OpenSSL/X509/Attribute.html#M000374","()","      call-seq:       attr.oid => string     ",2],["oid=","OpenSSL::X509::Attribute","classes/OpenSSL/X509/Attribute.html#M000373","(p1)","      call-seq:       attr.oid = string => string     ",2],["on_curve?","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000353","()","            ",2],["order","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000336","()","         See the OpenSSL documentation for EC_GROUP_get_order()     ",2],["padding=","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000141","(p1)","            Enables or disables padding. By default encryption operations are padded using standard block",2],["params","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000278","()","           Stores all parameters of key to the hash    INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!",2],["params","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000294","()","           Stores all parameters of key to the hash    INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!",2],["params","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000309","()","           Stores all parameters of key to the hash    INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!",2],["params_ok?","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000275","()","            ",2],["parse","OpenSSL::Config","classes/OpenSSL/Config.html#M000036","(str)","",2],["parse_config","OpenSSL::Config","classes/OpenSSL/Config.html#M000037","(io)","",2],["parse_config_lines","OpenSSL::Config","classes/OpenSSL/Config.html#M000039","(io)","",2],["parse_openssl","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000093","(str, template=OBJECT_TYPE_TEMPLATE)","",2],["parse_rfc2253","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000092","(str, template=OBJECT_TYPE_TEMPLATE)","",2],["pbkdf2_hmac","OpenSSL::PKCS5","classes/OpenSSL/PKCS5.html#M000211","(p1, p2, p3, p4, p5)","          === Parameters    * +pass+ - string    * +salt+ - string    * +iter+ - integer - should be",2],["pbkdf2_hmac_sha1","OpenSSL::PKCS5","classes/OpenSSL/PKCS5.html#M000212","(p1, p2, p3, p4)","          === Parameters    * +pass+ - string    * +salt+ - string    * +iter+ - integer - should be",2],["peer_cert","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000396","()","      call-seq:       ssl.peer_cert => cert or nil     ",2],["peer_cert_chain","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000397","()","      call-seq:       ssl.peer_cert_chain => [cert, ...] or nil     ",2],["peeraddr","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000059","()","",2],["pending","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000400","()","      call-seq:       ssl.pending => integer     ",2],["pkcs5_keyivgen","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000129","(...)","            Generates and sets the key/iv based on a password.        WARNING: This method is only PKCS5",2],["point_conversion_form","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000342","()","         See the OpenSSL documentation for EC_GROUP_get_point_conversion_form()     ",2],["point_conversion_form=","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000343","(p1)","         See the OpenSSL documentation for EC_GROUP_set_point_conversion_form()     ",2],["post_connection_check","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000073","(hostname)","",2],["preprocess","Net::Telnet","classes/Net/Telnet.html#M000003","(string)","",2],["preprocess_orig","Net::Telnet","classes/Net/Telnet.html#M000004","(string)","Alias for #preprocess",2],["prime?","OpenSSL::BN","classes/OpenSSL/BN.html#M000152","(...)","          === Parameters    * +checks+ - integer     ",2],["prime_fasttest?","OpenSSL::BN","classes/OpenSSL/BN.html#M000166","(...)","          === Parameters    * +checks+ - integer    * +trial_div+ - boolean     ",2],["print","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000029","(*args)","",2],["printf","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000030","(s, *args)","",2],["private?","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000270","()","            ",2],["private?","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000287","()","            ",2],["private?","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000300","()","            ",2],["private_decrypt","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000308","(...)","            ",2],["private_encrypt","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000307","(...)","            ",2],["private_key","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000318","()","            See the OpenSSL documentation for EC_KEY_get0_private_key()     ",2],["private_key=","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000319","(p1)","            See the OpenSSL documentation for EC_KEY_set_private_key()     ",2],["private_key?","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000322","()","            Both public_key? and private_key? may return false at the same time unlike other PKey classes.",2],["public?","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000269","()","            ",2],["public?","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000286","()","            ",2],["public?","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000299","()","            The return value is always true since every private key is also a public key.        ",2],["public_decrypt","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000306","(...)","            ",2],["public_encrypt","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000305","(...)","            ",2],["public_key","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000274","()","            Makes new instance DH PUBLIC_KEY from PRIVATE_KEY     ",2],["public_key","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000291","()","           Makes new instance DSA PUBLIC_KEY from PRIVATE_KEY     ",2],["public_key","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000320","()","            See the OpenSSL documentation for EC_KEY_get0_public_key()     ",2],["public_key","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000304","()","           Makes new instance RSA PUBLIC_KEY from PRIVATE_KEY     ",2],["public_key","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000421","()","      call-seq:       cert.public_key => key     ",2],["public_key=","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000321","(p1)","            See the OpenSSL documentation for EC_KEY_set_public_key()     ",2],["public_key=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000422","(p1)","      call-seq:       cert.public_key = key => key     ",2],["public_key?","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000323","()","            Both public_key? and private_key? may return false at the same time unlike other PKey classes.",2],["puts","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000028","(*args)","",2],["random_iv","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000034","()","Generate, set, and return a random iv. You must call cipher.encrypt or cipher.decrypt before calling",2],["random_key","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000033","()","Generate, set, and return a random key. You must call cipher.encrypt or cipher.decrypt before calling",2],["read","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000011","(size=nil, buf=nil)","",2],["read_smime","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000226","(p1)","      call-seq:       PKCS7.read_smime(string) => pkcs7     ",2],["readchar","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000020","()","",2],["readline","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000017","(eol=$/)","",2],["readlines","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000016","(eol=$/)","",2],["readpartial","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000012","(maxlen, buf=nil)","",2],["reset","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000126","()","            Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, -1).     ",2],["reset","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000176","()","            ",2],["scan","OpenSSL::X509::Name::RFC2253DN","classes/OpenSSL/X509/Name/RFC2253DN.html#M000091","(dn)","",2],["section","OpenSSL::Config","classes/OpenSSL/Config.html#M000053","(name)","",2],["sections","OpenSSL::Config","classes/OpenSSL/Config.html#M000056","()","",2],["seed","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000344","()","         See the OpenSSL documentation for EC_GROUP_get0_seed()     ",2],["seed=","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000345","(p1)","         See the OpenSSL documentation for EC_GROUP_set_seed()     ",2],["serial","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000411","()","      call-seq:       cert.serial => integer     ",2],["serial=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000412","(p1)","      call-seq:       cert.serial = integer => integer     ",2],["session","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000074","()","",2],["session=","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000402","(p1)","            ",2],["session_add","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000381","(p1)","            ",2],["session_cache_mode","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000383","()","            ",2],["session_cache_mode=","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000384","(p1)","            ",2],["session_cache_size","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000385","()","            ",2],["session_cache_size=","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000386","(p1)","            ",2],["session_cache_stats","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000387","()","            ",2],["session_remove","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000382","(p1)","            ",2],["session_reused?","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000401","()","            ",2],["set_generator","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000335","(p1, p2, p3)","         See the OpenSSL documentation for EC_GROUP_set_generator()     ",2],["set_params","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000054","(params={})","",2],["set_to_infinity!","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000356","()","            ",2],["setsockopt","OpenSSL::SSL::SocketForwarder","classes/OpenSSL/SSL/SocketForwarder.html#M000060","(level, optname, optval)","",2],["setup","OpenSSL::SSL::SSLContext","classes/OpenSSL/SSL/SSLContext.html#M000380","()","          This method is called automatically when a new SSLSocket is created.    Normally you do not",2],["shutdown","OpenSSL::SSL::SSLServer","classes/OpenSSL/SSL/SSLServer.html#M000078","(how=Socket::SHUT_RDWR)","",2],["sign","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000228","(...)","      call-seq:       PKCS7.sign(cert, key, data, [, certs [, flags]]) => pkcs7     ",2],["sign","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000423","(p1, p2)","      call-seq:       cert.sign(key, digest) => self     ",2],["signature_algorithm","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000410","()","      call-seq:       cert.signature_algorithm => string     ",2],["ssl?","Net::Telnet","classes/Net/Telnet.html#M000002","()","",2],["state","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000399","()","      call-seq:       ssl.state => string     ",2],["stringio","Object","classes/Object.html#M000035","","Should we care what if somebody require this file directly? require 'openssl' ",2],["subject","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000413","()","      call-seq:       cert.subject => name     ",2],["subject=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000414","(p1)","      call-seq:       cert.subject = name => name     ",2],["sysclose","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000394","()","      call-seq:       ssl.sysclose => nil     ",2],["sysread","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000392","(...)","          === Parameters    * +length+ is a positive integer.    * +buffer+ is a string used to store",2],["syssign","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000292","(p1)","            ",2],["sysverify","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000293","(p1, p2)","            ",2],["syswrite","OpenSSL::SSL::SSLSocket","classes/OpenSSL/SSL/SSLSocket.html#M000393","(p1)","      call-seq:       ssl.syswrite(string) => integer     ",2],["time","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000362","()","          ",2],["timeout","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000364","()","          How long until the session expires in seconds.       ",2],["to_a","OpenSSL::X509::Extension","classes/OpenSSL/X509/Extension.html#M000087","()","",2],["to_a","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000470","()","      call-seq:       name.to_a => [[name, data, type], ...]     ",2],["to_bn","Integer","classes/Integer.html#M000005","()","",2],["to_bn","OpenSSL::PKey::EC::Point","classes/OpenSSL/PKey/EC/Point.html#M000357","()","            See the OpenSSL documentation for EC_POINT_point2bn()     ",2],["to_der","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000273","()","            ",2],["to_der","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000290","()","            ",2],["to_der","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000330","()","            See the OpenSSL documentation for i2d_ECPrivateKey_bio()     ",2],["to_der","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000348","()","         See the OpenSSL documentation for i2d_ECPKParameters_bio()     ",2],["to_der","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000303","()","            ",2],["to_der","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000367","()","          Returns an ASN1 encoded String that contains the Session object.    ",2],["to_der","OpenSSL::X509::Attribute","classes/OpenSSL/X509/Attribute.html#M000377","()","      call-seq:       attr.to_der => string     ",2],["to_der","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000405","()","      call-seq:       cert.to_der => string     ",2],["to_der","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000475","()","      call-seq:       name.to_der => string     ",2],["to_h","OpenSSL::X509::Extension","classes/OpenSSL/X509/Extension.html#M000086","()","",2],["to_i","OpenSSL::BN","classes/OpenSSL/BN.html#M000162","()","      call-seq:       bn.to_i => integer     ",2],["to_int","OpenSSL::BN","classes/OpenSSL/BN.html#M000167","()","Alias for #to_i",2],["to_io","OpenSSL::SSL::SSLServer","classes/OpenSSL/SSL/SSLServer.html#M000076","()","",2],["to_pem","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000279","()","Alias for #export",2],["to_pem","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000295","(...)","Alias for #export",2],["to_pem","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000329","()","            See the OpenSSL documentation for PEM_write_bio_ECPrivateKey()     ",2],["to_pem","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000347","()","         See the OpenSSL documentation for PEM_write_bio_ECPKParameters()     ",2],["to_pem","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000312","(...)","Alias for #export",2],["to_pem","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000368","()","          Returns a PEM encoded String that contains the Session object.    ",2],["to_pem","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000406","()","      call-seq:       cert.to_pem => string     ",2],["to_s","OpenSSL::BN","classes/OpenSSL/BN.html#M000161","(...)","          === Parameters    * +base+ - integer    * * Valid values:    * * * 0 - MPI    * * * 2 - binary",2],["to_s","OpenSSL::Config","classes/OpenSSL/Config.html#M000057","()","",2],["to_s","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000182","()","Alias for #hexdigest",2],["to_s","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000280","()","Alias for #export",2],["to_s","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000296","(...)","Alias for #export",2],["to_s","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000313","(...)","Alias for #export",2],["to_s","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000430","()","Alias for #to_pem",2],["to_s","OpenSSL::X509::Extension","classes/OpenSSL/X509/Extension.html#M000085","()","",2],["to_s","OpenSSL::X509::Name","classes/OpenSSL/X509/Name.html#M000469","(...)","      call-seq:       name.to_s => string       name.to_s(integer) => string     ",2],["to_text","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000271","()","           Prints all parameters of key to buffer    INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!! ",2],["to_text","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000288","()","           Prints all parameters of key to buffer    INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!! ",2],["to_text","OpenSSL::PKey::EC","classes/OpenSSL/PKey/EC.html#M000331","()","            See the OpenSSL documentation for EC_KEY_print()     ",2],["to_text","OpenSSL::PKey::EC::Group","classes/OpenSSL/PKey/EC/Group.html#M000349","()","         See the OpenSSL documentation for ECPKParameters_print()     ",2],["to_text","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000301","()","           Prints all parameters of key to buffer    INSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!! ",2],["to_text","OpenSSL::SSL::Session","classes/OpenSSL/SSL/Session.html#M000369","()","          Shows everything in the Session object.    ",2],["to_text","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000407","()","      call-seq:       cert.to_text => string     ",2],["type","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000232","()","      call-seq:       pkcs7.type => string or nil     ",2],["type=","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000231","(p1)","      call-seq:       pkcs7.type = type => type     ",2],["unescape_value","OpenSSL::Config","classes/OpenSSL/Config.html#M000042","(data, section, value)","",2],["ungetc","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000021","(c)","",2],["update","OpenSSL::Cipher","classes/OpenSSL/Cipher.html#M000130","(...)","            === Parameters     +data+ is a nonempty string.     +buffer+ is an optional string to store",2],["update","OpenSSL::HMAC","classes/OpenSSL/HMAC.html#M000177","(p1)","            ",2],["value","OpenSSL::Config","classes/OpenSSL/Config.html#M000050","(arg1, arg2 = nil)","",2],["value","OpenSSL::X509::Attribute","classes/OpenSSL/X509/Attribute.html#M000376","()","      call-seq:       attr.value => asn1     ",2],["value=","OpenSSL::X509::Attribute","classes/OpenSSL/X509/Attribute.html#M000375","(p1)","      call-seq:       attr.value = asn1 => asn1     ",2],["verify","OpenSSL::Netscape::SPKI","classes/OpenSSL/Netscape/SPKI.html#M000200","(p1)","      Checks that cert signature is made with PRIVversion of this PUBLIC 'key'     ",2],["verify","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000424","(p1)","          Checks that cert signature is made with PRIVversion of this PUBLIC 'key'     ",2],["verify","OpenSSL::X509::Request","classes/OpenSSL/X509/Request.html#M000496","(p1)","      Checks that cert signature is made with PRIVversion of this PUBLIC 'key'     ",2],["verify_callback=","OpenSSL::X509::Store","classes/OpenSSL/X509/Store.html#M000501","(p1)","      General callback for OpenSSL verify     ",2],["verify_certificate_identity","OpenSSL::SSL","classes/OpenSSL/SSL.html#M000071","(cert, hostname)","",2],["verify_certificate_identity","OpenSSL::SSL","classes/OpenSSL/SSL.html#M000071","(cert, hostname)","",2],["version","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000408","()","      call-seq:       cert.version => integer     ",2],["version=","OpenSSL::X509::Certificate","classes/OpenSSL/X509/Certificate.html#M000409","(p1)","      call-seq:       cert.version = integer => integer     ",2],["waitfor","Net::Telnet","classes/Net/Telnet.html#M000008","(options)","",2],["waitfor_org","Net::Telnet","classes/Net/Telnet.html#M000009","(options)","Alias for #waitfor",2],["write","OpenSSL::Buffering","classes/OpenSSL/Buffering.html#M000026","(s)","",2],["write_smime","OpenSSL::PKCS7","classes/OpenSSL/PKCS7.html#M000227","(...)","      call-seq:       PKCS7.write_smime(pkcs7 [, data [, flags]]) => string     ",2],["ftptls.rb","files/ext/openssl/lib/net/ftptls_rb.html","files/ext/openssl/lib/net/ftptls_rb.html","","",3],["telnets.rb","files/ext/openssl/lib/net/telnets_rb.html","files/ext/openssl/lib/net/telnets_rb.html","","",3],["openssl.rb","files/ext/openssl/lib/openssl_rb.html","files/ext/openssl/lib/openssl_rb.html","","",3],["bn.rb","files/ext/openssl/lib/openssl/bn_rb.html","files/ext/openssl/lib/openssl/bn_rb.html","","",3],["buffering.rb","files/ext/openssl/lib/openssl/buffering_rb.html","files/ext/openssl/lib/openssl/buffering_rb.html","","",3],["cipher.rb","files/ext/openssl/lib/openssl/cipher_rb.html","files/ext/openssl/lib/openssl/cipher_rb.html","","",3],["config.rb","files/ext/openssl/lib/openssl/config_rb.html","files/ext/openssl/lib/openssl/config_rb.html","","",3],["digest.rb","files/ext/openssl/lib/openssl/digest_rb.html","files/ext/openssl/lib/openssl/digest_rb.html","","",3],["pkcs7.rb","files/ext/openssl/lib/openssl/pkcs7_rb.html","files/ext/openssl/lib/openssl/pkcs7_rb.html","","",3],["ssl-internal.rb","files/ext/openssl/lib/openssl/ssl-internal_rb.html","files/ext/openssl/lib/openssl/ssl-internal_rb.html","","",3],["ssl.rb","files/ext/openssl/lib/openssl/ssl_rb.html","files/ext/openssl/lib/openssl/ssl_rb.html","","",3],["x509-internal.rb","files/ext/openssl/lib/openssl/x509-internal_rb.html","files/ext/openssl/lib/openssl/x509-internal_rb.html","","",3],["x509.rb","files/ext/openssl/lib/openssl/x509_rb.html","files/ext/openssl/lib/openssl/x509_rb.html","","",3],["openssl_missing.c","files/ext/openssl/openssl_missing_c.html","files/ext/openssl/openssl_missing_c.html","","",3],["openssl_missing.h","files/ext/openssl/openssl_missing_h.html","files/ext/openssl/openssl_missing_h.html","","",3],["ossl.c","files/ext/openssl/ossl_c.html","files/ext/openssl/ossl_c.html","","",3],["ossl.h","files/ext/openssl/ossl_h.html","files/ext/openssl/ossl_h.html","","",3],["ossl_asn1.c","files/ext/openssl/ossl_asn1_c.html","files/ext/openssl/ossl_asn1_c.html","","",3],["ossl_asn1.h","files/ext/openssl/ossl_asn1_h.html","files/ext/openssl/ossl_asn1_h.html","","",3],["ossl_bio.c","files/ext/openssl/ossl_bio_c.html","files/ext/openssl/ossl_bio_c.html","","",3],["ossl_bio.h","files/ext/openssl/ossl_bio_h.html","files/ext/openssl/ossl_bio_h.html","","",3],["ossl_bn.c","files/ext/openssl/ossl_bn_c.html","files/ext/openssl/ossl_bn_c.html","","",3],["ossl_bn.h","files/ext/openssl/ossl_bn_h.html","files/ext/openssl/ossl_bn_h.html","","",3],["ossl_cipher.c","files/ext/openssl/ossl_cipher_c.html","files/ext/openssl/ossl_cipher_c.html","","",3],["ossl_cipher.h","files/ext/openssl/ossl_cipher_h.html","files/ext/openssl/ossl_cipher_h.html","","",3],["ossl_config.c","files/ext/openssl/ossl_config_c.html","files/ext/openssl/ossl_config_c.html","","",3],["ossl_config.h","files/ext/openssl/ossl_config_h.html","files/ext/openssl/ossl_config_h.html","","",3],["ossl_digest.c","files/ext/openssl/ossl_digest_c.html","files/ext/openssl/ossl_digest_c.html","","",3],["ossl_digest.h","files/ext/openssl/ossl_digest_h.html","files/ext/openssl/ossl_digest_h.html","","",3],["ossl_engine.c","files/ext/openssl/ossl_engine_c.html","files/ext/openssl/ossl_engine_c.html","","",3],["ossl_engine.h","files/ext/openssl/ossl_engine_h.html","files/ext/openssl/ossl_engine_h.html","","",3],["ossl_hmac.c","files/ext/openssl/ossl_hmac_c.html","files/ext/openssl/ossl_hmac_c.html","","",3],["ossl_hmac.h","files/ext/openssl/ossl_hmac_h.html","files/ext/openssl/ossl_hmac_h.html","","",3],["ossl_ns_spki.c","files/ext/openssl/ossl_ns_spki_c.html","files/ext/openssl/ossl_ns_spki_c.html","","",3],["ossl_ns_spki.h","files/ext/openssl/ossl_ns_spki_h.html","files/ext/openssl/ossl_ns_spki_h.html","","",3],["ossl_ocsp.c","files/ext/openssl/ossl_ocsp_c.html","files/ext/openssl/ossl_ocsp_c.html","","",3],["ossl_ocsp.h","files/ext/openssl/ossl_ocsp_h.html","files/ext/openssl/ossl_ocsp_h.html","","",3],["ossl_pkcs12.c","files/ext/openssl/ossl_pkcs12_c.html","files/ext/openssl/ossl_pkcs12_c.html","","",3],["ossl_pkcs12.h","files/ext/openssl/ossl_pkcs12_h.html","files/ext/openssl/ossl_pkcs12_h.html","","",3],["ossl_pkcs5.c","files/ext/openssl/ossl_pkcs5_c.html","files/ext/openssl/ossl_pkcs5_c.html","","",3],["ossl_pkcs5.h","files/ext/openssl/ossl_pkcs5_h.html","files/ext/openssl/ossl_pkcs5_h.html","","",3],["ossl_pkcs7.c","files/ext/openssl/ossl_pkcs7_c.html","files/ext/openssl/ossl_pkcs7_c.html","","",3],["ossl_pkcs7.h","files/ext/openssl/ossl_pkcs7_h.html","files/ext/openssl/ossl_pkcs7_h.html","","",3],["ossl_pkey.c","files/ext/openssl/ossl_pkey_c.html","files/ext/openssl/ossl_pkey_c.html","","",3],["ossl_pkey.h","files/ext/openssl/ossl_pkey_h.html","files/ext/openssl/ossl_pkey_h.html","","",3],["ossl_pkey_dh.c","files/ext/openssl/ossl_pkey_dh_c.html","files/ext/openssl/ossl_pkey_dh_c.html","","",3],["ossl_pkey_dsa.c","files/ext/openssl/ossl_pkey_dsa_c.html","files/ext/openssl/ossl_pkey_dsa_c.html","","",3],["ossl_pkey_ec.c","files/ext/openssl/ossl_pkey_ec_c.html","files/ext/openssl/ossl_pkey_ec_c.html","","",3],["ossl_pkey_rsa.c","files/ext/openssl/ossl_pkey_rsa_c.html","files/ext/openssl/ossl_pkey_rsa_c.html","","",3],["ossl_rand.c","files/ext/openssl/ossl_rand_c.html","files/ext/openssl/ossl_rand_c.html","","",3],["ossl_rand.h","files/ext/openssl/ossl_rand_h.html","files/ext/openssl/ossl_rand_h.html","","",3],["ossl_ssl.c","files/ext/openssl/ossl_ssl_c.html","files/ext/openssl/ossl_ssl_c.html","","",3],["ossl_ssl.h","files/ext/openssl/ossl_ssl_h.html","files/ext/openssl/ossl_ssl_h.html","","",3],["ossl_ssl_session.c","files/ext/openssl/ossl_ssl_session_c.html","files/ext/openssl/ossl_ssl_session_c.html","","",3],["ossl_version.h","files/ext/openssl/ossl_version_h.html","files/ext/openssl/ossl_version_h.html","","",3],["ossl_x509.c","files/ext/openssl/ossl_x509_c.html","files/ext/openssl/ossl_x509_c.html","","",3],["ossl_x509.h","files/ext/openssl/ossl_x509_h.html","files/ext/openssl/ossl_x509_h.html","","",3],["ossl_x509attr.c","files/ext/openssl/ossl_x509attr_c.html","files/ext/openssl/ossl_x509attr_c.html","","",3],["ossl_x509cert.c","files/ext/openssl/ossl_x509cert_c.html","files/ext/openssl/ossl_x509cert_c.html","","",3],["ossl_x509crl.c","files/ext/openssl/ossl_x509crl_c.html","files/ext/openssl/ossl_x509crl_c.html","","",3],["ossl_x509ext.c","files/ext/openssl/ossl_x509ext_c.html","files/ext/openssl/ossl_x509ext_c.html","","",3],["ossl_x509name.c","files/ext/openssl/ossl_x509name_c.html","files/ext/openssl/ossl_x509name_c.html","","",3],["ossl_x509req.c","files/ext/openssl/ossl_x509req_c.html","files/ext/openssl/ossl_x509req_c.html","","",3],["ossl_x509revoked.c","files/ext/openssl/ossl_x509revoked_c.html","files/ext/openssl/ossl_x509revoked_c.html","","",3],["ossl_x509store.c","files/ext/openssl/ossl_x509store_c.html","files/ext/openssl/ossl_x509store_c.html","","",3],["ruby_missing.h","files/ext/openssl/ruby_missing_h.html","files/ext/openssl/ruby_missing_h.html","","",3]],"searchIndex":["integer","net","ftptls","telnet","object","openssl","asn1","asn1data","asn1error","constructive","primitive","bn","bnerror","buffering","cipher","cipher","ciphererror","config","configerror","digest","digest","engine","engineerror","hmac","hmacerror","netscape","spki","spkierror","ocsp","basicresponse","certificateid","ocsperror","request","response","opensslerror","pkcs12","pkcs12error","pkcs5","pkcs5error","pkcs7","pkcs7","pkcs7error","recipientinfo","signerinfo","pkey","dh","dherror","dsa","dsaerror","ec","group","error","point","error","ecerror","pkey","pkeyerror","rsa","rsaerror","random","randomerror","ssl","nonblock","sslcontext","sslerror","sslserver","sslsocket","session","sessionerror","socketforwarder","x509","attribute","attributeerror","crl","crlerror","certificate","certificateerror","extension","extensionerror","extensionfactory","name","rfc2253dn","nameerror","request","requesterror","revoked","revokederror","store","storecontext","storeerror","casn1objectid","cdigest","/()","<<()","<<()","<<()","==()","==()","==()","[]()","[]=()","accept()","accept()","add_entry()","add_extension()","add_value()","addr()","asn1_flag()","asn1_flag=()","bit_set?()","block_size()","builtin_curves()","cert()","check_key()","check_modify()","check_nonce()","check_private_key()","cipher()","ciphers()","ciphers()","ciphers=()","clear_comments()","close()","close()","closed?()","cofactor()","compute_key()","connect()","connect()","consume_rbuff()","create()","create()","create_ext()","create_ext_from_array()","create_ext_from_hash()","create_ext_from_string()","create_extension()","curve_name()","data()","debug()","debug=()","decrypt()","degree()","detect_sub_negotiation()","dh_compute_key()","digest()","digest()","digest()","do_not_reverse_lookup=()","do_write()","dsa_sign_asn1()","dsa_verify_asn1()","each()","each()","each_byte()","each_line()","encrypt()","encrypt()","eof()","eof?()","eql?()","eql?()","errors()","expand_hexstring()","expand_pair()","expand_value()","export()","export()","export()","extensions()","extensions()","extensions()","extensions=()","extensions=()","extensions=()","extract_reference()","fcntl()","fill_rbuff()","final()","flush()","flush_sessions()","generate()","generate()","generate()","generate_key()","generate_key!()","generate_prime()","generator()","get_definition()","get_key_string()","get_line()","get_value()","getc()","gets()","getsockopt()","group()","group=()","hash()","hash_old()","hexdigest()","hexdigest()","id()","infinity?()","initialize_copy()","inspect()","inspect()","invert!()","issuer()","issuer=()","iv=()","iv_len()","key=()","key_len()","key_len=()","listen()","login()","make_affine!()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","not_after()","not_after=()","not_before()","not_before=()","oid()","oid=()","on_curve?()","order()","padding=()","params()","params()","params()","params_ok?()","parse()","parse_config()","parse_config_lines()","parse_openssl()","parse_rfc2253()","pbkdf2_hmac()","pbkdf2_hmac_sha1()","peer_cert()","peer_cert_chain()","peeraddr()","pending()","pkcs5_keyivgen()","point_conversion_form()","point_conversion_form=()","post_connection_check()","preprocess()","preprocess_orig()","prime?()","prime_fasttest?()","print()","printf()","private?()","private?()","private?()","private_decrypt()","private_encrypt()","private_key()","private_key=()","private_key?()","public?()","public?()","public?()","public_decrypt()","public_encrypt()","public_key()","public_key()","public_key()","public_key()","public_key()","public_key=()","public_key=()","public_key?()","puts()","random_iv()","random_key()","read()","read_smime()","readchar()","readline()","readlines()","readpartial()","reset()","reset()","scan()","section()","sections()","seed()","seed=()","serial()","serial=()","session()","session=()","session_add()","session_cache_mode()","session_cache_mode=()","session_cache_size()","session_cache_size=()","session_cache_stats()","session_remove()","session_reused?()","set_generator()","set_params()","set_to_infinity!()","setsockopt()","setup()","shutdown()","sign()","sign()","signature_algorithm()","ssl?()","state()","stringio()","subject()","subject=()","sysclose()","sysread()","syssign()","sysverify()","syswrite()","time()","timeout()","to_a()","to_a()","to_bn()","to_bn()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_der()","to_h()","to_i()","to_int()","to_io()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_pem()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","to_text()","type()","type=()","unescape_value()","ungetc()","update()","update()","value()","value()","value=()","verify()","verify()","verify()","verify_callback=()","verify_certificate_identity()","verify_certificate_identity()","version()","version=()","waitfor()","waitfor_org()","write()","write_smime()","ftptls.rb","telnets.rb","openssl.rb","bn.rb","buffering.rb","cipher.rb","config.rb","digest.rb","pkcs7.rb","ssl-internal.rb","ssl.rb","x509-internal.rb","x509.rb","openssl_missing.c","openssl_missing.h","ossl.c","ossl.h","ossl_asn1.c","ossl_asn1.h","ossl_bio.c","ossl_bio.h","ossl_bn.c","ossl_bn.h","ossl_cipher.c","ossl_cipher.h","ossl_config.c","ossl_config.h","ossl_digest.c","ossl_digest.h","ossl_engine.c","ossl_engine.h","ossl_hmac.c","ossl_hmac.h","ossl_ns_spki.c","ossl_ns_spki.h","ossl_ocsp.c","ossl_ocsp.h","ossl_pkcs12.c","ossl_pkcs12.h","ossl_pkcs5.c","ossl_pkcs5.h","ossl_pkcs7.c","ossl_pkcs7.h","ossl_pkey.c","ossl_pkey.h","ossl_pkey_dh.c","ossl_pkey_dsa.c","ossl_pkey_ec.c","ossl_pkey_rsa.c","ossl_rand.c","ossl_rand.h","ossl_ssl.c","ossl_ssl.h","ossl_ssl_session.c","ossl_version.h","ossl_x509.c","ossl_x509.h","ossl_x509attr.c","ossl_x509cert.c","ossl_x509crl.c","ossl_x509ext.c","ossl_x509name.c","ossl_x509req.c","ossl_x509revoked.c","ossl_x509store.c","ruby_missing.h"],"longSearchIndex":["ext/openssl/lib/openssl/bn.rb","ext/openssl/lib/net/telnets.rb","net","net","ext/openssl/lib/openssl/config.rb","ext/openssl/ossl.h","openssl","openssl::asn1","openssl::asn1","openssl::asn1","openssl::asn1","openssl","openssl","openssl","openssl","openssl::cipher","openssl::cipher","openssl","openssl","openssl","openssl::digest","openssl","openssl::engine","openssl","openssl","openssl","openssl::netscape","openssl::netscape","openssl","openssl::ocsp","openssl::ocsp","openssl::ocsp","openssl::ocsp","openssl::ocsp","openssl","openssl","openssl::pkcs12","openssl","openssl::pkcs5","openssl","openssl::pkcs7","openssl::pkcs7","openssl::pkcs7","openssl::pkcs7","openssl","openssl::pkey","openssl::pkey","openssl::pkey","openssl::pkey","openssl::pkey","openssl::pkey::ec","openssl::pkey::ec::group","openssl::pkey::ec","openssl::pkey::ec::point","openssl::pkey","openssl::pkey","openssl::pkey","openssl::pkey","openssl::pkey","openssl","openssl::random","openssl","openssl::ssl","openssl::ssl","openssl::ssl","openssl::ssl","openssl::ssl","openssl::ssl","openssl::ssl::session","openssl::ssl","openssl","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509::name","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","openssl::x509","ext/openssl/ossl_asn1.c","ext/openssl/ossl_digest.c","openssl::bn","openssl::buffering","openssl::cipher","openssl::hmac","openssl::pkey::ec::group","openssl::pkey::ec::point","openssl::ssl::session","openssl::config","openssl::config","openssl::ssl::sslserver","openssl::ssl::sslsocket","openssl::x509::name","openssl::x509::certificate","openssl::config","openssl::ssl::socketforwarder","openssl::pkey::ec::group","openssl::pkey::ec::group","openssl::bn","openssl::cipher","openssl::pkey::ec","openssl::ssl::sslsocket","openssl::pkey::ec","openssl::config","openssl::ocsp::request","openssl::x509::certificate","openssl::ssl::sslsocket","openssl::cipher","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::config","openssl::buffering","openssl::ssl::sslserver","openssl::ssl::socketforwarder","openssl::pkey::ec::group","openssl::pkey::dh","net::ftptls","openssl::ssl::sslsocket","openssl::buffering","openssl::ocsp::response","openssl::pkcs12","openssl::x509::extensionfactory","openssl::x509::extensionfactory","openssl::x509::extensionfactory","openssl::x509::extensionfactory","openssl::x509::extensionfactory","openssl::pkey::ec::group","openssl::config","openssl","openssl","openssl::cipher","openssl::pkey::ec::group","net::telnet","openssl::pkey::ec","openssl::digest","openssl::hmac","openssl::hmac","openssl::ssl::socketforwarder","openssl::buffering","openssl::pkey::ec","openssl::pkey::ec","openssl::buffering","openssl::config","openssl::buffering","openssl::buffering","openssl::cipher","openssl::pkcs7","openssl::buffering","openssl::buffering","openssl::pkey::ec::group","openssl::pkey::ec::point","openssl","openssl::x509::name::rfc2253dn","openssl::x509::name::rfc2253dn","openssl::x509::name::rfc2253dn","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::rsa","openssl::x509::crl","openssl::x509::certificate","openssl::x509::revoked","openssl::x509::crl","openssl::x509::certificate","openssl::x509::revoked","openssl::config","openssl::ssl::socketforwarder","openssl::buffering","openssl::cipher","openssl::buffering","openssl::ssl::sslcontext","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::rsa","openssl::pkey::ec","openssl::pkey::dh","openssl::bn","openssl::pkey::ec::group","openssl::config","openssl::config","openssl::config","openssl::config","openssl::buffering","openssl::buffering","openssl::ssl::socketforwarder","openssl::pkey::ec","openssl::pkey::ec","openssl::x509::name","openssl::x509::name","openssl::hmac","openssl::hmac","openssl::ssl::session","openssl::pkey::ec::point","openssl::config","openssl::config","openssl::hmac","openssl::pkey::ec::point","openssl::x509::certificate","openssl::x509::certificate","openssl::cipher","openssl::cipher","openssl::cipher","openssl::cipher","openssl::cipher","openssl::ssl::sslserver","net::ftptls","openssl::pkey::ec::point","openssl::cipher","openssl::bn","openssl::buffering","openssl::cipher","openssl::config","openssl::digest::digest","openssl::hmac","openssl::pkcs12","openssl::pkcs7","openssl::pkcs7::pkcs7","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::ec","openssl::pkey::ec::group","openssl::pkey::ec::point","openssl::pkey::rsa","openssl::ssl::nonblock","openssl::ssl::sslcontext","openssl::ssl::sslserver","openssl::ssl::sslsocket","openssl::ssl::session","openssl::x509::attribute","openssl::x509::certificate","openssl::x509::name","openssl::x509::store","openssl::x509::certificate","openssl::x509::certificate","openssl::x509::certificate","openssl::x509::certificate","openssl::x509::attribute","openssl::x509::attribute","openssl::pkey::ec::point","openssl::pkey::ec::group","openssl::cipher","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::rsa","openssl::pkey::dh","openssl::config","openssl::config","openssl::config","openssl::x509::name","openssl::x509::name","openssl::pkcs5","openssl::pkcs5","openssl::ssl::sslsocket","openssl::ssl::sslsocket","openssl::ssl::socketforwarder","openssl::ssl::sslsocket","openssl::cipher","openssl::pkey::ec::group","openssl::pkey::ec::group","openssl::ssl::sslsocket","net::telnet","net::telnet","openssl::bn","openssl::bn","openssl::buffering","openssl::buffering","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::rsa","openssl::pkey::rsa","openssl::pkey::rsa","openssl::pkey::ec","openssl::pkey::ec","openssl::pkey::ec","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::rsa","openssl::pkey::rsa","openssl::pkey::rsa","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::ec","openssl::pkey::rsa","openssl::x509::certificate","openssl::pkey::ec","openssl::x509::certificate","openssl::pkey::ec","openssl::buffering","openssl::cipher","openssl::cipher","openssl::buffering","openssl::pkcs7","openssl::buffering","openssl::buffering","openssl::buffering","openssl::buffering","openssl::cipher","openssl::hmac","openssl::x509::name::rfc2253dn","openssl::config","openssl::config","openssl::pkey::ec::group","openssl::pkey::ec::group","openssl::x509::certificate","openssl::x509::certificate","openssl::ssl::sslsocket","openssl::ssl::sslsocket","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::ssl::sslcontext","openssl::ssl::sslsocket","openssl::pkey::ec::group","openssl::ssl::sslcontext","openssl::pkey::ec::point","openssl::ssl::socketforwarder","openssl::ssl::sslcontext","openssl::ssl::sslserver","openssl::pkcs7","openssl::x509::certificate","openssl::x509::certificate","net::telnet","openssl::ssl::sslsocket","object","openssl::x509::certificate","openssl::x509::certificate","openssl::ssl::sslsocket","openssl::ssl::sslsocket","openssl::pkey::dsa","openssl::pkey::dsa","openssl::ssl::sslsocket","openssl::ssl::session","openssl::ssl::session","openssl::x509::extension","openssl::x509::name","integer","openssl::pkey::ec::point","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::ec","openssl::pkey::ec::group","openssl::pkey::rsa","openssl::ssl::session","openssl::x509::attribute","openssl::x509::certificate","openssl::x509::name","openssl::x509::extension","openssl::bn","openssl::bn","openssl::ssl::sslserver","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::ec","openssl::pkey::ec::group","openssl::pkey::rsa","openssl::ssl::session","openssl::x509::certificate","openssl::bn","openssl::config","openssl::hmac","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::rsa","openssl::x509::certificate","openssl::x509::extension","openssl::x509::name","openssl::pkey::dh","openssl::pkey::dsa","openssl::pkey::ec","openssl::pkey::ec::group","openssl::pkey::rsa","openssl::ssl::session","openssl::x509::certificate","openssl::pkcs7","openssl::pkcs7","openssl::config","openssl::buffering","openssl::cipher","openssl::hmac","openssl::config","openssl::x509::attribute","openssl::x509::attribute","openssl::netscape::spki","openssl::x509::certificate","openssl::x509::request","openssl::x509::store","openssl::ssl","openssl::ssl","openssl::x509::certificate","openssl::x509::certificate","net::telnet","net::telnet","openssl::buffering","openssl::pkcs7","files/ext/openssl/lib/net/ftptls_rb.html","files/ext/openssl/lib/net/telnets_rb.html","files/ext/openssl/lib/openssl_rb.html","files/ext/openssl/lib/openssl/bn_rb.html","files/ext/openssl/lib/openssl/buffering_rb.html","files/ext/openssl/lib/openssl/cipher_rb.html","files/ext/openssl/lib/openssl/config_rb.html","files/ext/openssl/lib/openssl/digest_rb.html","files/ext/openssl/lib/openssl/pkcs7_rb.html","files/ext/openssl/lib/openssl/ssl-internal_rb.html","files/ext/openssl/lib/openssl/ssl_rb.html","files/ext/openssl/lib/openssl/x509-internal_rb.html","files/ext/openssl/lib/openssl/x509_rb.html","files/ext/openssl/openssl_missing_c.html","files/ext/openssl/openssl_missing_h.html","files/ext/openssl/ossl_c.html","files/ext/openssl/ossl_h.html","files/ext/openssl/ossl_asn1_c.html","files/ext/openssl/ossl_asn1_h.html","files/ext/openssl/ossl_bio_c.html","files/ext/openssl/ossl_bio_h.html","files/ext/openssl/ossl_bn_c.html","files/ext/openssl/ossl_bn_h.html","files/ext/openssl/ossl_cipher_c.html","files/ext/openssl/ossl_cipher_h.html","files/ext/openssl/ossl_config_c.html","files/ext/openssl/ossl_config_h.html","files/ext/openssl/ossl_digest_c.html","files/ext/openssl/ossl_digest_h.html","files/ext/openssl/ossl_engine_c.html","files/ext/openssl/ossl_engine_h.html","files/ext/openssl/ossl_hmac_c.html","files/ext/openssl/ossl_hmac_h.html","files/ext/openssl/ossl_ns_spki_c.html","files/ext/openssl/ossl_ns_spki_h.html","files/ext/openssl/ossl_ocsp_c.html","files/ext/openssl/ossl_ocsp_h.html","files/ext/openssl/ossl_pkcs12_c.html","files/ext/openssl/ossl_pkcs12_h.html","files/ext/openssl/ossl_pkcs5_c.html","files/ext/openssl/ossl_pkcs5_h.html","files/ext/openssl/ossl_pkcs7_c.html","files/ext/openssl/ossl_pkcs7_h.html","files/ext/openssl/ossl_pkey_c.html","files/ext/openssl/ossl_pkey_h.html","files/ext/openssl/ossl_pkey_dh_c.html","files/ext/openssl/ossl_pkey_dsa_c.html","files/ext/openssl/ossl_pkey_ec_c.html","files/ext/openssl/ossl_pkey_rsa_c.html","files/ext/openssl/ossl_rand_c.html","files/ext/openssl/ossl_rand_h.html","files/ext/openssl/ossl_ssl_c.html","files/ext/openssl/ossl_ssl_h.html","files/ext/openssl/ossl_ssl_session_c.html","files/ext/openssl/ossl_version_h.html","files/ext/openssl/ossl_x509_c.html","files/ext/openssl/ossl_x509_h.html","files/ext/openssl/ossl_x509attr_c.html","files/ext/openssl/ossl_x509cert_c.html","files/ext/openssl/ossl_x509crl_c.html","files/ext/openssl/ossl_x509ext_c.html","files/ext/openssl/ossl_x509name_c.html","files/ext/openssl/ossl_x509req_c.html","files/ext/openssl/ossl_x509revoked_c.html","files/ext/openssl/ossl_x509store_c.html","files/ext/openssl/ruby_missing_h.html"]}}