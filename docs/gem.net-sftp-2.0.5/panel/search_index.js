var search_data = {"index":{"info":[["Net","lib/net/sftp/errors.rb","classes/Net.html"," < ","",1],["SFTP","Net","classes/Net/SFTP.html"," < ","Net::SFTP is a pure-Ruby module for programmatically interacting with a remote host via the SFTP protocol",1],["Constants","Net::SFTP","classes/Net/SFTP/Constants.html"," < ","The packet types and other general constants used by the SFTP protocol. See the specification for the",1],["ACE","Net::SFTP::Constants","classes/Net/SFTP/Constants/ACE.html"," < ","",1],["Flag","Net::SFTP::Constants::ACE","classes/Net/SFTP/Constants/ACE/Flag.html"," < ","Access control entry flags, used from version 4 of the protocol, onward. See Net::SFTP::Protocol::V04::Attributes::ACL.",1],["Mask","Net::SFTP::Constants::ACE","classes/Net/SFTP/Constants/ACE/Mask.html"," < ","Access control entry masks, used from version 4 of the protocol, onward. See Net::SFTP::Protocol::V04::Attributes::ACL.",1],["Type","Net::SFTP::Constants::ACE","classes/Net/SFTP/Constants/ACE/Type.html"," < ","Access control entry types, used from version 4 of the protocol, onward. See Net::SFTP::Protocol::V04::Attributes::ACL.",1],["LockTypes","Net::SFTP::Constants","classes/Net/SFTP/Constants/LockTypes.html"," < ","The Net::SFTP::Session#block operation, implemented in version 6 of the protocol, understands these constants",1],["OpenFlags","Net::SFTP::Constants","classes/Net/SFTP/Constants/OpenFlags.html"," < ","The Net::SFTP::Session#open operation is one of the worst casualties of the revisions between SFTP protocol",1],["FV1","Net::SFTP::Constants::OpenFlags","classes/Net/SFTP/Constants/OpenFlags/FV1.html"," < ","These are the flags that are understood by versions 1-4 of the the open operation. --- These are the",1],["FV5","Net::SFTP::Constants::OpenFlags","classes/Net/SFTP/Constants/OpenFlags/FV5.html"," < ","Version 5 of the open operation totally discarded the flags understood by versions 1-4, and replaced",1],["FV6","Net::SFTP::Constants::OpenFlags","classes/Net/SFTP/Constants/OpenFlags/FV6.html"," < ","Version 6 of the open operation added these flags, in addition to the flags understood by version 5.",1],["PacketTypes","Net::SFTP::Constants","classes/Net/SFTP/Constants/PacketTypes.html"," < ","The various packet types supported by SFTP protocol versions 1 through 6. The FXP_EXTENDED and FXP_EXTENDED_REPLY",1],["RenameFlags","Net::SFTP::Constants","classes/Net/SFTP/Constants/RenameFlags.html"," < ","Beginning in version 5 of the protocol, Net::SFTP::Session#rename accepts an optional +flags+ argument",1],["StatusCodes","Net::SFTP::Constants","classes/Net/SFTP/Constants/StatusCodes.html"," < ","When an FXP_STATUS packet is received from the server, the +code+ will be one of the following constants.",1],["Exception","Net::SFTP","classes/Net/SFTP/Exception.html"," < RuntimeError","The base exception class for the SFTP system. ",1],["Operations","Net::SFTP","classes/Net/SFTP/Operations.html"," < ","",1],["Dir","Net::SFTP::Operations","classes/Net/SFTP/Operations/Dir.html"," < Object","A convenience class for working with remote directories. It provides methods for searching and enumerating",1],["Download","Net::SFTP::Operations","classes/Net/SFTP/Operations/Download.html"," < Object","A general purpose downloader module for Net::SFTP. It can download files into IO objects, or directly",1],["File","Net::SFTP::Operations","classes/Net/SFTP/Operations/File.html"," < Object","A wrapper around an SFTP file handle, that exposes an IO-like interface for interacting with the remote",1],["FileFactory","Net::SFTP::Operations","classes/Net/SFTP/Operations/FileFactory.html"," < Object","A factory class for opening files and returning Operations::File instances that wrap the SFTP handles",1],["Upload","Net::SFTP::Operations","classes/Net/SFTP/Operations/Upload.html"," < Object","A general purpose uploader module for Net::SFTP. It can upload IO objects, files, and even entire directory",1],["Packet","Net::SFTP","classes/Net/SFTP/Packet.html"," < Net::SSH::Buffer","A specialization of the Net::SSH::Buffer class, which simply auto-reads the type byte from the front",1],["Protocol","Net::SFTP","classes/Net/SFTP/Protocol.html"," < ","The Protocol module contains the definitions for all supported SFTP protocol versions. --- The Protocol",1],["Base","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/Base.html"," < Object","The abstract superclass of the specific implementations for each supported SFTP protocol version. It",1],["V01","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/V01.html"," < ","",1],["Attributes","Net::SFTP::Protocol::V01","classes/Net/SFTP/Protocol/V01/Attributes.html"," < Object","A class representing the attributes of a file or directory on the server. It may be used to specify new",1],["Base","Net::SFTP::Protocol::V01","classes/Net/SFTP/Protocol/V01/Base.html"," < Protocol::Base","Wraps the low-level SFTP calls for version 1 of the SFTP protocol. Also implements the packet parsing",1],["Name","Net::SFTP::Protocol::V01","classes/Net/SFTP/Protocol/V01/Name.html"," < Object","Represents a single named item on the remote server. This includes the name, attributes about the item,",1],["V02","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/V02.html"," < ","",1],["Base","Net::SFTP::Protocol::V02","classes/Net/SFTP/Protocol/V02/Base.html"," < V01::Base","Wraps the low-level SFTP calls for version 2 of the SFTP protocol. None of these protocol methods block--all",1],["V03","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/V03.html"," < ","",1],["Base","Net::SFTP::Protocol::V03","classes/Net/SFTP/Protocol/V03/Base.html"," < V02::Base","Wraps the low-level SFTP calls for version 3 of the SFTP protocol. None of these protocol methods block--all",1],["V04","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/V04.html"," < ","",1],["Attributes","Net::SFTP::Protocol::V04","classes/Net/SFTP/Protocol/V04/Attributes.html"," < V01::Attributes","A class representing the attributes of a file or directory on the server. It may be used to specify new",1],["Base","Net::SFTP::Protocol::V04","classes/Net/SFTP/Protocol/V04/Base.html"," < V03::Base","Wraps the low-level SFTP calls for version 4 of the SFTP protocol. Also implements the updated FXP_NAME",1],["Name","Net::SFTP::Protocol::V04","classes/Net/SFTP/Protocol/V04/Name.html"," < Object","Represents a single named item on the remote server. This includes the name, and attributes about the",1],["V05","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/V05.html"," < ","",1],["Base","Net::SFTP::Protocol::V05","classes/Net/SFTP/Protocol/V05/Base.html"," < V04::Base","Wraps the low-level SFTP calls for version 5 of the SFTP protocol. None of these protocol methods block--all",1],["V06","Net::SFTP::Protocol","classes/Net/SFTP/Protocol/V06.html"," < ","",1],["Attributes","Net::SFTP::Protocol::V06","classes/Net/SFTP/Protocol/V06/Attributes.html"," < V04::Attributes","A class representing the attributes of a file or directory on the server. It may be used to specify new",1],["Base","Net::SFTP::Protocol::V06","classes/Net/SFTP/Protocol/V06/Base.html"," < V05::Base","Wraps the low-level SFTP calls for version 6 of the SFTP protocol. None of these protocol methods block--all",1],["Request","Net::SFTP","classes/Net/SFTP/Request.html"," < Object","Encapsulates a single active SFTP request. This is instantiated automatically by the Net::SFTP::Session",1],["Response","Net::SFTP","classes/Net/SFTP/Response.html"," < Object","Encapsulates a response from the remote server, to a specific client request. Response objects are passed",1],["Session","Net::SFTP","classes/Net/SFTP/Session.html"," < Object","The Session class encapsulates a single SFTP channel on a Net::SSH connection. Instances of this class",1],["StatusException","Net::SFTP","classes/Net/SFTP/StatusException.html"," < Net::SFTP::Exception","A exception class for reporting a non-success result of an operation. ",1],["Version","Net::SFTP","classes/Net/SFTP/Version.html"," < Net::SSH::Version","Describes the current version of the Net::SFTP library. ",1],["SSH","Net","classes/Net/SSH.html"," < ","",1],["Connection","Net::SSH","classes/Net/SSH/Connection.html"," < ","",1],["Session","Net::SSH::Connection","classes/Net/SSH/Connection/Session.html"," < Object","",1],["[]","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000212","(path, pattern)","Identical to calling #glob with a +flags+ parameter of 0 and no block. Simply returns the matched entries",2],["[]","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000006","(path, pattern)","Identical to calling #glob with a +flags+ parameter of 0 and no block. Simply returns the matched entries",2],["[]","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000018","(name)","Returns the property with the given name. This allows Download instances to store their own state when",2],["[]","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000241","(name)","Returns the property with the given name. This allows Download instances to store their own state when",2],["[]","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000051","(name)","Returns the property with the given name. This allows Upload instances to store their own state when",2],["[]","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000280","(name)","Returns the property with the given name. This allows Upload instances to store their own state when",2],["[]","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000382","(key)","Returns the value of property with the given +key+. If +key+ is not a symbol, it will be converted to",2],["[]","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000151","(key)","Returns the value of property with the given +key+. If +key+ is not a symbol, it will be converted to",2],["[]","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000385","(key)","Retrieve the data item with the given +key+. The key is converted to a symbol before being used to lookup",2],["[]","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000157","(key)","Retrieve the data item with the given +key+. The key is converted to a symbol before being used to lookup",2],["[]=","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000242","(name, value)","Sets the given property to the given name. This allows Download instances to store their own state when",2],["[]=","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000021","(name, value)","Sets the given property to the given name. This allows Download instances to store their own state when",2],["[]=","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000281","(name, value)","Sets the given property to the given name. This allows Upload instances to store their own state when",2],["[]=","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000052","(name, value)","Sets the given property to the given name. This allows Upload instances to store their own state when",2],["[]=","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000383","(key, value)","Sets the value of the property with name +key+ to +value+. If +key+ is not a symbol, it will be converted",2],["[]=","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000152","(key, value)","Sets the value of the property with name +key+ to +value+. If +key+ is not a symbol, it will be converted",2],["abort!","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000239","()","Forces the transfer to stop. ",2],["abort!","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000016","()","Forces the transfer to stop. ",2],["abort!","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000048","()","Forces the transfer to stop. ",2],["abort!","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000278","()","Forces the transfer to stop. ",2],["active?","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000015","()","Returns true if there are any active requests or pending files or directories. ",2],["active?","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000238","()","Returns true if there are any active requests or pending files or directories. ",2],["active?","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000277","()","Returns true if the uploader is currently running. When this is false, the uploader has finished processing.",2],["active?","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000047","()","Returns true if the uploader is currently running. When this is false, the uploader has finished processing.",2],["attribute_factory","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000117","()","Returns the Attributes class used by this version of the protocol (Net::SFTP::Protocol::V01::Attributes,",2],["attribute_factory","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000345","()","Returns the Attributes class used by this version of the protocol (Net::SFTP::Protocol::V01::Attributes,",2],["attribute_factory","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000360","()","Returns the Attributes class used by this version of the protocol (Net::SFTP::Protocol::V04::Attributes,",2],["attribute_factory","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000127","()","Returns the Attributes class used by this version of the protocol (Net::SFTP::Protocol::V04::Attributes,",2],["attribute_factory","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000145","()","Returns the Attributes class used by this version of the protocol (Net::SFTP::Protocol::V06::Attributes,",2],["attribute_factory","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000376","()","Returns the Attributes class used by this version of the protocol (Net::SFTP::Protocol::V06::Attributes,",2],["block","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000341","(handle, offset, length, mask)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["block","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000110","(handle, offset, length, mask)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["block","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000374","(handle, offset, length, mask)","Sends a FXP_BLOCK packet to the server to request that a byte-range lock be obtained on the given +handle+,",2],["block","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000142","(handle, offset, length, mask)","Sends a FXP_BLOCK packet to the server to request that a byte-range lock be obtained on the given +handle+,",2],["block","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000440","(handle, offset, length, mask, &callback)","Creates a byte-range lock on the file specified by the given +handle+. This operation is only available",2],["block","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000216","(handle, offset, length, mask, &callback)","Creates a byte-range lock on the file specified by the given +handle+. This operation is only available",2],["block!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000217","(handle, offset, length, mask, &callback)","Identical to #block, but blocks until the server responds. It will raise a StatusException if the request",2],["block!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000441","(handle, offset, length, mask, &callback)","Identical to #block, but blocks until the server responds. It will raise a StatusException if the request",2],["close","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000258","()","Closes the underlying file and sets the handle to +nil+. Subsequent operations on this object will fail.",2],["close","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000009","()","Closes the underlying file and sets the handle to +nil+. Subsequent operations on this object will fail.",2],["close","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000318","(handle)","Sends a FXP_CLOSE packet to the server for the given +handle+ (such as would be returned via a FXP_HANDLE",2],["close","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000092","(handle)","Sends a FXP_CLOSE packet to the server for the given +handle+ (such as would be returned via a FXP_HANDLE",2],["close","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000404","(handle, &callback)","Closes an open handle, whether obtained via #open, or #opendir. Returns immediately with a Request object.",2],["close","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000173","(handle, &callback)","Closes an open handle, whether obtained via #open, or #opendir. Returns immediately with a Request object.",2],["close!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000405","(handle, &callback)","Identical to #close, but blocks until the server responds. It will raise a StatusException if the request",2],["close!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000174","(handle, &callback)","Identical to #close, but blocks until the server responds. It will raise a StatusException if the request",2],["close_channel","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000220","()","Closes the SFTP connection, but not the SSH connection. Blocks until the session has terminated. Once",2],["close_channel","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000444","()","Closes the SFTP connection, but not the SSH connection. Blocks until the session has terminated. Once",2],["closed?","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000222","()","Returns true if the connection has been closed. ",2],["closed?","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000446","()","Returns true if the connection has been closed. ",2],["connect","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000224","(&block)","Attempts to establish an SFTP connection over the SSH session given when this object was instantiated.",2],["connect","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000448","(&block)","Attempts to establish an SFTP connection over the SSH session given when this object was instantiated.",2],["connect!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000225","(&block)","Same as the #connect method, but blocks until the SFTP connection has been fully initialized. ",2],["connect!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000449","(&block)","Same as the #connect method, but blocks until the SFTP connection has been fully initialized. ",2],["dir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000170","()","Returns a Net::SFTP::Operations::Dir instance, which can be used to conveniently iterate over and search",2],["dir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000401","()","Returns a Net::SFTP::Operations::Dir instance, which can be used to conveniently iterate over and search",2],["directory?","Net::SFTP::Operations::FileFactory","classes/Net/SFTP/Operations/FileFactory.html#M000042","(path)","Returns +true+ if the argument refers to a directory on the remote host. ",2],["directory?","Net::SFTP::Operations::FileFactory","classes/Net/SFTP/Operations/FileFactory.html#M000273","(path)","Returns +true+ if the argument refers to a directory on the remote host. ",2],["directory?","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000304","()","Returns true if these attributes appear to describe a directory. ",2],["directory?","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000071","()","Returns true if these attributes appear to describe a directory. ",2],["directory?","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000080","()","Returns +true+ if the item appears to be a directory. It does this by examining the attributes. If there",2],["directory?","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000321","()","Returns +true+ if the item appears to be a directory. It does this by examining the attributes. If there",2],["directory?","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000362","()","Returns +true+ if the item is a directory. ",2],["directory?","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000132","()","Returns +true+ if the item is a directory. ",2],["dispatch_request","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000461","(packet)","Parses the packet, finds the associated Request instance, and tells the Request instance to respond to",2],["dispatch_request","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000249","(packet)","Parses the packet, finds the associated Request instance, and tells the Request instance to respond to",2],["do_version","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000460","(packet)","Called to handle FXP_VERSION packets. This performs the SFTP protocol version negotiation, instantiating",2],["do_version","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000244","(packet)","Called to handle FXP_VERSION packets. This performs the SFTP protocol version negotiation, instantiating",2],["download","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000167","(remote, local, options={}, &block)","Initiates a download from +remote+ to +local+, asynchronously. This method will return a new Net::SFTP::Operations::Download",2],["download","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000398","(remote, local, options={}, &block)","Initiates a download from +remote+ to +local+, asynchronously. This method will return a new Net::SFTP::Operations::Download",2],["download!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000399","(remote, local=nil, options={}, &block)","Identical to #download, but blocks until the download is complete. If +local+ is omitted, downloads the",2],["download!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000168","(remote, local=nil, options={}, &block)","Identical to #download, but blocks until the download is complete. If +local+ is omitted, downloads the",2],["download_next_chunk","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000255","(entry)","Initiates a read of the next #read_size bytes from the file. ",2],["download_next_chunk","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000036","(entry)","Initiates a read of the next #read_size bytes from the file. ",2],["encode_acl","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000354","(buffer)","Performs protocol-version-specific encoding of the access control list, if one exists. ",2],["encode_acl","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000130","(buffer)","Performs protocol-version-specific encoding of the access control list, if one exists. ",2],["encode_extended","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000309","(buffer)","Encodes information about the extended info onto the end of the given buffer. ",2],["encode_extended","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000078","(buffer)","Encodes information about the extended info onto the end of the given buffer. ",2],["entries","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000004","(path)","Returns an array of Name objects representing the items in the given remote directory, +path+. ",2],["entries","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000205","(path)","Returns an array of Name objects representing the items in the given remote directory, +path+. ",2],["entries_for","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000300","(local)","Returns all directory entries for the given path, removing the '.' and '..' relative paths. ",2],["entries_for","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000075","(local)","Returns all directory entries for the given path, removing the '.' and '..' relative paths. ",2],["eof?","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000259","()","Returns true if the end of the file has been encountered by a previous read. Setting the current file",2],["eof?","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000010","()","Returns true if the end of the file has been encountered by a previous read. Setting the current file",2],["eof?","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000392","()","Returns +true+ if the status code is FX_EOF; +false+ otherwise. ",2],["eof?","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000161","()","Returns +true+ if the status code is FX_EOF; +false+ otherwise. ",2],["file","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000400","()","Returns an Net::SFTP::Operations::FileFactory instance, which can be used to mimic synchronous, IO-like",2],["file","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000169","()","Returns an Net::SFTP::Operations::FileFactory instance, which can be used to mimic synchronous, IO-like",2],["file?","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000306","()","Returns true if these attributes appear to describe a regular file. ",2],["file?","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000073","()","Returns true if these attributes appear to describe a regular file. ",2],["file?","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000323","()","Returns +true+ if the item appears to be a regular file. It does this by examining the attributes. If",2],["file?","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000082","()","Returns +true+ if the item appears to be a regular file. It does this by examining the attributes. If",2],["file?","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000134","()","Returns +true+ if the item is a regular file. ",2],["file?","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000365","()","Returns +true+ if the item is a regular file. ",2],["fill","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000270","()","Fills the buffer. Returns +true+ if it succeeded, and +false+ if EOF was encountered before any data",2],["fill","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000030","()","Fills the buffer. Returns +true+ if it succeeded, and +false+ if EOF was encountered before any data",2],["foreach","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000003","(path)","Calls the block once for each entry in the named directory on the remote server. Yields a Name object",2],["foreach","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000202","(path)","Calls the block once for each entry in the named directory on the remote server. Yields a Name object",2],["from_buffer","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000285","(buffer)","Parses the given buffer and returns an Attributes object compsed from the data extracted from it. ",2],["from_buffer","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000049","(buffer)","Parses the given buffer and returns an Attributes object compsed from the data extracted from it. ",2],["fsetstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000327","(handle, attrs)","Sends a FXP_FSETSTAT packet to the server, to update the attributes for the file represented by the given",2],["fsetstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000098","(handle, attrs)","Sends a FXP_FSETSTAT packet to the server, to update the attributes for the file represented by the given",2],["fsetstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000185","(handle, attrs, &callback)","The fsetstat method is identical to the #setstat method, with the exception that it takes a +handle+",2],["fsetstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000416","(handle, attrs, &callback)","The fsetstat method is identical to the #setstat method, with the exception that it takes a +handle+",2],["fsetstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000417","(handle, attrs, &callback)","Identical to the #fsetstat method, but blocks until the server responds. It will raise a StatusException",2],["fsetstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000186","(handle, attrs, &callback)","Identical to the #fsetstat method, but blocks until the server responds. It will raise a StatusException",2],["fstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000096","(handle, flags=nil)","Sends a FXP_FSTAT packet to the server, requesting a FXP_ATTR response for the file represented by the",2],["fstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000325","(handle, flags=nil)","Sends a FXP_FSTAT packet to the server, requesting a FXP_ATTR response for the file represented by the",2],["fstat","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000359","(handle, flags=nil)","Sends a FXP_FSTAT packet to the server for the given +path+, and with the given +flags+. If +flags+ is",2],["fstat","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000125","(handle, flags=nil)","Sends a FXP_FSTAT packet to the server for the given +path+, and with the given +flags+. If +flags+ is",2],["fstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000412","(handle, flags=nil, &callback)","The fstat method is identical to the #stat and #lstat methods, with the exception that it takes a +handle+",2],["fstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000181","(handle, flags=nil, &callback)","The fstat method is identical to the #stat and #lstat methods, with the exception that it takes a +handle+",2],["fstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000182","(handle, flags=nil, &callback)","Identical to the #fstat method, but blocks until the server responds. It will raise a StatusException",2],["fstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000413","(handle, flags=nil, &callback)","Identical to the #fstat method, but blocks until the server responds. It will raise a StatusException",2],["gets","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000263","(sep_string=$/)","Reads up to the next instance of +sep_string+ in the stream, and returns the bytes read (including +sep_string+).",2],["gets","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000013","(sep_string=$/)","Reads up to the next instance of +sep_string+ in the stream, and returns the bytes read (including +sep_string+).",2],["gid","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000297","()","Returns the group-id of the group that owns the file, or +nil+ if that information is not available.",2],["gid","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000061","()","Returns the group-id of the group that owns the file, or +nil+ if that information is not available.",2],["glob","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000005","(path, pattern, flags=0)","Works as ::Dir.glob, matching (possibly recursively) all directory entries under +path+ against +pattern+.",2],["glob","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000208","(path, pattern, flags=0)","Works as ::Dir.glob, matching (possibly recursively) all directory entries under +path+ against +pattern+.",2],["group","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000299","()","Returns the group name of the group that owns the file, or +nil+ if that information is not available.",2],["group","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000063","()","Returns the group name of the group that owns the file, or +nil+ if that information is not available.",2],["input","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000453","()","The input buffer used to accumulate packet data ",2],["input","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000229","()","The input buffer used to accumulate packet data ",2],["link","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000109","(*args)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["link","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000338","(*args)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["link","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000140","(new_link_path, existing_path, symlink)","Sends a FXP_LINK packet to the server to request that a link be created at +new_link_path+, pointing",2],["link","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000372","(new_link_path, existing_path, symlink)","Sends a FXP_LINK packet to the server to request that a link be created at +new_link_path+, pointing",2],["link","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000438","(new_link_path, existing_path, symlink=true, &callback)","Attempts to create a link, either hard or symbolic. This operation is only available in SFTP protocol",2],["link","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000214","(new_link_path, existing_path, symlink=true, &callback)","Attempts to create a link, either hard or symbolic. This operation is only available in SFTP protocol",2],["link!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000439","(new_link_path, existing_path, symlink=true, &callback)","Identical to #link, but blocks until the server responds. It will raise a StatusException if the request",2],["link!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000215","(new_link_path, existing_path, symlink=true, &callback)","Identical to #link, but blocks until the server responds. It will raise a StatusException if the request",2],["load","Net::SFTP::Protocol","classes/Net/SFTP/Protocol.html#M000380","(session, version)","Instantiates and returns a new protocol driver instance for the given protocol version. +session+ must",2],["load","Net::SFTP::Protocol","classes/Net/SFTP/Protocol.html#M000149","(session, version)","Instantiates and returns a new protocol driver instance for the given protocol version. +session+ must",2],["longname","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000135","()","Returns a string representing this file, in a format similar to that used by the unix \"ls\" utility. ",2],["longname","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000366","()","Returns a string representing this file, in a format similar to that used by the unix \"ls\" utility. ",2],["loop","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000226","(&block)","Runs the SSH event loop while the given block returns true. This lets you set up a state machine and",2],["loop","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000451","(&block)","Runs the SSH event loop while the given block returns true. This lets you set up a state machine and",2],["loop_forever","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000450","(&block)","Alias for #loop",2],["loop_forever","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000227","(&block)","Alias for #loop",2],["lstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000324","(path, flags=nil)","Sends a FXP_LSTAT packet to the server, requesting a FXP_ATTR response for the file at the given remote",2],["lstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000095","(path, flags=nil)","Sends a FXP_LSTAT packet to the server, requesting a FXP_ATTR response for the file at the given remote",2],["lstat","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000358","(path, flags=nil)","Sends a FXP_LSTAT packet to the server for the given +path+, and with the given +flags+. If +flags+ is",2],["lstat","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000124","(path, flags=nil)","Sends a FXP_LSTAT packet to the server for the given +path+, and with the given +flags+. If +flags+ is",2],["lstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000179","(path, flags=nil, &callback)","This method is identical to the #stat method, with the exception that it will not follow symbolic links",2],["lstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000410","(path, flags=nil, &callback)","This method is identical to the #stat method, with the exception that it will not follow symbolic links",2],["lstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000180","(path, flags=nil, &callback)","Identical to the #lstat method, but blocks until the server responds. It will raise a StatusException",2],["lstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000411","(path, flags=nil, &callback)","Identical to the #lstat method, but blocks until the server responds. It will raise a StatusException",2],["message","Net::SFTP::StatusException","classes/Net/SFTP/StatusException.html#M000190","()","Override the default message format, to include the code and description. ",2],["message","Net::SFTP::StatusException","classes/Net/SFTP/StatusException.html#M000001","()","Override the default message format, to include the code and description. ",2],["mkdir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000331","(path, attrs)","Sends a FXP_MKDIR packet to the server, to request that a new directory at +path+ on the remote server",2],["mkdir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000102","(path, attrs)","Sends a FXP_MKDIR packet to the server, to request that a new directory at +path+ on the remote server",2],["mkdir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000195","(path, attrs={}, &callback)","Creates the named directory on the remote server. If an attribute hash is given, it must map to the set",2],["mkdir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000424","(path, attrs={}, &callback)","Creates the named directory on the remote server. If an attribute hash is given, it must map to the set",2],["mkdir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000196","(path, attrs={}, &callback)","Identical to #mkdir, but blocks until the server responds. It will raise a StatusException if the request",2],["mkdir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000425","(path, attrs={}, &callback)","Identical to #mkdir, but blocks until the server responds. It will raise a StatusException if the request",2],["name_factory","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000346","()","Returns the Name class used by this version of the protocol (Net::SFTP::Protocol::V01::Name, in this",2],["name_factory","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000118","()","Returns the Name class used by this version of the protocol (Net::SFTP::Protocol::V01::Name, in this",2],["name_factory","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000128","()","Returns the Name class used by this version of the protocol (Net::SFTP::Protocol::V04::Name, in this",2],["name_factory","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000363","()","Returns the Name class used by this version of the protocol (Net::SFTP::Protocol::V04::Name, in this",2],["new","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000002","(sftp)","Create a new instance on top of the given SFTP session instance. ",2],["new","Net::SFTP::Operations::Dir","classes/Net/SFTP/Operations/Dir.html#M000201","(sftp)","Create a new instance on top of the given SFTP session instance. ",2],["new","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000234","(sftp, local, remote, options={}, &progress)","Instantiates a new downloader process on top of the given SFTP session. +local+ is either an IO object",2],["new","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000012","(sftp, local, remote, options={}, &progress)","Instantiates a new downloader process on top of the given SFTP session. +local+ is either an IO object",2],["new","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000256","(sftp, handle)","Creates a new wrapper that encapsulates the given +handle+ (such as would be returned by Net::SFTP::Session#open!).",2],["new","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000007","(sftp, handle)","Creates a new wrapper that encapsulates the given +handle+ (such as would be returned by Net::SFTP::Session#open!).",2],["new","Net::SFTP::Operations::FileFactory","classes/Net/SFTP/Operations/FileFactory.html#M000271","(sftp)","Create a new instance on top of the given SFTP session instance. ",2],["new","Net::SFTP::Operations::FileFactory","classes/Net/SFTP/Operations/FileFactory.html#M000038","(sftp)","Create a new instance on top of the given SFTP session instance. ",2],["new","Net::SFTP::Packet","classes/Net/SFTP/Packet.html#M000043","(data)","Create a new Packet object that wraps the given +data+ (which should be a String). The first byte of",2],["new","Net::SFTP::Packet","classes/Net/SFTP/Packet.html#M000274","(data)","Create a new Packet object that wraps the given +data+ (which should be a String). The first byte of",2],["new","Net::SFTP::Protocol::Base","classes/Net/SFTP/Protocol/Base.html#M000377","(session)","Create a new instance of a protocol driver, servicing the given session. ",2],["new","Net::SFTP::Protocol::Base","classes/Net/SFTP/Protocol/Base.html#M000146","(session)","Create a new instance of a protocol driver, servicing the given session. ",2],["new","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000292","(attributes={})","Create a new Attributes instance with the given attributes. The following keys are supported: * :size::",2],["new","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000058","(attributes={})","Create a new Attributes instance with the given attributes. The following keys are supported: * :size::",2],["new","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000317","(name, longname, attributes)","Create a new Name object with the given name, longname, and attributes. ",2],["new","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000079","(name, longname, attributes)","Create a new Name object with the given name, longname, and attributes. ",2],["new","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000126","(attributes={})","Create a new Attributes instance with the given attributes. The following keys are supported: * :type::",2],["new","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000352","(attributes={})","Create a new Attributes instance with the given attributes. The following keys are supported: * :type::",2],["new","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000131","(name, attributes)","Create a new Name object with the given name and attributes. ",2],["new","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000361","(name, attributes)","Create a new Name object with the given name and attributes. ",2],["new","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000395","(session, &block)","Creates a new Net::SFTP instance atop the given Net::SSH connection. This will return immediately, before",2],["new","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000164","(session, &block)","Creates a new Net::SFTP instance atop the given Net::SSH connection. This will return immediately, before",2],["new","Net::SFTP::StatusException","classes/Net/SFTP/StatusException.html#M000000","(response, text=nil)","Create a new status exception that reports the given code and description. ",2],["new","Net::SFTP::StatusException","classes/Net/SFTP/StatusException.html#M000188","(response, text=nil)","Create a new status exception that reports the given code and description. ",2],["normalize_open_flags","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000344","(flags)","Normalizes the given flags parameter, converting it into a combination of IO constants. ",2],["normalize_open_flags","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000114","(flags)","Normalizes the given flags parameter, converting it into a combination of IO constants. ",2],["not_implemented!","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000343","(operation)","A helper method for implementing wrappers for operations that are not implemented by the current SFTP",2],["not_implemented!","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000113","(operation)","A helper method for implementing wrappers for operations that are not implemented by the current SFTP",2],["ok?","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000391","()","Returns +true+ if the status code is FX_OK; +false+ otherwise. ",2],["ok?","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000160","()","Returns +true+ if the status code is FX_OK; +false+ otherwise. ",2],["on_close","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000262","(response)","Called when a file handle is closed. ",2],["on_close","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000039","(response)","Called when a file handle is closed. ",2],["on_close","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000295","(response)","Called when a +close+ request finishes. Raises a StatusException if the close failed, otherwise it calls",2],["on_close","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000069","(response)","Called when a +close+ request finishes. Raises a StatusException if the close failed, otherwise it calls",2],["on_closedir","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000034","(response)","Called when a directory handle is closed. ",2],["on_closedir","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000253","(response)","Called when a directory handle is closed. ",2],["on_mkdir","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000289","(response)","Called when a +mkdir+ request finishes, successfully or otherwise. If the request failed, this will raise",2],["on_mkdir","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000064","(response)","Called when a +mkdir+ request finishes, successfully or otherwise. If the request failed, this will raise",2],["on_open","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000035","(response)","Called when a file has been opened. This will call #download_next_chunk to initiate the data transfer.",2],["on_open","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000254","(response)","Called when a file has been opened. This will call #download_next_chunk to initiate the data transfer.",2],["on_open","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000065","(response)","Called when an +open+ request finishes. Raises StatusException if the open failed, otherwise it calls",2],["on_open","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000291","(response)","Called when an +open+ request finishes. Raises StatusException if the open failed, otherwise it calls",2],["on_opendir","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000250","(response)","Called when a remote directory is \"opened\" for reading, e.g. to enumerate its contents. Starts an readdir",2],["on_opendir","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000031","(response)","Called when a remote directory is \"opened\" for reading, e.g. to enumerate its contents. Starts an readdir",2],["on_read","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000037","(response)","Called when a read from a file finishes. If the read was successful and returned data, this will call",2],["on_read","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000260","(response)","Called when a read from a file finishes. If the read was successful and returned data, this will call",2],["on_readdir","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000032","(response)","Called when the next batch of items is read from a directory on the remote server. If any items were",2],["on_readdir","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000251","(response)","Called when the next batch of items is read from a directory on the remote server. If any items were",2],["on_write","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000294","(response)","Called when a +write+ request finishes. Raises StatusException if the write failed, otherwise it calls",2],["on_write","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000067","(response)","Called when a +write+ request finishes. Raises StatusException if the write failed, otherwise it calls",2],["open","Net::SFTP::Operations::FileFactory","classes/Net/SFTP/Operations/FileFactory.html#M000272","(name, flags=\"r\", mode=nil, &block)","Attempt to open a file on the remote server. The +flags+ parameter accepts the same values as the standard",2],["open","Net::SFTP::Operations::FileFactory","classes/Net/SFTP/Operations/FileFactory.html#M000041","(name, flags=\"r\", mode=nil, &block)","Attempt to open a file on the remote server. The +flags+ parameter accepts the same values as the standard",2],["open","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000316","(path, flags, options)","Sends a FXP_OPEN packet to the server and returns the packet identifier. The +flags+ parameter is either",2],["open","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000089","(path, flags, options)","Sends a FXP_OPEN packet to the server and returns the packet identifier. The +flags+ parameter is either",2],["open","Net::SFTP::Protocol::V05::Base","classes/Net/SFTP/Protocol/V05/Base.html#M000138","(path, flags, options)","Sends a FXP_OPEN packet to the server and returns the packet identifier. The +flags+ parameter is either",2],["open","Net::SFTP::Protocol::V05::Base","classes/Net/SFTP/Protocol/V05/Base.html#M000369","(path, flags, options)","Sends a FXP_OPEN packet to the server and returns the packet identifier. The +flags+ parameter is either",2],["open","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000402","(path, flags=\"r\", options={}, &callback)","Opens a file on the remote server. The +flags+ parameter determines how the flag is open, and accepts",2],["open","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000171","(path, flags=\"r\", options={}, &callback)","Opens a file on the remote server. The +flags+ parameter determines how the flag is open, and accepts",2],["open!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000172","(path, flags=\"r\", options={}, &callback)","Identical to #open, but blocks until the server responds. It will raise a StatusException if the request",2],["open!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000403","(path, flags=\"r\", options={}, &callback)","Identical to #open, but blocks until the server responds. It will raise a StatusException if the request",2],["open?","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000445","()","Returns true if the connection has been initialized. ",2],["open?","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000221","()","Returns true if the connection has been initialized. ",2],["open_file","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000252","(entry)","Called when a file is to be opened for reading from the remote server. ",2],["open_file","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000033","(entry)","Called when a file is to be opened for reading from the remote server. ",2],["open_file","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000060","(local, remote)","Prepares to send +local+ to +remote+. ",2],["open_file","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000286","(local, remote)","Prepares to send +local+ to +remote+. ",2],["opendir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000099","(path)","Sends a FXP_OPENDIR packet to the server, to request a handle for manipulating the directory at the given",2],["opendir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000328","(path)","Sends a FXP_OPENDIR packet to the server, to request a handle for manipulating the directory at the given",2],["opendir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000418","(path, &callback)","Attempts to open a directory on the remote host for reading. Once the handle is obtained, directory entries",2],["opendir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000187","(path, &callback)","Attempts to open a directory on the remote host for reading. Once the handle is obtained, directory entries",2],["opendir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000189","(path, &callback)","Identical to #opendir, but blocks until the server responds. It will raise a StatusException if the request",2],["opendir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000419","(path, &callback)","Identical to #opendir, but blocks until the server responds. It will raise a StatusException if the request",2],["opening?","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000223","()","Returns true if the connection is in the process of being initialized (e.g., it is not closed, but is",2],["opening?","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000447","()","Returns true if the connection is in the process of being initialized (e.g., it is not closed, but is",2],["owner","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000298","()","Returns the username of the user that owns the file, or +nil+ if that information is not available. If",2],["owner","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000062","()","Returns the username of the user that owns the file, or +nil+ if that information is not available. If",2],["parse","Net::SFTP::Protocol::Base","classes/Net/SFTP/Protocol/Base.html#M000378","(packet)","Attept to parse the given packet. If the packet is of an unsupported type, an exception will be raised.",2],["parse","Net::SFTP::Protocol::Base","classes/Net/SFTP/Protocol/Base.html#M000147","(packet)","Attept to parse the given packet. If the packet is of an unsupported type, an exception will be raised.",2],["parse_acl","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000123","(buffer)","A helper method for parsing the ACL entry in an Attributes struct. ",2],["parse_acl","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000351","(buffer)","A helper method for parsing the ACL entry in an Attributes struct. ",2],["parse_attrs_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000087","(packet)","Parses the given FXP_ATTRS packet and returns a hash with one key, :attrs, which references an Attributes",2],["parse_attrs_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000314","(packet)","Parses the given FXP_ATTRS packet and returns a hash with one key, :attrs, which references an Attributes",2],["parse_data_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000313","(packet)","Parses the given FXP_DATA packet and returns a hash with one key, :data, which references the data returned",2],["parse_data_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000086","(packet)","Parses the given FXP_DATA packet and returns a hash with one key, :data, which references the data returned",2],["parse_extended","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000290","(buffer)","Parse the hash of extended data from the buffer. ",2],["parse_extended","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000057","(buffer)","Parse the hash of extended data from the buffer. ",2],["parse_handle_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000311","(packet)","Parses the given FXP_HANDLE packet and returns a hash with one key, :handle, which references the handle.",2],["parse_handle_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000084","(packet)","Parses the given FXP_HANDLE packet and returns a hash with one key, :handle, which references the handle.",2],["parse_name_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000088","(packet)","Parses the given FXP_NAME packet and returns a hash with one key, :names, which references an array of",2],["parse_name_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000315","(packet)","Parses the given FXP_NAME packet and returns a hash with one key, :names, which references an array of",2],["parse_name_packet","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000356","(packet)","As of v4 of the SFTP protocol, the \"longname\" member was removed from the FXP_NAME structure. This method",2],["parse_name_packet","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000120","(packet)","As of v4 of the SFTP protocol, the \"longname\" member was removed from the FXP_NAME structure. This method",2],["parse_status_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000085","(packet)","Parses the given FXP_STATUS packet and returns a hash with one key, :code, which references the status",2],["parse_status_packet","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000312","(packet)","Parses the given FXP_STATUS packet and returns a hash with one key, :code, which references the status",2],["pending?","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000153","()","Returns +true+ if the request is still waiting for a response from the server, and +false+ otherwise.",2],["pending?","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000388","()","Returns +true+ if the request is still waiting for a response from the server, and +false+ otherwise.",2],["pos=","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000008","(offset)","Repositions the file pointer to the given offset (relative to the start of the file). This will also",2],["pos=","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000257","(offset)","Repositions the file pointer to the given offset (relative to the start of the file). This will also",2],["prepare_serialization!","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000077","()","Perform protocol-version-specific preparations for serialization. ",2],["prepare_serialization!","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000308","()","Perform protocol-version-specific preparations for serialization. ",2],["prepare_serialization!","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000129","()","Perform protocol-version-specific preparations for serialization. ",2],["prepare_serialization!","Net::SFTP::Protocol::V04::Attributes","classes/Net/SFTP/Protocol/V04/Attributes.html#M000353","()","Perform protocol-version-specific preparations for serialization. ",2],["print","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000024","(*items)","Writes each argument to the stream. If +$\\+ is set, it will be written after all arguments have been",2],["print","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000267","(*items)","Writes each argument to the stream. If +$\\+ is set, it will be written after all arguments have been",2],["process_next_entry","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000248","()","Enqueues as many files and directories from the stack as possible (see #requests). ",2],["process_next_entry","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000028","()","Enqueues as many files and directories from the stack as possible (see #requests). ",2],["process_next_entry","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000055","()","Examines the stack and determines what action to take. This is the starting point of the state machine.",2],["process_next_entry","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000283","()","Examines the stack and determines what action to take. This is the starting point of the state machine.",2],["progress","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000023","()","The progress handler for this instance. Possibly nil. ",2],["progress","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000245","()","The progress handler for this instance. Possibly nil. ",2],["progress","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000282","()","The progress handler for this instance. Possibly nil. ",2],["progress","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000054","()","The progress handler for this instance. Possibly nil. ",2],["puts","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000268","(*items)","Writes each argument to the stream, appending a newline to any item that does not already end in a newline.",2],["puts","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000025","(*items)","Writes each argument to the stream, appending a newline to any item that does not already end in a newline.",2],["read","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000011","(n=nil)","Reads up to +n+ bytes of data from the stream. Fewer bytes will be returned if EOF is encountered before",2],["read","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000261","(n=nil)","Reads up to +n+ bytes of data from the stream. Fewer bytes will be returned if EOF is encountered before",2],["read","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000319","(handle, offset, length)","Sends a FXP_READ packet to the server, requesting that +length+ bytes be read from the file identified",2],["read","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000093","(handle, offset, length)","Sends a FXP_READ packet to the server, requesting that +length+ bytes be read from the file identified",2],["read","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000175","(handle, offset, length, &callback)","Requests that +length+ bytes, starting at +offset+ bytes from the beginning of the file, be read from",2],["read","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000406","(handle, offset, length, &callback)","Requests that +length+ bytes, starting at +offset+ bytes from the beginning of the file, be read from",2],["read!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000407","(handle, offset, length, &callback)","Identical to #read, but blocks until the server responds. It will raise a StatusException if the request",2],["read!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000176","(handle, offset, length, &callback)","Identical to #read, but blocks until the server responds. It will raise a StatusException if the request",2],["read_size","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000246","()","The number of bytes to read at a time from remote files. ",2],["read_size","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000026","()","The number of bytes to read at a time from remote files. ",2],["readdir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000100","(handle)","Sends a FXP_READDIR packet to the server, to request a batch of directory name entries in the directory",2],["readdir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000329","(handle)","Sends a FXP_READDIR packet to the server, to request a batch of directory name entries in the directory",2],["readdir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000191","(handle, &callback)","Reads a set of entries from the given directory handle (which must have been obtained via #opendir).",2],["readdir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000420","(handle, &callback)","Reads a set of entries from the given directory handle (which must have been obtained via #opendir).",2],["readdir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000192","(handle, &callback)","Identical to #readdir, but blocks until the server responds. It will raise a StatusException if the request",2],["readdir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000421","(handle, &callback)","Identical to #readdir, but blocks until the server responds. It will raise a StatusException if the request",2],["readline","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000265","(sep_string=$/)","Same as #gets, but raises EOFError if EOF is encountered before any data could be read. ",2],["readline","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000019","(sep_string=$/)","Same as #gets, but raises EOFError if EOF is encountered before any data could be read. ",2],["readlink","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000107","(path)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["readlink","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000336","(path)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["readlink","Net::SFTP::Protocol::V03::Base","classes/Net/SFTP/Protocol/V03/Base.html#M000115","(path)","Sends a FXP_READLINK packet to the server to request that the target of the given symlink on the remote",2],["readlink","Net::SFTP::Protocol::V03::Base","classes/Net/SFTP/Protocol/V03/Base.html#M000348","(path)","Sends a FXP_READLINK packet to the server to request that the target of the given symlink on the remote",2],["readlink","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000209","(path, &callback)","Queries the server for the target of the specified symbolic link. This operation is only available in",2],["readlink","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000434","(path, &callback)","Queries the server for the target of the specified symbolic link. This operation is only available in",2],["readlink!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000210","(path, &callback)","Identical to #readlink, but blocks until the server responds. It will raise a StatusException if the",2],["readlink!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000435","(path, &callback)","Identical to #readlink, but blocks until the server responds. It will raise a StatusException if the",2],["realpath","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000333","(path)","Sends a FXP_REALPATH packet to the server, to request that the given +path+ be canonicalized, taking",2],["realpath","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000104","(path)","Sends a FXP_REALPATH packet to the server, to request that the given +path+ be canonicalized, taking",2],["realpath","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000199","(path, &callback)","Tries to canonicalize the given path, turning any given path into an absolute path. This is primarily",2],["realpath","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000428","(path, &callback)","Tries to canonicalize the given path, turning any given path into an absolute path. This is primarily",2],["realpath!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000200","(path, &callback)","Identical to #realpath, but blocks until the server responds. It will raise a StatusException if the",2],["realpath!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000429","(path, &callback)","Identical to #realpath, but blocks until the server responds. It will raise a StatusException if the",2],["recursive?","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000236","()","Returns the value of the :recursive key in the options hash that was given when the object was instantiated.",2],["recursive?","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000014","()","Returns the value of the :recursive key in the options hash that was given when the object was instantiated.",2],["recursive?","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000046","()","Returns true if a directory tree is being uploaded, and false if only a single file is being uploaded.",2],["recursive?","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000276","()","Returns true if a directory tree is being uploaded, and false if only a single file is being uploaded.",2],["remove","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000330","(filename)","Sends a FXP_REMOTE packet to the server, to request that the given file be deleted from the remote server.",2],["remove","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000101","(filename)","Sends a FXP_REMOTE packet to the server, to request that the given file be deleted from the remote server.",2],["remove","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000193","(filename, &callback)","Attempts to remove the given file from the remote file system. Returns immediately with a Request object.",2],["remove","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000422","(filename, &callback)","Attempts to remove the given file from the remote file system. Returns immediately with a Request object.",2],["remove!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000423","(filename, &callback)","Identical to #remove, but blocks until the server responds. It will raise a StatusException if the request",2],["remove!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000194","(filename, &callback)","Identical to #remove, but blocks until the server responds. It will raise a StatusException if the request",2],["rename","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000106","(name, new_name, flags=nil)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["rename","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000335","(name, new_name, flags=nil)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["rename","Net::SFTP::Protocol::V02::Base","classes/Net/SFTP/Protocol/V02/Base.html#M000091","(name, new_name, flags=nil)","Sends a FXP_RENAME packet to the server to request that the file or directory with the given +name+ (must",2],["rename","Net::SFTP::Protocol::V02::Base","classes/Net/SFTP/Protocol/V02/Base.html#M000340","(name, new_name, flags=nil)","Sends a FXP_RENAME packet to the server to request that the file or directory with the given +name+ (must",2],["rename","Net::SFTP::Protocol::V05::Base","classes/Net/SFTP/Protocol/V05/Base.html#M000368","(name, new_name, flags=nil)","Sends a FXP_RENAME packet to the server to request that the file or directory with the given +name+ (must",2],["rename","Net::SFTP::Protocol::V05::Base","classes/Net/SFTP/Protocol/V05/Base.html#M000137","(name, new_name, flags=nil)","Sends a FXP_RENAME packet to the server to request that the file or directory with the given +name+ (must",2],["rename","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000432","(name, new_name, flags=nil, &callback)","Renames the given file. This operation is only available in SFTP protocol versions two and higher. The",2],["rename","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000206","(name, new_name, flags=nil, &callback)","Renames the given file. This operation is only available in SFTP protocol versions two and higher. The",2],["rename!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000433","(name, new_name, flags=nil, &callback)","Identical to #rename, but blocks until the server responds. It will raise a StatusException if the request",2],["rename!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000207","(name, new_name, flags=nil, &callback)","Identical to #rename, but blocks until the server responds. It will raise a StatusException if the request",2],["request","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000230","(type, *args, &callback)","Create and enqueue a new SFTP request of the given type, with the given arguments. Returns a new Request",2],["request","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000454","(type, *args, &callback)","Create and enqueue a new SFTP request of the given type, with the given arguments. Returns a new Request",2],["requests","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000247","()","The number of simultaneou SFTP requests to use to effect the download. Defaults to 16 for recursive downloads.",2],["requests","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000027","()","The number of simultaneou SFTP requests to use to effect the download. Defaults to 16 for recursive downloads.",2],["rmdir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000332","(path)","Sends a FXP_RMDIR packet to the server, to request that the directory at +path+ on the remote server",2],["rmdir","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000103","(path)","Sends a FXP_RMDIR packet to the server, to request that the directory at +path+ on the remote server",2],["rmdir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000197","(path, &callback)","Removes the named directory on the remote server. The directory must be empty before it can be removed.",2],["rmdir","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000426","(path, &callback)","Removes the named directory on the remote server. The directory must be empty before it can be removed.",2],["rmdir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000198","(path, &callback)","Identical to #rmdir, but blocks until the server responds. It will raise a StatusException if the request",2],["rmdir!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000427","(path, &callback)","Identical to #rmdir, but blocks until the server responds. It will raise a StatusException if the request",2],["send_packet","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000228","(type, *args)","Formats, constructs, and sends an SFTP packet of the given type and with the given data. This does not",2],["send_packet","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000452","(type, *args)","Formats, constructs, and sends an SFTP packet of the given type and with the given data. This does not",2],["send_request","Net::SFTP::Protocol::Base","classes/Net/SFTP/Protocol/Base.html#M000379","(type, *args)","Send a new packet of the given type, and with the given data arguments. A new request identifier will",2],["send_request","Net::SFTP::Protocol::Base","classes/Net/SFTP/Protocol/Base.html#M000148","(type, *args)","Send a new packet of the given type, and with the given data arguments. A new request identifier will",2],["setstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000097","(path, attrs)","Sends a FXP_SETSTAT packet to the server, to update the attributes for the file at the given remote +path+",2],["setstat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000326","(path, attrs)","Sends a FXP_SETSTAT packet to the server, to update the attributes for the file at the given remote +path+",2],["setstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000183","(path, attrs, &callback)","This method may be used to set file metadata (such as permissions, or user/group information) on a remote",2],["setstat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000414","(path, attrs, &callback)","This method may be used to set file metadata (such as permissions, or user/group information) on a remote",2],["setstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000415","(path, attrs, &callback)","Identical to the #setstat method, but blocks until the server responds. It will raise a StatusException",2],["setstat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000184","(path, attrs, &callback)","Identical to the #setstat method, but blocks until the server responds. It will raise a StatusException",2],["sftp","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000163","(wait=true)","A convenience method for starting up a new SFTP connection on the current SSH session. Blocks until the",2],["sftp","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000394","(wait=true)","A convenience method for starting up a new SFTP connection on the current SSH session. Blocks until the",2],["stack","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000022","()","The stack of Entry instances, indicating which files and directories on the remote host remain to be",2],["stack","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000243","()","The stack of Entry instances, indicating which files and directories on the remote host remain to be",2],["start","Net::SFTP","classes/Net/SFTP.html#M000162","(host, user, options={}, &block)","A convenience method for starting a standalone SFTP session. It will start up an SSH session using the",2],["start","Net::SFTP","classes/Net/SFTP.html#M000393","(host, user, options={}, &block)","A convenience method for starting a standalone SFTP session. It will start up an SSH session using the",2],["stat","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000029","()","Performs an fstat operation on the handle and returns the attribute object (Net::SFTP::Protocol::V01::Attributes,",2],["stat","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000269","()","Performs an fstat operation on the handle and returns the attribute object (Net::SFTP::Protocol::V01::Attributes,",2],["stat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000105","(path, flags=nil)","Sends a FXP_STAT packet to the server, requesting a FXP_ATTR response for the file at the given remote",2],["stat","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000334","(path, flags=nil)","Sends a FXP_STAT packet to the server, requesting a FXP_ATTR response for the file at the given remote",2],["stat","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000122","(path, flags=nil)","Sends a FXP_STAT packet to the server for the given +path+, and with the given +flags+. If +flags+ is",2],["stat","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000357","(path, flags=nil)","Sends a FXP_STAT packet to the server for the given +path+, and with the given +flags+. If +flags+ is",2],["stat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000203","(path, flags=nil, &callback)","Identical to the #lstat method, except that it follows symlinks (e.g., if you give it the path to a symlink,",2],["stat","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000430","(path, flags=nil, &callback)","Identical to the #lstat method, except that it follows symlinks (e.g., if you give it the path to a symlink,",2],["stat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000204","(path, flags=nil, &callback)","Identical to #stat, but blocks until the server responds. It will raise a StatusException if the request",2],["stat!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000431","(path, flags=nil, &callback)","Identical to #stat, but blocks until the server responds. It will raise a StatusException if the request",2],["symbolic_type","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000303","()","Returns the type as a symbol, rather than an integer, for easier use in Ruby programs. ",2],["symbolic_type","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000068","()","Returns the type as a symbol, rather than an integer, for easier use in Ruby programs. ",2],["symlink","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000337","(path, target)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["symlink","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000108","(path, target)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["symlink","Net::SFTP::Protocol::V03::Base","classes/Net/SFTP/Protocol/V03/Base.html#M000349","(path, target)","Sends a FXP_SYMLINK packet to the server to request that a symlink at the given +path+ be created, pointing",2],["symlink","Net::SFTP::Protocol::V03::Base","classes/Net/SFTP/Protocol/V03/Base.html#M000116","(path, target)","Sends a FXP_SYMLINK packet to the server to request that a symlink at the given +path+ be created, pointing",2],["symlink","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000141","(path, target)","Provided for backwards compatibility; v6 of the SFTP protocol removes the older FXP_SYMLINK packet type,",2],["symlink","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000373","(path, target)","Provided for backwards compatibility; v6 of the SFTP protocol removes the older FXP_SYMLINK packet type,",2],["symlink","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000436","(path, target, &callback)","Attempts to create a symlink to +path+ at +target+. This operation is only available in protocol versions",2],["symlink","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000211","(path, target, &callback)","Attempts to create a symlink to +path+ at +target+. This operation is only available in protocol versions",2],["symlink!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000437","(path, target, &callback)","Identical to #symlink, but blocks until the server responds. It will raise a StatusException if the request",2],["symlink!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000213","(path, target, &callback)","Identical to #symlink, but blocks until the server responds. It will raise a StatusException if the request",2],["symlink?","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000072","()","Returns true if these attributes appear to describe a symlink. ",2],["symlink?","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000305","()","Returns true if these attributes appear to describe a symlink. ",2],["symlink?","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000081","()","Returns +true+ if the item appears to be a symlink. It does this by examining the attributes. If there",2],["symlink?","Net::SFTP::Protocol::V01::Name","classes/Net/SFTP/Protocol/V01/Name.html#M000322","()","Returns +true+ if the item appears to be a symlink. It does this by examining the attributes. If there",2],["symlink?","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000364","()","Returns +true+ if the item is a symlink. ",2],["symlink?","Net::SFTP::Protocol::V04::Name","classes/Net/SFTP/Protocol/V04/Name.html#M000133","()","Returns +true+ if the item is a symlink. ",2],["to_s","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000074","()","Convert the object to a string suitable for passing in an SFTP packet. This is the raw representation",2],["to_s","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000307","()","Convert the object to a string suitable for passing in an SFTP packet. This is the raw representation",2],["to_s","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000386","()","Returns a textual description of this response, including the status code and name. ",2],["to_s","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000158","()","Returns a textual description of this response, including the status code and name. ",2],["to_str","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000159","()","Alias for #to_s",2],["to_str","Net::SFTP::Response","classes/Net/SFTP/Response.html#M000387","()","Alias for #to_s",2],["type","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000066","()","Inspects the permissions bits to determine what type of entity this attributes object represents. If",2],["type","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000302","()","Inspects the permissions bits to determine what type of entity this attributes object represents. If",2],["uid","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000293","()","Returns the user-id of the user that owns the file, or +nil+ if that information is not available. If",2],["uid","Net::SFTP::Protocol::V01::Attributes","classes/Net/SFTP/Protocol/V01/Attributes.html#M000059","()","Returns the user-id of the user that owns the file, or +nil+ if that information is not available. If",2],["unblock","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000342","(handle, offset, length)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["unblock","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000112","(handle, offset, length)","Not implemented in version 1 of the SFTP protocol. Raises a NotImplementedError if called. ",2],["unblock","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000375","(handle, offset, length)","Sends a FXP_UNBLOCK packet to the server to request that a previously acquired byte-range lock be released",2],["unblock","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000144","(handle, offset, length)","Sends a FXP_UNBLOCK packet to the server to request that a previously acquired byte-range lock be released",2],["unblock","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000442","(handle, offset, length, &callback)","Removes a previously created byte-range lock. This operation is only available in protocol versions 6",2],["unblock","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000218","(handle, offset, length, &callback)","Removes a previously created byte-range lock. This operation is only available in protocol versions 6",2],["unblock!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000443","(handle, offset, length, &callback)","Identical to #unblock, but blocks until the server responds. It will raise a StatusException if the request",2],["unblock!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000219","(handle, offset, length, &callback)","Identical to #unblock, but blocks until the server responds. It will raise a StatusException if the request",2],["update_progress","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000264","(hook, *args)","If a progress callback or object has been set, this will report the progress to that callback or object.",2],["update_progress","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000040","(hook, *args)","If a progress callback or object has been set, this will report the progress to that callback or object.",2],["update_progress","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000301","(event, *args)","Attempts to notify the progress monitor (if one was given) about progress made for the given event. ",2],["update_progress","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000076","(event, *args)","Attempts to notify the progress monitor (if one was given) about progress made for the given event. ",2],["upload","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000396","(local, remote, options={}, &block)","Initiates an upload from +local+ to +remote+, asynchronously. This method will return a new Net::SFTP::Operations::Upload",2],["upload","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000165","(local, remote, options={}, &block)","Initiates an upload from +local+ to +remote+, asynchronously. This method will return a new Net::SFTP::Operations::Upload",2],["upload!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000397","(local, remote, options={}, &block)","Identical to #upload, but blocks until the upload is complete. ",2],["upload!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000166","(local, remote, options={}, &block)","Identical to #upload, but blocks until the upload is complete. ",2],["version","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000083","()","Returns the protocol version implemented by this driver. (1, in this case) ",2],["version","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000310","()","Returns the protocol version implemented by this driver. (1, in this case) ",2],["version","Net::SFTP::Protocol::V02::Base","classes/Net/SFTP/Protocol/V02/Base.html#M000090","()","Returns the protocol version implemented by this driver. (2, in this case) ",2],["version","Net::SFTP::Protocol::V02::Base","classes/Net/SFTP/Protocol/V02/Base.html#M000339","()","Returns the protocol version implemented by this driver. (2, in this case) ",2],["version","Net::SFTP::Protocol::V03::Base","classes/Net/SFTP/Protocol/V03/Base.html#M000111","()","Returns the protocol version implemented by this driver. (3, in this case) ",2],["version","Net::SFTP::Protocol::V03::Base","classes/Net/SFTP/Protocol/V03/Base.html#M000347","()","Returns the protocol version implemented by this driver. (3, in this case) ",2],["version","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000119","()","Returns the protocol version implemented by this driver. (4, in this case) ",2],["version","Net::SFTP::Protocol::V04::Base","classes/Net/SFTP/Protocol/V04/Base.html#M000355","()","Returns the protocol version implemented by this driver. (4, in this case) ",2],["version","Net::SFTP::Protocol::V05::Base","classes/Net/SFTP/Protocol/V05/Base.html#M000136","()","Returns the protocol version implemented by this driver. (5, in this case) ",2],["version","Net::SFTP::Protocol::V05::Base","classes/Net/SFTP/Protocol/V05/Base.html#M000367","()","Returns the protocol version implemented by this driver. (5, in this case) ",2],["version","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000139","()","Returns the protocol version implemented by this driver. (6, in this case) ",2],["version","Net::SFTP::Protocol::V06::Base","classes/Net/SFTP/Protocol/V06/Base.html#M000371","()","Returns the protocol version implemented by this driver. (6, in this case) ",2],["wait","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000240","()","Runs the SSH event loop for as long as the downloader is active (see #active?). This can be used to block",2],["wait","Net::SFTP::Operations::Download","classes/Net/SFTP/Operations/Download.html#M000017","()","Runs the SSH event loop for as long as the downloader is active (see #active?). This can be used to block",2],["wait","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000279","()","Blocks until the upload has completed. ",2],["wait","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000050","()","Blocks until the upload has completed. ",2],["wait","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000389","()","Waits (blocks) until the server responds to this packet. If prior SFTP packets were also pending, they",2],["wait","Net::SFTP::Request","classes/Net/SFTP/Request.html#M000154","()","Waits (blocks) until the server responds to this packet. If prior SFTP packets were also pending, they",2],["wait_for","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000231","(request, property=nil)","Waits for the given request to complete. If the response is EOF, nil is returned. If the response was",2],["wait_for","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000455","(request, property=nil)","Waits for the given request to complete. If the response is EOF, nil is returned. If the response was",2],["when_channel_closed","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000458","(channel)","Called when the SSH server closes the underlying channel. ",2],["when_channel_closed","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000235","(channel)","Called when the SSH server closes the underlying channel. ",2],["when_channel_confirmed","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000456","(channel)","Called when the SSH channel is confirmed as \"open\" by the server. This is one of the states of the SFTP",2],["when_channel_confirmed","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000232","(channel)","Called when the SSH channel is confirmed as \"open\" by the server. This is one of the states of the SFTP",2],["when_channel_polled","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000459","(channel)","Called whenever Net::SSH polls the SFTP channel for pending activity. This basically checks the input",2],["when_channel_polled","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000237","(channel)","Called whenever Net::SSH polls the SFTP channel for pending activity. This basically checks the input",2],["when_subsystem_started","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000457","(channel, success)","Called when the SSH server confirms that the SFTP subsystem was successfully started. This sets up the",2],["when_subsystem_started","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000233","(channel, success)","Called when the SSH server confirms that the SFTP subsystem was successfully started. This sets up the",2],["write","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000020","(data)","Writes the given data to the stream, incrementing the file position and returning the number of bytes",2],["write","Net::SFTP::Operations::File","classes/Net/SFTP/Operations/File.html#M000266","(data)","Writes the given data to the stream, incrementing the file position and returning the number of bytes",2],["write","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000320","(handle, offset, data)","Sends a FXP_WRITE packet to the server, requesting that +data+ (a string), be written to the file identified",2],["write","Net::SFTP::Protocol::V01::Base","classes/Net/SFTP/Protocol/V01/Base.html#M000094","(handle, offset, data)","Sends a FXP_WRITE packet to the server, requesting that +data+ (a string), be written to the file identified",2],["write","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000408","(handle, offset, data, &callback)","Requests that +data+ be written to the file identified by +handle+, starting at +offset+ bytes from the",2],["write","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000177","(handle, offset, data, &callback)","Requests that +data+ be written to the file identified by +handle+, starting at +offset+ bytes from the",2],["write!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000178","(handle, offset, data, &callback)","Identical to #write, but blocks until the server responds. It will raise a StatusException if the request",2],["write!","Net::SFTP::Session","classes/Net/SFTP/Session.html#M000409","(handle, offset, data, &callback)","Identical to #write, but blocks until the server responds. It will raise a StatusException if the request",2],["write_next_chunk","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000070","(file)","Attempts to send the next chunk from the given file (where +file+ is a LiveFile instance). ",2],["write_next_chunk","Net::SFTP::Operations::Upload","classes/Net/SFTP/Operations/Upload.html#M000296","(file)","Attempts to send the next chunk from the given file (where +file+ is a LiveFile instance). ",2],["CHANGELOG.rdoc","files/CHANGELOG_rdoc.html","files/CHANGELOG_rdoc.html",""," === 2.0.5 / 19 Aug 2010  * Fixed missing StringIO exception in download! [Toby Bryans, Delano Mandelbaum]",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Net::SFTP  * http://net-ssh.rubyforge.org/sftp  == DESCRIPTION:  Net::SFTP is a pure-Ruby implementation",3],["sftp.rb","files/lib/net/sftp_rb.html","files/lib/net/sftp_rb.html","","",3],["sftp.rb","files/lib/net/sftp_rb.html","files/lib/net/sftp_rb.html","","",3],["constants.rb","files/lib/net/sftp/constants_rb.html","files/lib/net/sftp/constants_rb.html","","",3],["constants.rb","files/lib/net/sftp/constants_rb.html","files/lib/net/sftp/constants_rb.html","","",3],["errors.rb","files/lib/net/sftp/errors_rb.html","files/lib/net/sftp/errors_rb.html","","",3],["errors.rb","files/lib/net/sftp/errors_rb.html","files/lib/net/sftp/errors_rb.html","","",3],["dir.rb","files/lib/net/sftp/operations/dir_rb.html","files/lib/net/sftp/operations/dir_rb.html","","",3],["dir.rb","files/lib/net/sftp/operations/dir_rb.html","files/lib/net/sftp/operations/dir_rb.html","","",3],["download.rb","files/lib/net/sftp/operations/download_rb.html","files/lib/net/sftp/operations/download_rb.html","","",3],["download.rb","files/lib/net/sftp/operations/download_rb.html","files/lib/net/sftp/operations/download_rb.html","","",3],["file.rb","files/lib/net/sftp/operations/file_rb.html","files/lib/net/sftp/operations/file_rb.html","","",3],["file.rb","files/lib/net/sftp/operations/file_rb.html","files/lib/net/sftp/operations/file_rb.html","","",3],["file_factory.rb","files/lib/net/sftp/operations/file_factory_rb.html","files/lib/net/sftp/operations/file_factory_rb.html","","",3],["file_factory.rb","files/lib/net/sftp/operations/file_factory_rb.html","files/lib/net/sftp/operations/file_factory_rb.html","","",3],["upload.rb","files/lib/net/sftp/operations/upload_rb.html","files/lib/net/sftp/operations/upload_rb.html","","",3],["upload.rb","files/lib/net/sftp/operations/upload_rb.html","files/lib/net/sftp/operations/upload_rb.html","","",3],["packet.rb","files/lib/net/sftp/packet_rb.html","files/lib/net/sftp/packet_rb.html","","",3],["packet.rb","files/lib/net/sftp/packet_rb.html","files/lib/net/sftp/packet_rb.html","","",3],["protocol.rb","files/lib/net/sftp/protocol_rb.html","files/lib/net/sftp/protocol_rb.html","","",3],["protocol.rb","files/lib/net/sftp/protocol_rb.html","files/lib/net/sftp/protocol_rb.html","","",3],["attributes.rb","files/lib/net/sftp/protocol/01/attributes_rb.html","files/lib/net/sftp/protocol/01/attributes_rb.html","","",3],["attributes.rb","files/lib/net/sftp/protocol/01/attributes_rb.html","files/lib/net/sftp/protocol/01/attributes_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/01/base_rb.html","files/lib/net/sftp/protocol/01/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/01/base_rb.html","files/lib/net/sftp/protocol/01/base_rb.html","","",3],["name.rb","files/lib/net/sftp/protocol/01/name_rb.html","files/lib/net/sftp/protocol/01/name_rb.html","","",3],["name.rb","files/lib/net/sftp/protocol/01/name_rb.html","files/lib/net/sftp/protocol/01/name_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/02/base_rb.html","files/lib/net/sftp/protocol/02/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/02/base_rb.html","files/lib/net/sftp/protocol/02/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/03/base_rb.html","files/lib/net/sftp/protocol/03/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/03/base_rb.html","files/lib/net/sftp/protocol/03/base_rb.html","","",3],["attributes.rb","files/lib/net/sftp/protocol/04/attributes_rb.html","files/lib/net/sftp/protocol/04/attributes_rb.html","","",3],["attributes.rb","files/lib/net/sftp/protocol/04/attributes_rb.html","files/lib/net/sftp/protocol/04/attributes_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/04/base_rb.html","files/lib/net/sftp/protocol/04/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/04/base_rb.html","files/lib/net/sftp/protocol/04/base_rb.html","","",3],["name.rb","files/lib/net/sftp/protocol/04/name_rb.html","files/lib/net/sftp/protocol/04/name_rb.html","","",3],["name.rb","files/lib/net/sftp/protocol/04/name_rb.html","files/lib/net/sftp/protocol/04/name_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/05/base_rb.html","files/lib/net/sftp/protocol/05/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/05/base_rb.html","files/lib/net/sftp/protocol/05/base_rb.html","","",3],["attributes.rb","files/lib/net/sftp/protocol/06/attributes_rb.html","files/lib/net/sftp/protocol/06/attributes_rb.html","","",3],["attributes.rb","files/lib/net/sftp/protocol/06/attributes_rb.html","files/lib/net/sftp/protocol/06/attributes_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/06/base_rb.html","files/lib/net/sftp/protocol/06/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/06/base_rb.html","files/lib/net/sftp/protocol/06/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/base_rb.html","files/lib/net/sftp/protocol/base_rb.html","","",3],["base.rb","files/lib/net/sftp/protocol/base_rb.html","files/lib/net/sftp/protocol/base_rb.html","","",3],["request.rb","files/lib/net/sftp/request_rb.html","files/lib/net/sftp/request_rb.html","","",3],["request.rb","files/lib/net/sftp/request_rb.html","files/lib/net/sftp/request_rb.html","","",3],["response.rb","files/lib/net/sftp/response_rb.html","files/lib/net/sftp/response_rb.html","","",3],["response.rb","files/lib/net/sftp/response_rb.html","files/lib/net/sftp/response_rb.html","","",3],["session.rb","files/lib/net/sftp/session_rb.html","files/lib/net/sftp/session_rb.html","","",3],["session.rb","files/lib/net/sftp/session_rb.html","files/lib/net/sftp/session_rb.html","","",3],["version.rb","files/lib/net/sftp/version_rb.html","files/lib/net/sftp/version_rb.html","","",3],["version.rb","files/lib/net/sftp/version_rb.html","files/lib/net/sftp/version_rb.html","","",3]],"searchIndex":["net","sftp","constants","ace","flag","mask","type","locktypes","openflags","fv1","fv5","fv6","packettypes","renameflags","statuscodes","exception","operations","dir","download","file","filefactory","upload","packet","protocol","base","v01","attributes","base","name","v02","base","v03","base","v04","attributes","base","name","v05","base","v06","attributes","base","request","response","session","statusexception","version","ssh","connection","session","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","abort!()","abort!()","abort!()","abort!()","active?()","active?()","active?()","active?()","attribute_factory()","attribute_factory()","attribute_factory()","attribute_factory()","attribute_factory()","attribute_factory()","block()","block()","block()","block()","block()","block()","block!()","block!()","close()","close()","close()","close()","close()","close()","close!()","close!()","close_channel()","close_channel()","closed?()","closed?()","connect()","connect()","connect!()","connect!()","dir()","dir()","directory?()","directory?()","directory?()","directory?()","directory?()","directory?()","directory?()","directory?()","dispatch_request()","dispatch_request()","do_version()","do_version()","download()","download()","download!()","download!()","download_next_chunk()","download_next_chunk()","encode_acl()","encode_acl()","encode_extended()","encode_extended()","entries()","entries()","entries_for()","entries_for()","eof?()","eof?()","eof?()","eof?()","file()","file()","file?()","file?()","file?()","file?()","file?()","file?()","fill()","fill()","foreach()","foreach()","from_buffer()","from_buffer()","fsetstat()","fsetstat()","fsetstat()","fsetstat()","fsetstat!()","fsetstat!()","fstat()","fstat()","fstat()","fstat()","fstat()","fstat()","fstat!()","fstat!()","gets()","gets()","gid()","gid()","glob()","glob()","group()","group()","input()","input()","link()","link()","link()","link()","link()","link()","link!()","link!()","load()","load()","longname()","longname()","loop()","loop()","loop_forever()","loop_forever()","lstat()","lstat()","lstat()","lstat()","lstat()","lstat()","lstat!()","lstat!()","message()","message()","mkdir()","mkdir()","mkdir()","mkdir()","mkdir!()","mkdir!()","name_factory()","name_factory()","name_factory()","name_factory()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalize_open_flags()","normalize_open_flags()","not_implemented!()","not_implemented!()","ok?()","ok?()","on_close()","on_close()","on_close()","on_close()","on_closedir()","on_closedir()","on_mkdir()","on_mkdir()","on_open()","on_open()","on_open()","on_open()","on_opendir()","on_opendir()","on_read()","on_read()","on_readdir()","on_readdir()","on_write()","on_write()","open()","open()","open()","open()","open()","open()","open()","open()","open!()","open!()","open?()","open?()","open_file()","open_file()","open_file()","open_file()","opendir()","opendir()","opendir()","opendir()","opendir!()","opendir!()","opening?()","opening?()","owner()","owner()","parse()","parse()","parse_acl()","parse_acl()","parse_attrs_packet()","parse_attrs_packet()","parse_data_packet()","parse_data_packet()","parse_extended()","parse_extended()","parse_handle_packet()","parse_handle_packet()","parse_name_packet()","parse_name_packet()","parse_name_packet()","parse_name_packet()","parse_status_packet()","parse_status_packet()","pending?()","pending?()","pos=()","pos=()","prepare_serialization!()","prepare_serialization!()","prepare_serialization!()","prepare_serialization!()","print()","print()","process_next_entry()","process_next_entry()","process_next_entry()","process_next_entry()","progress()","progress()","progress()","progress()","puts()","puts()","read()","read()","read()","read()","read()","read()","read!()","read!()","read_size()","read_size()","readdir()","readdir()","readdir()","readdir()","readdir!()","readdir!()","readline()","readline()","readlink()","readlink()","readlink()","readlink()","readlink()","readlink()","readlink!()","readlink!()","realpath()","realpath()","realpath()","realpath()","realpath!()","realpath!()","recursive?()","recursive?()","recursive?()","recursive?()","remove()","remove()","remove()","remove()","remove!()","remove!()","rename()","rename()","rename()","rename()","rename()","rename()","rename()","rename()","rename!()","rename!()","request()","request()","requests()","requests()","rmdir()","rmdir()","rmdir()","rmdir()","rmdir!()","rmdir!()","send_packet()","send_packet()","send_request()","send_request()","setstat()","setstat()","setstat()","setstat()","setstat!()","setstat!()","sftp()","sftp()","stack()","stack()","start()","start()","stat()","stat()","stat()","stat()","stat()","stat()","stat()","stat()","stat!()","stat!()","symbolic_type()","symbolic_type()","symlink()","symlink()","symlink()","symlink()","symlink()","symlink()","symlink()","symlink()","symlink!()","symlink!()","symlink?()","symlink?()","symlink?()","symlink?()","symlink?()","symlink?()","to_s()","to_s()","to_s()","to_s()","to_str()","to_str()","type()","type()","uid()","uid()","unblock()","unblock()","unblock()","unblock()","unblock()","unblock()","unblock!()","unblock!()","update_progress()","update_progress()","update_progress()","update_progress()","upload()","upload()","upload!()","upload!()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","version()","wait()","wait()","wait()","wait()","wait()","wait()","wait_for()","wait_for()","when_channel_closed()","when_channel_closed()","when_channel_confirmed()","when_channel_confirmed()","when_channel_polled()","when_channel_polled()","when_subsystem_started()","when_subsystem_started()","write()","write()","write()","write()","write()","write()","write!()","write!()","write_next_chunk()","write_next_chunk()","changelog.rdoc","readme.rdoc","sftp.rb","sftp.rb","constants.rb","constants.rb","errors.rb","errors.rb","dir.rb","dir.rb","download.rb","download.rb","file.rb","file.rb","file_factory.rb","file_factory.rb","upload.rb","upload.rb","packet.rb","packet.rb","protocol.rb","protocol.rb","attributes.rb","attributes.rb","base.rb","base.rb","name.rb","name.rb","base.rb","base.rb","base.rb","base.rb","attributes.rb","attributes.rb","base.rb","base.rb","name.rb","name.rb","base.rb","base.rb","attributes.rb","attributes.rb","base.rb","base.rb","base.rb","base.rb","request.rb","request.rb","response.rb","response.rb","session.rb","session.rb","version.rb","version.rb"],"longSearchIndex":["lib/net/sftp/session.rb","net","net::sftp","net::sftp::constants","net::sftp::constants::ace","net::sftp::constants::ace","net::sftp::constants::ace","net::sftp::constants","net::sftp::constants","net::sftp::constants::openflags","net::sftp::constants::openflags","net::sftp::constants::openflags","net::sftp::constants","net::sftp::constants","net::sftp::constants","net::sftp","net::sftp","net::sftp::operations","net::sftp::operations","net::sftp::operations","net::sftp::operations","net::sftp::operations","net::sftp","net::sftp","net::sftp::protocol","net::sftp::protocol","net::sftp::protocol::v01","net::sftp::protocol::v01","net::sftp::protocol::v01","net::sftp::protocol","net::sftp::protocol::v02","net::sftp::protocol","net::sftp::protocol::v03","net::sftp::protocol","net::sftp::protocol::v04","net::sftp::protocol::v04","net::sftp::protocol::v04","net::sftp::protocol","net::sftp::protocol::v05","net::sftp::protocol","net::sftp::protocol::v06","net::sftp::protocol::v06","net::sftp","net::sftp","net::sftp","net::sftp","net::sftp","net","net::ssh","net::ssh::connection","net::sftp::operations::dir","net::sftp::operations::dir","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::request","net::sftp::request","net::sftp::response","net::sftp::response","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::request","net::sftp::request","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::protocol::v06::base","net::sftp::protocol::v06::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v06::base","net::sftp::protocol::v06::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::filefactory","net::sftp::operations::filefactory","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::name","net::sftp::protocol::v01::name","net::sftp::protocol::v04::name","net::sftp::protocol::v04::name","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp::protocol::v04::attributes","net::sftp::protocol::v04::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::operations::dir","net::sftp::operations::dir","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::file","net::sftp::operations::file","net::sftp::response","net::sftp::response","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::name","net::sftp::protocol::v01::name","net::sftp::protocol::v04::name","net::sftp::protocol::v04::name","net::sftp::operations::file","net::sftp::operations::file","net::sftp::operations::dir","net::sftp::operations::dir","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::operations::dir","net::sftp::operations::dir","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v06::base","net::sftp::protocol::v06::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol","net::sftp::protocol","net::sftp::protocol::v04::name","net::sftp::protocol::v04::name","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::statusexception","net::sftp::statusexception","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::operations::dir","net::sftp::operations::dir","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::file","net::sftp::operations::file","net::sftp::operations::filefactory","net::sftp::operations::filefactory","net::sftp::packet","net::sftp::packet","net::sftp::protocol::base","net::sftp::protocol::base","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::name","net::sftp::protocol::v01::name","net::sftp::protocol::v04::attributes","net::sftp::protocol::v04::attributes","net::sftp::protocol::v04::name","net::sftp::protocol::v04::name","net::sftp::session","net::sftp::session","net::sftp::statusexception","net::sftp::statusexception","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::response","net::sftp::response","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::filefactory","net::sftp::operations::filefactory","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v05::base","net::sftp::protocol::v05::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::base","net::sftp::protocol::base","net::sftp::protocol::v04::attributes","net::sftp::protocol::v04::attributes","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::request","net::sftp::request","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v04::attributes","net::sftp::protocol::v04::attributes","net::sftp::operations::file","net::sftp::operations::file","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::operations::file","net::sftp::operations::file","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v03::base","net::sftp::protocol::v03::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v02::base","net::sftp::protocol::v02::base","net::sftp::protocol::v05::base","net::sftp::protocol::v05::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::base","net::sftp::protocol::base","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::ssh::connection::session","net::ssh::connection::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp","net::sftp","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v03::base","net::sftp::protocol::v03::base","net::sftp::protocol::v06::base","net::sftp::protocol::v06::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::name","net::sftp::protocol::v01::name","net::sftp::protocol::v04::name","net::sftp::protocol::v04::name","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::response","net::sftp::response","net::sftp::response","net::sftp::response","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::attributes","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v06::base","net::sftp::protocol::v06::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::protocol::v02::base","net::sftp::protocol::v02::base","net::sftp::protocol::v03::base","net::sftp::protocol::v03::base","net::sftp::protocol::v04::base","net::sftp::protocol::v04::base","net::sftp::protocol::v05::base","net::sftp::protocol::v05::base","net::sftp::protocol::v06::base","net::sftp::protocol::v06::base","net::sftp::operations::download","net::sftp::operations::download","net::sftp::operations::upload","net::sftp::operations::upload","net::sftp::request","net::sftp::request","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::file","net::sftp::operations::file","net::sftp::protocol::v01::base","net::sftp::protocol::v01::base","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::session","net::sftp::operations::upload","net::sftp::operations::upload","files/changelog_rdoc.html","files/readme_rdoc.html","files/lib/net/sftp_rb.html","files/lib/net/sftp_rb.html","files/lib/net/sftp/constants_rb.html","files/lib/net/sftp/constants_rb.html","files/lib/net/sftp/errors_rb.html","files/lib/net/sftp/errors_rb.html","files/lib/net/sftp/operations/dir_rb.html","files/lib/net/sftp/operations/dir_rb.html","files/lib/net/sftp/operations/download_rb.html","files/lib/net/sftp/operations/download_rb.html","files/lib/net/sftp/operations/file_rb.html","files/lib/net/sftp/operations/file_rb.html","files/lib/net/sftp/operations/file_factory_rb.html","files/lib/net/sftp/operations/file_factory_rb.html","files/lib/net/sftp/operations/upload_rb.html","files/lib/net/sftp/operations/upload_rb.html","files/lib/net/sftp/packet_rb.html","files/lib/net/sftp/packet_rb.html","files/lib/net/sftp/protocol_rb.html","files/lib/net/sftp/protocol_rb.html","files/lib/net/sftp/protocol/01/attributes_rb.html","files/lib/net/sftp/protocol/01/attributes_rb.html","files/lib/net/sftp/protocol/01/base_rb.html","files/lib/net/sftp/protocol/01/base_rb.html","files/lib/net/sftp/protocol/01/name_rb.html","files/lib/net/sftp/protocol/01/name_rb.html","files/lib/net/sftp/protocol/02/base_rb.html","files/lib/net/sftp/protocol/02/base_rb.html","files/lib/net/sftp/protocol/03/base_rb.html","files/lib/net/sftp/protocol/03/base_rb.html","files/lib/net/sftp/protocol/04/attributes_rb.html","files/lib/net/sftp/protocol/04/attributes_rb.html","files/lib/net/sftp/protocol/04/base_rb.html","files/lib/net/sftp/protocol/04/base_rb.html","files/lib/net/sftp/protocol/04/name_rb.html","files/lib/net/sftp/protocol/04/name_rb.html","files/lib/net/sftp/protocol/05/base_rb.html","files/lib/net/sftp/protocol/05/base_rb.html","files/lib/net/sftp/protocol/06/attributes_rb.html","files/lib/net/sftp/protocol/06/attributes_rb.html","files/lib/net/sftp/protocol/06/base_rb.html","files/lib/net/sftp/protocol/06/base_rb.html","files/lib/net/sftp/protocol/base_rb.html","files/lib/net/sftp/protocol/base_rb.html","files/lib/net/sftp/request_rb.html","files/lib/net/sftp/request_rb.html","files/lib/net/sftp/response_rb.html","files/lib/net/sftp/response_rb.html","files/lib/net/sftp/session_rb.html","files/lib/net/sftp/session_rb.html","files/lib/net/sftp/version_rb.html","files/lib/net/sftp/version_rb.html"]}}