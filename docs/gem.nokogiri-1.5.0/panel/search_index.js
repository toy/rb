var search_data = {"index":{"info":[["Nokogiri","ext/nokogiri/xml_sax_push_parser.c","classes/Nokogiri.html"," < ","      call-seq:     initialize_native(xml_sax, filename)       Initialize the push parser with +xml_sax+",1],["CSS","Nokogiri","classes/Nokogiri/CSS.html"," < ","",1],["Node","Nokogiri::CSS","classes/Nokogiri/CSS/Node.html"," < Object","",1],["Parser","Nokogiri::CSS","classes/Nokogiri/CSS/Parser.html"," < Racc::Parser","",1],["SyntaxError","Nokogiri::CSS","classes/Nokogiri/CSS/SyntaxError.html"," < ::Nokogiri::SyntaxError","",1],["Tokenizer","Nokogiri::CSS","classes/Nokogiri/CSS/Tokenizer.html"," < Object","",1],["ScanError","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer/ScanError.html"," < StandardError","",1],["Decorators","Nokogiri","classes/Nokogiri/Decorators.html"," < ","",1],["Slop","Nokogiri::Decorators","classes/Nokogiri/Decorators/Slop.html"," < ","The Slop decorator implements method missing such that a methods may be used instead of XPath or CSS.",1],["EncodingHandler","Nokogiri","classes/Nokogiri/EncodingHandler.html"," < Object","      call-seq: name       Get the name of this EncodingHandler    ",1],["HTML","Nokogiri","classes/Nokogiri/HTML.html"," < ","   Free the sax handler since we'll assign our own    # ---       call-seq:     get(key)       Get the",1],["Builder","Nokogiri::HTML","classes/Nokogiri/HTML/Builder.html"," < Nokogiri::XML::Builder","Nokogiri HTML builder is used for building HTML documents.  It is very similar to the Nokogiri::XML::Builder.",1],["Document","Nokogiri::HTML","classes/Nokogiri/HTML/Document.html"," < Nokogiri::XML::Document","      call-seq:     type       The type for this document    ",1],["DocumentFragment","Nokogiri::HTML","classes/Nokogiri/HTML/DocumentFragment.html"," < Nokogiri::XML::DocumentFragment","",1],["ElementDescription","Nokogiri::HTML","classes/Nokogiri/HTML/ElementDescription.html"," < Object","      call-seq:     [](tag_name)       Get ElemementDescription for +tag_name+    ",1],["EntityDescription","Nokogiri::HTML","classes/Nokogiri/HTML/EntityDescription.html"," < Struct.new(:value, :name, :description);","",1],["EntityLookup","Nokogiri::HTML","classes/Nokogiri/HTML/EntityLookup.html"," < Object","      call-seq:     get(key)       Get the HTML::EntityDescription for +key+    ",1],["SAX","Nokogiri::HTML","classes/Nokogiri/HTML/SAX.html"," < ","   Free the sax handler since we'll assign our own    # ---    Allocate strdupped strings with the same",1],["Parser","Nokogiri::HTML::SAX","classes/Nokogiri/HTML/SAX/Parser.html"," < Nokogiri::XML::SAX::Parser","This class lets you perform SAX style parsing on HTML with HTML error correction. Here is a basic usage",1],["ParserContext","Nokogiri::HTML::SAX","classes/Nokogiri/HTML/SAX/ParserContext.html"," < Nokogiri::XML::SAX::ParserContext","Context for HTML SAX parsers.  This class is usually not instantiated by the user.  Instead, you should",1],["SyntaxError","Nokogiri","classes/Nokogiri/SyntaxError.html"," < StandardError","        The XML::SyntaxError is raised on parse errors      ",1],["XML","Nokogiri","classes/Nokogiri/XML.html"," < ","      call-seq:     initialize_native(xml_sax, filename)       Initialize the push parser with +xml_sax+",1],["Attr","Nokogiri::XML","classes/Nokogiri/XML/Attr.html"," < Nokogiri::XML::Node","        Attr represents a Attr node in an xml document.      ",1],["AttributeDecl","Nokogiri::XML","classes/Nokogiri/XML/AttributeDecl.html"," < Nokogiri::XML::Node","Represents an attribute declaration in a DTD ",1],["Builder","Nokogiri::XML","classes/Nokogiri/XML/Builder.html"," < Object","Nokogiri builder can be used for building XML and HTML documents. == Synopsis: builder = Nokogiri::XML::Builder.new",1],["CDATA","Nokogiri::XML","classes/Nokogiri/XML/CDATA.html"," < Nokogiri::XML::Text","        CData represents a CData node in an xml document.      ",1],["CharacterData","Nokogiri::XML","classes/Nokogiri/XML/CharacterData.html"," < Nokogiri::XML::Node","      call-seq:     new(document, content)       Create a new CDATA element on the +document+ with +content+",1],["Comment","Nokogiri::XML","classes/Nokogiri/XML/Comment.html"," < Nokogiri::XML::CharacterData","        Comment represents a comment node in an xml document.      ",1],["DTD","Nokogiri::XML","classes/Nokogiri/XML/DTD.html"," < Nokogiri::XML::Node","        Nokogiri::XML::DTD wraps DTD nodes in an XML document      ",1],["Document","Nokogiri::XML","classes/Nokogiri/XML/Document.html"," < Nokogiri::XML::Node","Nokogiri::XML::Document is the main entry point for dealing with XML documents.  The Document is created",1],["DocumentFragment","Nokogiri::XML","classes/Nokogiri/XML/DocumentFragment.html"," < Nokogiri::XML::Node","        DocumentFragment represents a DocumentFragment node in an xml document.      ",1],["Element","Nokogiri::XML","classes/Nokogiri/XML/Element.html"," < Nokogiri::XML::Node","   and https://github.com/tenderlove/nokogiri/issues/439   ",1],["ElementContent","Nokogiri::XML","classes/Nokogiri/XML/ElementContent.html"," < Object","Represents the allowed content in an Element Declaration inside a DTD: <?xml version=\"1.0\"?><?TEST-STYLE",1],["ElementDecl","Nokogiri::XML","classes/Nokogiri/XML/ElementDecl.html"," < Nokogiri::XML::Node","      call-seq:     prefix       The namespace prefix for this ElementDecl    ",1],["EntityDecl","Nokogiri::XML","classes/Nokogiri/XML/EntityDecl.html"," < Nokogiri::XML::Node","      call-seq:     system_id       Get the URI for a SYSTEM or PUBLIC Entity    ",1],["EntityReference","Nokogiri::XML","classes/Nokogiri/XML/EntityReference.html"," < Nokogiri::XML::Node","        EntityReference represents an EntityReference node in an xml document.      ",1],["Namespace","Nokogiri::XML","classes/Nokogiri/XML/Namespace.html"," < Object","      call-seq:     href       Get the href for this namespace    ",1],["Node","Nokogiri::XML","classes/Nokogiri/XML/Node.html"," < Object","Nokogiri::XML::Node is your window to the fun filled world of dealing with XML and HTML tags.  A Nokogiri::XML::Node",1],["SaveOptions","Nokogiri::XML::Node","classes/Nokogiri/XML/Node/SaveOptions.html"," < Object","Save options for serializing nodes ",1],["NodeSet","Nokogiri::XML","classes/Nokogiri/XML/NodeSet.html"," < Object","A NodeSet contains a list of Nokogiri::XML::Node objects.  Typically a NodeSet is return as a result",1],["Notation","Nokogiri::XML","classes/Nokogiri/XML/Notation.html"," < Struct.new(:name, :public_id, :system_id)","",1],["PP","Nokogiri::XML","classes/Nokogiri/XML/PP.html"," < ","",1],["CharacterData","Nokogiri::XML::PP","classes/Nokogiri/XML/PP/CharacterData.html"," < ","",1],["Node","Nokogiri::XML::PP","classes/Nokogiri/XML/PP/Node.html"," < ","",1],["ParseOptions","Nokogiri::XML","classes/Nokogiri/XML/ParseOptions.html"," < Object","Parse options for passing to Nokogiri.XML or Nokogiri.HTML ",1],["ProcessingInstruction","Nokogiri::XML","classes/Nokogiri/XML/ProcessingInstruction.html"," < Nokogiri::XML::Node","        ProcessingInstruction represents a ProcessingInstruction node in an xml      document.      ",1],["Reader","Nokogiri::XML","classes/Nokogiri/XML/Reader.html"," < Object","Nokogiri::XML::Reader parses an XML document similar to the way a cursor would move.  The Reader is given",1],["RelaxNG","Nokogiri::XML","classes/Nokogiri/XML/RelaxNG.html"," < cNokogiriXmlSchema","Nokogiri::XML::RelaxNG is used for validating XML against a RelaxNG schema. == Synopsis Validate an XML",1],["SAX","Nokogiri::XML","classes/Nokogiri/XML/SAX.html"," < ","      call-seq:     initialize_native(xml_sax, filename)       Initialize the push parser with +xml_sax+",1],["Document","Nokogiri::XML::SAX","classes/Nokogiri/XML/SAX/Document.html"," < Object","This class is used for registering types of events you are interested in handling.  All of the methods",1],["Parser","Nokogiri::XML::SAX","classes/Nokogiri/XML/SAX/Parser.html"," < Object","This parser is a SAX style parser that reads it's input as it deems necessary.  The parser takes a Nokogiri::XML::SAX::Document,",1],["Attribute","Nokogiri::XML::SAX::Parser","classes/Nokogiri/XML/SAX/Parser/Attribute.html"," < Struct.new(:localname, :prefix, :uri, :value)","",1],["ParserContext","Nokogiri::XML::SAX","classes/Nokogiri/XML/SAX/ParserContext.html"," < Object","Context for XML SAX parsers.  This class is usually not instantiated by the user.  Instead, you should",1],["PushParser","Nokogiri::XML::SAX","classes/Nokogiri/XML/SAX/PushParser.html"," < Object","PushParser can parse a document that is fed to it manually.  It must be given a SAX::Document object",1],["Schema","Nokogiri::XML","classes/Nokogiri/XML/Schema.html"," < Object","Nokogiri::XML::Schema is used for validating XML against a schema (usually from an xsd file). == Synopsis",1],["SyntaxError","Nokogiri::XML","classes/Nokogiri/XML/SyntaxError.html"," < Nokogiri::SyntaxError","This class provides information about XML SyntaxErrors.  These exceptions are typically stored on Nokogiri::XML::Document#errors.",1],["Text","Nokogiri::XML","classes/Nokogiri/XML/Text.html"," < Nokogiri::XML::CharacterData","      call-seq:     new(document, content)       Create a new CDATA element on the +document+ with +content+",1],["XPath","Nokogiri::XML","classes/Nokogiri/XML/XPath.html"," < Object","",1],["SyntaxError","Nokogiri::XML::XPath","classes/Nokogiri/XML/XPath/SyntaxError.html"," < XML::SyntaxError","",1],["XPathContext","Nokogiri::XML","classes/Nokogiri/XML/XPathContext.html"," < Object","        XPathContext is the entry point for searching a Document by using XPath.      ",1],["XSLT","Nokogiri","classes/Nokogiri/XSLT.html"," < ","   Allocate strdupped strings with the same memory allocator Ruby uses.    # ---        call-seq:   ",1],["Stylesheet","Nokogiri::XSLT","classes/Nokogiri/XSLT/Stylesheet.html"," < Object","A Stylesheet represents an XSLT Stylesheet object.  Stylesheet creation is done through Nokogiri.XSLT.",1],["Object","lib/nokogiri.rb","classes/Object.html"," < Object","",1],["Nokogiri","XSD::XMLParser","classes/XSD/XMLParser/Nokogiri.html"," < XSD::XMLParser::Parser","Nokogiri XML parser for soap4r. Nokogiri may be used as the XML parser in soap4r.  Simply require 'xsd/xmlparser/nokogiri'",1],["%","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000372","(path, ns = document.root ? document.root.namespaces : {})","Alias for #at",2],["%","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000382","(path, ns = document.root ? document.root.namespaces : {})","Alias for #at",2],["&","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000088","(p1)","          Set Intersection — Returns a new NodeSet containing nodes common to the two NodeSets.     ",2],["+","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000438","(p1)","Alias for #|",2],["-","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000083","(p1)","           Difference - returns a new NodeSet that is a copy of this NodeSet, removing     each item",2],["/","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000356","(*paths)","Alias for #search",2],["/","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000368","(*paths)","Alias for #search",2],["<<","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000309","(string)","Append the given raw XML +string+ to the document ",2],["<<","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000339","(child)","Alias for #add_child",2],["<<","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000378","(node_or_tags)","Add +node_or_tags+ as a child of this Node. +node_or_tags+ can be a Nokogiri::XML::Node, a ::DocumentFragment,",2],["<<","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000364","(p1)","Alias for #push",2],["<<","Nokogiri::XML::SAX::PushParser","classes/Nokogiri/XML/SAX/PushParser.html#M000510","(chunk, last_chunk = false)","Alias for #write",2],["<=>","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000474","(other)","Compare two Node objects with respect to their Document.  Nodes from different documents cannot be compared.",2],["==","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000461","(other)","Test to see if this Node is equal to +other+ ",2],["==","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000432","(other)","Equality -- Two NodeSets are equal if the contain the same number of elements and if each element is",2],[">","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000370","(selector)","Search this node's immediate children using CSS selector +selector+ ",2],[">","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000380","(selector)","Search this NodeSet's nodes' immediate children using CSS selector +selector+ ",2],["HTML","Nokogiri","classes/Nokogiri.html#M000295","(thing, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block)","Parse HTML.  Convenience method for Nokogiri::HTML::Document.parse ",2],["Nokogiri","Object","classes/Object.html#M000541","(*args, &block)","Parser a document contained in +args+.  Nokogiri will try to guess what type of document you are attempting",2],["Reader","Nokogiri::XML","classes/Nokogiri/XML.html#M000525","(string_or_io, url = nil, encoding = nil, options = ParseOptions::STRICT)","Parse an XML document using the Nokogiri::XML::Reader API.  See Nokogiri::XML::Reader for mor information",2],["RelaxNG","Nokogiri::XML","classes/Nokogiri/XML.html#M000487","(string_or_io)","Create a new Nokogiri::XML::RelaxNG document from +string_or_io+. See Nokogiri::XML::RelaxNG for an example.",2],["Schema","Nokogiri::XML","classes/Nokogiri/XML.html#M000512","(string_or_io)","Create a new Nokogiri::XML::Schema object using a +string_or_io+ object. ",2],["Slop","Nokogiri","classes/Nokogiri.html#M000535","(*args, &block)","Parse a document and add the Slop decorator.  The Slop decorator implements method_missing such that",2],["XML","Nokogiri","classes/Nokogiri.html#M000524","(thing, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_XML, &block)","Parse XML.  Convenience method for Nokogiri::XML::Document.parse ",2],["XSLT","Nokogiri","classes/Nokogiri.html#M000529","(stylesheet, modules = {})","Create a Nokogiri::XSLT::Stylesheet with +stylesheet+. Example: xslt = Nokogiri::XSLT(File.read(ARGV[0]))",2],["[]","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000192","(string)","Get the css selector in +string+ from the cache ",2],["[]","Nokogiri::EncodingHandler","classes/Nokogiri/EncodingHandler.html#M000015","(p1)","          Get the encoding handler for +name+     ",2],["[]","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000043","(p1)","          Get ElemementDescription for +tag_name+     ",2],["[]","Nokogiri::HTML::EntityLookup","classes/Nokogiri/HTML/EntityLookup.html#M000281","(name)","Look up entity with +name+ ",2],["[]","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000307","(ns)","Build a tag that is associated with namespace +ns+.  Raises an ArgumentError if +ns+ has not been defined",2],["[]","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000375","(name)","Get the attribute value for the attribute +name+ ",2],["[]","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000079","(...)","          Element reference - returns the node at +index+, or returns a NodeSet    containing nodes starting",2],["[]=","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000193","(string, value)","Set the css selector in +string+ in the cache to +value+ ",2],["[]=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000111","(p1, p2)","          Set the +property+ to +value+     ",2],["_next_token","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000211","()","",2],["_reduce_1","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000207","(val, _values, result)","reduce 0 omitted ",2],["_reduce_10","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000219","(val, _values, result)","",2],["_reduce_11","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000220","(val, _values, result)","",2],["_reduce_13","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000221","(val, _values, result)","reduce 12 omitted ",2],["_reduce_14","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000222","(val, _values, result)","",2],["_reduce_15","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000223","(val, _values, result)","",2],["_reduce_16","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000224","(val, _values, result)","",2],["_reduce_17","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000225","(val, _values, result)","",2],["_reduce_19","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000226","(val, _values, result)","reduce 18 omitted ",2],["_reduce_2","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000208","(val, _values, result)","",2],["_reduce_20","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000227","(val, _values, result)","",2],["_reduce_21","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000228","(val, _values, result)","",2],["_reduce_22","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000229","(val, _values, result)","",2],["_reduce_23","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000230","(val, _values, result)","",2],["_reduce_25","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000231","(val, _values, result)","reduce 24 omitted ",2],["_reduce_26","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000232","(val, _values, result)","",2],["_reduce_27","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000233","(val, _values, result)","",2],["_reduce_28","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000234","(val, _values, result)","",2],["_reduce_29","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000235","(val, _values, result)","",2],["_reduce_3","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000212","(val, _values, result)","",2],["_reduce_30","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000236","(val, _values, result)","",2],["_reduce_31","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000237","(val, _values, result)","",2],["_reduce_32","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000238","(val, _values, result)","",2],["_reduce_33","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000239","(val, _values, result)","",2],["_reduce_34","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000240","(val, _values, result)","",2],["_reduce_35","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000241","(val, _values, result)","",2],["_reduce_38","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000242","(val, _values, result)","reduce 37 omitted ",2],["_reduce_39","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000243","(val, _values, result)","",2],["_reduce_4","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000213","(val, _values, result)","",2],["_reduce_40","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000244","(val, _values, result)","",2],["_reduce_41","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000245","(val, _values, result)","",2],["_reduce_42","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000246","(val, _values, result)","",2],["_reduce_43","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000247","(val, _values, result)","",2],["_reduce_46","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000248","(val, _values, result)","reduce 45 omitted ",2],["_reduce_47","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000249","(val, _values, result)","",2],["_reduce_48","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000250","(val, _values, result)","",2],["_reduce_49","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000251","(val, _values, result)","",2],["_reduce_5","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000214","(val, _values, result)","",2],["_reduce_54","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000252","(val, _values, result)","reduce 53 omitted ",2],["_reduce_55","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000253","(val, _values, result)","",2],["_reduce_56","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000254","(val, _values, result)","",2],["_reduce_58","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000255","(val, _values, result)","reduce 57 omitted ",2],["_reduce_59","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000256","(val, _values, result)","",2],["_reduce_6","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000215","(val, _values, result)","",2],["_reduce_60","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000257","(val, _values, result)","",2],["_reduce_61","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000258","(val, _values, result)","",2],["_reduce_62","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000259","(val, _values, result)","",2],["_reduce_63","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000260","(val, _values, result)","",2],["_reduce_64","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000261","(val, _values, result)","",2],["_reduce_65","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000262","(val, _values, result)","",2],["_reduce_7","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000216","(val, _values, result)","",2],["_reduce_8","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000217","(val, _values, result)","",2],["_reduce_9","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000218","(val, _values, result)","",2],["_reduce_none","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000263","(val, _values, result)","reduce 68 omitted ",2],["accept","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000186","(visitor)","Accept +visitor+ ",2],["accept","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000460","(visitor)","Accept a visitor.  This method calls \"visit\" on +visitor+ with self. ",2],["action","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000203","()","",2],["add_child","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000338","(child)","",2],["add_child","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000376","(node_or_tags)","Add +node_or_tags+ as a child of this Node. +node_or_tags+ can be a Nokogiri::XML::Node, a ::DocumentFragment,",2],["add_class","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000388","(name)","Append the class attribute +name+ to all Node objects in the NodeSet. ",2],["add_namespace","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000457","(p1, p2)","Alias for #add_namespace_definition",2],["add_namespace_definition","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000091","(p1, p2)","          Adds a namespace definition with +prefix+ using +href+ value. The result is    as if parsed",2],["add_next_sibling","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000386","(node_or_tags)","Insert +node_or_tags+ after this Node (as a sibling). +node_or_tags+ can be a Nokogiri::XML::Node, a",2],["add_previous_sibling","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000379","(node_or_tags)","Insert +node_or_tags+ before this Node (as a sibling). +node_or_tags+ can be a Nokogiri::XML::Node, a",2],["after","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000390","(node_or_tags)","Insert +node_or_tags+ after this node (as a sibling). +node_or_tags+ can be a Nokogiri::XML::Node, a",2],["after","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000363","(datum)","Insert +datum+ after the last Node in this NodeSet ",2],["alias","Nokogiri::EncodingHandler","classes/Nokogiri/EncodingHandler.html#M000017","(p1, p2)","          Alias encoding handler with name +from+ to name +to+     ",2],["ancestors","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000455","(selector = nil)","Get a list of ancestor Node for this Node.  If +selector+ is given, the ancestors must match +selector+",2],["apply_to","Nokogiri::XSLT::Stylesheet","classes/Nokogiri/XSLT/Stylesheet.html#M000526","(document, params = [])","Apply an XSLT stylesheet to an XML::Document. +params+ is an array of strings used as XSLT parameters.",2],["at","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000371","(path, ns = document.root ? document.root.namespaces : {})","Search for the first occurrence of +path+. Returns nil if nothing is found, otherwise a Node. ",2],["at","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000381","(path, ns = document.root ? document.root.namespaces : {})","If path is a string, search this document for +path+ returning the first Node.  Otherwise, index in to",2],["at_css","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000374","(*rules)","Search this node for the first occurrence of CSS +rules+. Equivalent to <tt>css(rules).first</tt> See",2],["at_css","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000384","(*rules)","Search this NodeSet for the first occurrence of CSS +rules+. Equivalent to <tt>css(rules).first</tt>",2],["at_xpath","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000373","(*paths)","Search this node for the first occurrence of XPath +paths+. Equivalent to <tt>xpath(paths).first</tt>",2],["at_xpath","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000383","(*paths)","Search this NodeSet for the first occurrence of XPath +paths+. Equivalent to <tt>xpath(paths).first</tt>",2],["attr","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000393","(key, value = nil, &blk)","Set the attribute +key+ to +value+ or the return value of +blk+ on all Node objects in the NodeSet. ",2],["attr_nodes","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000163","()","          Get a list of attributes for this Node     ",2],["attribute","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000113","(p1)","          Get the attribute node with +name+     ",2],["attribute","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000396","(key, value = nil, &blk)","Alias for #attr",2],["attribute","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000155","(p1)","          Get the value of attribute named +name+     ",2],["attribute_at","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000157","(p1)","          Get the value of attribute at +index+     ",2],["attribute_count","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000154","()","          Get the number of attributes for the current node     ",2],["attribute_nodes","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000112","()","            returns a list containing the Node attributes.     ",2],["attribute_nodes","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000488","()","Get a list of attributes for the current node ",2],["attribute_type","Nokogiri::XML::AttributeDecl","classes/Nokogiri/XML/AttributeDecl.html#M000024","()","          The attribute_type for this AttributeDecl     ",2],["attribute_with_ns","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000114","(p1, p2)","          Get the attribute node with +name+ and +namespace+     ",2],["attributes","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000174","()","          Get a hash of the attributes for this DTD.     ",2],["attributes","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000419","()","Returns a hash containing the node's attributes.  The key is the attribute name without any namespace,",2],["attributes","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000486","()","Get a list of attributes for the current node. ",2],["attributes?","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000159","()","          Does this node have attributes?     ",2],["base_uri","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000162","()","          Get the xml:base of the node     ",2],["before","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000387","(node_or_tags)","Insert +node_or_tags+ before this node (as a sibling). +node_or_tags+ can be a Nokogiri::XML::Node, a",2],["before","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000362","(datum)","Insert +datum+ before the first Node in this NodeSet ",2],["blank?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000110","()","          Is this node blank?     ",2],["block?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000278","()","Is this element a block element? ",2],["c1","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000168","()","          Get the first child.     ",2],["c2","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000169","()","          Get the first child.     ",2],["cdata","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000306","(string)","Create a CDATA Node with content of +string+ ",2],["cdata?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000443","()","Returns true if this is a CDATA ",2],["cdata_block","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000506","(string)","Called when cdata blocks are found +string+ contains the cdata content ",2],["cdata_block","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000542","(string)","Handle cdata_blocks containing +string+ ",2],["characters","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000502","(string)","Characters read between a tag.  This method might be called multiple times given one contiguous string",2],["child","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000096","()","          Returns the child node     ",2],["children","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000346","()","Get the children of this ElementContent node ",2],["children","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000099","()","          Get the list of children for this node as a NodeSet     ",2],["children","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000435","()","Returns a new NodeSet containing all the children of all the nodes in the NodeSet ",2],["children=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000392","(node_or_tags)","Set the inner html for this Node +node_or_tags+ +node_or_tags+ can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment,",2],["clear_aliases!","Nokogiri::EncodingHandler","classes/Nokogiri/EncodingHandler.html#M000018","()","          Remove all encoding aliases.     ",2],["clear_cache","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000194","()","Clear the cache ",2],["clone","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000335","(...)","Alias for #dup",2],["clone","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000417","(...)","Alias for #dup",2],["coerce","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000332","(data)","",2],["collect_namespaces","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000328","()","Recursively get all namespaces from this node and its subtree and return them as a hash. For example,",2],["column","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000042","()","          Get the current column the parser context is processing.     ",2],["comment","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000503","(string)","Called when comments are encountered +string+ contains the comment data ",2],["comment?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000442","()","Returns true if this is a Comment ",2],["compare","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000137","(p1)","          Compare this Node to +other+ with respect to their Document     ",2],["content","Nokogiri::XML::ElementDecl","classes/Nokogiri/XML/ElementDecl.html#M000013","()","          The allowed content for this ElementDecl     ",2],["content","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000062","()","          Get the content     ",2],["content","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000106","()","          Returns the content for this Node     ",2],["content=","Nokogiri::XML::Attr","classes/Nokogiri/XML/Attr.html#M000300","(p1)","Alias for #value=",2],["content=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000439","(string)","Set the Node's content to a Text node containing +string+. The string gets XML escaped, not interpreted",2],["content=","Nokogiri::XML::Text","classes/Nokogiri/XML/Text.html#M000516","(string)","",2],["create_cdata","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000322","(text)","Create a CDATA element containing +text+ ",2],["create_element","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000316","(name, *args, &block)","Create an element with +name+, and optionally setting the content and attributes. doc.create_element",2],["create_entity","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000076","(...)","       Create a new entity named +name+.       +type+ is an integer representing the type of entity to",2],["create_external_subset","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000124","(p1, p2, p3)","          Create an external subset     ",2],["create_internal_subset","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000123","(p1, p2, p3)","          Create the internal subset of a document.         doc.create_internal_subset(\"chapter\", \"-//OASIS//DTD",2],["create_text_node","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000321","(text, &block)","Create a text node with +text+ ",2],["css","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000326","(*args)","Search this fragment.  See Nokogiri::XML::Node#css ",2],["css","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000367","(*rules)","Search this node for CSS +rules+. +rules+ must be one or more CSS selectors. For example: node.css('title')",2],["css","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000369","(*paths)","Search this NodeSet for css +paths+ For more information see Nokogiri::XML::Node#css ",2],["css_path","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000454","()","Get the path to this node as a CSS expression ",2],["decorate","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000334","(node)","Apply any decorators to +node+ ",2],["decorate!","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000354","()","Decorate this node with the decorators set up in this node's Document ",2],["decorators","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000329","(key)","Get the list of decorators given +key+ ",2],["default","Nokogiri::XML::AttributeDecl","classes/Nokogiri/XML/AttributeDecl.html#M000025","()","          The default value     ",2],["default?","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000161","()","          Was an attribute generated from the default value in the DTD or schema?     ",2],["default_desc","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000282","()","",2],["default_namespace=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000456","(url)","Adds a default namespace supplied as a string +url+ href, to self. The consequence is as an xmlns attribute",2],["default_sub_element","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000290","()","",2],["default_sub_element","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000053","()","          The default sub element for this element     ",2],["delete","Nokogiri::EncodingHandler","classes/Nokogiri/EncodingHandler.html#M000016","(p1)","          Delete the encoding alias named +name+     ",2],["delete","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000429","(name)","Alias for #remove_attribute",2],["delete","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000087","(p1)","            Delete +node+ from the Nodeset, if it is a member. Returns the deleted node     if found,",2],["deprecated?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000288","()","",2],["deprecated?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000049","()","          Is this element deprecated?     ",2],["deprecated_attributes","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000292","()","",2],["deprecated_attributes","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000055","()","          A list of deprecated attributes for this element     ",2],["depth","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000153","()","          Get the depth of the node     ",2],["description","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000051","()","          The description for this element     ",2],["description","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000289","()","",2],["description","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000448","()","Fetch the Nokogiri::HTML::ElementDescription for this node.  Returns nil on XML documents and on unknown",2],["do_parse","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000536","(string_or_readable)","Start parsing +string_or_readable+ ",2],["document","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000324","()","A reference to +self+ ",2],["document","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000093","()","          Get the document for this Node     ",2],["dump_html","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000132","()","          Returns the Node as html.     ",2],["dup","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000074","(...)","          Copy this Document.  An optional depth may be passed in, but it defaults    to a deep copy.",2],["dup","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000119","(...)","          Copy this node.  An optional depth may be passed in, but it defaults    to a deep copy.  0",2],["dup","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000086","()","          Duplicate this node set     ",2],["each","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000345","(&block)","",2],["each","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000427","(&block)","Iterate over each attribute name and value pair for this Node. ",2],["each","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000398","(&block)","Iterate over each node, yielding  to +block+ ",2],["each","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000489","()","Move the cursor through the document yielding the cursor to the block ",2],["elem?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000451","()","Alias for #element?",2],["element?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000450","()","Returns true if this is an Element node ",2],["element_children","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000100","()","          Get the list of children for this node as a NodeSet.  All nodes will be    element nodes. ",2],["element_type","Nokogiri::XML::ElementDecl","classes/Nokogiri/XML/ElementDecl.html#M000012","()","          The element_type     ",2],["elements","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000171","()","          Get a hash of the elements for this DTD.     ",2],["elements","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000418","()","Alias for #element_children",2],["empty?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000048","()","          Is this an empty element?     ",2],["empty?","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000360","()","Is this NodeSet empty? ",2],["empty_element?","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000158","()","          Returns true if the current node is empty, otherwise false.     ",2],["encode_special_chars","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000118","(p1)","          Encode any special characters in +string+     ",2],["encoding","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000071","()","          Get the encoding for this Document     ",2],["encoding=","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000072","(p1)","          Set the encoding string for this Document     ",2],["end_document","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000493","()","Called when document ends parsing ",2],["end_element","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000495","(name)","Called at the end of an element +name+ is the tag name ",2],["end_element","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000538","(name)","Handle the end_element event with +name+ ",2],["end_element_namespace","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000499","(name, prefix = nil, uri = nil)","Called at the end of an element +name+ is the element's name +prefix+ is the namespace prefix associated",2],["end_element_namespace","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000544","(name, prefix = nil, uri = nil)","",2],["entities","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000172","()","          Get a hash of the elements for this DTD.     ",2],["entity_type","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000063","()","          Get the entity type     ",2],["enumeration","Nokogiri::XML::AttributeDecl","classes/Nokogiri/XML/AttributeDecl.html#M000026","()","          An enumeration of possible values     ",2],["error","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000505","(string)","Called on document errors +string+ contains the error ",2],["error","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000539","(msg)","Handle errors with message +msg+ ",2],["error?","Nokogiri::XML::SyntaxError","classes/Nokogiri/XML/SyntaxError.html#M000519","()","return true if this is an error ",2],["evaluate","Nokogiri::XML::XPathContext","classes/Nokogiri/XML/XPathContext.html#M000058","(...)","          Evaluate the +search_path+ returning an XML::XPath object.     ",2],["external_id","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000176","()","          Get the External ID for this DTD     ",2],["external_id","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000064","()","          Get the external identifier for PUBLIC     ",2],["external_subset","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000122","()","          Get the external subset     ",2],["fatal?","Nokogiri::XML::SyntaxError","classes/Nokogiri/XML/SyntaxError.html#M000520","()","return true if this error is fatal ",2],["file","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000037","(p1)","          Parse file given +filename+     ",2],["filter","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000385","(expr)","Filter this list for nodes that match +expr+ ",2],["find_by_type","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000189","(types)","Find a node by type using +types+ ",2],["finish","Nokogiri::XML::SAX::PushParser","classes/Nokogiri/XML/SAX/PushParser.html#M000511","()","Finish the parsing.  This method is only necessary for Nokogiri::XML::SAX::Document#end_document to be",2],["first","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000357","(n = nil)","Get the first element of the NodeSet. ",2],["first_element_child","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000097","()","          Returns the first child node of this node that is an element.       Example:         @doc.root.first_element_child.element?",2],["fragment","Nokogiri::HTML","classes/Nokogiri/HTML.html#M000297","(string, encoding = nil)","Parse a fragment from +string+ in to a NodeSet. ",2],["fragment","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000274","(tags = nil)","Create a Nokogiri::XML::DocumentFragment from +tags+ ",2],["fragment","Nokogiri::XML","classes/Nokogiri/XML.html#M000528","(string)","Parse a fragment from +string+ in to a NodeSet. ",2],["fragment","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000337","(tags = nil)","Create a Nokogiri::XML::DocumentFragment from +tags+ Returns an empty fragment if +tags+ is nil. ",2],["fragment","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000433","(tags)","Create a DocumentFragment containing +tags+ that is relative to _this_ context node. ",2],["fragment?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000447","()","Returns true if this is a DocumentFragment ",2],["from_document","Nokogiri::XML::RelaxNG","classes/Nokogiri/XML/RelaxNG.html#M000007","(p1)","          Create a new RelaxNG schema from the Nokogiri::XML::Document +doc+     ",2],["from_document","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000181","(p1)","          Create a new Schema from the Nokogiri::XML::Document +doc+     ",2],["from_io","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000140","(...)","          Create a new reader that parses +io+     ",2],["from_memory","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000139","(...)","          Create a new reader that parses +string+     ",2],["get","Nokogiri::HTML::EntityLookup","classes/Nokogiri/HTML/EntityLookup.html#M000010","(p1)","          Get the HTML::EntityDescription for +key+     ",2],["get","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000135","(p1)","          Get the value for +attribute+     ",2],["get_attribute","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000408","(name)","Alias for #[]",2],["has_attribute?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000411","(p1)","Alias for #key?",2],["href","Nokogiri::XML::Namespace","classes/Nokogiri/XML/Namespace.html#M000033","()","          Get the href for this namespace     ",2],["html?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000445","()","Returns true if this is an HTML::Document node ",2],["implied_end_tag?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000046","()","          Can the end tag be implied for this tag?     ",2],["implied_end_tag?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000284","()","",2],["implied_start_tag?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000045","()","          Can the start tag be implied for this tag?     ",2],["implied_start_tag?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000283","()","",2],["implied_xpath_context","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000342","()","",2],["implied_xpath_context","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000479","()","",2],["in_context","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000127","(p1, p2)","   TODO: DOCUMENT ME    ",2],["include?","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000089","(p1)","           Returns true if any member of node set equals +node+.     ",2],["index","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000361","(node)","Returns the index of the first node in self that is == to +node+. Returns nil if no match is found. ",2],["initialize_native","Nokogiri::XML::SAX::PushParser","classes/Nokogiri/XML/SAX/PushParser.html#M000000","(p1, p2)","          Initialize the push parser with +xml_sax+ using +filename+     ",2],["inline?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000050","()","          Is this element an inline element?     ",2],["inner_html","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000453","(*args)","Get the inner_html for this node's Node#children ",2],["inner_html","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000405","(*args)","Get the inner html of all contained Node objects ",2],["inner_html=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000391","(node_or_tags)","Set the inner html for this Node to +node_or_tags+ +node_or_tags+ can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment,",2],["inner_text","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000410","()","Alias for #content",2],["inner_text","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000403","()","Get the inner text of all contained Node objects ",2],["inner_xml","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000142","()","          Read the contents of the current node, including child nodes and markup.    Returns a utf-8",2],["insert","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000311","(node, &block)","Insert +node+ as a child of the current Node ",2],["inspect","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000280","()","Inspection information ",2],["inspect","Nokogiri::XML::AttributeDecl","classes/Nokogiri/XML/AttributeDecl.html#M000302","()","",2],["inspect","Nokogiri::XML::ElementDecl","classes/Nokogiri/XML/ElementDecl.html#M000347","()","",2],["inspect","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000350","()","",2],["inspect","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000437","()","Return a nicely formated string representation ",2],["inspect","Nokogiri::XML::ParseOptions","classes/Nokogiri/XML/ParseOptions.html#M000469","()","",2],["inspect_attributes","Nokogiri::XML::Attr","classes/Nokogiri/XML/Attr.html#M000301","()","",2],["inspect_attributes","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000343","()","",2],["inspect_attributes","Nokogiri::XML::Namespace","classes/Nokogiri/XML/Namespace.html#M000348","()","",2],["inspect_attributes","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000480","()","",2],["internal_subset","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000121","()","          Get the internal subset     ",2],["io","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000035","(p1, p2)","          Parse +io+ object with +encoding+     ",2],["key?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000108","(p1)","          Returns true if +attribute+ is set     ",2],["keys","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000344","()","",2],["keys","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000421","()","Get the attribute names for this Node. ",2],["lang","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000151","()","          Get the xml:lang scope within which the node resides.     ",2],["last","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000359","()","Get the last element of the NodeSet. ",2],["last_element_child","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000098","()","          Returns the last child node of this node that is an element.       Example:         @doc.root.last_element_child.element?",2],["length","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000078","()","          Get the length of the node set     ",2],["line","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000126","()","          Returns the line for this Node     ",2],["line","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000041","()","          Get the current line the parser context is processing.     ",2],["load_file","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000206","( filename )","",2],["local_name","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000147","()","          Get the local name of the node     ",2],["make","Nokogiri","classes/Nokogiri.html#M000533","(input = nil, opts = {})","Create a new Nokogiri::XML::DocumentFragment ",2],["matches?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000430","(selector)","Returns true if this Node matches +selector+ ",2],["memory","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000036","(p1)","          Parse the XML stored in memory in +data+     ",2],["meta_content_type","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000270","()","",2],["meta_encoding","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000268","()","Get the meta tag encoding for this document.  If there is no meta tag, then nil is returned. ",2],["meta_encoding=","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000269","(encoding)","Set the meta tag encoding for this document.  If there is no meta content tag, the encoding is not set.",2],["method_missing","Nokogiri::Decorators::Slop","classes/Nokogiri/Decorators/Slop.html#M000266","(name, *args, &block)","look for node with +name+.  See Nokogiri.Slop ",2],["name","Nokogiri::EncodingHandler","classes/Nokogiri/EncodingHandler.html#M000019","()","          Get the name of this EncodingHandler     ",2],["name","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000044","()","          Get the tag name for this ElemementDescription     ",2],["name","Nokogiri::XML::CDATA","classes/Nokogiri/XML/CDATA.html#M000312","()","Get the name of this CDATA node ",2],["name","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000323","()","The name of this document.  Always returns \"document\" ",2],["name","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000317","()","return the name for DocumentFragment ",2],["name","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000164","()","          Get the require element +name+     ",2],["name","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000412","()","Alias for #node_name",2],["name","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000146","()","          Get the name of the node. Returns a utf-8 encoded string.     ",2],["name=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000413","(p1)","Alias for #node_name=",2],["namespace","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000115","()","            returns the default namespace set on this node (as with an \"xmlns=\"     attribute), as a",2],["namespace=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000458","(ns)","Set the default namespace on this node (as would be defined with an \"xmlns=\" attribute in XML source),",2],["namespace_definitions","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000116","()","            returns namespaces defined on self element directly, as an array of Namespace objects. Includes",2],["namespace_scopes","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000117","()","           returns namespaces in scope for self -- those defined on self element    directly or any ancestor",2],["namespace_uri","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000148","()","          Get the URI defining the namespace associated with the node     ",2],["namespaced_key?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000109","(p1, p2)","          Returns true if +attribute+ is set with +namespace+     ",2],["namespaces","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000336","()","Get the hash of namespaces on the root Nokogiri::XML::Node ",2],["namespaces","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000441","()","Returns a Hash of {prefix => value} for all namespaces on this node and its ancestors. This method returns",2],["namespaces","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000156","()","          Get a hash of namespaces for this Node     ",2],["native_content=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000134","(p1)","          Set the content for this Node     ",2],["native_write","Nokogiri::XML::SAX::PushParser","classes/Nokogiri/XML/SAX/PushParser.html#M000001","(p1, p2)","          Write +chunk+ to PushParser. +last_chunk+ triggers the end_document handle     ",2],["native_write_to","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000133","(p1, p2, p3, p4)","          Write this Node to +io+ with +encoding+ and +options+     ",2],["new","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000185","(type, value)","Create a new Node with +type+ and +value+ ",2],["new","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000197","(namespaces = {})","Create a new CSS parser with respect to +namespaces+ ",2],["new","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000022","(...)","          Create a new document     ",2],["new","Nokogiri::HTML::DocumentFragment","classes/Nokogiri/HTML/DocumentFragment.html#M000277","(document, tags = nil, ctx = nil)","",2],["new","Nokogiri::HTML::SAX::ParserContext","classes/Nokogiri/HTML/SAX/ParserContext.html#M000294","(thing, encoding = 'UTF-8')","",2],["new","Nokogiri::XML::Attr","classes/Nokogiri/XML/Attr.html#M000177","(...)","          Create a new Attr element on the +document+ with +name+     ",2],["new","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000304","(options = {})","Create a new Builder object.  +options+ are sent to the top level Document that is being built. Building",2],["new","Nokogiri::XML::CDATA","classes/Nokogiri/XML/CDATA.html#M000179","(...)","          Create a new CDATA element on the +document+ with +content+     ",2],["new","Nokogiri::XML::Comment","classes/Nokogiri/XML/Comment.html#M000034","(...)","          Create a new Comment element on the +document+ with +content+     ",2],["new","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000068","(...)","          Create a new document with +version+ (defaults to \"1.0\")     ",2],["new","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000031","(...)","          Create a new DocumentFragment element on the +document+     ",2],["new","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000314","(document, tags = nil, ctx = nil)","Create a new DocumentFragment from +tags+. If +ctx+ is present, it is used as a context node for the",2],["new","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000349","(name, doc, *args)","",2],["new","Nokogiri::XML::EntityReference","classes/Nokogiri/XML/EntityReference.html#M000184","(...)","          Create a new EntityReference element on the +document+ with +name+     ",2],["new","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000090","(...)","          Create a new node with +name+ sharing GC lifecycle with +document+     ",2],["new","Nokogiri::XML::Node::SaveOptions","classes/Nokogiri/XML/Node/SaveOptions.html#M000351","(options = 0;)","Create a new SaveOptions object with +options+ ",2],["new","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000352","(document, list = [])","Create a NodeSet with +document+ defaulting to +list+ ",2],["new","Nokogiri::XML::ParseOptions","classes/Nokogiri/XML/ParseOptions.html#M000464","(options = STRICT)","",2],["new","Nokogiri::XML::ProcessingInstruction","classes/Nokogiri/XML/ProcessingInstruction.html#M000483","(document, name, content)","",2],["new","Nokogiri::XML::ProcessingInstruction","classes/Nokogiri/XML/ProcessingInstruction.html#M000138","(...)","          Create a new ProcessingInstruction element on the +document+ with +name+    and +content+ ",2],["new","Nokogiri::XML::SAX::Parser","classes/Nokogiri/XML/SAX/Parser.html#M000492","(doc = Nokogiri::XML::SAX::Document.new, encoding = 'UTF-8')","Create a new Parser with +doc+ and +encoding+ ",2],["new","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000508","(thing, encoding = 'UTF-8')","",2],["new","Nokogiri::XML::SAX::PushParser","classes/Nokogiri/XML/SAX/PushParser.html#M000507","(doc = XML::SAX::Document.new, file_name = nil, encoding = 'UTF-8')","Create a new PushParser with +doc+ as the SAX Document, providing an optional +file_name+ and +encoding+",2],["new","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000513","(string_or_io)","Create a new Nokogiri::XML::Schema object using a +string_or_io+ object. ",2],["new","Nokogiri::XML::Text","classes/Nokogiri/XML/Text.html#M000011","(...)","          Create a new Text element on the +document+ with +content+     ",2],["new","Nokogiri::XML::XPathContext","classes/Nokogiri/XML/XPathContext.html#M000057","(p1)","          Create a new XPathContext with +node+ as the reference point.     ",2],["new","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000534","(host, opt = {})","Create a new XSD parser with +host+ and +opt+ ",2],["next","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000400","()","Alias for #next_sibling",2],["next_element","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000103","()","          Returns the next Nokogiri::XML::Element type sibling node.     ",2],["next_sibling","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000101","()","          Returns the next sibling node     ",2],["next_token","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000199","()","",2],["next_token","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000210","()","",2],["node_name","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000092","()","          Returns the name for this Node     ",2],["node_name=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000094","(p1)","          Set the name for this Node     ",2],["node_type","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000105","()","          Get the type for this Node     ",2],["node_type","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000145","()","          Get the type of readers current node     ",2],["none?","Nokogiri::XML::SyntaxError","classes/Nokogiri/XML/SyntaxError.html#M000517","()","return true if this is a non error ",2],["notations","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000170","()","          Get a hash of the notations for this DTD.     ",2],["occur","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000166","()","          Get the element content +occur+ flag.  Possible values are ONCE, OPT, MULT    or PLUS.    ",2],["on_error","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000201","(error_token_id, error_value, value_stack)","On CSS parser error, raise an exception ",2],["optional_attributes","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000291","()","",2],["optional_attributes","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000054","()","          A list of optional attributes for this element     ",2],["original_content","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000061","()","          Get the original_content before ref substitution     ",2],["outer_xml","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000143","()","          Read the current node and its contents, including child nodes and markup.    Returns a utf-8",2],["parent","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000095","()","          Get the parent Node for this Node     ",2],["parent=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000440","(parent_node)","Set the parent Node for this Node ",2],["parse","Nokogiri","classes/Nokogiri.html#M000532","(string, url = nil, encoding = nil, options = nil)","Parse an HTML or XML document.  +string+ contains the document. ",2],["parse","Nokogiri::CSS","classes/Nokogiri/CSS.html#M000264","(selector)","Parse this CSS selector in +selector+.  Returns an AST. ",2],["parse","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000196","(selector)","Parse this CSS selector in +selector+.  Returns an AST. ",2],["parse","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000198","(string)","",2],["parse","Nokogiri::HTML","classes/Nokogiri/HTML.html#M000296","(thing, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block)","Parse HTML.  Convenience method for Nokogiri::HTML::Document.parse ",2],["parse","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000275","(string_or_io, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML)","Parse HTML.  +string_or_io+ may be a String, or any object that responds to _read_ and _close_ such as",2],["parse","Nokogiri::HTML::DocumentFragment","classes/Nokogiri/HTML/DocumentFragment.html#M000276","(tags, encoding = nil)","Create a Nokogiri::XML::DocumentFragment from +tags+, using +encoding+ ",2],["parse","Nokogiri::XML","classes/Nokogiri/XML.html#M000527","(thing, url = nil, encoding = nil, options = ParseOptions::DEFAULT_XML, &block)","Parse XML.  Convenience method for Nokogiri::XML::Document.parse ",2],["parse","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000313","(string_or_io, url = nil, encoding = nil, options = ParseOptions::DEFAULT_XML, &block)","Parse an XML file.  +string_or_io+ may be a String, or any object that responds to _read_ and _close_",2],["parse","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000330","(tags)","Create a Nokogiri::XML::DocumentFragment from +tags+ ",2],["parse","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000434","(string_or_io, options = nil)","Parse +string_or_io+ as a document fragment within the context of *this* node.  Returns a XML::NodeSet",2],["parse","Nokogiri::XML::SAX::Parser","classes/Nokogiri/XML/SAX/Parser.html#M000497","(thing, &block)","Parse given +thing+ which may be a string containing xml, or an IO object. ",2],["parse","Nokogiri::XSLT","classes/Nokogiri/XSLT.html#M000530","(string, modules = {})","Parse the stylesheet in +string+, register any +modules+ ",2],["parse_file","Nokogiri::HTML::SAX::Parser","classes/Nokogiri/HTML/SAX/Parser.html#M000286","(filename, encoding = 'UTF-8')","Parse a file with +filename+ ",2],["parse_file","Nokogiri::XML::SAX::Parser","classes/Nokogiri/XML/SAX/Parser.html#M000500","(filename)","Parse a file with +filename+ ",2],["parse_io","Nokogiri::XML::SAX::Parser","classes/Nokogiri/XML/SAX/Parser.html#M000498","(io, encoding = 'ASCII')","Parse given +io+ ",2],["parse_memory","Nokogiri::HTML::SAX::Parser","classes/Nokogiri/HTML/SAX/Parser.html#M000285","(data, encoding = 'UTF-8')","Parse html stored in +data+ using +encoding+ ",2],["parse_memory","Nokogiri::XML::SAX::Parser","classes/Nokogiri/XML/SAX/Parser.html#M000501","(data)","",2],["parse_stylesheet_doc","Nokogiri::XSLT::Stylesheet","classes/Nokogiri/XSLT/Stylesheet.html#M000027","(p1)","          Parse a stylesheet from +document+.     ",2],["parse_with","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000038","(p1)","          Use +sax_handler+ and parse the current document     ",2],["path","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000107","()","          Returns the path associated with this Node     ",2],["pointer_id","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000125","()","          Get the internal pointer number     ",2],["pop","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000426","()","Removes the last element from set and returns it, or +nil+ if the set is empty ",2],["prefix","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000167","()","          Get the element content namespace +prefix+.     ",2],["prefix","Nokogiri::XML::ElementDecl","classes/Nokogiri/XML/ElementDecl.html#M000014","()","          The namespace prefix for this ElementDecl     ",2],["prefix","Nokogiri::XML::Namespace","classes/Nokogiri/XML/Namespace.html#M000032","()","          Get the prefix for this namespace.  Returns +nil+ if there is no prefix.     ",2],["prefix","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000149","()","          Get the shorthand reference to the namespace associated with the node.     ",2],["preprocess!","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000188","()","Preprocess this node tree ",2],["previous","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000401","()","Alias for #previous_sibling",2],["previous=","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000402","(node_or_tags)","Alias for #add_previous_sibling",2],["previous_element","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000104","()","          Returns the previous Nokogiri::XML::Element type sibling node.     ",2],["previous_sibling","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000102","()","          Returns the previous sibling node     ",2],["push","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000081","(p1)","          Append +node+ to the NodeSet.     ",2],["quote_params","Nokogiri::XSLT","classes/Nokogiri/XSLT.html#M000531","(params)","Quote parameters in +params+ for stylesheet safety ",2],["read","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000141","()","          Move the Reader forward through the XML document.     ",2],["read_io","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000021","(p1, p2, p3, p4)","          Read the HTML document from +io+ with given +url+, +encoding+,    and +options+.  See Nokogiri::HTML.parse",2],["read_io","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000067","(p1, p2, p3, p4)","          Create a new document from an IO object     ",2],["read_memory","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000020","(p1, p2, p3, p4)","          Read the HTML document contained in +string+ with given +url+, +encoding+,    and +options+.",2],["read_memory","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000066","(p1, p2, p3, p4)","          Create a new document from a String     ",2],["read_memory","Nokogiri::XML::RelaxNG","classes/Nokogiri/XML/RelaxNG.html#M000006","(p1)","          Create a new RelaxNG from the contents of +string+     ",2],["read_memory","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000180","(p1)","          Create a new Schema from the contents of +string+     ",2],["read_only?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000449","()","Is this a read only node? ",2],["register","Nokogiri::XSLT","classes/Nokogiri/XSLT.html#M000028","(p1, p2)","            Register a class that implements custom XLST transformation functions.     ",2],["register_namespaces","Nokogiri::XML::XPathContext","classes/Nokogiri/XML/XPathContext.html#M000523","(namespaces)","Register namespaces in +namespaces+ ",2],["register_ns","Nokogiri::XML::XPathContext","classes/Nokogiri/XML/XPathContext.html#M000060","(p1, p2)","          Register the namespace with +prefix+ and +uri+.     ",2],["register_variable","Nokogiri::XML::XPathContext","classes/Nokogiri/XML/XPathContext.html#M000059","(p1, p2)","          Register the variable +name+ with +value+.     ",2],["remove","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000407","()","Alias for #unlink",2],["remove","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000365","()","Alias for #unlink",2],["remove_attr","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000397","(name)","Remove the attributed named +name+ from all Node objects in the NodeSet ",2],["remove_attribute","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000428","(name)","Remove the attribute named +name+ ",2],["remove_class","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000389","(name = nil)","Remove the class attribute +name+ from all Node objects in the NodeSet. If +name+ is nil, remove the",2],["remove_namespaces!","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000077","()","            Remove all namespaces from all nodes in the document.        This could be useful for developers",2],["replace","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000394","(node_or_tags)","Replace this Node with +node_or_tags+. +node_or_tags+ can be a Nokogiri::XML::Node, a ::DocumentFragment,",2],["replace_entities","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000040","()","          Should this parser replace entities?  &amp; will get converted to '&' if    set to true   ",2],["replace_entities=","Nokogiri::XML::SAX::ParserContext","classes/Nokogiri/XML/SAX/ParserContext.html#M000039","(p1)","          Should this parser replace entities?  &amp; will get converted to '&' if    set to true   ",2],["required_attributes","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000293","()","",2],["required_attributes","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000056","()","          A list of required attributes for this element     ",2],["reverse","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000436","()","Returns a new NodeSet containing all the nodes in the NodeSet in reverse order ",2],["root","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000069","()","          Get the root node for this document.     ",2],["root=","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000070","(p1)","          Set the root element on this document     ",2],["save_end_tag?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000047","()","          Should the end tag be saved?     ",2],["save_end_tag?","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000287","()","",2],["scan","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000205","(str)","Alias for #scan_str",2],["scan_file","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000209","( filename )","",2],["scan_setup","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000202","(str)","",2],["scan_str","Nokogiri::CSS::Tokenizer","classes/Nokogiri/CSS/Tokenizer.html#M000204","(str)","",2],["search","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000355","(*paths)","Search this node for +paths+.  +paths+ can be XPath or CSS, and an optional hash of namespaces may be",2],["search","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000366","(*paths)","Search this document for +paths+ For more information see Nokogiri::XML::Node#css and Nokogiri::XML::Node#xpath",2],["self_closing?","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000484","()","Alias for #empty_element?",2],["serialize","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000273","(options = {})","Serialize Node using +options+.  Save options can also be set using a block. See SaveOptions. These two",2],["serialize","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000327","()","Alias for #to_s",2],["serialize","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000462","(*args, &block)","Serialize Node using +options+.  Save options can also be set using a block. See SaveOptions. These two",2],["serialize","Nokogiri::XSLT::Stylesheet","classes/Nokogiri/XSLT/Stylesheet.html#M000029","(p1)","          Serialize +document+ to an xml string.     ",2],["set","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000395","(key, value = nil, &blk)","Alias for #attr",2],["set_attribute","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000409","(p1, p2)","Alias for #[]=",2],["set_namespace","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000136","(p1)","          Set the namespace to +namespace+     ",2],["shift","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000431","()","Returns the first element of the NodeSet and removes it.  Returns +nil+ if the set is empty. ",2],["size","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000424","()","Alias for #length",2],["slice","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000080","(...)","          Element reference - returns the node at +index+, or returns a NodeSet    containing nodes starting",2],["slop!","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000333","()","Explore a document with shortcut methods. See Nokogiri::Slop for details. Note that any nodes that have",2],["start_document","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000491","()","Called when document starts parsing ",2],["start_element","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000494","(name, attrs = [])","Called at the beginning of an element * +name+ is the name of the tag * +attrs+ are an assoc list of",2],["start_element","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000537","(name, attrs = [])","Handle the start_element event with +name+ and +attrs+ ",2],["start_element_namespace","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000496","(name, attrs = [], prefix = nil, uri = nil, ns = [])","Called at the beginning of an element +name+ is the element name +attrs+ is a list of attributes +prefix+",2],["start_element_namespace","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000543","(name, attrs = [], prefix = nil, uri = nil, ns = [])","",2],["state","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000144","()","          Get the state of the reader     ",2],["strict","Nokogiri::XML::ParseOptions","classes/Nokogiri/XML/ParseOptions.html#M000465","()","",2],["strict?","Nokogiri::XML::ParseOptions","classes/Nokogiri/XML/ParseOptions.html#M000466","()","",2],["sub_elements","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000052","()","          A list of allowed sub elements for this element.     ",2],["swap","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000399","(node_or_tags)","Swap this Node for +node_or_tags+ +node_or_tags+ can be a Nokogiri::XML::Node, a ::DocumentFragment,",2],["system_id","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000175","()","          Get the System ID for this DTD     ",2],["system_id","Nokogiri::XML::EntityDecl","classes/Nokogiri/XML/EntityDecl.html#M000065","()","          Get the URI for a SYSTEM or PUBLIC Entity     ",2],["text","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000305","(string)","Create a Text Node with content of +string+ ",2],["text","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000404","()","Alias for #inner_text",2],["text?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000446","()","Returns true if this is a Text node ",2],["title","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000271","()","Get the title string of this document.  Return nil if there is no title tag. ",2],["title=","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000272","(text)","Set the title string of this document.  If there is no head element, the title is not set. ",2],["to_a","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000191","()","Convert to array ",2],["to_a","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000085","()","          Return this list as an Array     ",2],["to_ary","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000425","()","Alias for #to_a",2],["to_html","Nokogiri::HTML::Builder","classes/Nokogiri/HTML/Builder.html#M000267","()","Convert the builder to HTML ",2],["to_html","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000319","(*args)","Convert this DocumentFragment to html See Nokogiri::XML::NodeSet#to_html ",2],["to_html","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000463","(options = {})","Serialize this Node to HTML doc.to_html See Node#write_to for a list of +options+.  For formatted output,",2],["to_html","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000415","(*args)","Convert this NodeSet to HTML ",2],["to_java","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000341","()","+JRuby+ Returns Java's org.w3c.dom.document of this Document. ",2],["to_s","Nokogiri::HTML::ElementDescription","classes/Nokogiri/HTML/ElementDescription.html#M000279","()","Convert this description to a string ",2],["to_s","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000318","()","Convert this DocumentFragment to a string ",2],["to_s","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000452","()","Turn this node in to a string.  If the document is HTML, this method returns html.  If the document is",2],["to_s","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000414","()","Convert this NodeSet to a string. ",2],["to_s","Nokogiri::XML::SyntaxError","classes/Nokogiri/XML/SyntaxError.html#M000521","()","",2],["to_s","Nokogiri::XML::XPath::SyntaxError","classes/Nokogiri/XML/XPath/SyntaxError.html#M000522","()","",2],["to_type","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000190","()","Convert to_type ",2],["to_xhtml","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000320","(*args)","Convert this DocumentFragment to xhtml See Nokogiri::XML::NodeSet#to_xhtml ",2],["to_xhtml","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000468","(options = {})","Serialize this Node to XHTML using +options+ doc.to_xhtml(:indent => 5, :encoding => 'UTF-8') See Node#write_to",2],["to_xhtml","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000422","(*args)","Convert this NodeSet to XHTML ",2],["to_xml","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000308","(*args)","Convert this Builder object to XML ",2],["to_xml","Nokogiri::XML::DocumentFragment","classes/Nokogiri/XML/DocumentFragment.html#M000325","(*args)","Convert this DocumentFragment to xml See Nokogiri::XML::NodeSet#to_xml ",2],["to_xml","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000467","(options = {})","Serialize this Node to XML using +options+ doc.to_xml(:indent => 5, :encoding => 'UTF-8') See Node#write_to",2],["to_xml","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000423","(*args)","Convert this NodeSet to XML ",2],["to_xpath","Nokogiri::CSS::Node","classes/Nokogiri/CSS/Node.html#M000187","(prefix = '//', visitor = XPathVisitor.new)","Convert this CSS node to xpath with +prefix+ using +visitor+ ",2],["transform","Nokogiri::XSLT::Stylesheet","classes/Nokogiri/XSLT/Stylesheet.html#M000030","(...)","            Apply an XSLT stylesheet to an XML::Document.     +params+ is an array of strings used as",2],["traverse","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000459","(&block)","Yields self and all children to +block+ recursively. ",2],["type","Nokogiri::HTML::Document","classes/Nokogiri/HTML/Document.html#M000023","()","          The type for this document     ",2],["type","Nokogiri::XML::ElementContent","classes/Nokogiri/XML/ElementContent.html#M000165","()","          Get the element content +type+.  Possible values are PCDATA, ELEMENT, SEQ,    or OR.     ",2],["type","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000416","()","Alias for #node_type",2],["unlink","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000120","()","          Unlink this node from its current context.     ",2],["unlink","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000084","()","           Unlink this NodeSet and all Node objects it contains from their current context.     ",2],["url","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000075","()","          Get the url name for this document.     ",2],["valid?","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000515","(thing)","Returns true if +thing+ is a valid Nokogiri::XML::Document or file. ",2],["validate","Nokogiri::XML::DTD","classes/Nokogiri/XML/DTD.html#M000173","(p1)","          Validate +document+ returning a list of errors     ",2],["validate","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000331","()","Validate this Document against it's DTD.  Returns a list of errors on the document or +nil+ when there",2],["validate","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000514","(thing)","Validate +thing+ against this schema.  +thing+ can be a Nokogiri::XML::Document object, or a filename.",2],["validate_document","Nokogiri::XML::RelaxNG","classes/Nokogiri/XML/RelaxNG.html#M000008","(p1)","          Validate a Nokogiri::XML::Document against this RelaxNG schema.     ",2],["validate_document","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000182","(p1)","          Validate a Nokogiri::XML::Document against this Schema.     ",2],["validate_file","Nokogiri::XML::Schema","classes/Nokogiri/XML/Schema.html#M000183","(p1)","          Validate a file against this Schema.     ",2],["value","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000150","()","          Get the text value of the node if present. Returns a utf-8 encoded string.     ",2],["value=","Nokogiri::XML::Attr","classes/Nokogiri/XML/Attr.html#M000178","(p1)","          Set the value for this Attr to +content+     ",2],["value?","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000160","()","          Does this node have a text value?     ",2],["values","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000420","()","Get the attribute values for this Node. ",2],["version","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000073","()","          Get the XML version for this Document     ",2],["warning","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000504","(string)","Called on document warnings +string+ contains the warning ",2],["warning","XSD::XMLParser::Nokogiri","classes/XSD/XMLParser/Nokogiri.html#M000540","(msg)","Alias for #error",2],["warning?","Nokogiri::XML::SyntaxError","classes/Nokogiri/XML/SyntaxError.html#M000518","()","return true if this is a warning ",2],["with","Nokogiri::XML::Builder","classes/Nokogiri/XML/Builder.html#M000303","(root, &block)","Create a builder with an existing root object.  This is for use when you have an existing document that",2],["without_cache","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000195","(&block)","Execute +block+ without cache ",2],["wrap","Nokogiri::XML::Document","classes/Nokogiri/XML/Document.html#M000340","(document)","+JRuby+ Wraps Java's org.w3c.dom.document and returns Nokogiri::XML::Document ",2],["wrap","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000406","(html, &blk)","Wrap this NodeSet with +html+ or the results of the builder in +blk+ ",2],["write","Nokogiri::XML::SAX::PushParser","classes/Nokogiri/XML/SAX/PushParser.html#M000509","(chunk, last_chunk = false)","Write a +chunk+ of XML to the PushParser.  Any callback methods that can be called will be called immediately.",2],["write_html_to","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000471","(io, options = {})","Write Node as HTML to +io+ with +options+ See Node#write_to for a list of +options+ ",2],["write_to","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000470","(io, *options)","Write Node to +io+ with +options+. +options+ modify the output of this method.  Valid options are: *",2],["write_xhtml_to","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000472","(io, options = {})","Write Node as XHTML to +io+ with +options+ See Node#write_to for a list of +options+ ",2],["write_xml_to","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000473","(io, options = {})","Write Node as XML to +io+ with +options+ doc.write_xml_to io, :encoding => 'UTF-8' See Node#write_to",2],["xml?","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000444","()","Returns true if this is an XML::Document node ",2],["xml_version","Nokogiri::XML::Reader","classes/Nokogiri/XML/Reader.html#M000152","()","          Get the XML version of the document being read     ",2],["xmldecl","Nokogiri::XML::SAX::Document","classes/Nokogiri/XML/SAX/Document.html#M000490","(version, encoding, standalone)","Called when an XML declaration is parsed ",2],["xpath","Nokogiri::XML::Node","classes/Nokogiri/XML/Node.html#M000358","(*paths)","Search this node for XPath +paths+. +paths+ must be one or more XPath queries. node.xpath('.//title')",2],["xpath","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000377","(*paths)","Search this NodeSet for XPath +paths+ For more information see Nokogiri::XML::Node#xpath ",2],["xpath_for","Nokogiri::CSS","classes/Nokogiri/CSS.html#M000265","(selector, options={})","Get the XPath for +selector+. ",2],["xpath_for","Nokogiri::CSS::Parser","classes/Nokogiri/CSS/Parser.html#M000200","(string, options={})","Get the xpath for +string+ using +options+ ",2],["|","Nokogiri::XML::NodeSet","classes/Nokogiri/XML/NodeSet.html#M000082","(p1)","          Returns a new set built by merging the set and the elements of the given    set.     ",2],["CHANGELOG.ja.rdoc","files/CHANGELOG_ja_rdoc.html","files/CHANGELOG_ja_rdoc.html","","== 1.5.0 / 2011年7月1日  * Notes    * See changelog from 1.4.7  * Features    * extracted sets of Node::SaveOptions",3],["CHANGELOG.rdoc","files/CHANGELOG_rdoc.html","files/CHANGELOG_rdoc.html","","== 1.5.0 / 2011-07-01  * Notes    * See changelog from 1.4.7  * Features    * extracted sets of Node::SaveOptions",3],["Manifest.txt","files/Manifest_txt.html","files/Manifest_txt.html","",".autotest .gemtest CHANGELOG.ja.rdoc CHANGELOG.rdoc Manifest.txt README.ja.rdoc README.rdoc Rakefile",3],["README.ja.rdoc","files/README_ja_rdoc.html","files/README_ja_rdoc.html","","= Nokogiri (鋸)  * http://nokogiri.org/ * http://github.com/tenderlove/nokogiri/wikis * http://github.com/tenderlove/nokogiri/tree/master",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Nokogiri  * http://nokogiri.org * http://github.com/tenderlove/nokogiri/wikis * http://github.com/tenderlove/nokogiri/tree/master",3],["html_document.c","files/ext/nokogiri/html_document_c.html","files/ext/nokogiri/html_document_c.html","","",3],["html_element_description.c","files/ext/nokogiri/html_element_description_c.html","files/ext/nokogiri/html_element_description_c.html","","",3],["html_entity_lookup.c","files/ext/nokogiri/html_entity_lookup_c.html","files/ext/nokogiri/html_entity_lookup_c.html","","",3],["html_sax_parser_context.c","files/ext/nokogiri/html_sax_parser_context_c.html","files/ext/nokogiri/html_sax_parser_context_c.html","","",3],["nokogiri.c","files/ext/nokogiri/nokogiri_c.html","files/ext/nokogiri/nokogiri_c.html","","",3],["xml_attr.c","files/ext/nokogiri/xml_attr_c.html","files/ext/nokogiri/xml_attr_c.html","","",3],["xml_attribute_decl.c","files/ext/nokogiri/xml_attribute_decl_c.html","files/ext/nokogiri/xml_attribute_decl_c.html","","",3],["xml_cdata.c","files/ext/nokogiri/xml_cdata_c.html","files/ext/nokogiri/xml_cdata_c.html","","",3],["xml_comment.c","files/ext/nokogiri/xml_comment_c.html","files/ext/nokogiri/xml_comment_c.html","","",3],["xml_document.c","files/ext/nokogiri/xml_document_c.html","files/ext/nokogiri/xml_document_c.html","","",3],["xml_document_fragment.c","files/ext/nokogiri/xml_document_fragment_c.html","files/ext/nokogiri/xml_document_fragment_c.html","","",3],["xml_dtd.c","files/ext/nokogiri/xml_dtd_c.html","files/ext/nokogiri/xml_dtd_c.html","","",3],["xml_element_content.c","files/ext/nokogiri/xml_element_content_c.html","files/ext/nokogiri/xml_element_content_c.html","","",3],["xml_element_decl.c","files/ext/nokogiri/xml_element_decl_c.html","files/ext/nokogiri/xml_element_decl_c.html","","",3],["xml_encoding_handler.c","files/ext/nokogiri/xml_encoding_handler_c.html","files/ext/nokogiri/xml_encoding_handler_c.html","","",3],["xml_entity_decl.c","files/ext/nokogiri/xml_entity_decl_c.html","files/ext/nokogiri/xml_entity_decl_c.html","","",3],["xml_entity_reference.c","files/ext/nokogiri/xml_entity_reference_c.html","files/ext/nokogiri/xml_entity_reference_c.html","","",3],["xml_io.c","files/ext/nokogiri/xml_io_c.html","files/ext/nokogiri/xml_io_c.html","","",3],["xml_libxml2_hacks.c","files/ext/nokogiri/xml_libxml2_hacks_c.html","files/ext/nokogiri/xml_libxml2_hacks_c.html","","",3],["xml_namespace.c","files/ext/nokogiri/xml_namespace_c.html","files/ext/nokogiri/xml_namespace_c.html","","",3],["xml_node.c","files/ext/nokogiri/xml_node_c.html","files/ext/nokogiri/xml_node_c.html","","",3],["xml_node_set.c","files/ext/nokogiri/xml_node_set_c.html","files/ext/nokogiri/xml_node_set_c.html","","",3],["xml_processing_instruction.c","files/ext/nokogiri/xml_processing_instruction_c.html","files/ext/nokogiri/xml_processing_instruction_c.html","","",3],["xml_reader.c","files/ext/nokogiri/xml_reader_c.html","files/ext/nokogiri/xml_reader_c.html","","",3],["xml_relax_ng.c","files/ext/nokogiri/xml_relax_ng_c.html","files/ext/nokogiri/xml_relax_ng_c.html","","",3],["xml_sax_parser.c","files/ext/nokogiri/xml_sax_parser_c.html","files/ext/nokogiri/xml_sax_parser_c.html","","",3],["xml_sax_parser_context.c","files/ext/nokogiri/xml_sax_parser_context_c.html","files/ext/nokogiri/xml_sax_parser_context_c.html","","",3],["xml_sax_push_parser.c","files/ext/nokogiri/xml_sax_push_parser_c.html","files/ext/nokogiri/xml_sax_push_parser_c.html","","",3],["xml_schema.c","files/ext/nokogiri/xml_schema_c.html","files/ext/nokogiri/xml_schema_c.html","","",3],["xml_syntax_error.c","files/ext/nokogiri/xml_syntax_error_c.html","files/ext/nokogiri/xml_syntax_error_c.html","","",3],["xml_text.c","files/ext/nokogiri/xml_text_c.html","files/ext/nokogiri/xml_text_c.html","","",3],["xml_xpath_context.c","files/ext/nokogiri/xml_xpath_context_c.html","files/ext/nokogiri/xml_xpath_context_c.html","","",3],["xslt_stylesheet.c","files/ext/nokogiri/xslt_stylesheet_c.html","files/ext/nokogiri/xslt_stylesheet_c.html","","",3],["nokogiri.rb","files/lib/nokogiri_rb.html","files/lib/nokogiri_rb.html","","Modify the PATH on windows so that the external DLLs will get loaded. ",3],["css.rb","files/lib/nokogiri/css_rb.html","files/lib/nokogiri/css_rb.html","","",3],["node.rb","files/lib/nokogiri/css/node_rb.html","files/lib/nokogiri/css/node_rb.html","","",3],["parser.rb","files/lib/nokogiri/css/parser_rb.html","files/lib/nokogiri/css/parser_rb.html","","DO NOT MODIFY!!!! This file is automatically generated by Racc 1.4.6 from Racc grammer file \"\". ",3],["parser.y","files/lib/nokogiri/css/parser_y.html","files/lib/nokogiri/css/parser_y.html","","",3],["parser_extras.rb","files/lib/nokogiri/css/parser_extras_rb.html","files/lib/nokogiri/css/parser_extras_rb.html","","",3],["syntax_error.rb","files/lib/nokogiri/css/syntax_error_rb.html","files/lib/nokogiri/css/syntax_error_rb.html","","",3],["tokenizer.rb","files/lib/nokogiri/css/tokenizer_rb.html","files/lib/nokogiri/css/tokenizer_rb.html",""," ",3],["tokenizer.rex","files/lib/nokogiri/css/tokenizer_rex.html","files/lib/nokogiri/css/tokenizer_rex.html","","module Nokogiri module CSS class Tokenizer  macro   nl        \\n|\\r\\n|\\r|\\f   w         [\\s]*   nonascii",3],["xpath_visitor.rb","files/lib/nokogiri/css/xpath_visitor_rb.html","files/lib/nokogiri/css/xpath_visitor_rb.html","","",3],["slop.rb","files/lib/nokogiri/decorators/slop_rb.html","files/lib/nokogiri/decorators/slop_rb.html","","",3],["html.rb","files/lib/nokogiri/html_rb.html","files/lib/nokogiri/html_rb.html","","",3],["builder.rb","files/lib/nokogiri/html/builder_rb.html","files/lib/nokogiri/html/builder_rb.html","","",3],["document.rb","files/lib/nokogiri/html/document_rb.html","files/lib/nokogiri/html/document_rb.html","","",3],["document_fragment.rb","files/lib/nokogiri/html/document_fragment_rb.html","files/lib/nokogiri/html/document_fragment_rb.html","","",3],["element_description.rb","files/lib/nokogiri/html/element_description_rb.html","files/lib/nokogiri/html/element_description_rb.html","","",3],["element_description_defaults.rb","files/lib/nokogiri/html/element_description_defaults_rb.html","files/lib/nokogiri/html/element_description_defaults_rb.html","","",3],["entity_lookup.rb","files/lib/nokogiri/html/entity_lookup_rb.html","files/lib/nokogiri/html/entity_lookup_rb.html","","",3],["parser.rb","files/lib/nokogiri/html/sax/parser_rb.html","files/lib/nokogiri/html/sax/parser_rb.html","","",3],["parser_context.rb","files/lib/nokogiri/html/sax/parser_context_rb.html","files/lib/nokogiri/html/sax/parser_context_rb.html","","",3],["syntax_error.rb","files/lib/nokogiri/syntax_error_rb.html","files/lib/nokogiri/syntax_error_rb.html","","",3],["version.rb","files/lib/nokogiri/version_rb.html","files/lib/nokogiri/version_rb.html","","",3],["xml.rb","files/lib/nokogiri/xml_rb.html","files/lib/nokogiri/xml_rb.html","","",3],["attr.rb","files/lib/nokogiri/xml/attr_rb.html","files/lib/nokogiri/xml/attr_rb.html","","",3],["attribute_decl.rb","files/lib/nokogiri/xml/attribute_decl_rb.html","files/lib/nokogiri/xml/attribute_decl_rb.html","","",3],["builder.rb","files/lib/nokogiri/xml/builder_rb.html","files/lib/nokogiri/xml/builder_rb.html","","",3],["cdata.rb","files/lib/nokogiri/xml/cdata_rb.html","files/lib/nokogiri/xml/cdata_rb.html","","",3],["character_data.rb","files/lib/nokogiri/xml/character_data_rb.html","files/lib/nokogiri/xml/character_data_rb.html","","",3],["document.rb","files/lib/nokogiri/xml/document_rb.html","files/lib/nokogiri/xml/document_rb.html","","",3],["document_fragment.rb","files/lib/nokogiri/xml/document_fragment_rb.html","files/lib/nokogiri/xml/document_fragment_rb.html","","",3],["dtd.rb","files/lib/nokogiri/xml/dtd_rb.html","files/lib/nokogiri/xml/dtd_rb.html","","",3],["element_content.rb","files/lib/nokogiri/xml/element_content_rb.html","files/lib/nokogiri/xml/element_content_rb.html","","",3],["element_decl.rb","files/lib/nokogiri/xml/element_decl_rb.html","files/lib/nokogiri/xml/element_decl_rb.html","","",3],["entity_decl.rb","files/lib/nokogiri/xml/entity_decl_rb.html","files/lib/nokogiri/xml/entity_decl_rb.html","","",3],["namespace.rb","files/lib/nokogiri/xml/namespace_rb.html","files/lib/nokogiri/xml/namespace_rb.html","","",3],["node.rb","files/lib/nokogiri/xml/node_rb.html","files/lib/nokogiri/xml/node_rb.html","","",3],["save_options.rb","files/lib/nokogiri/xml/node/save_options_rb.html","files/lib/nokogiri/xml/node/save_options_rb.html","","",3],["node_set.rb","files/lib/nokogiri/xml/node_set_rb.html","files/lib/nokogiri/xml/node_set_rb.html","","",3],["notation.rb","files/lib/nokogiri/xml/notation_rb.html","files/lib/nokogiri/xml/notation_rb.html","","",3],["parse_options.rb","files/lib/nokogiri/xml/parse_options_rb.html","files/lib/nokogiri/xml/parse_options_rb.html","","",3],["pp.rb","files/lib/nokogiri/xml/pp_rb.html","files/lib/nokogiri/xml/pp_rb.html","","",3],["character_data.rb","files/lib/nokogiri/xml/pp/character_data_rb.html","files/lib/nokogiri/xml/pp/character_data_rb.html","","",3],["node.rb","files/lib/nokogiri/xml/pp/node_rb.html","files/lib/nokogiri/xml/pp/node_rb.html","","",3],["processing_instruction.rb","files/lib/nokogiri/xml/processing_instruction_rb.html","files/lib/nokogiri/xml/processing_instruction_rb.html","","",3],["reader.rb","files/lib/nokogiri/xml/reader_rb.html","files/lib/nokogiri/xml/reader_rb.html","","",3],["relax_ng.rb","files/lib/nokogiri/xml/relax_ng_rb.html","files/lib/nokogiri/xml/relax_ng_rb.html","","",3],["sax.rb","files/lib/nokogiri/xml/sax_rb.html","files/lib/nokogiri/xml/sax_rb.html","","",3],["document.rb","files/lib/nokogiri/xml/sax/document_rb.html","files/lib/nokogiri/xml/sax/document_rb.html","","",3],["parser.rb","files/lib/nokogiri/xml/sax/parser_rb.html","files/lib/nokogiri/xml/sax/parser_rb.html","","",3],["parser_context.rb","files/lib/nokogiri/xml/sax/parser_context_rb.html","files/lib/nokogiri/xml/sax/parser_context_rb.html","","",3],["push_parser.rb","files/lib/nokogiri/xml/sax/push_parser_rb.html","files/lib/nokogiri/xml/sax/push_parser_rb.html","","",3],["schema.rb","files/lib/nokogiri/xml/schema_rb.html","files/lib/nokogiri/xml/schema_rb.html","","",3],["syntax_error.rb","files/lib/nokogiri/xml/syntax_error_rb.html","files/lib/nokogiri/xml/syntax_error_rb.html","","",3],["text.rb","files/lib/nokogiri/xml/text_rb.html","files/lib/nokogiri/xml/text_rb.html","","",3],["xpath.rb","files/lib/nokogiri/xml/xpath_rb.html","files/lib/nokogiri/xml/xpath_rb.html","","",3],["syntax_error.rb","files/lib/nokogiri/xml/xpath/syntax_error_rb.html","files/lib/nokogiri/xml/xpath/syntax_error_rb.html","","",3],["xpath_context.rb","files/lib/nokogiri/xml/xpath_context_rb.html","files/lib/nokogiri/xml/xpath_context_rb.html","","",3],["xslt.rb","files/lib/nokogiri/xslt_rb.html","files/lib/nokogiri/xslt_rb.html","","",3],["stylesheet.rb","files/lib/nokogiri/xslt/stylesheet_rb.html","files/lib/nokogiri/xslt/stylesheet_rb.html","","",3],["nokogiri.rb","files/lib/xsd/xmlparser/nokogiri_rb.html","files/lib/xsd/xmlparser/nokogiri_rb.html","","",3]],"searchIndex":["nokogiri","css","node","parser","syntaxerror","tokenizer","scanerror","decorators","slop","encodinghandler","html","builder","document","documentfragment","elementdescription","entitydescription","entitylookup","sax","parser","parsercontext","syntaxerror","xml","attr","attributedecl","builder","cdata","characterdata","comment","dtd","document","documentfragment","element","elementcontent","elementdecl","entitydecl","entityreference","namespace","node","saveoptions","nodeset","notation","pp","characterdata","node","parseoptions","processinginstruction","reader","relaxng","sax","document","parser","attribute","parsercontext","pushparser","schema","syntaxerror","text","xpath","syntaxerror","xpathcontext","xslt","stylesheet","object","nokogiri","%()","%()","&()","+()","-()","/()","/()","<<()","<<()","<<()","<<()","<<()","<=>()","==()","==()",">()",">()","html()","nokogiri()","reader()","relaxng()","schema()","slop()","xml()","xslt()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","_next_token()","_reduce_1()","_reduce_10()","_reduce_11()","_reduce_13()","_reduce_14()","_reduce_15()","_reduce_16()","_reduce_17()","_reduce_19()","_reduce_2()","_reduce_20()","_reduce_21()","_reduce_22()","_reduce_23()","_reduce_25()","_reduce_26()","_reduce_27()","_reduce_28()","_reduce_29()","_reduce_3()","_reduce_30()","_reduce_31()","_reduce_32()","_reduce_33()","_reduce_34()","_reduce_35()","_reduce_38()","_reduce_39()","_reduce_4()","_reduce_40()","_reduce_41()","_reduce_42()","_reduce_43()","_reduce_46()","_reduce_47()","_reduce_48()","_reduce_49()","_reduce_5()","_reduce_54()","_reduce_55()","_reduce_56()","_reduce_58()","_reduce_59()","_reduce_6()","_reduce_60()","_reduce_61()","_reduce_62()","_reduce_63()","_reduce_64()","_reduce_65()","_reduce_7()","_reduce_8()","_reduce_9()","_reduce_none()","accept()","accept()","action()","add_child()","add_child()","add_class()","add_namespace()","add_namespace_definition()","add_next_sibling()","add_previous_sibling()","after()","after()","alias()","ancestors()","apply_to()","at()","at()","at_css()","at_css()","at_xpath()","at_xpath()","attr()","attr_nodes()","attribute()","attribute()","attribute()","attribute_at()","attribute_count()","attribute_nodes()","attribute_nodes()","attribute_type()","attribute_with_ns()","attributes()","attributes()","attributes()","attributes?()","base_uri()","before()","before()","blank?()","block?()","c1()","c2()","cdata()","cdata?()","cdata_block()","cdata_block()","characters()","child()","children()","children()","children()","children=()","clear_aliases!()","clear_cache()","clone()","clone()","coerce()","collect_namespaces()","column()","comment()","comment?()","compare()","content()","content()","content()","content=()","content=()","content=()","create_cdata()","create_element()","create_entity()","create_external_subset()","create_internal_subset()","create_text_node()","css()","css()","css()","css_path()","decorate()","decorate!()","decorators()","default()","default?()","default_desc()","default_namespace=()","default_sub_element()","default_sub_element()","delete()","delete()","delete()","deprecated?()","deprecated?()","deprecated_attributes()","deprecated_attributes()","depth()","description()","description()","description()","do_parse()","document()","document()","dump_html()","dup()","dup()","dup()","each()","each()","each()","each()","elem?()","element?()","element_children()","element_type()","elements()","elements()","empty?()","empty?()","empty_element?()","encode_special_chars()","encoding()","encoding=()","end_document()","end_element()","end_element()","end_element_namespace()","end_element_namespace()","entities()","entity_type()","enumeration()","error()","error()","error?()","evaluate()","external_id()","external_id()","external_subset()","fatal?()","file()","filter()","find_by_type()","finish()","first()","first_element_child()","fragment()","fragment()","fragment()","fragment()","fragment()","fragment?()","from_document()","from_document()","from_io()","from_memory()","get()","get()","get_attribute()","has_attribute?()","href()","html?()","implied_end_tag?()","implied_end_tag?()","implied_start_tag?()","implied_start_tag?()","implied_xpath_context()","implied_xpath_context()","in_context()","include?()","index()","initialize_native()","inline?()","inner_html()","inner_html()","inner_html=()","inner_text()","inner_text()","inner_xml()","insert()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect_attributes()","inspect_attributes()","inspect_attributes()","inspect_attributes()","internal_subset()","io()","key?()","keys()","keys()","lang()","last()","last_element_child()","length()","line()","line()","load_file()","local_name()","make()","matches?()","memory()","meta_content_type()","meta_encoding()","meta_encoding=()","method_missing()","name()","name()","name()","name()","name()","name()","name()","name()","name=()","namespace()","namespace=()","namespace_definitions()","namespace_scopes()","namespace_uri()","namespaced_key?()","namespaces()","namespaces()","namespaces()","native_content=()","native_write()","native_write_to()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next()","next_element()","next_sibling()","next_token()","next_token()","node_name()","node_name=()","node_type()","node_type()","none?()","notations()","occur()","on_error()","optional_attributes()","optional_attributes()","original_content()","outer_xml()","parent()","parent=()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse_file()","parse_file()","parse_io()","parse_memory()","parse_memory()","parse_stylesheet_doc()","parse_with()","path()","pointer_id()","pop()","prefix()","prefix()","prefix()","prefix()","preprocess!()","previous()","previous=()","previous_element()","previous_sibling()","push()","quote_params()","read()","read_io()","read_io()","read_memory()","read_memory()","read_memory()","read_memory()","read_only?()","register()","register_namespaces()","register_ns()","register_variable()","remove()","remove()","remove_attr()","remove_attribute()","remove_class()","remove_namespaces!()","replace()","replace_entities()","replace_entities=()","required_attributes()","required_attributes()","reverse()","root()","root=()","save_end_tag?()","save_end_tag?()","scan()","scan_file()","scan_setup()","scan_str()","search()","search()","self_closing?()","serialize()","serialize()","serialize()","serialize()","set()","set_attribute()","set_namespace()","shift()","size()","slice()","slop!()","start_document()","start_element()","start_element()","start_element_namespace()","start_element_namespace()","state()","strict()","strict?()","sub_elements()","swap()","system_id()","system_id()","text()","text()","text?()","title()","title=()","to_a()","to_a()","to_ary()","to_html()","to_html()","to_html()","to_html()","to_java()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_type()","to_xhtml()","to_xhtml()","to_xhtml()","to_xml()","to_xml()","to_xml()","to_xml()","to_xpath()","transform()","traverse()","type()","type()","type()","unlink()","unlink()","url()","valid?()","validate()","validate()","validate()","validate_document()","validate_document()","validate_file()","value()","value=()","value?()","values()","version()","warning()","warning()","warning?()","with()","without_cache()","wrap()","wrap()","write()","write_html_to()","write_to()","write_xhtml_to()","write_xml_to()","xml?()","xml_version()","xmldecl()","xpath()","xpath()","xpath_for()","xpath_for()","|()","changelog.ja.rdoc","changelog.rdoc","manifest.txt","readme.ja.rdoc","readme.rdoc","html_document.c","html_element_description.c","html_entity_lookup.c","html_sax_parser_context.c","nokogiri.c","xml_attr.c","xml_attribute_decl.c","xml_cdata.c","xml_comment.c","xml_document.c","xml_document_fragment.c","xml_dtd.c","xml_element_content.c","xml_element_decl.c","xml_encoding_handler.c","xml_entity_decl.c","xml_entity_reference.c","xml_io.c","xml_libxml2_hacks.c","xml_namespace.c","xml_node.c","xml_node_set.c","xml_processing_instruction.c","xml_reader.c","xml_relax_ng.c","xml_sax_parser.c","xml_sax_parser_context.c","xml_sax_push_parser.c","xml_schema.c","xml_syntax_error.c","xml_text.c","xml_xpath_context.c","xslt_stylesheet.c","nokogiri.rb","css.rb","node.rb","parser.rb","parser.y","parser_extras.rb","syntax_error.rb","tokenizer.rb","tokenizer.rex","xpath_visitor.rb","slop.rb","html.rb","builder.rb","document.rb","document_fragment.rb","element_description.rb","element_description_defaults.rb","entity_lookup.rb","parser.rb","parser_context.rb","syntax_error.rb","version.rb","xml.rb","attr.rb","attribute_decl.rb","builder.rb","cdata.rb","character_data.rb","document.rb","document_fragment.rb","dtd.rb","element_content.rb","element_decl.rb","entity_decl.rb","namespace.rb","node.rb","save_options.rb","node_set.rb","notation.rb","parse_options.rb","pp.rb","character_data.rb","node.rb","processing_instruction.rb","reader.rb","relax_ng.rb","sax.rb","document.rb","parser.rb","parser_context.rb","push_parser.rb","schema.rb","syntax_error.rb","text.rb","xpath.rb","syntax_error.rb","xpath_context.rb","xslt.rb","stylesheet.rb","nokogiri.rb"],"longSearchIndex":["lib/nokogiri.rb","nokogiri","nokogiri::css","nokogiri::css","nokogiri::css","nokogiri::css","nokogiri::css::tokenizer","nokogiri","nokogiri::decorators","nokogiri","nokogiri","nokogiri::html","nokogiri::html","nokogiri::html","nokogiri::html","nokogiri::html","nokogiri::html","nokogiri::html","nokogiri::html::sax","nokogiri::html::sax","nokogiri","nokogiri","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml::node","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml::pp","nokogiri::xml::pp","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml::sax","nokogiri::xml::sax","nokogiri::xml::sax::parser","nokogiri::xml::sax","nokogiri::xml::sax","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri::xml::xpath","nokogiri::xml","nokogiri","nokogiri::xslt","lib/nokogiri.rb","xsd::xmlparser","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::builder","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::sax::pushparser","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri","object","nokogiri::xml","nokogiri::xml","nokogiri::xml","nokogiri","nokogiri","nokogiri","nokogiri::css::parser","nokogiri::encodinghandler","nokogiri::html::elementdescription","nokogiri::html::entitylookup","nokogiri::xml::builder","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::css::parser","nokogiri::xml::node","nokogiri::css::tokenizer","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::parser","nokogiri::css::node","nokogiri::xml::node","nokogiri::css::tokenizer","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::encodinghandler","nokogiri::xml::node","nokogiri::xslt::stylesheet","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::reader","nokogiri::xml::reader","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::attributedecl","nokogiri::xml::node","nokogiri::xml::dtd","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::reader","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::html::elementdescription","nokogiri::xml::elementcontent","nokogiri::xml::elementcontent","nokogiri::xml::builder","nokogiri::xml::node","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::sax::document","nokogiri::xml::node","nokogiri::xml::elementcontent","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::encodinghandler","nokogiri::css::parser","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::documentfragment","nokogiri::xml::document","nokogiri::xml::sax::parsercontext","nokogiri::xml::sax::document","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::elementdecl","nokogiri::xml::entitydecl","nokogiri::xml::node","nokogiri::xml::attr","nokogiri::xml::node","nokogiri::xml::text","nokogiri::xml::document","nokogiri::xml::document","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::attributedecl","nokogiri::xml::reader","nokogiri::html::elementdescription","nokogiri::xml::node","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::encodinghandler","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::xml::reader","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::xml::node","xsd::xmlparser::nokogiri","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::dtd","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::elementdecl","nokogiri::xml::dtd","nokogiri::xml::node","nokogiri::html::elementdescription","nokogiri::xml::nodeset","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::document","nokogiri::xml::sax::document","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::dtd","nokogiri::xml::entitydecl","nokogiri::xml::attributedecl","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::syntaxerror","nokogiri::xml::xpathcontext","nokogiri::xml::dtd","nokogiri::xml::entitydecl","nokogiri::xml::node","nokogiri::xml::syntaxerror","nokogiri::xml::sax::parsercontext","nokogiri::xml::nodeset","nokogiri::css::node","nokogiri::xml::sax::pushparser","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::html","nokogiri::html::document","nokogiri::xml","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::relaxng","nokogiri::xml::schema","nokogiri::xml::reader","nokogiri::xml::reader","nokogiri::html::entitylookup","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::namespace","nokogiri::xml::node","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::sax::pushparser","nokogiri::html::elementdescription","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::reader","nokogiri::xml::builder","nokogiri::html::elementdescription","nokogiri::xml::attributedecl","nokogiri::xml::elementdecl","nokogiri::xml::entitydecl","nokogiri::xml::nodeset","nokogiri::xml::parseoptions","nokogiri::xml::attr","nokogiri::xml::document","nokogiri::xml::namespace","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::sax::parsercontext","nokogiri::xml::node","nokogiri::xml::dtd","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::sax::parsercontext","nokogiri::css::tokenizer","nokogiri::xml::reader","nokogiri","nokogiri::xml::node","nokogiri::xml::sax::parsercontext","nokogiri::html::document","nokogiri::html::document","nokogiri::html::document","nokogiri::decorators::slop","nokogiri::encodinghandler","nokogiri::html::elementdescription","nokogiri::xml::cdata","nokogiri::xml::document","nokogiri::xml::documentfragment","nokogiri::xml::elementcontent","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::sax::pushparser","nokogiri::xml::node","nokogiri::css::node","nokogiri::css::parser","nokogiri::html::document","nokogiri::html::documentfragment","nokogiri::html::sax::parsercontext","nokogiri::xml::attr","nokogiri::xml::builder","nokogiri::xml::cdata","nokogiri::xml::comment","nokogiri::xml::document","nokogiri::xml::documentfragment","nokogiri::xml::documentfragment","nokogiri::xml::entitydecl","nokogiri::xml::entityreference","nokogiri::xml::node","nokogiri::xml::node::saveoptions","nokogiri::xml::nodeset","nokogiri::xml::parseoptions","nokogiri::xml::processinginstruction","nokogiri::xml::processinginstruction","nokogiri::xml::sax::parser","nokogiri::xml::sax::parsercontext","nokogiri::xml::sax::pushparser","nokogiri::xml::schema","nokogiri::xml::text","nokogiri::xml::xpathcontext","xsd::xmlparser::nokogiri","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::css::parser","nokogiri::css::tokenizer","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::syntaxerror","nokogiri::xml::dtd","nokogiri::xml::elementcontent","nokogiri::css::parser","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::xml::entitydecl","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::node","nokogiri","nokogiri::css","nokogiri::css::parser","nokogiri::css::parser","nokogiri::html","nokogiri::html::document","nokogiri::html::documentfragment","nokogiri::xml","nokogiri::xml::document","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xml::sax::parser","nokogiri::xslt","nokogiri::html::sax::parser","nokogiri::xml::sax::parser","nokogiri::xml::sax::parser","nokogiri::html::sax::parser","nokogiri::xml::sax::parser","nokogiri::xslt::stylesheet","nokogiri::xml::sax::parsercontext","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::elementcontent","nokogiri::xml::elementdecl","nokogiri::xml::namespace","nokogiri::xml::reader","nokogiri::css::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xslt","nokogiri::xml::reader","nokogiri::html::document","nokogiri::xml::document","nokogiri::html::document","nokogiri::xml::document","nokogiri::xml::relaxng","nokogiri::xml::schema","nokogiri::xml::node","nokogiri::xslt","nokogiri::xml::xpathcontext","nokogiri::xml::xpathcontext","nokogiri::xml::xpathcontext","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::document","nokogiri::xml::node","nokogiri::xml::sax::parsercontext","nokogiri::xml::sax::parsercontext","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::xml::nodeset","nokogiri::xml::document","nokogiri::xml::document","nokogiri::html::elementdescription","nokogiri::html::elementdescription","nokogiri::css::tokenizer","nokogiri::css::tokenizer","nokogiri::css::tokenizer","nokogiri::css::tokenizer","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::reader","nokogiri::html::document","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xslt::stylesheet","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::xml::document","nokogiri::xml::sax::document","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::reader","nokogiri::xml::parseoptions","nokogiri::xml::parseoptions","nokogiri::html::elementdescription","nokogiri::xml::node","nokogiri::xml::dtd","nokogiri::xml::entitydecl","nokogiri::xml::builder","nokogiri::xml::nodeset","nokogiri::xml::node","nokogiri::html::document","nokogiri::html::document","nokogiri::css::node","nokogiri::xml::nodeset","nokogiri::xml::nodeset","nokogiri::html::builder","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::document","nokogiri::html::elementdescription","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::syntaxerror","nokogiri::xml::xpath::syntaxerror","nokogiri::css::node","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::builder","nokogiri::xml::documentfragment","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::css::node","nokogiri::xslt::stylesheet","nokogiri::xml::node","nokogiri::html::document","nokogiri::xml::elementcontent","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::xml::document","nokogiri::xml::schema","nokogiri::xml::dtd","nokogiri::xml::document","nokogiri::xml::schema","nokogiri::xml::relaxng","nokogiri::xml::schema","nokogiri::xml::schema","nokogiri::xml::reader","nokogiri::xml::attr","nokogiri::xml::reader","nokogiri::xml::node","nokogiri::xml::document","nokogiri::xml::sax::document","xsd::xmlparser::nokogiri","nokogiri::xml::syntaxerror","nokogiri::xml::builder","nokogiri::css::parser","nokogiri::xml::document","nokogiri::xml::nodeset","nokogiri::xml::sax::pushparser","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::node","nokogiri::xml::reader","nokogiri::xml::sax::document","nokogiri::xml::node","nokogiri::xml::nodeset","nokogiri::css","nokogiri::css::parser","nokogiri::xml::nodeset","files/changelog_ja_rdoc.html","files/changelog_rdoc.html","files/manifest_txt.html","files/readme_ja_rdoc.html","files/readme_rdoc.html","files/ext/nokogiri/html_document_c.html","files/ext/nokogiri/html_element_description_c.html","files/ext/nokogiri/html_entity_lookup_c.html","files/ext/nokogiri/html_sax_parser_context_c.html","files/ext/nokogiri/nokogiri_c.html","files/ext/nokogiri/xml_attr_c.html","files/ext/nokogiri/xml_attribute_decl_c.html","files/ext/nokogiri/xml_cdata_c.html","files/ext/nokogiri/xml_comment_c.html","files/ext/nokogiri/xml_document_c.html","files/ext/nokogiri/xml_document_fragment_c.html","files/ext/nokogiri/xml_dtd_c.html","files/ext/nokogiri/xml_element_content_c.html","files/ext/nokogiri/xml_element_decl_c.html","files/ext/nokogiri/xml_encoding_handler_c.html","files/ext/nokogiri/xml_entity_decl_c.html","files/ext/nokogiri/xml_entity_reference_c.html","files/ext/nokogiri/xml_io_c.html","files/ext/nokogiri/xml_libxml2_hacks_c.html","files/ext/nokogiri/xml_namespace_c.html","files/ext/nokogiri/xml_node_c.html","files/ext/nokogiri/xml_node_set_c.html","files/ext/nokogiri/xml_processing_instruction_c.html","files/ext/nokogiri/xml_reader_c.html","files/ext/nokogiri/xml_relax_ng_c.html","files/ext/nokogiri/xml_sax_parser_c.html","files/ext/nokogiri/xml_sax_parser_context_c.html","files/ext/nokogiri/xml_sax_push_parser_c.html","files/ext/nokogiri/xml_schema_c.html","files/ext/nokogiri/xml_syntax_error_c.html","files/ext/nokogiri/xml_text_c.html","files/ext/nokogiri/xml_xpath_context_c.html","files/ext/nokogiri/xslt_stylesheet_c.html","files/lib/nokogiri_rb.html","files/lib/nokogiri/css_rb.html","files/lib/nokogiri/css/node_rb.html","files/lib/nokogiri/css/parser_rb.html","files/lib/nokogiri/css/parser_y.html","files/lib/nokogiri/css/parser_extras_rb.html","files/lib/nokogiri/css/syntax_error_rb.html","files/lib/nokogiri/css/tokenizer_rb.html","files/lib/nokogiri/css/tokenizer_rex.html","files/lib/nokogiri/css/xpath_visitor_rb.html","files/lib/nokogiri/decorators/slop_rb.html","files/lib/nokogiri/html_rb.html","files/lib/nokogiri/html/builder_rb.html","files/lib/nokogiri/html/document_rb.html","files/lib/nokogiri/html/document_fragment_rb.html","files/lib/nokogiri/html/element_description_rb.html","files/lib/nokogiri/html/element_description_defaults_rb.html","files/lib/nokogiri/html/entity_lookup_rb.html","files/lib/nokogiri/html/sax/parser_rb.html","files/lib/nokogiri/html/sax/parser_context_rb.html","files/lib/nokogiri/syntax_error_rb.html","files/lib/nokogiri/version_rb.html","files/lib/nokogiri/xml_rb.html","files/lib/nokogiri/xml/attr_rb.html","files/lib/nokogiri/xml/attribute_decl_rb.html","files/lib/nokogiri/xml/builder_rb.html","files/lib/nokogiri/xml/cdata_rb.html","files/lib/nokogiri/xml/character_data_rb.html","files/lib/nokogiri/xml/document_rb.html","files/lib/nokogiri/xml/document_fragment_rb.html","files/lib/nokogiri/xml/dtd_rb.html","files/lib/nokogiri/xml/element_content_rb.html","files/lib/nokogiri/xml/element_decl_rb.html","files/lib/nokogiri/xml/entity_decl_rb.html","files/lib/nokogiri/xml/namespace_rb.html","files/lib/nokogiri/xml/node_rb.html","files/lib/nokogiri/xml/node/save_options_rb.html","files/lib/nokogiri/xml/node_set_rb.html","files/lib/nokogiri/xml/notation_rb.html","files/lib/nokogiri/xml/parse_options_rb.html","files/lib/nokogiri/xml/pp_rb.html","files/lib/nokogiri/xml/pp/character_data_rb.html","files/lib/nokogiri/xml/pp/node_rb.html","files/lib/nokogiri/xml/processing_instruction_rb.html","files/lib/nokogiri/xml/reader_rb.html","files/lib/nokogiri/xml/relax_ng_rb.html","files/lib/nokogiri/xml/sax_rb.html","files/lib/nokogiri/xml/sax/document_rb.html","files/lib/nokogiri/xml/sax/parser_rb.html","files/lib/nokogiri/xml/sax/parser_context_rb.html","files/lib/nokogiri/xml/sax/push_parser_rb.html","files/lib/nokogiri/xml/schema_rb.html","files/lib/nokogiri/xml/syntax_error_rb.html","files/lib/nokogiri/xml/text_rb.html","files/lib/nokogiri/xml/xpath_rb.html","files/lib/nokogiri/xml/xpath/syntax_error_rb.html","files/lib/nokogiri/xml/xpath_context_rb.html","files/lib/nokogiri/xslt_rb.html","files/lib/nokogiri/xslt/stylesheet_rb.html","files/lib/xsd/xmlparser/nokogiri_rb.html"]}}