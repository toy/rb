var search_data = {"index":{"longSearchIndex":["lib/net/ssh.rb","net","net::ssh","net::ssh::authentication","net::ssh::authentication::agent","net::ssh::authentication","net::ssh::authentication","net::ssh::authentication","net::ssh::authentication","net::ssh::authentication","net::ssh::authentication","net::ssh::authentication","net::ssh::authentication::methods","net::ssh::authentication::methods","net::ssh::authentication::methods","net::ssh::authentication::methods","net::ssh::authentication::methods","net::ssh::authentication","net::ssh::authentication::pageant","net::ssh::authentication::pageant","net::ssh::authentication","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh::connection","net::ssh::connection","net::ssh::connection","net::ssh::connection::session","net::ssh::connection","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh","net::ssh::promptmethods","net::ssh::promptmethods","net::ssh::promptmethods","net::ssh","net::ssh::proxy","net::ssh::proxy","net::ssh::proxy","net::ssh::proxy","net::ssh::proxy","net::ssh::proxy","net::ssh::proxy","net::ssh","net::ssh::service","net::ssh","net::ssh::test","net::ssh::test","net::ssh::test::extensions","net::ssh::test::extensions","net::ssh::test::extensions","net::ssh::test::extensions::io","net::ssh::test::extensions","net::ssh::test","net::ssh::test","net::ssh::test","net::ssh::test","net::ssh::test","net::ssh::test","net::ssh","net::ssh::transport","net::ssh::transport","net::ssh::transport","net::ssh::transport","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport::hmac","net::ssh::transport","net::ssh::transport","net::ssh::transport::kex","net::ssh::transport::kex","net::ssh::transport::kex","net::ssh::transport","net::ssh::transport","net::ssh::transport","net::ssh::transport","net::ssh::transport","net::ssh","net::ssh::verifiers","net::ssh::verifiers","net::ssh::verifiers","net::ssh","lib/net/ssh/transport/openssl.rb","openssl","openssl","openssl::pkey","openssl::pkey","openssl::pkey","openssl::pkey","lib/net/ssh/ruby_compat.rb","net::ssh::version","net::ssh::buffer","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::hostkeymismatch","net::ssh::packet","net::ssh::transport::algorithms","net::ssh::version","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::transport::algorithms","net::ssh::connection::channel","net::ssh::service::forward","net::ssh::service::forward","net::ssh::authentication::keymanager","net::ssh::knownhosts","net::ssh::knownhosts","net::ssh::authentication::keymanager","net::ssh::authentication::keymanager","net::ssh::service::forward","net::ssh::authentication::agent","net::ssh::authentication::agent","net::ssh::transport::algorithms","net::ssh::transport::algorithms","net::ssh::buffer","net::ssh::test","net::ssh::service::forward","net::ssh::authentication::methods::hostbased","net::ssh::authentication::methods::keyboardinteractive","net::ssh::authentication::methods::password","net::ssh::authentication::methods::publickey","net::ssh::authentication::session","net::ssh::authentication::methods::hostbased","net::ssh::authentication::methods::publickey","net::ssh::buffer","net::ssh::bufferedio","net::ssh::transport::packetstream","net::ssh::transport::identitycipher","net::ssh::transport::algorithms","net::ssh::authentication::methods::hostbased","net::ssh::authentication::methods::publickey","net::ssh::transport::kex::diffiehellmangroup1sha1","net::ssh::transport::kex::diffiehellmangroupexchangesha1","net::ssh::connection::session","net::ssh::service::forward","net::ssh::service::forward","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::session","net::ssh::transport::packetstream","net::ssh::transport::state","net::ssh::authentication::keymanager","net::ssh::buffer","net::ssh::transport::packetstream","net::ssh::authentication::agent","net::ssh::authentication::pageant::socket","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::transport::session","net::ssh::authentication::pageant::socket","net::ssh::connection::session","net::ssh::transport::session","net::ssh::connection::channel","net::ssh::transport::state","net::ssh::transport::state","net::ssh::transport::state","net::ssh::transport::kex::diffiehellmangroupexchangesha1","net::ssh","net::ssh::transport::session","net::ssh::transport::session","net::ssh::authentication::agent","net::ssh::authentication::agent","net::ssh::test","net::ssh::buffer","net::ssh::loggable","net::ssh::transport::state","net::ssh::transport::state","net::ssh::transport::identitycipher","net::ssh::config","net::ssh::transport::hmac::abstract","net::ssh::transport::hmac::none","net::ssh::transport::hmac::abstract","net::ssh::transport::hmac::abstract","net::ssh::connection::session","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::authentication::keymanager","net::ssh::buffer","net::ssh::transport::identitycipher","net::ssh::bufferedio","net::ssh::transport::session","net::ssh::transport::packetstream","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::buffer","net::ssh::connection::channel","net::ssh::loggable","net::ssh::test::kex","net::ssh::transport::algorithms","net::ssh::transport::kex::diffiehellmangroup1sha1","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::connection::session","net::ssh::transport::keyexpander","net::ssh::authentication::session","net::ssh::transport::packetstream","net::ssh::loggable","net::ssh::loggable","net::ssh::bufferedio","net::ssh::forwardedbufferedio","net::ssh::transport::identitycipher","net::ssh::transport::state","net::ssh::hostkeymismatch","openssl::pkey::pkey","net::ssh::authentication::keymanager","net::ssh::config","net::ssh::connection::session","net::ssh::service::forward","net::ssh::buffer","net::ssh::transport::kex::diffiehellmangroup1sha1","net::ssh::keyfactory","net::ssh::transport::cipherfactory","net::ssh::transport::hmac","net::ssh::transport::cipherfactory","net::ssh::transport::kex::diffiehellmangroup1sha1","net::ssh::transport::kex::diffiehellmangroupexchangesha1","net::ssh::connection::session","net::ssh::transport::kex::diffiehellmangroup1sha1","net::ssh::transport::kex::diffiehellmangroupexchangesha1","string","net::ssh::test::socket","net::ssh::test::script","net::ssh::test::script","net::ssh::test::script","net::ssh::test::script","net::ssh::test::script","net::ssh::test::channel","net::ssh::test::channel","net::ssh::test::channel","net::ssh::test::channel","net::ssh::connection::session","net::ssh::transport::session","net::ssh::connection::session","net::ssh::hostkeymismatch","net::ssh::transport::session","net::ssh::knownhosts","net::ssh::authentication::methods::hostbased","net::ssh::authentication::agent","net::ssh::test::extensions::packetstream","net::ssh::transport::packetstream","net::ssh::transport::state","net::ssh::loggable","net::ssh::bufferedio","net::ssh::transport::packetstream","net::ssh::transport::algorithms","net::ssh::test::channel","net::ssh::bufferedio","net::ssh::packet","net::ssh::test::packet","net::ssh::config","net::ssh::compat","net::ssh::compat","net::ssh::hostkeymismatch","net::ssh::transport::identitycipher","net::ssh::transport::identitycipher","net::ssh::transport::algorithms","net::ssh::hostkeymismatch","net::ssh::transport::hmac::abstract","net::ssh::authentication::session","net::ssh::transport::hmac","net::ssh::transport::hmac::abstract","net::ssh::transport::hmac::abstract","net::ssh::authentication::session","net::ssh::knownhosts","net::ssh::buffer","net::ssh::connection::session","net::ssh::config","net::ssh::keyfactory","net::ssh::keyfactory","net::ssh::authentication::keymanager","net::ssh::keyfactory","net::ssh::keyfactory","net::ssh::service::forward","net::ssh::test::localpacket","net::ssh::test::packet","net::ssh::test::channel","net::ssh::connection::session","net::ssh::connection::session","net::ssh::loggable","net::ssh::transport::hmac::abstract","net::ssh::transport::hmac::abstract","net::ssh::connection::session::nilchannel","net::ssh::transport::identitycipher","net::ssh::transport::state","net::ssh::transport::algorithms","net::ssh::authentication::agent","net::ssh::transport::serverversion","net::ssh::transport::algorithms","net::ssh::proxy::socks5","net::ssh::authentication::agent","net::ssh::authentication::keymanager","net::ssh::authentication::methods::abstract","net::ssh::authentication::pageant::socket","net::ssh::authentication::session","net::ssh::buffer","net::ssh::channelopenfailed","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::connection::session::nilchannel","net::ssh::knownhosts","net::ssh::packet","net::ssh::proxy::command","net::ssh::proxy::http","net::ssh::proxy::socks4","net::ssh::proxy::socks5","net::ssh::service::forward","net::ssh::test::channel","net::ssh::test::kex","net::ssh::test::localpacket","net::ssh::test::packet","net::ssh::test::script","net::ssh::test::socket","net::ssh::transport::algorithms","net::ssh::transport::hmac::abstract","net::ssh::transport::kex::diffiehellmangroup1sha1","net::ssh::transport::kex::diffiehellmangroupexchangesha256","net::ssh::transport::serverversion","net::ssh::transport::session","net::ssh::transport::state","net::ssh::version","net::ssh::test::script","net::ssh::authentication::session","net::ssh::transport::session","net::ssh::transport::packetstream","net::ssh::transport::algorithms","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::connection::session","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::authentication::pageant::socket","net::ssh::proxy::command","net::ssh::proxy::http","net::ssh::proxy::socks4","net::ssh::proxy::socks5","net::ssh::test::socket","net::ssh::connection::session","net::ssh::test::script","net::ssh::bufferedio","net::ssh::proxy::http","net::ssh::transport::algorithms","net::ssh::config","net::ssh::transport::session","net::ssh::transport::packetstream","net::ssh::transport::algorithms","net::ssh::bufferedio","net::ssh::transport::session","net::ssh::transport::packetstream","net::ssh::hostkeymismatch","net::ssh::connection::session","net::ssh::service::forward","net::ssh::authentication::keymanager","net::ssh::authentication::keymanager","net::ssh::transport::algorithms","net::ssh::connection::session","net::ssh::transport::algorithms","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::test::localpacket","net::ssh::test::remotepacket","net::ssh::test::script","net::ssh::verifiers::strict","net::ssh::authentication::keymanager","net::ssh::promptmethods::clear","net::ssh::promptmethods::highline","net::ssh::promptmethods::termios","net::ssh::transport::session","net::ssh::authentication::pageant::socket","net::ssh::buffer","net::ssh::buffer","net::ssh::bufferedio","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::authentication::agent","net::ssh::buffer","net::ssh::buffer","net::ssh::test::socket","net::ssh::test::socket","net::ssh::packet","net::ssh::transport::algorithms","net::ssh::transport::session","net::ssh::transport::session","net::ssh::buffer","net::ssh::hostkeymismatch","net::ssh::service::forward","net::ssh::test::packet","net::ssh::test::remotepacket","net::ssh::test::channel","net::ssh::service::forward","net::ssh::connection::session","net::ssh::connection::channel","net::ssh::connection::session","net::ssh::transport::identitycipher","net::ssh::buffer","net::ssh::transport::state","net::ssh::knownhosts","net::ssh::knownhosts","net::ssh::test::extensions::bufferedio","net::ssh::test::extensions::io::classmethods","net::ssh::transport::session","net::ssh::authentication::pageant::socket","net::ssh::authentication::agent","net::ssh::connection::channel","net::ssh::connection::channel","net::ssh::test::extensions::channel","net::ssh::connection::session","net::ssh::transport::algorithms","net::ssh::authentication::methods::abstract","net::ssh::connection::session","net::ssh::transport::session","net::ssh::authentication::agent","net::ssh::transport::packetstream","net::ssh::bufferedio","net::ssh::forwardedbufferedio","net::ssh::authentication::pageant::socket","net::ssh::authentication::methods::publickey","net::ssh::test::script","net::ssh::test::script","net::ssh::test::script","net::ssh::test::script","net::ssh::test::script","net::ssh::test::channel","net::ssh::test::channel","net::ssh::test::channel","net::ssh::test::channel","net::ssh::test::channel","net::ssh::transport::session","net::ssh::authentication::methods::abstract","net::ssh::transport::state","net::ssh::promptmethods::termios","net::ssh::connection::session","net::ssh::transport::session","net::ssh::authentication::agent","net::ssh::authentication::keymanager","net::ssh::test","openssl::pkey::dsa","openssl::pkey::rsa","openssl::pkey::dsa","openssl::pkey::rsa","openssl::pkey::dsa","openssl::pkey::rsa","net::ssh","net::ssh::connection::session","net::ssh::test","net::ssh::connection::channel","net::ssh::transport::cipherfactory","net::ssh::test::extensions::packetstream","net::ssh::test::extensions::packetstream","net::ssh::test::extensions::packetstream","openssl::pkey::dsa","openssl::pkey::rsa","net::ssh::version","net::ssh::buffer","net::ssh::test::remotepacket","net::ssh::version","openssl::bn","net::ssh::config","net::ssh::test","net::ssh::verifiers::lenient","net::ssh::test::packet","net::ssh::transport::identitycipher","net::ssh::transport::state","net::ssh::connection::channel","net::ssh::transport::state","net::ssh::authentication::keymanager","net::ssh::authentication::keymanager","net::ssh::authentication::methods::abstract","openssl::pkey::dh","net::ssh::verifiers::lenient","net::ssh::verifiers::null","net::ssh::verifiers::strict","net::ssh::connection::channel","net::ssh::transport::session","net::ssh::bufferedio","net::ssh::buffer","net::ssh::test::socket","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","net::ssh::buffer","files/changelog_rdoc.html","files/readme_rdoc.html","files/thanks_rdoc.html","files/lib/net/ssh_rb.html","files/lib/net/ssh/authentication/agent_rb.html","files/lib/net/ssh/authentication/constants_rb.html","files/lib/net/ssh/authentication/key_manager_rb.html","files/lib/net/ssh/authentication/methods/abstract_rb.html","files/lib/net/ssh/authentication/methods/hostbased_rb.html","files/lib/net/ssh/authentication/methods/keyboard_interactive_rb.html","files/lib/net/ssh/authentication/methods/password_rb.html","files/lib/net/ssh/authentication/methods/publickey_rb.html","files/lib/net/ssh/authentication/pageant_rb.html","files/lib/net/ssh/authentication/session_rb.html","files/lib/net/ssh/buffer_rb.html","files/lib/net/ssh/buffered_io_rb.html","files/lib/net/ssh/config_rb.html","files/lib/net/ssh/connection/channel_rb.html","files/lib/net/ssh/connection/constants_rb.html","files/lib/net/ssh/connection/session_rb.html","files/lib/net/ssh/connection/term_rb.html","files/lib/net/ssh/errors_rb.html","files/lib/net/ssh/key_factory_rb.html","files/lib/net/ssh/known_hosts_rb.html","files/lib/net/ssh/loggable_rb.html","files/lib/net/ssh/packet_rb.html","files/lib/net/ssh/prompt_rb.html","files/lib/net/ssh/proxy/command_rb.html","files/lib/net/ssh/proxy/errors_rb.html","files/lib/net/ssh/proxy/http_rb.html","files/lib/net/ssh/proxy/socks4_rb.html","files/lib/net/ssh/proxy/socks5_rb.html","files/lib/net/ssh/ruby_compat_rb.html","files/lib/net/ssh/service/forward_rb.html","files/lib/net/ssh/test_rb.html","files/lib/net/ssh/test/channel_rb.html","files/lib/net/ssh/test/extensions_rb.html","files/lib/net/ssh/test/kex_rb.html","files/lib/net/ssh/test/local_packet_rb.html","files/lib/net/ssh/test/packet_rb.html","files/lib/net/ssh/test/remote_packet_rb.html","files/lib/net/ssh/test/script_rb.html","files/lib/net/ssh/test/socket_rb.html","files/lib/net/ssh/transport/algorithms_rb.html","files/lib/net/ssh/transport/cipher_factory_rb.html","files/lib/net/ssh/transport/constants_rb.html","files/lib/net/ssh/transport/hmac_rb.html","files/lib/net/ssh/transport/hmac/abstract_rb.html","files/lib/net/ssh/transport/hmac/md5_rb.html","files/lib/net/ssh/transport/hmac/md5_96_rb.html","files/lib/net/ssh/transport/hmac/none_rb.html","files/lib/net/ssh/transport/hmac/sha1_rb.html","files/lib/net/ssh/transport/hmac/sha1_96_rb.html","files/lib/net/ssh/transport/hmac/sha2_256_rb.html","files/lib/net/ssh/transport/hmac/sha2_256_96_rb.html","files/lib/net/ssh/transport/hmac/sha2_512_rb.html","files/lib/net/ssh/transport/hmac/sha2_512_96_rb.html","files/lib/net/ssh/transport/identity_cipher_rb.html","files/lib/net/ssh/transport/kex_rb.html","files/lib/net/ssh/transport/kex/diffie_hellman_group1_sha1_rb.html","files/lib/net/ssh/transport/kex/diffie_hellman_group_exchange_sha1_rb.html","files/lib/net/ssh/transport/kex/diffie_hellman_group_exchange_sha256_rb.html","files/lib/net/ssh/transport/key_expander_rb.html","files/lib/net/ssh/transport/openssl_rb.html","files/lib/net/ssh/transport/packet_stream_rb.html","files/lib/net/ssh/transport/server_version_rb.html","files/lib/net/ssh/transport/session_rb.html","files/lib/net/ssh/transport/state_rb.html","files/lib/net/ssh/verifiers/lenient_rb.html","files/lib/net/ssh/verifiers/null_rb.html","files/lib/net/ssh/verifiers/strict_rb.html","files/lib/net/ssh/version_rb.html"],"info":[["Net","lib/net/ssh/authentication/agent.rb","classes/Net.html"," < ","",1],["SSH","Net","classes/Net/SSH.html"," < ","Net::SSH is a library for interacting, programmatically, with remote processes via the SSH2 protocol.",1],["Authentication","Net::SSH","classes/Net/SSH/Authentication.html"," < ","",1],["Agent","Net::SSH::Authentication","classes/Net/SSH/Authentication/Agent.html"," < Object","This class implements a simple client for the ssh-agent protocol. It does not implement any specific",1],["Comment","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent/Comment.html"," < ","A simple module for extending keys, to allow comments to be specified for them. ",1],["AgentError","Net::SSH::Authentication","classes/Net/SSH/Authentication/AgentError.html"," < Net::SSH::Exception","A trivial exception class for representing agent-specific errors. ",1],["AgentNotAvailable","Net::SSH::Authentication","classes/Net/SSH/Authentication/AgentNotAvailable.html"," < AgentError","An exception for indicating that the SSH agent is not available. ",1],["Constants","Net::SSH::Authentication","classes/Net/SSH/Authentication/Constants.html"," < ","Describes the constants used by the Net::SSH::Authentication components of the Net::SSH library. Individual",1],["DisallowedMethod","Net::SSH::Authentication","classes/Net/SSH/Authentication/DisallowedMethod.html"," < Net::SSH::Exception","Raised if the current authentication method is not allowed ",1],["KeyManager","Net::SSH::Authentication","classes/Net/SSH/Authentication/KeyManager.html"," < Object","This class encapsulates all operations done by clients on a user's private keys. In practice, the client",1],["KeyManagerError","Net::SSH::Authentication","classes/Net/SSH/Authentication/KeyManagerError.html"," < Net::SSH::Exception","A trivial exception class used to report errors in the key manager. ",1],["Methods","Net::SSH::Authentication","classes/Net/SSH/Authentication/Methods.html"," < ","",1],["Abstract","Net::SSH::Authentication::Methods","classes/Net/SSH/Authentication/Methods/Abstract.html"," < Object","The base class of all user authentication methods. It provides a few bits of common functionality. ",1],["Hostbased","Net::SSH::Authentication::Methods","classes/Net/SSH/Authentication/Methods/Hostbased.html"," < Abstract","Implements the host-based SSH authentication method. ",1],["KeyboardInteractive","Net::SSH::Authentication::Methods","classes/Net/SSH/Authentication/Methods/KeyboardInteractive.html"," < Abstract","Implements the \"keyboard-interactive\" SSH authentication method. ",1],["Password","Net::SSH::Authentication::Methods","classes/Net/SSH/Authentication/Methods/Password.html"," < Abstract","Implements the \"password\" SSH authentication method. ",1],["Publickey","Net::SSH::Authentication::Methods","classes/Net/SSH/Authentication/Methods/Publickey.html"," < Abstract","Implements the \"publickey\" SSH authentication method. ",1],["Pageant","Net::SSH::Authentication","classes/Net/SSH/Authentication/Pageant.html"," < ","This module encapsulates the implementation of a socket factory that uses the PuTTY \"pageant\" utility",1],["Socket","Net::SSH::Authentication::Pageant","classes/Net/SSH/Authentication/Pageant/Socket.html"," < Object","This is the pseudo-socket implementation that mimics the interface of a socket, translating each request",1],["Win","Net::SSH::Authentication::Pageant","classes/Net/SSH/Authentication/Pageant/Win.html"," < ","The definition of the Windows methods and data structures used in communicating with the pageant process.",1],["Session","Net::SSH::Authentication","classes/Net/SSH/Authentication/Session.html"," < Object","Represents an authentication session. It manages the authentication of a user over an established connection",1],["AuthenticationFailed","Net::SSH","classes/Net/SSH/AuthenticationFailed.html"," < Exception","This exception is raised when authentication fails (whether it be public key authentication, password",1],["Buffer","Net::SSH","classes/Net/SSH/Buffer.html"," < Object","Net::SSH::Buffer is a flexible class for building and parsing binary data packets. It provides a stream-like",1],["BufferedIo","Net::SSH","classes/Net/SSH/BufferedIo.html"," < ","This module is used to extend sockets and other IO objects, to allow them to be buffered for both read",1],["ChannelOpenFailed","Net::SSH","classes/Net/SSH/ChannelOpenFailed.html"," < Exception","This is exception is primarily used internally, but if you have a channel open handler (see Net::SSH::Connection::Session#on_open_channel)",1],["ChannelRequestFailed","Net::SSH","classes/Net/SSH/ChannelRequestFailed.html"," < Exception","This exception is primarily used internally, but if you have a channel request handler (see Net::SSH::Connection::Channel#on_request)",1],["Compat","Net::SSH","classes/Net/SSH/Compat.html"," < Object","This class contains miscellaneous patches and workarounds for different ruby implementations. ",1],["Config","Net::SSH","classes/Net/SSH/Config.html"," < Object","The Net::SSH::Config class is used to parse OpenSSH configuration files, and translates that syntax into",1],["Connection","Net::SSH","classes/Net/SSH/Connection.html"," < ","",1],["Channel","Net::SSH::Connection","classes/Net/SSH/Connection/Channel.html"," < Object","The channel abstraction. Multiple \"channels\" can be multiplexed onto a single SSH channel, each operating",1],["Constants","Net::SSH::Connection","classes/Net/SSH/Connection/Constants.html"," < ","Definitions of constants that are specific to the connection layer of the SSH protocol. ",1],["Session","Net::SSH::Connection","classes/Net/SSH/Connection/Session.html"," < Object","A session class representing the connection service running on top of the SSH transport layer. It manages",1],["NilChannel","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session/NilChannel.html"," < Object","",1],["Term","Net::SSH::Connection","classes/Net/SSH/Connection/Term.html"," < ","These constants are used when requesting a pseudo-terminal (via Net::SSH::Connection::Channel#request_pty).",1],["ConnectionTimeout","Net::SSH","classes/Net/SSH/ConnectionTimeout.html"," < Exception","This exception is raised when a connection attempt times out. ",1],["Disconnect","Net::SSH","classes/Net/SSH/Disconnect.html"," < Exception","This exception is raised when the remote host has disconnected unexpectedly. ",1],["Exception","Net::SSH","classes/Net/SSH/Exception.html"," < ::RuntimeError","A general exception class, to act as the ancestor of all other Net::SSH exception classes. ",1],["ForwardedBufferedIo","Net::SSH","classes/Net/SSH/ForwardedBufferedIo.html"," < ","Fixes for two issues by Miklós Fazekas: * if client closes a forwarded connection, but the server is",1],["HostKeyMismatch","Net::SSH","classes/Net/SSH/HostKeyMismatch.html"," < Exception","Raised when the cached key for a particular host does not match the key given by the host, which can",1],["KeyFactory","Net::SSH","classes/Net/SSH/KeyFactory.html"," < Object","A factory class for returning new Key classes. It is used for obtaining OpenSSL key instances via their",1],["KnownHosts","Net::SSH","classes/Net/SSH/KnownHosts.html"," < Object","Searches an OpenSSH-style known-host file for a given host, and returns all matching keys. This is used",1],["Loggable","Net::SSH","classes/Net/SSH/Loggable.html"," < ","A simple module to make logging easier to deal with. It assumes that the logger instance (if not nil)",1],["Packet","Net::SSH","classes/Net/SSH/Packet.html"," < Buffer","A specialization of Buffer that knows the format of certain common packet types. It auto-parses those",1],["PromptMethods","Net::SSH","classes/Net/SSH/PromptMethods.html"," < ","A basic prompt module that can be mixed into other objects. If HighLine is installed, it will be used",1],["Clear","Net::SSH::PromptMethods","classes/Net/SSH/PromptMethods/Clear.html"," < ","Defines the prompt method to use when neither Highline nor Termios are installed. ",1],["Highline","Net::SSH::PromptMethods","classes/Net/SSH/PromptMethods/Highline.html"," < ","Defines the prompt method to use if the Highline library is installed. ",1],["Termios","Net::SSH::PromptMethods","classes/Net/SSH/PromptMethods/Termios.html"," < ","Defines the prompt method to use if the Termios library is installed. ",1],["Proxy","Net::SSH","classes/Net/SSH/Proxy.html"," < ","",1],["Command","Net::SSH::Proxy","classes/Net/SSH/Proxy/Command.html"," < Object","An implementation of a command proxy. To use it, instantiate it, then pass the instantiated object via",1],["ConnectError","Net::SSH::Proxy","classes/Net/SSH/Proxy/ConnectError.html"," < Error","Used for reporting proxy connection errors. ",1],["Error","Net::SSH::Proxy","classes/Net/SSH/Proxy/Error.html"," < Net::SSH::Exception","A general exception class for all Proxy errors. ",1],["HTTP","Net::SSH::Proxy","classes/Net/SSH/Proxy/HTTP.html"," < Object","An implementation of an HTTP proxy. To use it, instantiate it, then pass the instantiated object via",1],["SOCKS4","Net::SSH::Proxy","classes/Net/SSH/Proxy/SOCKS4.html"," < Object","An implementation of a SOCKS4 proxy. To use it, instantiate it, then pass the instantiated object via",1],["SOCKS5","Net::SSH::Proxy","classes/Net/SSH/Proxy/SOCKS5.html"," < Object","An implementation of a SOCKS5 proxy. To use it, instantiate it, then pass the instantiated object via",1],["UnauthorizedError","Net::SSH::Proxy","classes/Net/SSH/Proxy/UnauthorizedError.html"," < Error","Used when the server doesn't recognize the user's credentials. ",1],["Service","Net::SSH","classes/Net/SSH/Service.html"," < ","",1],["Forward","Net::SSH::Service","classes/Net/SSH/Service/Forward.html"," < Object","This class implements various port forwarding services for use by Net::SSH clients. The Forward class",1],["Test","Net::SSH","classes/Net/SSH/Test.html"," < ","This module may be used in unit tests, for when you want to test that your SSH state machines are really",1],["Channel","Net::SSH::Test","classes/Net/SSH/Test/Channel.html"," < Object","A mock channel, used for scripting actions in tests. It wraps a Net::SSH::Test::Script instance, and",1],["Extensions","Net::SSH::Test","classes/Net/SSH/Test/Extensions.html"," < ","A collection of modules used to extend/override the default behavior of Net::SSH internals for ease of",1],["BufferedIo","Net::SSH::Test::Extensions","classes/Net/SSH/Test/Extensions/BufferedIo.html"," < ","An extension to Net::SSH::BufferedIo (assumes that the underlying IO is actually a StringIO). Facilitates",1],["Channel","Net::SSH::Test::Extensions","classes/Net/SSH/Test/Extensions/Channel.html"," < ","An extension to Net::SSH::Connection::Channel. Facilitates unit testing. ",1],["IO","Net::SSH::Test::Extensions","classes/Net/SSH/Test/Extensions/IO.html"," < ","An extension to the built-in ::IO class. Simply redefines IO.select so that it can be scripted in Net::SSH",1],["ClassMethods","Net::SSH::Test::Extensions::IO","classes/Net/SSH/Test/Extensions/IO/ClassMethods.html"," < ","",1],["PacketStream","Net::SSH::Test::Extensions","classes/Net/SSH/Test/Extensions/PacketStream.html"," < ","An extension to Net::SSH::Transport::PacketStream (assumes that the underlying IO is actually a StringIO).",1],["Kex","Net::SSH::Test","classes/Net/SSH/Test/Kex.html"," < Object","An implementation of a key-exchange strategy specifically for unit tests. (This strategy would never",1],["LocalPacket","Net::SSH::Test","classes/Net/SSH/Test/LocalPacket.html"," < Packet","This is a specialization of Net::SSH::Test::Packet for representing mock packets that are sent from the",1],["Packet","Net::SSH::Test","classes/Net/SSH/Test/Packet.html"," < Object","This is an abstract class, not to be instantiated directly, subclassed by Net::SSH::Test::LocalPacket",1],["RemotePacket","Net::SSH::Test","classes/Net/SSH/Test/RemotePacket.html"," < Packet","This is a specialization of Net::SSH::Test::Packet for representing mock packets that are received by",1],["Script","Net::SSH::Test","classes/Net/SSH/Test/Script.html"," < Object","Represents a sequence of scripted events that identify the behavior that a test expects. Methods named",1],["Socket","Net::SSH::Test","classes/Net/SSH/Test/Socket.html"," < StringIO","A mock socket implementation for use in testing. It implements the minimum necessary interface for interacting",1],["Transport","Net::SSH","classes/Net/SSH/Transport.html"," < ","",1],["Algorithms","Net::SSH::Transport","classes/Net/SSH/Transport/Algorithms.html"," < Object","Implements the higher-level logic behind an SSH key-exchange. It handles both the initial exchange, as",1],["CipherFactory","Net::SSH::Transport","classes/Net/SSH/Transport/CipherFactory.html"," < Object","Implements a factory of OpenSSL cipher algorithms. ",1],["Constants","Net::SSH::Transport","classes/Net/SSH/Transport/Constants.html"," < ","",1],["HMAC","Net::SSH::Transport","classes/Net/SSH/Transport/HMAC.html"," < ","Implements a simple factory interface for fetching hmac implementations, or for finding the key lengths",1],["Abstract","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/Abstract.html"," < Object","The base class of all OpenSSL-based HMAC algorithm wrappers. ",1],["MD5","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/MD5.html"," < Abstract","The MD5 HMAC algorithm. ",1],["MD5_96","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/MD5_96.html"," < MD5","The MD5-96 HMAC algorithm. This returns only the first 12 bytes of the digest. ",1],["None","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/None.html"," < Abstract","The \"none\" algorithm. This has a key and mac length of 0. ",1],["SHA1","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/SHA1.html"," < Abstract","The SHA1 HMAC algorithm. This has a mac and key length of 20, and uses the SHA1 digest algorithm. ",1],["SHA1_96","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/SHA1_96.html"," < SHA1","The SHA1-96 HMAC algorithm. This returns only the first 12 bytes of the digest. ",1],["SHA2_256","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/SHA2_256.html"," < Abstract","The SHA-256 HMAC algorithm. This has a mac and key length of 32, and uses the SHA-256 digest algorithm.",1],["SHA2_256_96","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/SHA2_256_96.html"," < SHA2_256","The SHA256-96 HMAC algorithm. This returns only the first 12 bytes of the digest. ",1],["SHA2_512","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/SHA2_512.html"," < Abstract","The SHA-512 HMAC algorithm. This has a mac and key length of 64, and uses the SHA-512 digest algorithm.",1],["SHA2_512_96","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC/SHA2_512_96.html"," < SHA2_512","The SHA2-512-96 HMAC algorithm. This returns only the first 12 bytes of the digest. ",1],["IdentityCipher","Net::SSH::Transport","classes/Net/SSH/Transport/IdentityCipher.html"," < Object","A cipher that does nothing but pass the data through, unchanged. This keeps things in the code nice and",1],["Kex","Net::SSH::Transport","classes/Net/SSH/Transport/Kex.html"," < ","",1],["DiffieHellmanGroup1SHA1","Net::SSH::Transport::Kex","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html"," < Object","A key-exchange service implementing the \"diffie-hellman-group1-sha1\" key-exchange algorithm. ",1],["DiffieHellmanGroupExchangeSHA1","Net::SSH::Transport::Kex","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA1.html"," < DiffieHellmanGroup1SHA1","A key-exchange service implementing the \"diffie-hellman-group-exchange-sha1\" key-exchange algorithm.",1],["DiffieHellmanGroupExchangeSHA256","Net::SSH::Transport::Kex","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA256.html"," < DiffieHellmanGroupExchangeSHA1","A key-exchange service implementing the \"diffie-hellman-group-exchange-sha256\" key-exchange algorithm.",1],["KeyExpander","Net::SSH::Transport","classes/Net/SSH/Transport/KeyExpander.html"," < ","",1],["PacketStream","Net::SSH::Transport","classes/Net/SSH/Transport/PacketStream.html"," < ","A module that builds additional functionality onto the Net::SSH::BufferedIo module. It adds SSH encryption,",1],["ServerVersion","Net::SSH::Transport","classes/Net/SSH/Transport/ServerVersion.html"," < Object","Negotiates the SSH protocol version and trades information about server and client. This is never used",1],["Session","Net::SSH::Transport","classes/Net/SSH/Transport/Session.html"," < Object","The transport layer represents the lowest level of the SSH protocol, and implements basic message exchanging",1],["State","Net::SSH::Transport","classes/Net/SSH/Transport/State.html"," < Object","Encapsulates state information about one end of an SSH connection. Such state includes the packet sequence",1],["Verifiers","Net::SSH","classes/Net/SSH/Verifiers.html"," < ","",1],["Lenient","Net::SSH::Verifiers","classes/Net/SSH/Verifiers/Lenient.html"," < Strict","Basically the same as the Strict verifier, but does not try to actually verify a connection if the server",1],["Null","Net::SSH::Verifiers","classes/Net/SSH/Verifiers/Null.html"," < Object","The Null host key verifier simply allows every key it sees, without bothering to verify. This is simple,",1],["Strict","Net::SSH::Verifiers","classes/Net/SSH/Verifiers/Strict.html"," < Object","Does a strict host verification, looking the server up in the known host files to see if a key has already",1],["Version","Net::SSH","classes/Net/SSH/Version.html"," < Object","A class for describing the current version of a library. The version consists of three parts: the +major+",1],["OpenSSL","lib/net/ssh/transport/openssl.rb","classes/OpenSSL.html"," < ","",1],["BN","OpenSSL","classes/OpenSSL/BN.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["PKey","OpenSSL","classes/OpenSSL/PKey.html"," < ","",1],["DH","OpenSSL::PKey","classes/OpenSSL/PKey/DH.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["DSA","OpenSSL::PKey","classes/OpenSSL/PKey/DSA.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["PKey","OpenSSL::PKey","classes/OpenSSL/PKey/PKey.html"," < Object","",1],["RSA","OpenSSL::PKey","classes/OpenSSL/PKey/RSA.html"," < Object","This class is originally defined in the OpenSSL module. As needed, methods have been added to it by the",1],["String","lib/net/ssh/ruby_compat.rb","classes/String.html"," < Object","",1],["<=>","Net::SSH::Version","classes/Net/SSH/Version.html#M000429","(version)","Compare this version to the given +version+ object. ",2],["==","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000058","(buffer)","Compares the contents of the two buffers, returning +true+ only if they are identical in size and content.",2],["[]","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000106","(name)","A shortcut for accessing properties of the channel (see #properties). ",2],["[]","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000145","(key)","Retrieves a custom property from this instance. This can be used to store additional state in applications",2],["[]","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000163","(key)","An accessor for getting at the data that was used to look up the host (see also #fingerprint, #host,",2],["[]","Net::SSH::Packet","classes/Net/SSH/Packet.html#M000215","(name)","Access one of the auto-parsed fields by name. Raises an error if no element by the given name exists.",2],["[]","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000310","(key)","A convenience method for accessing the list of preferred types for a specific algorithm (see #algorithms).",2],["[]","Net::SSH::Version","classes/Net/SSH/Version.html#M000426","(major, minor, tiny)","A convenience method for instantiating a new Version instance with the given +major+, +minor+, and +tiny+",2],["[]=","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000107","(name, value)","A shortcut for setting properties of the channel (see #properties). ",2],["[]=","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000146","(key, value)","Sets a custom property for this instance. ",2],["accept_kexinit","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000309","(packet)","Called by the transport layer when a KEXINIT packet is recieved, indicating that the server wants to",2],["active?","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000115","()","Returns true if the channel exists in the channel list of the session, and false otherwise. This can",2],["active_locals","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000235","()","Returns a list of all active locally forwarded ports. The returned value is an array of arrays, where",2],["active_remotes","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000244","()","Returns all active forwarded remote ports. The returned value is an array of two-element tuples, where",2],["add","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000018","(key_file)","Add the given key_file to the list of key files that will be used. ",2],["add","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000204","(host, key, options={})","Looks in all user known host files (see KnownHosts.hostfiles) and tries to add an entry for the given",2],["add","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000208","(host, key)","Tries to append an entry to the current source file for the given host and key. If it is unable to (because",2],["add_key_data","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000019","(key_data_)","Add the given key_file to the list of keys that will be used. ",2],["agent","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000025","()","Returns an Agent instance to use for communicating with an SSH agent process. Returns nil if use of an",2],["agent","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000245","(channel)","Enables SSH agent forwarding on the given channel. The forwarded agent will remain active even after",2],["agent_failed","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000011","(type)","Returns +true+ if the parameter indicates a \"failure\" response from the agent, and +false+ otherwise.",2],["agent_socket_factory","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000007","()","Returns the agent socket factory to use. ",2],["allow?","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000312","(packet)","Returns true if no exchange is pending, and otherwise returns true or false depending on whether the",2],["allowed_packet?","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000306","(packet)","Returns true if the given packet can be processed during a key-exchange. ",2],["append","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000064","(text)","Appends the given text to the end of the buffer. Does not alter the read position. Returns the buffer",2],["assert_scripted","Net::SSH::Test","classes/Net/SSH/Test.html#M000305","()","First asserts that a story has been described (see #story). Then yields, and then asserts that all items",2],["auth_agent_channel","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000256","(session, channel, packet)","The callback used when an auth-agent channel is requested by the server. ",2],["authenticate","Net::SSH::Authentication::Methods::Hostbased","classes/Net/SSH/Authentication/Methods/Hostbased.html#M000027","(next_service, username, password=nil)","Attempts to perform host-based authorization of the user by trying all known keys. ",2],["authenticate","Net::SSH::Authentication::Methods::KeyboardInteractive","classes/Net/SSH/Authentication/Methods/KeyboardInteractive.html#M000034","(next_service, username, password=nil)","Attempt to authenticate the given user for the given service. ",2],["authenticate","Net::SSH::Authentication::Methods::Password","classes/Net/SSH/Authentication/Methods/Password.html#M000035","(next_service, username, password=nil)","Attempt to authenticate the given user for the given service. If the password parameter is nil, this",2],["authenticate","Net::SSH::Authentication::Methods::Publickey","classes/Net/SSH/Authentication/Methods/Publickey.html#M000036","(next_service, username, password=nil)","Attempts to perform public-key authentication for the given username, trying each identity known to the",2],["authenticate","Net::SSH::Authentication::Session","classes/Net/SSH/Authentication/Session.html#M000048","(next_service, username, password=nil)","Attempts to authenticate the given user, in preparation for the next service request. Returns true if",2],["authenticate_with","Net::SSH::Authentication::Methods::Hostbased","classes/Net/SSH/Authentication/Methods/Hostbased.html#M000029","(identity, next_service, username, key_manager)","Attempts to perform host-based authentication of the user, using the given host identity (key). ",2],["authenticate_with","Net::SSH::Authentication::Methods::Publickey","classes/Net/SSH/Authentication/Methods/Publickey.html#M000039","(identity, next_service, username)","Attempts to perform public-key authentication for the given username, with the given identity (public",2],["available","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000056","()","Returns the number of bytes available to be read (e.g., how many bytes remain between the current position",2],["available","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000075","()","Returns the number of bytes available to be read from the input buffer. (See #read_available.) ",2],["available_for_read?","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000379","()","Returns true if the IO is available for reading, and false otherwise. ",2],["block_size","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000339","()","A default block size of 8 is required by the SSH2 protocol. ",2],["build_client_algorithm_packet","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000321","()","Given the #algorithms map of preferred algorithm types, this constructs a KEXINIT packet to send to the",2],["build_request","Net::SSH::Authentication::Methods::Hostbased","classes/Net/SSH/Authentication/Methods/Hostbased.html#M000032","(identity, next_service, username, hostname, client_username)","Build the \"core\" hostbased request string. ",2],["build_request","Net::SSH::Authentication::Methods::Publickey","classes/Net/SSH/Authentication/Methods/Publickey.html#M000037","(pub_key, username, next_service, has_sig)","Builds a packet that contains the request formatted for sending a public-key request to the server. ",2],["build_signature_buffer","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html#M000356","(result)","Build the signature buffer to use when verifying a signature from the server. ",2],["build_signature_buffer","Net::SSH::Transport::Kex::DiffieHellmanGroupExchangeSHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA1.html#M000353","(result)","Build the signature buffer to use when verifying a signature from the server. ",2],["busy?","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000151","(include_invisible=false)","Returns +true+ if there are any channels currently active on this session. By default, this will not",2],["cancel_local","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000234","(port, bind_address=\"127.0.0.1\")","Terminates an active local forwarded port. If no such forwarded port exists, this will raise an exception.",2],["cancel_remote","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000242","(port, host=\"127.0.0.1\")","Requests that a remote forwarded port be cancelled. The remote forwarded port on the remote host, bound",2],["channel_close","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000192","(packet)","",2],["channel_data","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000188","(packet)","",2],["channel_eof","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000190","(packet)","",2],["channel_extended_data","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000189","(packet)","",2],["channel_failure","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000194","(packet)","",2],["channel_open","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000180","(packet)","Called when the server wants to open a channel. If no registered channel handler exists for the given",2],["channel_open_confirmation","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000181","(packet)","",2],["channel_open_failure","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000182","(packet)","",2],["channel_request","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000186","(packet)","",2],["channel_success","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000193","(packet)","",2],["channel_window_adjust","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000185","(packet)","",2],["cleanup","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000385","()","Performs any pending cleanup necessary on the IO and its associated state objects. (See State#cleanup).",2],["cleanup","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000415","()","Closes any the compressor and/or decompressor objects that have been instantiated. ",2],["clear!","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000017","()","Clear all knowledge of any loaded user keys. This also clears the list of default identity files that",2],["clear!","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000062","()","Resets the buffer, making it empty. Also, resets the read position to 0. ",2],["client_name","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000377","()","The name of the client (local) end of the socket, as reported by the socket. ",2],["close","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000005","()","Closes this socket. This agent reference is no longer able to query the agent. ",2],["close","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000044","()","Conceptually close the socket. This doesn't really do anthing significant, but merely complies with the",2],["close","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000118","()","Requests that the channel be closed. If the channel is already closing, this does nothing, nor does it",2],["close","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000149","()","Closes the session gracefully, blocking until all channels have successfully closed, and then closes",2],["close","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000393","()","Cleans up (see PacketStream#cleanup) and closes the underlying socket. ",2],["closed?","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000045","()","Conceptually asks if the socket is closed. As with #close, this doesn't really do anything significant,",2],["closed?","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000148","()","Returns true if the underlying transport has been closed. Note that this can be a little misleading,",2],["closed?","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000392","()","Returns true if the underlying socket has been closed. ",2],["closing?","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000117","()","Returns true if the channel is currently closing, but not actually closed. A channel is closing when,",2],["compress","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000408","(data)","Compresses the data. If no compression is in effect, this will just return the data unmodified, otherwise",2],["compression?","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000407","()","Returns true if data compression/decompression is enabled. This will return true if :standard compression",2],["compressor","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000405","()","The compressor object to use when compressing data. This takes into account the desired compression level.",2],["compute_need_bits","Net::SSH::Transport::Kex::DiffieHellmanGroupExchangeSHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA1.html#M000348","()","Compute the number of bits needed for the given number of bytes. ",2],["configuration_for","Net::SSH","classes/Net/SSH.html#M000433","(host, use_ssh_config=true)","Returns a hash of the configuration options for the given host, as read from the SSH configuration file(s).",2],["configure_client","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000416","(options={})","Configure's the packet stream's client state with the given set of options. This is typically used to",2],["configure_server","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000417","(options={})","Configure's the packet stream's server state with the given set of options. This is typically used to",2],["connect","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000000","(logger=nil)","Instantiates a new agent object, connects to a running SSH agent, negotiates the agent protocol version,",2],["connect!","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000002","()","Connect to the agent process using the socket factory and socket name given by the attribute writers.",2],["connection","Net::SSH::Test","classes/Net/SSH/Test.html#M000303","(options={})","Returns the connection session (Net::SSH::Connection::Session) for use in these tests. It is a fully",2],["consume!","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000063","(n=position)","Consumes n bytes from the buffer, where n is the current position unless otherwise specified. This is",2],["debug","Net::SSH::Loggable","classes/Net/SSH/Loggable.html#M000198","()","Displays the result of yielding if the log level is Logger::DEBUG or greater. ",2],["decompress","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000410","(data)","Deompresses the data. If no compression is in effect, this will just return the data unmodified, otherwise",2],["decompressor","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000406","()","The decompressor object to use when decompressing data. ",2],["decrypt","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000342","()","Does nothing. Returns self. ",2],["default_files","Net::SSH::Config","classes/Net/SSH/Config.html#M000101","()","Returns an array of locations of OpenSSH configuration files to parse by default. ",2],["digest","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000335","(data)","Compute the HMAC digest for the given data string. ",2],["digest","Net::SSH::Transport::HMAC::None","classes/Net/SSH/Transport/HMAC/None.html#M000336","(data)","",2],["digest_class","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000332","()","",2],["digest_class","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000329","(*v)","",2],["dispatch_incoming_packets","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000173","()","Read all pending packets from the connection and dispatch them as appropriate. Returns as soon as there",2],["do_close","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000140","()","Invokes the #on_close callback when the server closes a channel. The channel is the only argument. ",2],["do_eof","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000137","()","Invokes the #on_eof callback when the server indicates that no further data is forthcoming. The callback",2],["do_extended_data","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000136","(type, data)","Invokes the #on_extended_data callback when the server sends extended data to the channel. This will",2],["do_failure","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000141","()","Invokes the next pending request callback with +false+ as the second argument. ",2],["do_open_failed","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000132","(reason_code, description)","Invoked when the server failed to open the channel. If an #on_open_failed callback was specified, it",2],["do_success","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000142","()","Invokes the next pending request callback with +true+ as the second argument. ",2],["each_identity","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000021","()","Iterates over all available identities (public keys) known to this manager. As it finds one, it will",2],["empty?","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000059","()","Returns +true+ if the buffer contains no data (e.g., it is of zero length). ",2],["encrypt","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000341","()","Does nothing. Returns self. ",2],["enqueue","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000076","(data)","Enqueues data in the output buffer, to be written when #send_pending is called. Note that the data is",2],["enqueue_message","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000414","(message)","Enqueues the given message, such that it will be sent at the earliest opportunity. This does not block,",2],["enqueue_packet","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000382","(payload)","Enqueues a packet to be sent, but does not immediately send the packet. The given payload is pre-processed",2],["env","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000111","(variable_name, variable_value, &block)","Syntactic sugar for setting an environment variable in the remote process' environment. Note that for",2],["eof!","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000120","()","Tells the remote end of the channel that no more data is forthcoming from this end of the channel. The",2],["eof?","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000061","()","Returns true if the pointer is at the end of the buffer. Subsequent reads will return nil, in this case.",2],["eof?","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000119","()","Returns true if the local end of the channel has declared that no more data is forthcoming (see #eof!).",2],["error","Net::SSH::Loggable","classes/Net/SSH/Loggable.html#M000202","()","Displays the result of yielding if the log level is Logger:ERROR or greater. ",2],["exchange_keys","Net::SSH::Test::Kex","classes/Net/SSH/Test/Kex.html#M000269","()","Exchange keys with the server. This returns a hash of constant values, and does not actually exchange",2],["exchange_keys","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000325","()","Instantiates one of the Transport::Kex classes (based on the negotiated kex algorithm), and uses it to",2],["exchange_keys","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html#M000351","()","Perform the key-exchange for the given session, with the given data. This method will return a hash consisting",2],["exec","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000108","(command, &block)","Syntactic sugar for executing a command. Sends a channel request asking that the given command be invoked.",2],["exec","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000159","(command, &block)","A convenience method for executing a command and interacting with it. If no block is given, all output",2],["exec!","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000160","(command, &block)","Same as #exec, except this will block until the command finishes. Also, if a block is not given, this",2],["expand_key","Net::SSH::Transport::KeyExpander","classes/Net/SSH/Transport/KeyExpander.html#M000364","(bytes, start, options={})","Generate a key value in accordance with the SSH2 specification. (RFC4253 7.2. \"Output from Key Exchange\")",2],["expect_message","Net::SSH::Authentication::Session","classes/Net/SSH/Authentication/Session.html#M000050","(type)","Blocks until a packet is received, and returns it if it is of the given type. If it is not, an exception",2],["extended","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000376","(object)","",2],["facility","Net::SSH::Loggable","classes/Net/SSH/Loggable.html#M000205","()","Sets the \"facility\" value, used for reporting where a log message originates. It defaults to the name",2],["fatal","Net::SSH::Loggable","classes/Net/SSH/Loggable.html#M000203","()","Displays the result of yielding if the log level is Logger::FATAL or greater. ",2],["fill","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000070","(n=8192)","Tries to read up to +n+ bytes of data from the remote end, and appends the data to the input buffer.",2],["fill","Net::SSH::ForwardedBufferedIo","classes/Net/SSH/ForwardedBufferedIo.html#M000093","(n=8192)","",2],["final","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000344","()","Returns the empty string. ",2],["final_cipher","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000400","()","",2],["fingerprint","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000168","()","Returns the fingerprint of the key for the host, which either was not found or did not match. ",2],["fingerprint","OpenSSL::PKey::PKey","classes/OpenSSL/PKey/PKey.html#M000366","()","",2],["finish","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000020","()","This is used as a hint to the KeyManager indicating that the agent connection is no longer needed. Any",2],["for","Net::SSH::Config","classes/Net/SSH/Config.html#M000102","(host, files=default_files)","Loads the configuration data for the given +host+ from all of the given +files+ (defaulting to the list",2],["forward","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000166","()","Returns a reference to the Net::SSH::Service::Forward service, which can be used for forwarding ports",2],["forwarded_tcpip","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000255","(session, channel, packet)","The callback used when a new \"forwarded-tcpip\" channel is requested by the server.  This will open a",2],["from","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000053","(*args)","This is a convenience method for creating and populating a new buffer from a single command. The arguments",2],["generate_key_fingerprint","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html#M000361","(key)","",2],["get","Net::SSH::KeyFactory","classes/Net/SSH/KeyFactory.html#M000183","(name)","Fetch an OpenSSL key instance by its SSH name. It will be a new, empty key of the given type. ",2],["get","Net::SSH::Transport::CipherFactory","classes/Net/SSH/Transport/CipherFactory.html#M000318","(name, options={})","Retrieves a new instance of the named algorithm. The new instance will be initialized using an iv and",2],["get","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC.html#M000337","(name, key=\"\", parameters = {})","Retrieves a new hmac instance of the given SSH type (+name+). If +key+ is given, the new instance will",2],["get_lengths","Net::SSH::Transport::CipherFactory","classes/Net/SSH/Transport/CipherFactory.html#M000319","(name)","Returns a two-element array containing the [ key-length, block-size ] for the named cipher algorithm.",2],["get_message_types","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html#M000355","()","Returns the INIT/REPLY constants used by this algorithm. ",2],["get_message_types","Net::SSH::Transport::Kex::DiffieHellmanGroupExchangeSHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA1.html#M000352","()","Returns the INIT/REPLY constants used by this algorithm. ",2],["get_next_channel_id","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000176","()","Returns the next available channel id to be assigned, and increments the counter. ",2],["get_parameters","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html#M000354","()","Returns the DH key parameters for the current connection. ",2],["get_parameters","Net::SSH::Transport::Kex::DiffieHellmanGroupExchangeSHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA1.html#M000350","()","Returns the DH key parameters for the given session. ",2],["getbyte","String","classes/String.html#M000226","(index)","",2],["getpeername","Net::SSH::Test::Socket","classes/Net/SSH/Test/Socket.html#M000294","()","Returns a sockaddr struct for the port and host that were used when the socket was instantiated. ",2],["gets","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000284","(type, *args)","A convenience method for adding an arbitrary remote packet to the events list. ",2],["gets_channel_close","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000296","(channel)","Scripts the reception of a channel close packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_channel_data","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000290","(channel, data)","Scripts the reception of a channel data packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_channel_eof","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000295","(channel)","Scripts the reception of a channel EOF packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_channel_request","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000291","(channel, request, reply, data)","Scripts the reception of a channel request packet from the remote host by the given Net::SSH::Test::Channel",2],["gets_close","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000254","()","Scripts the reception of a \"channel close\" packet from the remote end. channel.gets_close ",2],["gets_data","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000250","(data)","Scripts the reception of a channel data packet from the remote end. channel.gets_data \"bar\" ",2],["gets_eof","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000253","()","Scripts the reception of an EOF packet from the remote end. channel.gets_eof ",2],["gets_exit_status","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000252","(status=0)","Scripts the reception of an \"exit-status\" channel request packet. channel.gets_exit_status(127) ",2],["global_request","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000177","(packet)","Invoked when a global request is received. The registered global request callback will be invoked, if",2],["hint","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000418","(which, value=true)","Sets a new hint for the packet stream, which the packet stream may use to change its behavior. (See PacketStream#hints).",2],["host","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000147","()","Returns the name of the host that was given to the transport layer to connect to. ",2],["host","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000169","()","Returns the host name for the remote host, as reported by the socket. ",2],["host_as_string","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000390","()","Returns the host (and possibly IP address) in a format compatible with SSH known-host files. ",2],["hostfiles","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000200","(options, which=:all)","Looks in the given +options+ hash for the :user_known_hosts_file and :global_known_hosts_file keys, and",2],["hostname","Net::SSH::Authentication::Methods::Hostbased","classes/Net/SSH/Authentication/Methods/Hostbased.html#M000028","()","Returns the hostname as reported by the underlying socket. ",2],["identities","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000004","()","Return an array of all identities (public keys) known to the agent. Each key returned is augmented with",2],["idle!","Net::SSH::Test::Extensions::PacketStream","classes/Net/SSH/Test/Extensions/PacketStream.html#M000259","()","Called when another packet should be inspected from the current script. If the next packet is a remote",2],["if_needs_rekey?","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000386","()","If the IO object requires a rekey operation (as indicated by either its client or server state objects,",2],["increment","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000401","(packet_length)","Increments the counters. The sequence number is incremented (and remapped so it always fits in a 32-bit",2],["info","Net::SSH::Loggable","classes/Net/SSH/Loggable.html#M000199","()","Displays the result of yielding if the log level is Logger::INFO or greater. ",2],["initialize_buffered_io","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000091","()","Initializes the intput and output buffers for this object. This method is called automatically when the",2],["initialize_ssh","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000387","()","Called when this module is used to extend an object. It initializes the states and generally prepares",2],["initialized?","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000313","()","Returns true if the algorithms have been negotiated at all. ",2],["inject_remote_delay!","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000241","()","Because adjacent calls to #gets_data will sometimes cause the data packets to be concatenated (causing",2],["input","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000089","()"," ",2],["instantiate!","Net::SSH::Packet","classes/Net/SSH/Packet.html#M000216","()","Parse the packet's contents and assign the named elements, as described by the registered format for",2],["instantiate!","Net::SSH::Test::Packet","classes/Net/SSH/Test/Packet.html#M000276","()","Instantiates the packets data elements. When the packet was first defined, some elements may not have",2],["interpret_size","Net::SSH::Config","classes/Net/SSH/Config.html#M000112","(size)","Converts the given size into an integer number of bytes. ",2],["io_select","Net::SSH::Compat","classes/Net/SSH/Compat.html#M000227","(*params)","",2],["io_select","Net::SSH::Compat","classes/Net/SSH/Compat.html#M000228","(*params)","",2],["ip","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000171","()","Returns the IP address of the remote host, as reported by the socket. ",2],["iv=","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000346","(v)","Does nothing. Returns nil. ",2],["iv_len","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000340","()","Returns an arbitrary integer. ",2],["kex_byte_requirement","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000324","()","Considers the sizes of the keys and block-sizes for the selected ciphers, and the lengths of the hmacs,",2],["key","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000174","()","Returns the key itself, as reported by the remote host. ",2],["key=","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000334","(value)","Sets the key to the given value, truncating it so that it is the correct length. ",2],["key_data","Net::SSH::Authentication::Session","classes/Net/SSH/Authentication/Session.html#M000052","()","Returns an array of the key data that should be used when attempting any key-based authentication mechanism.",2],["key_length","Net::SSH::Transport::HMAC","classes/Net/SSH/Transport/HMAC.html#M000338","(name)","Retrieves the key length for the hmac of the given SSH type (+name+). ",2],["key_length","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000326","(*v)","",2],["key_length","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000330","()","",2],["keys","Net::SSH::Authentication::Session","classes/Net/SSH/Authentication/Session.html#M000051","()","Returns an array of paths to the key files that should be used when attempting any key-based authentication",2],["keys_for","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000207","(host)","Returns an array of all keys that are known to be associatd with the given host. The +host+ parameter",2],["length","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000055","()","Returns the length of the buffer's content. ",2],["listen_to","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000164","(io, &callback)","Adds an IO object for the event loop to listen to. If a callback is given, it will be invoked when the",2],["load","Net::SSH::Config","classes/Net/SSH/Config.html#M000103","(path, host, settings={})","Load the OpenSSH configuration settings in the given +file+ for the given +host+. If +settings+ is given,",2],["load_data_private_key","Net::SSH::KeyFactory","classes/Net/SSH/KeyFactory.html#M000187","(data, passphrase=nil, ask_passphrase=true, filename=\"\")","Loads a private key. It will correctly determine whether the file describes an RSA or DSA key, and will",2],["load_data_public_key","Net::SSH::KeyFactory","classes/Net/SSH/KeyFactory.html#M000195","(data, filename=\"\")","Loads a public key. It will correctly determine whether the file describes an RSA or DSA key, and will",2],["load_identities","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000031","(identities, ask_passphrase)","Load prepared identities. Private key decryption errors ignored if passphrase was not prompted. ",2],["load_private_key","Net::SSH::KeyFactory","classes/Net/SSH/KeyFactory.html#M000184","(filename, passphrase=nil, ask_passphrase=true)","Loads a private key from a file. It will correctly determine whether the file describes an RSA or DSA",2],["load_public_key","Net::SSH::KeyFactory","classes/Net/SSH/KeyFactory.html#M000191","(filename)","Loads a public key from a file. It will correctly determine whether the file describes an RSA or DSA",2],["local","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000233","(*args)","Starts listening for connections on the local host, and forwards them to the specified remote host/port",2],["local?","Net::SSH::Test::LocalPacket","classes/Net/SSH/Test/LocalPacket.html#M000272","()","Returns +true+; this is a local packet. ",2],["local?","Net::SSH::Test::Packet","classes/Net/SSH/Test/Packet.html#M000275","()","The default for +local?+ is false. Subclasses should override as necessary. ",2],["local_id","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000239","()","Returns the local (client-assigned) id for this channel, or a Proc object that will return the local-id",2],["loop","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000152","(wait=nil, &block)","The main event loop. Calls #process until #process returns false. If a block is given, it is passed to",2],["loop_forever","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000153","(wait=nil, &block)","Alias for #loop",2],["lwarn","Net::SSH::Loggable","classes/Net/SSH/Loggable.html#M000201","()","Displays the result of yielding if the log level is Logger::WARN or greater. (Called lwarn to avoid shadowing",2],["mac_length","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000331","()","",2],["mac_length","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000328","(*v)","",2],["method_missing","Net::SSH::Connection::Session::NilChannel","classes/Net/SSH/Connection/Session/NilChannel.html#M000139","(sym, *args)","",2],["name","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000345","()","The name of this cipher, which is \"identity\". ",2],["needs_rekey?","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000419","()","Returns true if the number of packets processed exceeds the maximum number of packets, or if the number",2],["negotiate","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000323","(algorithm)","Negotiates a single algorithm based on the preferences reported by the server and those set by the client.",2],["negotiate!","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000003","()","Attempts to negotiate the SSH agent protocol version. Raises an error if the version could not be negotiated",2],["negotiate!","Net::SSH::Transport::ServerVersion","classes/Net/SSH/Transport/ServerVersion.html#M000384","(socket)","Negotiates the SSH protocol to use, via the given socket. If the server reports an incompatible SSH version",2],["negotiate_algorithms","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000322","()","Given the parsed server KEX packet, and the client's preferred algorithm lists in #algorithms, determine",2],["negotiate_password","Net::SSH::Proxy::SOCKS5","classes/Net/SSH/Proxy/SOCKS5.html#M000231","(socket)","Simple username/password negotiation with the SOCKS5 server. ",2],["new","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000001","(logger=nil)","Creates a new Agent object, using the optional logger instance to report status. ",2],["new","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000013","(logger, options={})","Create a new KeyManager. By default, the manager will use the ssh-agent (if it is running). ",2],["new","Net::SSH::Authentication::Methods::Abstract","classes/Net/SSH/Authentication/Methods/Abstract.html#M000012","(session, options={})","Instantiates a new authentication method. ",2],["new","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000041","()","Create a new instance that communicates with the running pageant  instance. If no such instance is running,",2],["new","Net::SSH::Authentication::Session","classes/Net/SSH/Authentication/Session.html#M000047","(transport, options={})","Instantiates a new Authentication::Session object over the given transport layer abstraction. ",2],["new","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000054","(content=\"\")","Creates a new buffer, initialized to the given content. The position is initialized to the beginning",2],["new","Net::SSH::ChannelOpenFailed","classes/Net/SSH/ChannelOpenFailed.html#M000162","(code, reason)","",2],["new","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000105","(connection, type, local_id, &on_confirm_open)","Instantiates a new channel on the given connection, of the given type, and with the given id. If a block",2],["new","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000144","(transport, options={})","Create a new connection service instance atop the given transport layer. Initializes the listeners to",2],["new","Net::SSH::Connection::Session::NilChannel","classes/Net/SSH/Connection/Session/NilChannel.html#M000138","(session)","",2],["new","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000206","(source)","Instantiate a new KnownHosts instance that will search the given known-hosts file. The path is expanded",2],["new","Net::SSH::Packet","classes/Net/SSH/Packet.html#M000214","(payload)","Create a new packet from the given payload. This will automatically parse the packet if it is one that",2],["new","Net::SSH::Proxy::Command","classes/Net/SSH/Proxy/Command.html#M000217","(command_line_template)","Create a new socket factory that tunnels via a command executed with the user's shell, which is composed",2],["new","Net::SSH::Proxy::HTTP","classes/Net/SSH/Proxy/HTTP.html#M000221","(proxy_host, proxy_port=80, options={})","Create a new socket factory that tunnels via the given host and port. The +options+ parameter is a hash",2],["new","Net::SSH::Proxy::SOCKS4","classes/Net/SSH/Proxy/SOCKS4.html#M000224","(proxy_host, proxy_port=1080, options={})","Create a new proxy connection to the given proxy host and port. Optionally, a :user key may be given",2],["new","Net::SSH::Proxy::SOCKS5","classes/Net/SSH/Proxy/SOCKS5.html#M000229","(proxy_host, proxy_port=1080, options={})","Create a new proxy connection to the given proxy host and port. Optionally, :user and :password options",2],["new","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000232","(session)","Instantiates a new Forward service instance atop the given connection service session. This will register",2],["new","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000237","(script)","Creates a new Test::Channel instance on top of the given +script+ (which must be a Net::SSH::Test::Script",2],["new","Net::SSH::Test::Kex","classes/Net/SSH/Test/Kex.html#M000268","(algorithms, connection, data)","Creates a new instance of the testing key-exchange algorithm with the given arguments. ",2],["new","Net::SSH::Test::LocalPacket","classes/Net/SSH/Test/LocalPacket.html#M000271","(type, *args, &block)","Extend the default Net::SSH::Test::Packet constructor to also accept an optional block, which is used",2],["new","Net::SSH::Test::Packet","classes/Net/SSH/Test/Packet.html#M000270","(type, *args)","Ceate a new packet of the given +type+, and with +args+ being a list of data elements in the order expected",2],["new","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000281","()","Create a new, empty script. ",2],["new","Net::SSH::Test::Socket","classes/Net/SSH/Test/Socket.html#M000286","()","Create a new test socket. This will also instantiate a new Net::SSH::Test::Script and seed it with the",2],["new","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000307","(session, options={})","Instantiates a new Algorithms object, and prepares the hash of preferred algorithms based on the options",2],["new","Net::SSH::Transport::HMAC::Abstract","classes/Net/SSH/Transport/HMAC/Abstract.html#M000333","(key=nil)","",2],["new","Net::SSH::Transport::Kex::DiffieHellmanGroup1SHA1","classes/Net/SSH/Transport/Kex/DiffieHellmanGroup1SHA1.html#M000349","(algorithms, connection, data)","Create a new instance of the DiffieHellmanGroup1SHA1 algorithm. The data is a Hash of symbols representing",2],["new","Net::SSH::Transport::Kex::DiffieHellmanGroupExchangeSHA256","classes/Net/SSH/Transport/Kex/DiffieHellmanGroupExchangeSHA256.html#M000360","(*args)","",2],["new","Net::SSH::Transport::ServerVersion","classes/Net/SSH/Transport/ServerVersion.html#M000383","(socket, logger)","Instantiates a new ServerVersion and immediately (and synchronously) negotiates the SSH protocol in effect,",2],["new","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000389","(host, options={})","Instantiates a new transport layer abstraction. This will block until the initial key exchange completes,",2],["new","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000391","(socket, role)","Creates a new state object, belonging to the given socket. Initializes the algorithms to \"none\". ",2],["new","Net::SSH::Version","classes/Net/SSH/Version.html#M000428","(major, minor, tiny)","Create a new Version object with the given components. ",2],["next","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000297","(mode=:shift)","By default, removes the next event in the list and returns it. However, this can also be used to non-destructively",2],["next_message","Net::SSH::Authentication::Session","classes/Net/SSH/Authentication/Session.html#M000049","()","Blocks until a packet is received. It silently handles USERAUTH_BANNER packets, and will raise an error",2],["next_message","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000403","()","Blocks until a new packet is available to be read, and returns that packet. See #poll_message. ",2],["next_packet","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000380","(mode=:nonblock)","Returns the next full packet. If the mode parameter is :nonblock (the default), then this will return",2],["normalize_compression_name","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000327","(name)","Given the SSH name for some compression algorithm, return a normalized name as a symbol. ",2],["on_close","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000125","(&block)","Registers a callback to be invoked when the server acknowledges that a channel is closed. This is invoked",2],["on_data","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000122","(&block)","Registers a callback to be invoked when data packets are received by the channel. The callback is called",2],["on_eof","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000126","(&block)","Registers a callback to be invoked when the server indicates that no more data will be sent to the channel",2],["on_extended_data","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000123","(&block)","Registers a callback to be invoked when extended data packets are received by the channel. The callback",2],["on_global_request","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000172","(type, &block)","Registers a handler to be invoked when the server sends a global request of the given type. The callback",2],["on_open_channel","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000167","(type, &block)","Registers a handler to be invoked when the server wants to open a channel on the client. The callback",2],["on_open_failed","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000127","(&block)","Registers a callback to be invoked when the server was unable to open the requested channel. The channel",2],["on_process","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000124","(&block)","Registers a callback to be invoked for each pass of the event loop for this channel. There are no guarantees",2],["on_request","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000128","(type, &block)","Registers a callback to be invoked when a channel request of the given type is received. The callback",2],["open","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000040","(location=nil)","The factory method for creating a new Socket instance. The location parameter is ignored, and is only",2],["open","Net::SSH::Proxy::Command","classes/Net/SSH/Proxy/Command.html#M000218","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Proxy::HTTP","classes/Net/SSH/Proxy/HTTP.html#M000222","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Proxy::SOCKS4","classes/Net/SSH/Proxy/SOCKS4.html#M000225","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Proxy::SOCKS5","classes/Net/SSH/Proxy/SOCKS5.html#M000230","(host, port)","Return a new socket connected to the given host and port via the proxy that was requested when the socket",2],["open","Net::SSH::Test::Socket","classes/Net/SSH/Test/Socket.html#M000293","(host, port)","Allows the socket to also mimic a socket factory, simply returning +self+. ",2],["open_channel","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000158","(type=\"session\", *extra, &on_confirm)","Requests that a new channel be opened. By default, the channel will be of type \"session\", but if you",2],["opens_channel","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000282","(confirm=true)","Scripts the opening of a channel by adding a local packet sending the channel open request, and if +confirm+",2],["output","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000090","()","",2],["parse_response","Net::SSH::Proxy::HTTP","classes/Net/SSH/Proxy/HTTP.html#M000223","(socket)","",2],["parse_server_algorithm_packet","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000320","(packet)","Parses a KEXINIT packet from the server. ",2],["pattern2regex","Net::SSH::Config","classes/Net/SSH/Config.html#M000109","(pattern)","Converts an ssh_config pattern into a regex for matching against host names. ",2],["peer","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000402","()","Returns a hash of information about the peer (remote) side of the socket, including :ip, :port, :host,",2],["peer_ip","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000378","()","The IP address of the peer (remote) end of the socket, as reported by the socket. ",2],["pending?","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000311","()","Returns +true+ if a key-exchange is pending. This will be true from the moment either the client or server",2],["pending_write?","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000077","()","Returns +true+ if there is data waiting in the output buffer, and +false+ otherwise. ",2],["poll_message","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000404","(mode=:nonblock, consume_queue=true)","Tries to read the next packet from the socket. If mode is :nonblock (the default), this will not block",2],["poll_next_packet","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000388","()","Tries to read the next packet. If there is insufficient data to read an entire packet, this returns immediately,",2],["port","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000170","()","Returns the port number for the remote host, as reported by the socket. ",2],["postprocess","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000156","(readers, writers)","This is called internally as part of #process. It loops over the given arrays of reader IO's and writer",2],["prepare_client","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000251","(client, channel, type)","Perform setup operations that are common to all forwarded channels. +client+ is a socket, +channel+ is",2],["prepare_identities_from_data","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000030","()","Prepared identities from user key_data, preserving their order and sources. ",2],["prepare_identities_from_files","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000026","()","Prepares identities from user key_files for loading, preserving their order and sources. ",2],["prepare_preferred_algorithms!","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000317","()","Prepares the list of preferred algorithms, based on the options hash that was given when the object was",2],["preprocess","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000155","()","This is called internally as part of #process. It dispatches any available incoming packets, and then",2],["proceed!","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000315","()","After both client and server have sent their KEXINIT packets, this will do the algorithm negotiation",2],["process","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000121","()","If an #on_process handler has been set up, this will cause it to be invoked (passing the channel itself",2],["process","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000154","(wait=nil, &block)","The core of the event loop. It processes a single iteration of the event loop. If a block is given, it",2],["process","Net::SSH::Test::LocalPacket","classes/Net/SSH/Test/LocalPacket.html#M000273","(packet)","Called by Net::SSH::Test::Extensions::PacketStream#test_enqueue_packet to mimic remote processing of",2],["process","Net::SSH::Test::RemotePacket","classes/Net/SSH/Test/RemotePacket.html#M000279","(packet)","The #process method should only be called on Net::SSH::Test::LocalPacket packets; if it is attempted",2],["process","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000300","(packet)","Compare the given packet against the next event in the list. If there is no next event, an exception",2],["process_cache_miss","Net::SSH::Verifiers::Strict","classes/Net/SSH/Verifiers/Strict.html#M000427","(host, args)","",2],["process_identity_loading_error","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000033","(identity, e)","",2],["prompt","Net::SSH::PromptMethods::Clear","classes/Net/SSH/PromptMethods/Clear.html#M000213","(prompt, echo=true)","Displays the prompt to $stdout and pulls the response from $stdin. Text is always echoed in the clear,",2],["prompt","Net::SSH::PromptMethods::Highline","classes/Net/SSH/PromptMethods/Highline.html#M000210","(prompt, echo=true)","Uses Highline#ask to present a prompt and accept input. If +echo+ is +false+, the characters entered",2],["prompt","Net::SSH::PromptMethods::Termios","classes/Net/SSH/PromptMethods/Termios.html#M000211","(prompt, echo=true)","Displays the prompt to $stdout. If +echo+ is false, the Termios library will be used to disable keystroke",2],["push","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000412","(packet)","Adds the given packet to the packet queue. If the queue is non-empty, #poll_message will return packets",2],["read","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000046","(n = nil)","Reads +n+ bytes from the cached result of the last query. If +n+ is +nil+, returns all remaining data",2],["read","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000067","(count=nil)","Reads and returns the next +count+ bytes from the buffer, starting from the read position. If +count+",2],["read!","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000068","(count=nil)","Reads (as #read) and returns the given number of bytes from the buffer, and then consumes (as #consume!)",2],["read_available","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000074","(length=nil)","Read up to +length+ bytes from the input buffer. If +length+ is nil, all available data is read from",2],["read_bignum","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000080","()","Read a bignum (OpenSSL::BN) from the buffer, in SSH2 format. It is essentially just a string, which is",2],["read_bool","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000079","()","Read a single byte and convert it into a boolean, using 'C' rules (i.e., zero is false, non-zero is true).",2],["read_buffer","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000085","()","Reads the next string from the buffer, and returns a new Buffer object that wraps it. ",2],["read_byte","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000073","()","Read and return the next byte in the buffer. Returns nil if called at the end of the buffer. ",2],["read_int64","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000071","()","Return the next 8 bytes as a 64-bit integer (in network byte order). Returns nil if there are less than",2],["read_key","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000081","()","Read a key from the buffer. The key will start with a string describing its type. The remainder of the",2],["read_keyblob","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000082","(type)","Read a keyblob of the given type from the buffer, and return it as a key. Only RSA and DSA keys are supported.",2],["read_long","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000072","()","Return the next four bytes as a long integer (in network byte order). Returns nil if there are less than",2],["read_packet","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000009","()","Read the next packet from the agent. This will return a two-part tuple consisting of the packet type,",2],["read_string","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000078","()","Read and return an SSH2-encoded string. The string starts with a long integer that describes the number",2],["read_to","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000066","(pattern)","Reads all data up to and including the given pattern, which may be a String, Fixnum, or Regexp and is",2],["readpartial","Net::SSH::Test::Socket","classes/Net/SSH/Test/Socket.html#M000299","(n)","",2],["recv","Net::SSH::Test::Socket","classes/Net/SSH/Test/Socket.html#M000298","(n)","Alias to #read, but never returns nil (returns an empty string instead). ",2],["register","Net::SSH::Packet","classes/Net/SSH/Packet.html#M000209","(type, *pairs)","Register a new packet type that should be recognized and auto-parsed by Net::SSH::Packet. Note that any",2],["rekey!","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000308","()","Request a rekey operation. This will return immediately, and does not actually perform the rekey operation.",2],["rekey!","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000397","()","Requests a rekey operation, and blocks until the operation completes. If a rekey is already pending,",2],["rekey_as_needed","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000398","()","Returns immediately if a rekey is already in process. Otherwise, if a rekey is needed (as indicated by",2],["remainder_as_buffer","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000065","()","Returns all text from the current pointer to the end of the buffer as a new Net::SSH::Buffer object.",2],["remember_host!","Net::SSH::HostKeyMismatch","classes/Net/SSH/HostKeyMismatch.html#M000175","()","Tell Net::SSH to record this host and key in the known hosts file, so that subsequent connections will",2],["remote","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000236","(port, host, remote_port, remote_host=\"127.0.0.1\")","Requests that all connections on the given remote-port be forwarded via the local host to the given port/host.",2],["remote?","Net::SSH::Test::Packet","classes/Net/SSH/Test/Packet.html#M000274","()","The default for +remote?+ is false. Subclasses should override as necessary. ",2],["remote?","Net::SSH::Test::RemotePacket","classes/Net/SSH/Test/RemotePacket.html#M000278","()","Returns +true+; this is a remote packet. ",2],["remote_id","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000240","()","Returns the remote (server-assigned) id for this channel, or a Proc object that will return the remote-id",2],["remote_to","Net::SSH::Service::Forward","classes/Net/SSH/Service/Forward.html#M000238","(port, host, remote_port, remote_host=\"127.0.0.1\")","Alias for #remote",2],["request_failure","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000179","(packet)","Invokes the next pending request callback with +false+. ",2],["request_pty","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000113","(opts={}, &block)","Requests that a pseudo-tty (or \"pty\") be made available for this channel. This is useful when you want",2],["request_success","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000178","(packet)","Invokes the next pending request callback with +true+. ",2],["reset","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000347","()","Does nothing. Returns self. ",2],["reset!","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000060","()","Resets the pointer to the start of the buffer. Subsequent reads will begin at position 0. ",2],["reset!","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000411","()","Resets the counters on the state object, but leaves the sequence_number unchanged. It also sets defaults",2],["search_for","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000196","(host, options={})","Searches all known host files (see KnownHosts.hostfiles) for all keys of the given host. Returns an array",2],["search_in","Net::SSH::KnownHosts","classes/Net/SSH/KnownHosts.html#M000197","(files, host)","Search for all known keys for the given host, in every file given in the +files+ array. Returns the list",2],["select_for_read?","Net::SSH::Test::Extensions::BufferedIo","classes/Net/SSH/Test/Extensions/BufferedIo.html#M000257","()","Returns +true+ if the position in the stream is less than the total length of the stream. ",2],["select_for_test","Net::SSH::Test::Extensions::IO::ClassMethods","classes/Net/SSH/Test/Extensions/IO/ClassMethods.html#M000267","(readers=nil, writers=nil, errors=nil, wait=nil)","The testing version of ::IO.select. Assumes that all readers, writers, and errors arrays are either nil,",2],["select_host_key_verifier","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000421","(paranoid)","Instantiates a new host-key verification class, based on the value of the parameter. When true or nil,",2],["send","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000042","(data, *args)","Forwards the data to #send_query, ignoring any arguments after the first. Returns 0. ",2],["send_and_wait","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000010","(type, *args)","Send the given packet and return the subsequent reply from the agent. (See #send_packet and #read_packet).",2],["send_channel_request","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000129","(request_name, *data, &callback)","Sends a new channel request with the given name. The extra +data+ parameter must either be empty, or",2],["send_data","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000114","(data)","Sends data to the channel's remote endpoint. This usually has the effect of sending the given string",2],["send_data_for_test","Net::SSH::Test::Extensions::Channel","classes/Net/SSH/Test/Extensions/Channel.html#M000264","(data)","The testing version of Net::SSH::Connection::Channel#send_data. Calls the original implementation, and",2],["send_global_request","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000157","(type, *extra, &callback)","Send a global request of the given type. The +extra+ parameters must be even in number, and conform to",2],["send_kexinit","Net::SSH::Transport::Algorithms","classes/Net/SSH/Transport/Algorithms.html#M000314","()","Sends a KEXINIT packet to the server. If a server KEXINIT has already been received, this will then invoke",2],["send_message","Net::SSH::Authentication::Methods::Abstract","classes/Net/SSH/Authentication/Methods/Abstract.html#M000015","(msg)","Sends a message via the underlying transport layer abstraction. This will block until the message is",2],["send_message","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000161","(message)","Enqueues a message to be sent to the server as soon as the socket is available for writing. Most programs",2],["send_message","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000413","(message)","Sends the given message via the packet stream, blocking until the entire message has been sent. ",2],["send_packet","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000008","(type, *args)","Send a new packet of the given type, with the associated data. ",2],["send_packet","Net::SSH::Transport::PacketStream","classes/Net/SSH/Transport/PacketStream.html#M000381","(payload)","Enqueues a packet to be sent, and blocks until the entire packet is sent. ",2],["send_pending","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000083","()","Sends as much of the pending output as possible. Returns +true+ if any data was sent, and +false+ otherwise.",2],["send_pending","Net::SSH::ForwardedBufferedIo","classes/Net/SSH/ForwardedBufferedIo.html#M000098","()","",2],["send_query","Net::SSH::Authentication::Pageant::Socket","classes/Net/SSH/Authentication/Pageant/Socket.html#M000043","(query)","Packages the given query string and sends it to the pageant process via the Windows messaging subsystem.",2],["send_request","Net::SSH::Authentication::Methods::Publickey","classes/Net/SSH/Authentication/Methods/Publickey.html#M000038","(pub_key, username, next_service, signature=nil)","Builds and sends a request formatted for a public-key authentication request. ",2],["sends","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000283","(type, *args, &block)","A convenience method for adding an arbitrary local packet to the events list. ",2],["sends_channel_close","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000289","(channel)","Scripts the sending of a channel close packet from the given Net::SSH::Test::Channel +channel+. This",2],["sends_channel_data","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000287","(channel, data)","Scripts the sending of a channel data packet. +channel+ must be a Net::SSH::Test::Channel object, and",2],["sends_channel_eof","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000288","(channel)","Scripts the sending of a channel EOF packet from the given Net::SSH::Test::Channel +channel+. This will",2],["sends_channel_request","Net::SSH::Test::Script","classes/Net/SSH/Test/Script.html#M000285","(channel, request, reply, data, success=true)","Scripts the sending of a new channel request packet to the remote host. +channel+ should be an instance",2],["sends_close","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000249","()","Scripts the sending of a \"channel close\" packet across the channel. channel.sends_close ",2],["sends_data","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000247","(data)","Scripts the sending of a data packet across the channel. channel.sends_data \"foo\" ",2],["sends_eof","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000248","()","Scripts the sending of an EOF packet across the channel. channel.sends_eof ",2],["sends_exec","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000243","(command, reply=true, success=true)","Scripts the sending of an \"exec\" channel request packet to the mock  server. If +reply+ is true, then",2],["sends_subsystem","Net::SSH::Test::Channel","classes/Net/SSH/Test/Channel.html#M000246","(subsystem, reply=true, success=true)","Scripts the sending of a \"subsystem\" channel request packet to the mock server. See #sends_exec for a",2],["service_request","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000395","(service)","Returns a new service_request packet for the given service name, ready for sending to the server. ",2],["session_id","Net::SSH::Authentication::Methods::Abstract","classes/Net/SSH/Authentication/Methods/Abstract.html#M000014","()","Returns the session-id, as generated during the first key exchange of an SSH connection. ",2],["set","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000396","(values)","A convenience method for quickly setting multiple values in a single command. ",2],["set_echo","Net::SSH::PromptMethods::Termios","classes/Net/SSH/PromptMethods/Termios.html#M000212","(enable)","Enables or disables keystroke echoing using the Termios library. ",2],["shutdown!","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000150","()","Performs a \"hard\" shutdown of the connection. In general, this should never be done, but it might be",2],["shutdown!","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000394","()","Performs a \"hard\" shutdown of the connection. In general, this should never be done, but it might be",2],["sign","Net::SSH::Authentication::Agent","classes/Net/SSH/Authentication/Agent.html#M000006","(key, data)","Using the agent and the given public key, sign the given data. The signature is returned in SSH2 format.",2],["sign","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000022","(identity, data)","Sign the given data, using the corresponding private key of the given identity. If the identity was originally",2],["socket","Net::SSH::Test","classes/Net/SSH/Test.html#M000302","(options={})","Returns the test socket instance to use for these tests (see Net::SSH::Test::Socket). ",2],["ssh_do_sign","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000375","(data)","Signs the given data. ",2],["ssh_do_sign","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000371","(data)","Returns the signature for the given data. ",2],["ssh_do_verify","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000374","(sig, data)","Verifies the given signature matches the given data. ",2],["ssh_do_verify","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000370","(sig, data)","Verifies the given signature matches the given data. ",2],["ssh_type","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000372","()","Returns \"ssh-dss\", which is the description of this key type used by the SSH2 protocol. ",2],["ssh_type","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000368","()","Returns \"ssh-rsa\", which is the description of this key type used by the SSH2 protocol. ",2],["start","Net::SSH","classes/Net/SSH.html#M000432","(host, user, options={}, &block)","The standard means of starting a new SSH connection. When used with a block, the connection will be closed",2],["stop_listening_to","Net::SSH::Connection::Session","classes/Net/SSH/Connection/Session.html#M000165","(io)","Removes the given io object from the listeners collection, so that the event loop will no longer monitor",2],["story","Net::SSH::Test","classes/Net/SSH/Test.html#M000301","()","If a block is given, yields the script for the test socket (#socket). Otherwise, simply returns the socket's",2],["subsystem","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000110","(subsystem, &block)","Syntactic sugar for requesting that a subsystem be started. Subsystems are a way for other protocols",2],["supported?","Net::SSH::Transport::CipherFactory","classes/Net/SSH/Transport/CipherFactory.html#M000316","(name)","Returns true if the underlying OpenSSL library supports the given cipher, and false otherwise. ",2],["test_available_for_read?","Net::SSH::Test::Extensions::PacketStream","classes/Net/SSH/Test/Extensions/PacketStream.html#M000260","()","The testing version of Net::SSH::Transport::PacketStream#available_for_read?. Returns true if there is",2],["test_enqueue_packet","Net::SSH::Test::Extensions::PacketStream","classes/Net/SSH/Test/Extensions/PacketStream.html#M000261","(payload)","The testing version of Net::SSH::Transport::PacketStream#enqueued_packet. Simply calls Net::SSH::Test::Script#process",2],["test_poll_next_packet","Net::SSH::Test::Extensions::PacketStream","classes/Net/SSH/Test/Extensions/PacketStream.html#M000262","()","The testing version of Net::SSH::Transport::PacketStream#poll_next_packet. Reads the next available packet",2],["to_blob","OpenSSL::PKey::DSA","classes/OpenSSL/PKey/DSA.html#M000373","()","Converts the key to a blob, according to the SSH2 protocol. ",2],["to_blob","OpenSSL::PKey::RSA","classes/OpenSSL/PKey/RSA.html#M000369","()","Converts the key to a blob, according to the SSH2 protocol. ",2],["to_i","Net::SSH::Version","classes/Net/SSH/Version.html#M000431","()","Converts this version to a canonical integer that may be compared against other version objects. ",2],["to_s","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000057","()","Returns a copy of the buffer's content. ",2],["to_s","Net::SSH::Test::RemotePacket","classes/Net/SSH/Test/RemotePacket.html#M000280","()","Returns this remote packet as a string, suitable for parsing by  Net::SSH::Transport::PacketStream and",2],["to_s","Net::SSH::Version","classes/Net/SSH/Version.html#M000430","()","Converts this version object to a string, where each of the three version components are joined by the",2],["to_ssh","OpenSSL::BN","classes/OpenSSL/BN.html#M000365","()","Converts a BN object to a string. The format used is that which is required by the SSH2 protocol. ",2],["translate","Net::SSH::Config","classes/Net/SSH/Config.html#M000104","(settings)","Given a hash of OpenSSH configuration options, converts them into a hash of Net::SSH options. Unrecognized",2],["transport","Net::SSH::Test","classes/Net/SSH/Test.html#M000304","(options={})","Returns the transport session (Net::SSH::Transport::Session) for use in these tests. It is a fully functional",2],["tunnelled?","Net::SSH::Verifiers::Lenient","classes/Net/SSH/Verifiers/Lenient.html#M000424","(args)","A connection is potentially being tunnelled if the port is not 22, and the ip refers to the localhost.",2],["types","Net::SSH::Test::Packet","classes/Net/SSH/Test/Packet.html#M000277","()","Returns an array of symbols describing the data elements for packets of the same type as this packet.",2],["update","Net::SSH::Transport::IdentityCipher","classes/Net/SSH/Transport/IdentityCipher.html#M000343","(text)","Passes its single argument through unchanged. ",2],["update_cipher","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000399","(data)","",2],["update_local_window_size","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000143","(size)","Updates the local window size by the given amount. If the window size drops to less than half of the",2],["update_next_iv","Net::SSH::Transport::State","classes/Net/SSH/Transport/State.html#M000420","(data, reset=false)","",2],["use_agent=","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000024","(use_agent)","Toggles whether the ssh-agent will be used or not. If true, an attempt will be made to use the ssh-agent.",2],["use_agent?","Net::SSH::Authentication::KeyManager","classes/Net/SSH/Authentication/KeyManager.html#M000023","()","Identifies whether the ssh-agent will be used or not. ",2],["userauth_request","Net::SSH::Authentication::Methods::Abstract","classes/Net/SSH/Authentication/Methods/Abstract.html#M000016","(username, next_service, auth_method, *others)","Creates a new USERAUTH_REQUEST packet. The extra arguments on the end must be either boolean values or",2],["valid?","OpenSSL::PKey::DH","classes/OpenSSL/PKey/DH.html#M000367","()","Determines whether the pub_key for this key is valid. (This algorithm lifted more-or-less directly from",2],["verify","Net::SSH::Verifiers::Lenient","classes/Net/SSH/Verifiers/Lenient.html#M000423","(arguments)","Tries to determine if the connection is being tunnelled, and if so, returns true. Otherwise, performs",2],["verify","Net::SSH::Verifiers::Null","classes/Net/SSH/Verifiers/Null.html#M000422","(arguments)","Returns true. ",2],["verify","Net::SSH::Verifiers::Strict","classes/Net/SSH/Verifiers/Strict.html#M000425","(arguments)","",2],["wait","Net::SSH::Connection::Channel","classes/Net/SSH/Connection/Channel.html#M000116","()","Runs the SSH event loop until the channel is no longer active. This is handy for blocking while you wait",2],["wait","Net::SSH::Transport::Session","classes/Net/SSH/Transport/Session.html#M000409","()","Waits (blocks) until the given block returns true. If no block is given, this just waits long enough",2],["wait_for_pending_sends","Net::SSH::BufferedIo","classes/Net/SSH/BufferedIo.html#M000084","()","Calls #send_pending repeatedly, if necessary, blocking until the output buffer is empty. ",2],["write","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000086","(*data)","Writes the given data literally into the string. Does not alter the read position. Returns the buffer",2],["write","Net::SSH::Test::Socket","classes/Net/SSH/Test/Socket.html#M000292","(data)","This doesn't actually do anything, since we don't really care what gets written. ",2],["write_bignum","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000099","(*n)","Writes each argument to the buffer as a bignum (SSH2-style). No checking is done to ensure that the arguments",2],["write_bool","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000097","(*b)","Writes each argument to the buffer as a (C-style) boolean, with 1 meaning true, and 0 meaning false.",2],["write_byte","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000095","(*n)","Writes each argument to the buffer as a byte. Does not alter the read position. Returns the buffer object.",2],["write_int64","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000092","(*n)","Writes each argument to the buffer as a network-byte-order-encoded 64-bit integer (8 bytes). Does not",2],["write_key","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000100","(*key)","Writes the given arguments to the buffer as SSH2-encoded keys. Does not alter the read position. Returns",2],["write_long","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000094","(*n)","Writes each argument to the buffer as a network-byte-order-encoded long (4-byte) integer. Does not alter",2],["write_string","Net::SSH::Buffer","classes/Net/SSH/Buffer.html#M000096","(*text)","Writes each argument to the buffer as an SSH2-encoded string. Each string is prefixed by its length,",2],["CHANGELOG.rdoc","files/CHANGELOG_rdoc.html","files/CHANGELOG_rdoc.html",""," === 2.3.0 / 11 Jan 2012  * Support for hmac-sha2 and diffie-hellman-group-exchange-sha256 [Ryosuke Yamazaki]",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Net::SSH  * Docs: http://net-ssh.github.com/net-ssh * Issues: http://net-ssh.lighthouseapp.com/ * Codes:",3],["THANKS.rdoc","files/THANKS_rdoc.html","files/THANKS_rdoc.html","","Net::SSH was originally written by Jamis Buck <jamis@37signals.com>. In addition, the following individuals",3],["ssh.rb","files/lib/net/ssh_rb.html","files/lib/net/ssh_rb.html","","Make sure HOME is set, regardless of OS, so that File.expand_path works as expected with tilde characters.",3],["agent.rb","files/lib/net/ssh/authentication/agent_rb.html","files/lib/net/ssh/authentication/agent_rb.html","","",3],["constants.rb","files/lib/net/ssh/authentication/constants_rb.html","files/lib/net/ssh/authentication/constants_rb.html","","",3],["key_manager.rb","files/lib/net/ssh/authentication/key_manager_rb.html","files/lib/net/ssh/authentication/key_manager_rb.html","","",3],["abstract.rb","files/lib/net/ssh/authentication/methods/abstract_rb.html","files/lib/net/ssh/authentication/methods/abstract_rb.html","","",3],["hostbased.rb","files/lib/net/ssh/authentication/methods/hostbased_rb.html","files/lib/net/ssh/authentication/methods/hostbased_rb.html","","",3],["keyboard_interactive.rb","files/lib/net/ssh/authentication/methods/keyboard_interactive_rb.html","files/lib/net/ssh/authentication/methods/keyboard_interactive_rb.html","","",3],["password.rb","files/lib/net/ssh/authentication/methods/password_rb.html","files/lib/net/ssh/authentication/methods/password_rb.html","","",3],["publickey.rb","files/lib/net/ssh/authentication/methods/publickey_rb.html","files/lib/net/ssh/authentication/methods/publickey_rb.html","","",3],["pageant.rb","files/lib/net/ssh/authentication/pageant_rb.html","files/lib/net/ssh/authentication/pageant_rb.html","","",3],["session.rb","files/lib/net/ssh/authentication/session_rb.html","files/lib/net/ssh/authentication/session_rb.html","","",3],["buffer.rb","files/lib/net/ssh/buffer_rb.html","files/lib/net/ssh/buffer_rb.html","","",3],["buffered_io.rb","files/lib/net/ssh/buffered_io_rb.html","files/lib/net/ssh/buffered_io_rb.html","","",3],["config.rb","files/lib/net/ssh/config_rb.html","files/lib/net/ssh/config_rb.html","","",3],["channel.rb","files/lib/net/ssh/connection/channel_rb.html","files/lib/net/ssh/connection/channel_rb.html","","",3],["constants.rb","files/lib/net/ssh/connection/constants_rb.html","files/lib/net/ssh/connection/constants_rb.html","","",3],["session.rb","files/lib/net/ssh/connection/session_rb.html","files/lib/net/ssh/connection/session_rb.html","","",3],["term.rb","files/lib/net/ssh/connection/term_rb.html","files/lib/net/ssh/connection/term_rb.html","","",3],["errors.rb","files/lib/net/ssh/errors_rb.html","files/lib/net/ssh/errors_rb.html","","",3],["key_factory.rb","files/lib/net/ssh/key_factory_rb.html","files/lib/net/ssh/key_factory_rb.html","","",3],["known_hosts.rb","files/lib/net/ssh/known_hosts_rb.html","files/lib/net/ssh/known_hosts_rb.html","","",3],["loggable.rb","files/lib/net/ssh/loggable_rb.html","files/lib/net/ssh/loggable_rb.html","","",3],["packet.rb","files/lib/net/ssh/packet_rb.html","files/lib/net/ssh/packet_rb.html","","",3],["prompt.rb","files/lib/net/ssh/prompt_rb.html","files/lib/net/ssh/prompt_rb.html","","",3],["command.rb","files/lib/net/ssh/proxy/command_rb.html","files/lib/net/ssh/proxy/command_rb.html","","",3],["errors.rb","files/lib/net/ssh/proxy/errors_rb.html","files/lib/net/ssh/proxy/errors_rb.html","","",3],["http.rb","files/lib/net/ssh/proxy/http_rb.html","files/lib/net/ssh/proxy/http_rb.html","","",3],["socks4.rb","files/lib/net/ssh/proxy/socks4_rb.html","files/lib/net/ssh/proxy/socks4_rb.html","","",3],["socks5.rb","files/lib/net/ssh/proxy/socks5_rb.html","files/lib/net/ssh/proxy/socks5_rb.html","","",3],["ruby_compat.rb","files/lib/net/ssh/ruby_compat_rb.html","files/lib/net/ssh/ruby_compat_rb.html","","",3],["forward.rb","files/lib/net/ssh/service/forward_rb.html","files/lib/net/ssh/service/forward_rb.html","","",3],["test.rb","files/lib/net/ssh/test_rb.html","files/lib/net/ssh/test_rb.html","","",3],["channel.rb","files/lib/net/ssh/test/channel_rb.html","files/lib/net/ssh/test/channel_rb.html","","",3],["extensions.rb","files/lib/net/ssh/test/extensions_rb.html","files/lib/net/ssh/test/extensions_rb.html","","",3],["kex.rb","files/lib/net/ssh/test/kex_rb.html","files/lib/net/ssh/test/kex_rb.html","","",3],["local_packet.rb","files/lib/net/ssh/test/local_packet_rb.html","files/lib/net/ssh/test/local_packet_rb.html","","",3],["packet.rb","files/lib/net/ssh/test/packet_rb.html","files/lib/net/ssh/test/packet_rb.html","","",3],["remote_packet.rb","files/lib/net/ssh/test/remote_packet_rb.html","files/lib/net/ssh/test/remote_packet_rb.html","","",3],["script.rb","files/lib/net/ssh/test/script_rb.html","files/lib/net/ssh/test/script_rb.html","","",3],["socket.rb","files/lib/net/ssh/test/socket_rb.html","files/lib/net/ssh/test/socket_rb.html","","",3],["algorithms.rb","files/lib/net/ssh/transport/algorithms_rb.html","files/lib/net/ssh/transport/algorithms_rb.html","","",3],["cipher_factory.rb","files/lib/net/ssh/transport/cipher_factory_rb.html","files/lib/net/ssh/transport/cipher_factory_rb.html","","",3],["constants.rb","files/lib/net/ssh/transport/constants_rb.html","files/lib/net/ssh/transport/constants_rb.html","","",3],["hmac.rb","files/lib/net/ssh/transport/hmac_rb.html","files/lib/net/ssh/transport/hmac_rb.html","","",3],["abstract.rb","files/lib/net/ssh/transport/hmac/abstract_rb.html","files/lib/net/ssh/transport/hmac/abstract_rb.html","","",3],["md5.rb","files/lib/net/ssh/transport/hmac/md5_rb.html","files/lib/net/ssh/transport/hmac/md5_rb.html","","",3],["md5_96.rb","files/lib/net/ssh/transport/hmac/md5_96_rb.html","files/lib/net/ssh/transport/hmac/md5_96_rb.html","","",3],["none.rb","files/lib/net/ssh/transport/hmac/none_rb.html","files/lib/net/ssh/transport/hmac/none_rb.html","","",3],["sha1.rb","files/lib/net/ssh/transport/hmac/sha1_rb.html","files/lib/net/ssh/transport/hmac/sha1_rb.html","","",3],["sha1_96.rb","files/lib/net/ssh/transport/hmac/sha1_96_rb.html","files/lib/net/ssh/transport/hmac/sha1_96_rb.html","","",3],["sha2_256.rb","files/lib/net/ssh/transport/hmac/sha2_256_rb.html","files/lib/net/ssh/transport/hmac/sha2_256_rb.html","","",3],["sha2_256_96.rb","files/lib/net/ssh/transport/hmac/sha2_256_96_rb.html","files/lib/net/ssh/transport/hmac/sha2_256_96_rb.html","","",3],["sha2_512.rb","files/lib/net/ssh/transport/hmac/sha2_512_rb.html","files/lib/net/ssh/transport/hmac/sha2_512_rb.html","","",3],["sha2_512_96.rb","files/lib/net/ssh/transport/hmac/sha2_512_96_rb.html","files/lib/net/ssh/transport/hmac/sha2_512_96_rb.html","","",3],["identity_cipher.rb","files/lib/net/ssh/transport/identity_cipher_rb.html","files/lib/net/ssh/transport/identity_cipher_rb.html","","",3],["kex.rb","files/lib/net/ssh/transport/kex_rb.html","files/lib/net/ssh/transport/kex_rb.html","","",3],["diffie_hellman_group1_sha1.rb","files/lib/net/ssh/transport/kex/diffie_hellman_group1_sha1_rb.html","files/lib/net/ssh/transport/kex/diffie_hellman_group1_sha1_rb.html","","",3],["diffie_hellman_group_exchange_sha1.rb","files/lib/net/ssh/transport/kex/diffie_hellman_group_exchange_sha1_rb.html","files/lib/net/ssh/transport/kex/diffie_hellman_group_exchange_sha1_rb.html","","",3],["diffie_hellman_group_exchange_sha256.rb","files/lib/net/ssh/transport/kex/diffie_hellman_group_exchange_sha256_rb.html","files/lib/net/ssh/transport/kex/diffie_hellman_group_exchange_sha256_rb.html","","",3],["key_expander.rb","files/lib/net/ssh/transport/key_expander_rb.html","files/lib/net/ssh/transport/key_expander_rb.html","","",3],["openssl.rb","files/lib/net/ssh/transport/openssl_rb.html","files/lib/net/ssh/transport/openssl_rb.html","","",3],["packet_stream.rb","files/lib/net/ssh/transport/packet_stream_rb.html","files/lib/net/ssh/transport/packet_stream_rb.html","","",3],["server_version.rb","files/lib/net/ssh/transport/server_version_rb.html","files/lib/net/ssh/transport/server_version_rb.html","","",3],["session.rb","files/lib/net/ssh/transport/session_rb.html","files/lib/net/ssh/transport/session_rb.html","","",3],["state.rb","files/lib/net/ssh/transport/state_rb.html","files/lib/net/ssh/transport/state_rb.html","","",3],["lenient.rb","files/lib/net/ssh/verifiers/lenient_rb.html","files/lib/net/ssh/verifiers/lenient_rb.html","","",3],["null.rb","files/lib/net/ssh/verifiers/null_rb.html","files/lib/net/ssh/verifiers/null_rb.html","","",3],["strict.rb","files/lib/net/ssh/verifiers/strict_rb.html","files/lib/net/ssh/verifiers/strict_rb.html","","",3],["version.rb","files/lib/net/ssh/version_rb.html","files/lib/net/ssh/version_rb.html","","",3]],"searchIndex":["net","ssh","authentication","agent","comment","agenterror","agentnotavailable","constants","disallowedmethod","keymanager","keymanagererror","methods","abstract","hostbased","keyboardinteractive","password","publickey","pageant","socket","win","session","authenticationfailed","buffer","bufferedio","channelopenfailed","channelrequestfailed","compat","config","connection","channel","constants","session","nilchannel","term","connectiontimeout","disconnect","exception","forwardedbufferedio","hostkeymismatch","keyfactory","knownhosts","loggable","packet","promptmethods","clear","highline","termios","proxy","command","connecterror","error","http","socks4","socks5","unauthorizederror","service","forward","test","channel","extensions","bufferedio","channel","io","classmethods","packetstream","kex","localpacket","packet","remotepacket","script","socket","transport","algorithms","cipherfactory","constants","hmac","abstract","md5","md5_96","none","sha1","sha1_96","sha2_256","sha2_256_96","sha2_512","sha2_512_96","identitycipher","kex","diffiehellmangroup1sha1","diffiehellmangroupexchangesha1","diffiehellmangroupexchangesha256","keyexpander","packetstream","serverversion","session","state","verifiers","lenient","null","strict","version","openssl","bn","pkey","dh","dsa","pkey","rsa","string","<=>()","==()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","accept_kexinit()","active?()","active_locals()","active_remotes()","add()","add()","add()","add_key_data()","agent()","agent()","agent_failed()","agent_socket_factory()","allow?()","allowed_packet?()","append()","assert_scripted()","auth_agent_channel()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate_with()","authenticate_with()","available()","available()","available_for_read?()","block_size()","build_client_algorithm_packet()","build_request()","build_request()","build_signature_buffer()","build_signature_buffer()","busy?()","cancel_local()","cancel_remote()","channel_close()","channel_data()","channel_eof()","channel_extended_data()","channel_failure()","channel_open()","channel_open_confirmation()","channel_open_failure()","channel_request()","channel_success()","channel_window_adjust()","cleanup()","cleanup()","clear!()","clear!()","client_name()","close()","close()","close()","close()","close()","closed?()","closed?()","closed?()","closing?()","compress()","compression?()","compressor()","compute_need_bits()","configuration_for()","configure_client()","configure_server()","connect()","connect!()","connection()","consume!()","debug()","decompress()","decompressor()","decrypt()","default_files()","digest()","digest()","digest_class()","digest_class()","dispatch_incoming_packets()","do_close()","do_eof()","do_extended_data()","do_failure()","do_open_failed()","do_success()","each_identity()","empty?()","encrypt()","enqueue()","enqueue_message()","enqueue_packet()","env()","eof!()","eof?()","eof?()","error()","exchange_keys()","exchange_keys()","exchange_keys()","exec()","exec()","exec!()","expand_key()","expect_message()","extended()","facility()","fatal()","fill()","fill()","final()","final_cipher()","fingerprint()","fingerprint()","finish()","for()","forward()","forwarded_tcpip()","from()","generate_key_fingerprint()","get()","get()","get()","get_lengths()","get_message_types()","get_message_types()","get_next_channel_id()","get_parameters()","get_parameters()","getbyte()","getpeername()","gets()","gets_channel_close()","gets_channel_data()","gets_channel_eof()","gets_channel_request()","gets_close()","gets_data()","gets_eof()","gets_exit_status()","global_request()","hint()","host()","host()","host_as_string()","hostfiles()","hostname()","identities()","idle!()","if_needs_rekey?()","increment()","info()","initialize_buffered_io()","initialize_ssh()","initialized?()","inject_remote_delay!()","input()","instantiate!()","instantiate!()","interpret_size()","io_select()","io_select()","ip()","iv=()","iv_len()","kex_byte_requirement()","key()","key=()","key_data()","key_length()","key_length()","key_length()","keys()","keys_for()","length()","listen_to()","load()","load_data_private_key()","load_data_public_key()","load_identities()","load_private_key()","load_public_key()","local()","local?()","local?()","local_id()","loop()","loop_forever()","lwarn()","mac_length()","mac_length()","method_missing()","name()","needs_rekey?()","negotiate()","negotiate!()","negotiate!()","negotiate_algorithms()","negotiate_password()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next()","next_message()","next_message()","next_packet()","normalize_compression_name()","on_close()","on_data()","on_eof()","on_extended_data()","on_global_request()","on_open_channel()","on_open_failed()","on_process()","on_request()","open()","open()","open()","open()","open()","open()","open_channel()","opens_channel()","output()","parse_response()","parse_server_algorithm_packet()","pattern2regex()","peer()","peer_ip()","pending?()","pending_write?()","poll_message()","poll_next_packet()","port()","postprocess()","prepare_client()","prepare_identities_from_data()","prepare_identities_from_files()","prepare_preferred_algorithms!()","preprocess()","proceed!()","process()","process()","process()","process()","process()","process_cache_miss()","process_identity_loading_error()","prompt()","prompt()","prompt()","push()","read()","read()","read!()","read_available()","read_bignum()","read_bool()","read_buffer()","read_byte()","read_int64()","read_key()","read_keyblob()","read_long()","read_packet()","read_string()","read_to()","readpartial()","recv()","register()","rekey!()","rekey!()","rekey_as_needed()","remainder_as_buffer()","remember_host!()","remote()","remote?()","remote?()","remote_id()","remote_to()","request_failure()","request_pty()","request_success()","reset()","reset!()","reset!()","search_for()","search_in()","select_for_read?()","select_for_test()","select_host_key_verifier()","send()","send_and_wait()","send_channel_request()","send_data()","send_data_for_test()","send_global_request()","send_kexinit()","send_message()","send_message()","send_message()","send_packet()","send_packet()","send_pending()","send_pending()","send_query()","send_request()","sends()","sends_channel_close()","sends_channel_data()","sends_channel_eof()","sends_channel_request()","sends_close()","sends_data()","sends_eof()","sends_exec()","sends_subsystem()","service_request()","session_id()","set()","set_echo()","shutdown!()","shutdown!()","sign()","sign()","socket()","ssh_do_sign()","ssh_do_sign()","ssh_do_verify()","ssh_do_verify()","ssh_type()","ssh_type()","start()","stop_listening_to()","story()","subsystem()","supported?()","test_available_for_read?()","test_enqueue_packet()","test_poll_next_packet()","to_blob()","to_blob()","to_i()","to_s()","to_s()","to_s()","to_ssh()","translate()","transport()","tunnelled?()","types()","update()","update_cipher()","update_local_window_size()","update_next_iv()","use_agent=()","use_agent?()","userauth_request()","valid?()","verify()","verify()","verify()","wait()","wait()","wait_for_pending_sends()","write()","write()","write_bignum()","write_bool()","write_byte()","write_int64()","write_key()","write_long()","write_string()","changelog.rdoc","readme.rdoc","thanks.rdoc","ssh.rb","agent.rb","constants.rb","key_manager.rb","abstract.rb","hostbased.rb","keyboard_interactive.rb","password.rb","publickey.rb","pageant.rb","session.rb","buffer.rb","buffered_io.rb","config.rb","channel.rb","constants.rb","session.rb","term.rb","errors.rb","key_factory.rb","known_hosts.rb","loggable.rb","packet.rb","prompt.rb","command.rb","errors.rb","http.rb","socks4.rb","socks5.rb","ruby_compat.rb","forward.rb","test.rb","channel.rb","extensions.rb","kex.rb","local_packet.rb","packet.rb","remote_packet.rb","script.rb","socket.rb","algorithms.rb","cipher_factory.rb","constants.rb","hmac.rb","abstract.rb","md5.rb","md5_96.rb","none.rb","sha1.rb","sha1_96.rb","sha2_256.rb","sha2_256_96.rb","sha2_512.rb","sha2_512_96.rb","identity_cipher.rb","kex.rb","diffie_hellman_group1_sha1.rb","diffie_hellman_group_exchange_sha1.rb","diffie_hellman_group_exchange_sha256.rb","key_expander.rb","openssl.rb","packet_stream.rb","server_version.rb","session.rb","state.rb","lenient.rb","null.rb","strict.rb","version.rb"]}}