var search_data = {"index":{"info":[["Assertions","ActionController","classes/ActionController/Assertions.html"," < ","",1],["DomAssertions","ActionController::Assertions","classes/ActionController/Assertions/DomAssertions.html"," < ","",1],["ModelAssertions","ActionController::Assertions","classes/ActionController/Assertions/ModelAssertions.html"," < ","",1],["ResponseAssertions","ActionController::Assertions","classes/ActionController/Assertions/ResponseAssertions.html"," < ","A small suite of assertions that test responses from Rails applications. ",1],["RoutingAssertions","ActionController::Assertions","classes/ActionController/Assertions/RoutingAssertions.html"," < ","Suite of assertions to test routes generated by Rails and the handling of requests made to them. ",1],["SelectorAssertions","ActionController::Assertions","classes/ActionController/Assertions/SelectorAssertions.html"," < ","Adds the +assert_select+ method for use in Rails functional test cases, which can be used to make assertions",1],["TagAssertions","ActionController::Assertions","classes/ActionController/Assertions/TagAssertions.html"," < ","Pair of assertions to testing elements in the HTML output of the response. ",1],["Base","ActionController","classes/ActionController/Base.html"," < Object","Action Controllers are the core of a web request in Rails. They are made up of one or more actions that",1],["ClassMethods","ActionController::Benchmarking","classes/ActionController/Benchmarking/ClassMethods.html"," < ","",1],["CGIHandler","ActionController","classes/ActionController/CGIHandler.html"," < Object","",1],["ProperStream","ActionController::CGIHandler","classes/ActionController/CGIHandler/ProperStream.html"," < ","",1],["Caching","ActionController","classes/ActionController/Caching.html"," < ","Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings,",1],["Actions","ActionController::Caching","classes/ActionController/Caching/Actions.html"," < ","Action caching is similar to page caching by the fact that the entire output of the response is cached,",1],["ActionCachePath","ActionController::Caching::Actions","classes/ActionController/Caching/Actions/ActionCachePath.html"," < Object","",1],["ClassMethods","ActionController::Caching::Actions","classes/ActionController/Caching/Actions/ClassMethods.html"," < ","",1],["Fragments","ActionController::Caching","classes/ActionController/Caching/Fragments.html"," < ","Fragment caching is used for caching various blocks within templates without caching the entire action",1],["Pages","ActionController::Caching","classes/ActionController/Caching/Pages.html"," < ","Page caching is an approach to caching where the entire action output of is stored as a HTML file that",1],["ClassMethods","ActionController::Caching::Pages","classes/ActionController/Caching/Pages/ClassMethods.html"," < ","",1],["Sweeping","ActionController::Caching","classes/ActionController/Caching/Sweeping.html"," < ","Sweepers are the terminators of the caching world and responsible for expiring caches when model objects",1],["CgiExt","ActionController","classes/ActionController/CgiExt.html"," < ","",1],["Stdinput","ActionController::CgiExt","classes/ActionController/CgiExt/Stdinput.html"," < ","Publicize the CGI's internal input stream so we can lazy-read request.body. Make it writable so we don't",1],["Cookies","ActionController","classes/ActionController/Cookies.html"," < ","Cookies are read and written through ActionController#cookies. The cookies being read are the ones received",1],["Dispatcher","ActionController","classes/ActionController/Dispatcher.html"," < Object","Dispatches requests to the appropriate controller and takes care of reloading the app after each request",1],["Failsafe","ActionController","classes/ActionController/Failsafe.html"," < Object","The Failsafe middleware is usually the top-most middleware in the Rack middleware chain. It returns the",1],["ClassMethods","ActionController::Filters","classes/ActionController/Filters/ClassMethods.html"," < ","Filters enable controllers to run shared pre- and post-processing code for its actions. These filters",1],["Flash","ActionController","classes/ActionController/Flash.html"," < ","The flash provides a way to pass temporary objects between actions. Anything you place in the flash will",1],["FlashHash","ActionController::Flash","classes/ActionController/Flash/FlashHash.html"," < Hash","",1],["ClassMethods","ActionController::Helpers","classes/ActionController/Helpers/ClassMethods.html"," < ","The Rails framework provides a large number of helpers for working with +assets+, +dates+, +forms+, ",1],["Http","ActionController","classes/ActionController/Http.html"," < ","",1],["Headers","ActionController::Http","classes/ActionController/Http/Headers.html"," < ::Hash","",1],["HttpAuthentication","ActionController","classes/ActionController/HttpAuthentication.html"," < ","",1],["Basic","ActionController::HttpAuthentication","classes/ActionController/HttpAuthentication/Basic.html"," < ","Makes it dead easy to do HTTP Basic authentication. Simple Basic example: class PostsController < ApplicationController",1],["ControllerMethods","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html"," < ","",1],["Digest","ActionController::HttpAuthentication","classes/ActionController/HttpAuthentication/Digest.html"," < ","",1],["ControllerMethods","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html"," < ","",1],["Runner","ActionController::Integration","classes/ActionController/Integration/Runner.html"," < ","",1],["Session","ActionController::Integration","classes/ActionController/Integration/Session.html"," < Object","An integration Session instance represents a set of requests and responses performed sequentially by",1],["MultiPartNeededException","ActionController::Integration::Session","classes/ActionController/Integration/Session/MultiPartNeededException.html"," < Exception","",1],["IntegrationTest","ActionController","classes/ActionController/IntegrationTest.html"," < ActiveSupport::TestCase","An IntegrationTest is one that spans multiple controllers and actions, tying them all together to ensure",1],["ClassMethods","ActionController::Layout","classes/ActionController/Layout/ClassMethods.html"," < ","Layouts reverse the common pattern of including shared headers and footers in many templates to isolate",1],["MiddlewareStack","ActionController","classes/ActionController/MiddlewareStack.html"," < Array","",1],["Middleware","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack/Middleware.html"," < Object","",1],["InstanceMethods","ActionController::MimeResponds","classes/ActionController/MimeResponds/InstanceMethods.html"," < ","",1],["ParamsParser","ActionController","classes/ActionController/ParamsParser.html"," < Object","",1],["PerformanceTest","ActionController","classes/ActionController/PerformanceTest.html"," < ActionController::IntegrationTest","An integration test that runs a code profiler on your test methods. Profiling output for combinations",1],["PolymorphicRoutes","ActionController","classes/ActionController/PolymorphicRoutes.html"," < ","Polymorphic URL helpers are methods for smart resolution to a named route call when given an Active Record",1],["RecordIdentifier","ActionController","classes/ActionController/RecordIdentifier.html"," < ","The record identifier encapsulates a number of naming conventions for dealing with records, like Active",1],["Reloader","ActionController","classes/ActionController/Reloader.html"," < Object","",1],["BodyWrapper","ActionController::Reloader","classes/ActionController/Reloader/BodyWrapper.html"," < Object","",1],["Request","ActionController","classes/ActionController/Request.html"," < Rack::Request","",1],["RequestForgeryProtection","ActionController","classes/ActionController/RequestForgeryProtection.html"," < ","",1],["ClassMethods","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection/ClassMethods.html"," < ","Protecting controller actions from CSRF attacks by ensuring that all forms are coming from the current",1],["Rescue","ActionController","classes/ActionController/Rescue.html"," < ","Actions that fail to perform as expected throw exceptions. These exceptions can either be rescued for",1],["ClassMethods","ActionController::Rescue","classes/ActionController/Rescue/ClassMethods.html"," < ","",1],["Resources","ActionController","classes/ActionController/Resources.html"," < ","== Overview ActionController::Resources are a way of defining RESTful \\resources.  A RESTful \\resource,",1],["Response","ActionController","classes/ActionController/Response.html"," < Rack::Response","Represents an HTTP response generated by a controller action. One can use an ActionController::Response",1],["Routing","ActionController","classes/ActionController/Routing.html"," < ","== Routing The routing module provides URL rewriting in native Ruby. It's a way to redirect incoming",1],["Helpers","ActionController::Routing","classes/ActionController/Routing/Helpers.html"," < ","A helper module to hold URL related helpers. ",1],["Optimisation","ActionController::Routing","classes/ActionController/Routing/Optimisation.html"," < ","Much of the slow performance from routes comes from the complexity of expiry, <tt>:requirements</tt>",1],["Optimiser","ActionController::Routing::Optimisation","classes/ActionController/Routing/Optimisation/Optimiser.html"," < Object","",1],["PositionalArguments","ActionController::Routing::Optimisation","classes/ActionController/Routing/Optimisation/PositionalArguments.html"," < Optimiser","Given a route map.person '/people/:id' If the user calls <tt>person_url(@person)</tt>, we can simply",1],["PositionalArgumentsWithAdditionalParams","ActionController::Routing::Optimisation","classes/ActionController/Routing/Optimisation/PositionalArgumentsWithAdditionalParams.html"," < PositionalArguments","This case is mostly the same as the positional arguments case above, but it supports additional query",1],["OptionalFormatSegment","ActionController::Routing","classes/ActionController/Routing/OptionalFormatSegment.html"," < DynamicSegment","The OptionalFormatSegment allows for any resource route to have an optional :format, which decreases",1],["Mapper","ActionController::Routing::RouteSet","classes/ActionController/Routing/RouteSet/Mapper.html"," < Object","Mapper instances are used to build routes. The object passed to the draw block in config/routes.rb is",1],["Session","ActionController","classes/ActionController/Session.html"," < ","",1],["AbstractStore","ActionController::Session","classes/ActionController/Session/AbstractStore.html"," < Object","",1],["OptionsHash","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore/OptionsHash.html"," < Hash","thin wrapper around Hash that allows us to lazily load session id into session_options ",1],["SessionHash","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore/SessionHash.html"," < Hash","",1],["SessionUtils","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore/SessionUtils.html"," < ","",1],["CookieStore","ActionController::Session","classes/ActionController/Session/CookieStore.html"," < Object","This cookie-based session store is the Rails default. Sessions typically contain at most a user_id and",1],["CookieOverflow","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore/CookieOverflow.html"," < StandardError","Raised when storing more than 4K of session data. ",1],["MemCacheStore","ActionController::Session","classes/ActionController/Session/MemCacheStore.html"," < AbstractStore","",1],["ClassMethods","ActionController::SessionManagement","classes/ActionController/SessionManagement/ClassMethods.html"," < ","",1],["Streaming","ActionController","classes/ActionController/Streaming.html"," < ","Methods for sending arbitrary data and for streaming files to the browser, instead of rendering. ",1],["StringCoercion","ActionController","classes/ActionController/StringCoercion.html"," < Object","",1],["UglyBody","ActionController::StringCoercion","classes/ActionController/StringCoercion/UglyBody.html"," < ActiveSupport::BasicObject","",1],["TestCase","ActionController","classes/ActionController/TestCase.html"," < ActiveSupport::TestCase","Superclass for ActionController functional tests. Functional tests allow you to test a single controller",1],["Assertions","ActionController::TestCase","classes/ActionController/TestCase/Assertions.html"," < ","",1],["RaiseActionExceptions","ActionController::TestCase","classes/ActionController/TestCase/RaiseActionExceptions.html"," < ","When the request.remote_addr remains the default for testing, which is 0.0.0.0, the exception is simply",1],["TestProcess","ActionController","classes/ActionController/TestProcess.html"," < ","",1],["TestResponse","ActionController","classes/ActionController/TestResponse.html"," < Response","Integration test methods such as ActionController::Integration::Session#get and ActionController::Integration::Session#post",1],["TestUploadedFile","ActionController","classes/ActionController/TestUploadedFile.html"," < Object","",1],["Translation","ActionController","classes/ActionController/Translation.html"," < ","",1],["UploadedFile","ActionController","classes/ActionController/UploadedFile.html"," < ","",1],["UploadedStringIO","ActionController","classes/ActionController/UploadedStringIO.html"," < StringIO","",1],["UploadedTempfile","ActionController","classes/ActionController/UploadedTempfile.html"," < Tempfile","",1],["UrlWriter","ActionController","classes/ActionController/UrlWriter.html"," < ","In <b>routes.rb</b> one defines URL-to-controller mappings, but the reverse is also possible: an URL",1],["ClassMethods","ActionController::Verification","classes/ActionController/Verification/ClassMethods.html"," < ","This module provides a class-level method for specifying that certain actions are guarded against being",1],["Base","ActionMailer","classes/ActionMailer/Base.html"," < Object","Action Mailer allows you to send email from your application using a mailer model and views. = Mailer",1],["Base","ActionView","classes/ActionView/Base.html"," < Object","Action View templates can be written in three ways. If the template file has a <tt>.erb</tt> (or <tt>.rhtml</tt>)",1],["ProxyModule","ActionView::Base","classes/ActionView/Base/ProxyModule.html"," < Module","",1],["ActiveRecordHelper","ActionView::Helpers","classes/ActionView/Helpers/ActiveRecordHelper.html"," < ","The Active Record Helper makes it easier to create forms for records kept in instance variables. The",1],["AssetTagHelper","ActionView::Helpers","classes/ActionView/Helpers/AssetTagHelper.html"," < ","This module provides methods for generating HTML that links views to assets such as images, javascripts,",1],["AtomFeedHelper","ActionView::Helpers","classes/ActionView/Helpers/AtomFeedHelper.html"," < ","",1],["AtomBuilder","ActionView::Helpers::AtomFeedHelper","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html"," < Object","",1],["AtomFeedBuilder","ActionView::Helpers::AtomFeedHelper","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html"," < AtomBuilder","",1],["BenchmarkHelper","ActionView::Helpers","classes/ActionView/Helpers/BenchmarkHelper.html"," < ","This helper offers a method to measure the execution time of a block  in a template. ",1],["CacheHelper","ActionView::Helpers","classes/ActionView/Helpers/CacheHelper.html"," < ","This helper to exposes a method for caching of view fragments. See ActionController::Caching::Fragments",1],["CaptureHelper","ActionView::Helpers","classes/ActionView/Helpers/CaptureHelper.html"," < ","CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of",1],["ClassMethods","ActionView::Helpers","classes/ActionView/Helpers/ClassMethods.html"," < ","",1],["CsrfHelper","ActionView::Helpers","classes/ActionView/Helpers/CsrfHelper.html"," < ","",1],["DateHelper","ActionView::Helpers","classes/ActionView/Helpers/DateHelper.html"," < ","The Date Helper primarily creates select/option tags for different kinds of dates and date elements.",1],["DebugHelper","ActionView::Helpers","classes/ActionView/Helpers/DebugHelper.html"," < ","Provides a set of methods for making it easier to debug Rails objects. ",1],["FormHelper","ActionView::Helpers","classes/ActionView/Helpers/FormHelper.html"," < ","Form helpers are designed to make working with models much easier compared to using just standard HTML",1],["FormOptionsHelper","ActionView::Helpers","classes/ActionView/Helpers/FormOptionsHelper.html"," < ","Provides a number of methods for turning different kinds of containers into a set of option tags. ==",1],["FormTagHelper","ActionView::Helpers","classes/ActionView/Helpers/FormTagHelper.html"," < ","Provides a number of methods for creating form tags that doesn't rely on an Active Record object assigned",1],["JavaScriptHelper","ActionView::Helpers","classes/ActionView/Helpers/JavaScriptHelper.html"," < ","Provides functionality for working with JavaScript in your views. == Ajax, controls and visual effects",1],["NumberHelper","ActionView::Helpers","classes/ActionView/Helpers/NumberHelper.html"," < ","Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers,",1],["PrototypeHelper","ActionView::Helpers","classes/ActionView/Helpers/PrototypeHelper.html"," < ","Prototype[http://www.prototypejs.org/] is a JavaScript library that provides DOM[http://en.wikipedia.org/wiki/Document_Object_Model]",1],["GeneratorMethods","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html"," < ","JavaScriptGenerator generates blocks of JavaScript code that allow you to change the content and presentation",1],["RawOutputHelper","ActionView::Helpers","classes/ActionView/Helpers/RawOutputHelper.html"," < ","",1],["RecordIdentificationHelper","ActionView::Helpers","classes/ActionView/Helpers/RecordIdentificationHelper.html"," < ","",1],["RecordTagHelper","ActionView::Helpers","classes/ActionView/Helpers/RecordTagHelper.html"," < ","",1],["SanitizeHelper","ActionView::Helpers","classes/ActionView/Helpers/SanitizeHelper.html"," < ","The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements. These",1],["ScriptaculousHelper","ActionView::Helpers","classes/ActionView/Helpers/ScriptaculousHelper.html"," < ","Provides a set of helpers for calling Scriptaculous JavaScript  functions, including those which create",1],["TagHelper","ActionView::Helpers","classes/ActionView/Helpers/TagHelper.html"," < ","Provides methods to generate HTML tags programmatically when you can't use a Builder. By default, they",1],["TextHelper","ActionView::Helpers","classes/ActionView/Helpers/TextHelper.html"," < ","The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which",1],["TranslationHelper","ActionView::Helpers","classes/ActionView/Helpers/TranslationHelper.html"," < ","",1],["UrlHelper","ActionView::Helpers","classes/ActionView/Helpers/UrlHelper.html"," < ","Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see",1],["Partials","ActionView","classes/ActionView/Partials.html"," < ","There's also a convenience method for rendering sub templates within the current controller that depends",1],["ReloadableTemplate","ActionView","classes/ActionView/ReloadableTemplate.html"," < Template","",1],["ReloadablePath","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate/ReloadablePath.html"," < Template::Path","",1],["TemplateDeleted","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate/TemplateDeleted.html"," < ActionView::ActionViewError","",1],["Unfreezable","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate/Unfreezable.html"," < ","",1],["Template","ActionView","classes/ActionView/Template.html"," < Object","",1],["EagerPath","ActionView::Template","classes/ActionView/Template/EagerPath.html"," < Path","",1],["Path","ActionView::Template","classes/ActionView/Template/Path.html"," < Object","",1],["TemplateHandler","ActionView","classes/ActionView/TemplateHandler.html"," < Object","",1],["Builder","ActionView::TemplateHandlers","classes/ActionView/TemplateHandlers/Builder.html"," < TemplateHandler","",1],["Compilable","ActionView::TemplateHandlers","classes/ActionView/TemplateHandlers/Compilable.html"," < ","",1],["ClassMethods","ActionView::TemplateHandlers::Compilable","classes/ActionView/TemplateHandlers/Compilable/ClassMethods.html"," < ","",1],["ERB","ActionView::TemplateHandlers","classes/ActionView/TemplateHandlers/ERB.html"," < TemplateHandler","",1],["RJS","ActionView::TemplateHandlers","classes/ActionView/TemplateHandlers/RJS.html"," < TemplateHandler","",1],["TestCase","ActionView","classes/ActionView/TestCase.html"," < ActiveSupport::TestCase","",1],["TestController","ActionView::TestCase","classes/ActionView/TestCase/TestController.html"," < ActionController::Base","",1],["ActiveRecordError","ActiveRecord","classes/ActiveRecord/ActiveRecordError.html"," < StandardError","Generic Active Record exception class. ",1],["AdapterNotFound","ActiveRecord","classes/ActiveRecord/AdapterNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find database adapter specified in <tt>config/database.yml</tt> or programmatically.",1],["AdapterNotSpecified","ActiveRecord","classes/ActiveRecord/AdapterNotSpecified.html"," < ActiveRecordError","Raised when adapter not specified on connection (or configuration file <tt>config/database.yml</tt> misses",1],["ClassMethods","ActiveRecord::Aggregations","classes/ActiveRecord/Aggregations/ClassMethods.html"," < ","Active Record implements aggregation through a macro-like class method called +composed_of+ for representing",1],["ClassMethods","ActiveRecord::AssociationPreload","classes/ActiveRecord/AssociationPreload/ClassMethods.html"," < ","Implements the details of eager loading of ActiveRecord associations. Application developers should not",1],["AssociationTypeMismatch","ActiveRecord","classes/ActiveRecord/AssociationTypeMismatch.html"," < ActiveRecordError","Raised when an object assigned to an association has an incorrect type. class Ticket < ActiveRecord::Base",1],["ClassMethods","ActiveRecord::Associations","classes/ActiveRecord/Associations/ClassMethods.html"," < ","Associations are a set of macro-like class methods for tying objects together through foreign keys. They",1],["InnerJoinAssociation","ActiveRecord::Associations::ClassMethods::InnerJoinDependency","classes/ActiveRecord/Associations/ClassMethods/InnerJoinDependency/InnerJoinAssociation.html"," < JoinAssociation","",1],["HasOneThroughAssociation","ActiveRecord::Associations","classes/ActiveRecord/Associations/HasOneThroughAssociation.html"," < HasManyThroughAssociation","",1],["AttributeAssignmentError","ActiveRecord","classes/ActiveRecord/AttributeAssignmentError.html"," < ActiveRecordError","Raised when an error occurred while doing a mass assignment to an attribute through the <tt>attributes=</tt>",1],["ClassMethods","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html"," < ","Declare and check for suffixed attribute methods. ",1],["AutosaveAssociation","ActiveRecord","classes/ActiveRecord/AutosaveAssociation.html"," < ","AutosaveAssociation is a module that takes care of automatically saving your associations when the parent",1],["ClassMethods","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation/ClassMethods.html"," < ","",1],["Base","ActiveRecord","classes/ActiveRecord/Base.html"," < Object","Active Record objects don't specify their attributes directly, but rather infer them from the table definition",1],["ClassMethods","ActiveRecord::Batches","classes/ActiveRecord/Batches/ClassMethods.html"," < ","When processing large numbers of records, it's often a good idea to do so in batches to prevent memory",1],["ClassMethods","ActiveRecord::Calculations","classes/ActiveRecord/Calculations/ClassMethods.html"," < ","",1],["Callbacks","ActiveRecord","classes/ActiveRecord/Callbacks.html"," < ","Callbacks are hooks into the lifecycle of an Active Record object that allow you to trigger logic before",1],["ConfigurationError","ActiveRecord","classes/ActiveRecord/ConfigurationError.html"," < ActiveRecordError","Raised when association is being configured improperly or user tries to use offset and limit together",1],["AbstractAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html"," < Object","ActiveRecord supports multiple database systems. AbstractAdapter and related classes form the abstraction",1],["Column","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/Column.html"," < Object","An abstract definition of a column in a table. ",1],["Format","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column/Format.html"," < ","",1],["ConnectionHandler","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html"," < Object","ConnectionHandler is a collection of ConnectionPool objects. It is used for keeping separate connection",1],["ConnectionManagement","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html"," < Object","",1],["ConnectionPool","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html"," < Object","Connection pool base class for managing ActiveRecord database connections. == Introduction A connection",1],["DatabaseLimits","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html"," < ","",1],["DatabaseStatements","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html"," < ","",1],["MysqlAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html"," < AbstractAdapter","The MySQL adapter will work with both Ruby/MySQL, which is a Ruby-based MySQL adapter that comes bundled",1],["PostgreSQLAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html"," < AbstractAdapter","The PostgreSQL adapter works both with the native C (http://ruby.scripting.ca/postgres/) and the pure",1],["QueryCache","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/QueryCache.html"," < ","",1],["Quoting","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/Quoting.html"," < ","",1],["SQLiteAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html"," < AbstractAdapter","The SQLite adapter works with both the 2.x and 3.x series of SQLite with the sqlite-ruby drivers (available",1],["Version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html"," < Object","",1],["SchemaStatements","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html"," < ","",1],["Table","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/Table.html"," < Object","Represents a SQL table in an abstract way for updating a table. Also see TableDefinition and SchemaStatements#create_table",1],["TableDefinition","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html"," < Object","Represents the schema of an SQL table in an abstract way. This class provides methods for manipulating",1],["ConnectionNotEstablished","ActiveRecord","classes/ActiveRecord/ConnectionNotEstablished.html"," < ActiveRecordError","Raised when connection to the database could not been established (for example when <tt>connection=</tt>",1],["ConnectionTimeoutError","ActiveRecord","classes/ActiveRecord/ConnectionTimeoutError.html"," < ConnectionNotEstablished","Raised when a connection could not be obtained within the connection acquisition timeout period. ",1],["DangerousAttributeError","ActiveRecord","classes/ActiveRecord/DangerousAttributeError.html"," < ActiveRecordError","Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active",1],["Dirty","ActiveRecord","classes/ActiveRecord/Dirty.html"," < ","Track unsaved attribute changes. A newly instantiated object is unchanged: person = Person.find_by_name('uncle",1],["ClassMethods","ActiveRecord::Dirty","classes/ActiveRecord/Dirty/ClassMethods.html"," < ","",1],["DynamicFinderMatch","ActiveRecord","classes/ActiveRecord/DynamicFinderMatch.html"," < Object","",1],["DynamicScopeMatch","ActiveRecord","classes/ActiveRecord/DynamicScopeMatch.html"," < Object","",1],["Error","ActiveRecord","classes/ActiveRecord/Error.html"," < Object","",1],["Errors","ActiveRecord","classes/ActiveRecord/Errors.html"," < Object","Active Record validation is reported to and from this object, which is used by Base#save to determine",1],["Locking","ActiveRecord","classes/ActiveRecord/Locking.html"," < ","",1],["Optimistic","ActiveRecord::Locking","classes/ActiveRecord/Locking/Optimistic.html"," < ","== What is Optimistic Locking Optimistic locking allows multiple users to access the same record for",1],["ClassMethods","ActiveRecord::Locking::Optimistic","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html"," < ","",1],["Pessimistic","ActiveRecord::Locking","classes/ActiveRecord/Locking/Pessimistic.html"," < ","Locking::Pessimistic provides support for row-level locking using SELECT ... FOR UPDATE and other lock",1],["Migration","ActiveRecord","classes/ActiveRecord/Migration.html"," < Object","Migrations can manage the evolution of a schema used by several physical databases. It's a solution to",1],["MigrationProxy","ActiveRecord","classes/ActiveRecord/MigrationProxy.html"," < Object","MigrationProxy is used to defer loading of the actual migration classes until they are needed ",1],["MissingAttributeError","ActiveRecord","classes/ActiveRecord/MissingAttributeError.html"," < NoMethodError","Raised when you've tried to access a column which wasn't loaded by your finder. Typically this is because",1],["MultiparameterAssignmentErrors","ActiveRecord","classes/ActiveRecord/MultiparameterAssignmentErrors.html"," < ActiveRecordError","Raised when there are multiple errors while doing a mass assignment through the +attributes+ method.",1],["NamedScope","ActiveRecord","classes/ActiveRecord/NamedScope.html"," < ","",1],["ClassMethods","ActiveRecord::NamedScope","classes/ActiveRecord/NamedScope/ClassMethods.html"," < ","",1],["Scope","ActiveRecord::NamedScope","classes/ActiveRecord/NamedScope/Scope.html"," < Object","",1],["ClassMethods","ActiveRecord::NestedAttributes","classes/ActiveRecord/NestedAttributes/ClassMethods.html"," < ","== Nested Attributes Nested attributes allow you to save attributes on associated records through the",1],["TooManyRecords","ActiveRecord::NestedAttributes","classes/ActiveRecord/NestedAttributes/TooManyRecords.html"," < ActiveRecordError","",1],["Observer","ActiveRecord","classes/ActiveRecord/Observer.html"," < Object","Observer classes respond to lifecycle callbacks to implement trigger-like behavior outside the original",1],["ClassMethods","ActiveRecord::Observing","classes/ActiveRecord/Observing/ClassMethods.html"," < ","",1],["PreparedStatementInvalid","ActiveRecord","classes/ActiveRecord/PreparedStatementInvalid.html"," < ActiveRecordError","Raised when number of bind variables in statement given to <tt>:condition</tt> key (for example, when",1],["QueryCache","ActiveRecord","classes/ActiveRecord/QueryCache.html"," < Object","",1],["ClassMethods","ActiveRecord::QueryCache","classes/ActiveRecord/QueryCache/ClassMethods.html"," < ","",1],["ReadOnlyRecord","ActiveRecord","classes/ActiveRecord/ReadOnlyRecord.html"," < ActiveRecordError","Raised on attempt to update record that is instantiated as read only. ",1],["RecordInvalid","ActiveRecord","classes/ActiveRecord/RecordInvalid.html"," < ActiveRecordError","Raised by <tt>save!</tt> and <tt>create!</tt> when the record is invalid.  Use the +record+ method to",1],["RecordNotFound","ActiveRecord","classes/ActiveRecord/RecordNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find record by given id or set of ids. ",1],["RecordNotSaved","ActiveRecord","classes/ActiveRecord/RecordNotSaved.html"," < ActiveRecordError","Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods when record cannot be saved",1],["ClassMethods","ActiveRecord::Reflection","classes/ActiveRecord/Reflection/ClassMethods.html"," < ","Reflection allows you to interrogate Active Record classes and objects about their associations and aggregations.",1],["MacroReflection","ActiveRecord::Reflection","classes/ActiveRecord/Reflection/MacroReflection.html"," < Object","Abstract base class for AggregateReflection and AssociationReflection that describes the interface available",1],["Rollback","ActiveRecord","classes/ActiveRecord/Rollback.html"," < ActiveRecordError","ActiveRecord::Transactions::ClassMethods.transaction uses this exception to distinguish a deliberate",1],["Schema","ActiveRecord","classes/ActiveRecord/Schema.html"," < Migration","Allows programmers to programmatically define a schema in a portable DSL. This means you can define tables,",1],["Serialization","ActiveRecord","classes/ActiveRecord/Serialization.html"," < ","",1],["SerializationTypeMismatch","ActiveRecord","classes/ActiveRecord/SerializationTypeMismatch.html"," < ActiveRecordError","Raised when unserialized object's type mismatches one specified for serializable field. ",1],["SessionStore","ActiveRecord","classes/ActiveRecord/SessionStore.html"," < ActionController::Session::AbstractStore","A session store backed by an Active Record class.  A default class is provided, but any object duck-typing",1],["Session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore/Session.html"," < ActiveRecord::Base","The default Active Record class. ",1],["SqlBypass","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore/SqlBypass.html"," < Object","A barebones session store which duck-types with the default session store but bypasses Active Record",1],["StaleObjectError","ActiveRecord","classes/ActiveRecord/StaleObjectError.html"," < ActiveRecordError","Raised on attempt to save stale record. Record is stale when it's being saved in another query after",1],["StatementInvalid","ActiveRecord","classes/ActiveRecord/StatementInvalid.html"," < ActiveRecordError","Raised when SQL statement cannot be executed by the database (for example, it's often the case for MySQL",1],["TestFixtures","ActiveRecord","classes/ActiveRecord/TestFixtures.html"," < ","",1],["ClassMethods","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures/ClassMethods.html"," < ","",1],["Timestamp","ActiveRecord","classes/ActiveRecord/Timestamp.html"," < ","Active Record automatically timestamps create and update operations if the table has fields named created_at/created_on",1],["Transactions","ActiveRecord","classes/ActiveRecord/Transactions.html"," < ","See ActiveRecord::Transactions::ClassMethods for documentation. ",1],["ClassMethods","ActiveRecord::Transactions","classes/ActiveRecord/Transactions/ClassMethods.html"," < ","Transactions are protective blocks where SQL statements are only permanent if they can all succeed as",1],["UnknownAttributeError","ActiveRecord","classes/ActiveRecord/UnknownAttributeError.html"," < NoMethodError","Raised when unknown attributes are supplied via mass assignment. ",1],["Validations","ActiveRecord","classes/ActiveRecord/Validations.html"," < ","Please do have a look at ActiveRecord::Validations::ClassMethods for a higher level of validations. Active",1],["ClassMethods","ActiveRecord::Validations","classes/ActiveRecord/Validations/ClassMethods.html"," < ","Active Record classes can implement validations in several ways. The highest level, easiest to read,",1],["ActiveResource","activeresource-2.3.14/lib/active_resource.rb","classes/ActiveResource.html"," < ","",1],["BadRequest","ActiveResource","classes/ActiveResource/BadRequest.html"," < ClientError","400 Bad Request ",1],["Base","ActiveResource","classes/ActiveResource/Base.html"," < Object","ActiveResource::Base is the main class for mapping RESTful resources as models in a Rails application.",1],["ClientError","ActiveResource","classes/ActiveResource/ClientError.html"," < ConnectionError","4xx Client Error ",1],["Connection","ActiveResource","classes/ActiveResource/Connection.html"," < Object","Class to handle connections to remote web services. This class is used by ActiveResource::Base to interface",1],["CustomMethods","ActiveResource","classes/ActiveResource/CustomMethods.html"," < ","A module to support custom REST methods and sub-resources, allowing you to break out of the \"default\"",1],["ClassMethods","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods/ClassMethods.html"," < ","",1],["InstanceMethods","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html"," < ","",1],["Errors","ActiveResource","classes/ActiveResource/Errors.html"," < Object","Active Resource validation is reported to and from this object, which is used by Base#save to determine",1],["ForbiddenAccess","ActiveResource","classes/ActiveResource/ForbiddenAccess.html"," < ClientError","403 Forbidden ",1],["Formats","ActiveResource","classes/ActiveResource/Formats.html"," < ","",1],["JsonFormat","ActiveResource::Formats","classes/ActiveResource/Formats/JsonFormat.html"," < ","",1],["XmlFormat","ActiveResource::Formats","classes/ActiveResource/Formats/XmlFormat.html"," < ","",1],["HttpMock","ActiveResource","classes/ActiveResource/HttpMock.html"," < Object","One thing that has always been a pain with remote web services is testing.  The HttpMock class makes",1],["InvalidRequestError","ActiveResource","classes/ActiveResource/InvalidRequestError.html"," < StandardError","",1],["Request","ActiveResource","classes/ActiveResource/Request.html"," < Object","",1],["ResourceConflict","ActiveResource","classes/ActiveResource/ResourceConflict.html"," < ClientError","409 Conflict ",1],["ResourceGone","ActiveResource","classes/ActiveResource/ResourceGone.html"," < ClientError","410 Gone ",1],["ResourceNotFound","ActiveResource","classes/ActiveResource/ResourceNotFound.html"," < ClientError","404 Not Found ",1],["Response","ActiveResource","classes/ActiveResource/Response.html"," < Object","",1],["SSLError","ActiveResource","classes/ActiveResource/SSLError.html"," < ConnectionError","Raised when a OpenSSL::SSL::SSLError occurs. ",1],["ServerError","ActiveResource","classes/ActiveResource/ServerError.html"," < ConnectionError","5xx Server Error ",1],["TimeoutError","ActiveResource","classes/ActiveResource/TimeoutError.html"," < ConnectionError","Raised when a Timeout::Error occurs. ",1],["UnauthorizedAccess","ActiveResource","classes/ActiveResource/UnauthorizedAccess.html"," < ClientError","401 Unauthorized ",1],["Validations","ActiveResource","classes/ActiveResource/Validations.html"," < ","Module to support validation and errors with Active Resource objects. The module overrides Base#save",1],["BacktraceCleaner","ActiveSupport","classes/ActiveSupport/BacktraceCleaner.html"," < Object","Many backtraces include too much information that's not relevant for the context. This makes it hard",1],["Base64","ActiveSupport","classes/ActiveSupport/Base64.html"," < ","Base64 provides utility methods for encoding and de-coding binary data  using a base 64 representation.",1],["BufferedLogger","ActiveSupport","classes/ActiveSupport/BufferedLogger.html"," < Object","Inspired by the buffered logger idea by Ezra ",1],["Severity","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger/Severity.html"," < ","",1],["Cache","ActiveSupport","classes/ActiveSupport/Cache.html"," < ","See ActiveSupport::Cache::Store for documentation. ",1],["CompressedMemCacheStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/CompressedMemCacheStore.html"," < MemCacheStore","",1],["FileStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/FileStore.html"," < Store","A cache store implementation which stores everything on the filesystem. ",1],["MemCacheStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/MemCacheStore.html"," < Store","A cache store implementation which stores data in Memcached: http://www.danga.com/memcached/ This is",1],["MemoryStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/MemoryStore.html"," < Store","A cache store implementation which stores everything into memory in the same process. If you're running",1],["Store","ActiveSupport::Cache","classes/ActiveSupport/Cache/Store.html"," < Object","An abstract cache store class. There are multiple cache store implementations, each having its own additional",1],["Strategy","ActiveSupport::Cache","classes/ActiveSupport/Cache/Strategy.html"," < ","",1],["LocalCache","ActiveSupport::Cache::Strategy","classes/ActiveSupport/Cache/Strategy/LocalCache.html"," < ","",1],["SynchronizedMemoryStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html"," < MemoryStore","Like MemoryStore, but thread-safe. ",1],["Callbacks","ActiveSupport","classes/ActiveSupport/Callbacks.html"," < ","Callbacks are hooks into the lifecycle of an object that allow you to trigger logic before or after an",1],["Callback","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks/Callback.html"," < Object","",1],["CallbackChain","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks/CallbackChain.html"," < Array","",1],["ClassMethods","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks/ClassMethods.html"," < ","",1],["Access","ActiveSupport::CoreExtensions::Array","classes/ActiveSupport/CoreExtensions/Array/Access.html"," < ","Makes it easier to access parts of an array. ",1],["Conversions","ActiveSupport::CoreExtensions::Array","classes/ActiveSupport/CoreExtensions/Array/Conversions.html"," < ","",1],["ExtractOptions","ActiveSupport::CoreExtensions::Array","classes/ActiveSupport/CoreExtensions/Array/ExtractOptions.html"," < ","",1],["Grouping","ActiveSupport::CoreExtensions::Array","classes/ActiveSupport/CoreExtensions/Array/Grouping.html"," < ","",1],["RandomAccess","ActiveSupport::CoreExtensions::Array","classes/ActiveSupport/CoreExtensions/Array/RandomAccess.html"," < ","",1],["Wrapper","ActiveSupport::CoreExtensions::Array","classes/ActiveSupport/CoreExtensions/Array/Wrapper.html"," < ","",1],["Encoding","ActiveSupport::CoreExtensions::Base64","classes/ActiveSupport/CoreExtensions/Base64/Encoding.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::BigDecimal","classes/ActiveSupport/CoreExtensions/BigDecimal/Conversions.html"," < ","",1],["Behavior","ActiveSupport::CoreExtensions::Date","classes/ActiveSupport/CoreExtensions/Date/Behavior.html"," < ","",1],["Calculations","ActiveSupport::CoreExtensions::Date","classes/ActiveSupport/CoreExtensions/Date/Calculations.html"," < ","Enables the use of time calculations within Date itself ",1],["ClassMethods","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::Date","classes/ActiveSupport/CoreExtensions/Date/Conversions.html"," < ","Converting dates to formatted strings, times, and datetimes. ",1],["Calculations","ActiveSupport::CoreExtensions::DateTime","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html"," < ","Enables the use of time calculations within DateTime itself ",1],["ClassMethods","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::DateTime","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html"," < ","Converting datetimes to formatted strings, dates, and times. ",1],["Atomic","ActiveSupport::CoreExtensions::File","classes/ActiveSupport/CoreExtensions/File/Atomic.html"," < ","",1],["Rounding","ActiveSupport::CoreExtensions::Float","classes/ActiveSupport/CoreExtensions/Float/Rounding.html"," < ","",1],["Time","ActiveSupport::CoreExtensions::Float","classes/ActiveSupport/CoreExtensions/Float/Time.html"," < ","",1],["ClassMethods","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/Conversions.html"," < ","",1],["DeepMerge","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/DeepMerge.html"," < ","Allows for deep merging ",1],["Diff","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/Diff.html"," < ","",1],["Except","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/Except.html"," < ","Return a hash that includes everything but the given keys. This is useful for limiting a set of parameters",1],["Keys","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/Keys.html"," < ","",1],["ReverseMerge","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/ReverseMerge.html"," < ","Allows for reverse merging two hashes where the keys in the calling hash take precedence over those in",1],["Slice","ActiveSupport::CoreExtensions::Hash","classes/ActiveSupport/CoreExtensions/Hash/Slice.html"," < ","Slice a hash to include only the given keys. This is useful for limiting an options hash to valid keys",1],["EvenOdd","ActiveSupport::CoreExtensions::Integer","classes/ActiveSupport/CoreExtensions/Integer/EvenOdd.html"," < ","For checking if a fixnum is even or odd. 2.even?  # => true 2.odd?   # => false 1.even?  # => false 1.odd?",1],["Inflections","ActiveSupport::CoreExtensions::Integer","classes/ActiveSupport/CoreExtensions/Integer/Inflections.html"," < ","",1],["Time","ActiveSupport::CoreExtensions::Integer","classes/ActiveSupport/CoreExtensions/Integer/Time.html"," < ","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",1],["Module","ActiveSupport::CoreExtensions","classes/ActiveSupport/CoreExtensions/Module.html"," < ","Various extensions for the Ruby core Module class. ",1],["Bytes","ActiveSupport::CoreExtensions::Numeric","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html"," < ","Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes ",1],["Conversions","ActiveSupport::CoreExtensions::Numeric","classes/ActiveSupport/CoreExtensions/Numeric/Conversions.html"," < ","",1],["Time","ActiveSupport::CoreExtensions::Numeric","classes/ActiveSupport/CoreExtensions/Numeric/Time.html"," < ","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",1],["CleanWithin","ActiveSupport::CoreExtensions::Pathname","classes/ActiveSupport/CoreExtensions/Pathname/CleanWithin.html"," < ","",1],["BlocklessStep","ActiveSupport::CoreExtensions::Range","classes/ActiveSupport/CoreExtensions/Range/BlocklessStep.html"," < ","Return an array when step is called without a block. ",1],["Conversions","ActiveSupport::CoreExtensions::Range","classes/ActiveSupport/CoreExtensions/Range/Conversions.html"," < ","Getting ranges in different convenient string representations and other objects ",1],["IncludeRange","ActiveSupport::CoreExtensions::Range","classes/ActiveSupport/CoreExtensions/Range/IncludeRange.html"," < ","Check if a Range includes another Range. ",1],["Overlaps","ActiveSupport::CoreExtensions::Range","classes/ActiveSupport/CoreExtensions/Range/Overlaps.html"," < ","Check if Ranges overlap. ",1],["Behavior","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/Behavior.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/Conversions.html"," < ","Converting strings to other objects ",1],["Filters","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/Filters.html"," < ","",1],["Inflections","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/Inflections.html"," < ","String inflections define new methods on the String class to transform names for different purposes.",1],["Iterators","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/Iterators.html"," < ","Custom string iterators ",1],["Multibyte","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/Multibyte.html"," < ","Implements multibyte methods for easier access to multibyte characters in a String instance. ",1],["StartsEndsWith","ActiveSupport::CoreExtensions::String","classes/ActiveSupport/CoreExtensions/String/StartsEndsWith.html"," < ","Additional string tests. ",1],["Behavior","ActiveSupport::CoreExtensions::Time","classes/ActiveSupport/CoreExtensions/Time/Behavior.html"," < ","",1],["Calculations","ActiveSupport::CoreExtensions::Time","classes/ActiveSupport/CoreExtensions/Time/Calculations.html"," < ","Enables the use of time calculations within Time itself ",1],["ClassMethods","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations/ClassMethods.html"," < ","",1],["Conversions","ActiveSupport::CoreExtensions::Time","classes/ActiveSupport/CoreExtensions/Time/Conversions.html"," < ","Converting times to formatted strings, dates, and datetimes. ",1],["Zones","ActiveSupport::CoreExtensions::Time","classes/ActiveSupport/CoreExtensions/Time/Zones.html"," < ","",1],["ClassMethods","ActiveSupport::CoreExtensions::Time::Zones","classes/ActiveSupport/CoreExtensions/Time/Zones/ClassMethods.html"," < ","",1],["DeprecatedObjectProxy","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html"," < DeprecationProxy","",1],["Duration","ActiveSupport","classes/ActiveSupport/Duration.html"," < BasicObject","Provides accurate date and time measurements using Date#advance and  Time#advance, respectively. It mainly",1],["Gzip","ActiveSupport","classes/ActiveSupport/Gzip.html"," < ","A convenient wrapper for the zlib standard library that allows compression/decompression of strings with",1],["Stream","ActiveSupport::Gzip","classes/ActiveSupport/Gzip/Stream.html"," < StringIO","",1],["Inflector","ActiveSupport","classes/ActiveSupport/Inflector.html"," < ","The Inflector transforms words from singular to plural, class names to table names, modularized class",1],["Inflections","ActiveSupport::Inflector","classes/ActiveSupport/Inflector/Inflections.html"," < Object","A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify",1],["JSON","ActiveSupport","classes/ActiveSupport/JSON.html"," < ","",1],["Backends","ActiveSupport::JSON","classes/ActiveSupport/JSON/Backends.html"," < ","",1],["JSONGem","ActiveSupport::JSON::Backends","classes/ActiveSupport/JSON/Backends/JSONGem.html"," < ","",1],["Yajl","ActiveSupport::JSON::Backends","classes/ActiveSupport/JSON/Backends/Yajl.html"," < ","",1],["Yaml","ActiveSupport::JSON::Backends","classes/ActiveSupport/JSON/Backends/Yaml.html"," < ","",1],["CircularReferenceError","ActiveSupport::JSON::Encoding","classes/ActiveSupport/JSON/Encoding/CircularReferenceError.html"," < StandardError","",1],["Variable","ActiveSupport::JSON","classes/ActiveSupport/JSON/Variable.html"," < String","A string that returns itself as its JSON-encoded form. ",1],["Memoizable","ActiveSupport","classes/ActiveSupport/Memoizable.html"," < ","",1],["InstanceMethods","ActiveSupport::Memoizable","classes/ActiveSupport/Memoizable/InstanceMethods.html"," < ","",1],["MessageEncryptor","ActiveSupport","classes/ActiveSupport/MessageEncryptor.html"," < Object","MessageEncryptor is a simple way to encrypt values which get stored somewhere  you don't trust. The cipher",1],["InvalidMessage","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor/InvalidMessage.html"," < StandardError","",1],["MessageVerifier","ActiveSupport","classes/ActiveSupport/MessageVerifier.html"," < Object","MessageVerifier makes it easy to generate and verify messages which are signed to prevent tampering.",1],["InvalidSignature","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier/InvalidSignature.html"," < StandardError","",1],["ModelName","ActiveSupport","classes/ActiveSupport/ModelName.html"," < String","",1],["Chars","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/Chars.html"," < Object","Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive",1],["Codepoint","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/Codepoint.html"," < Object","Holds data about a codepoint in the Unicode database ",1],["EncodingError","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/EncodingError.html"," < StandardError","Raised when a problem with the encoding was found. ",1],["UnicodeDatabase","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/UnicodeDatabase.html"," < Object","Holds static data from the Unicode database ",1],["Rescuable","ActiveSupport","classes/ActiveSupport/Rescuable.html"," < ","Rescuable module adds support for easier exception handling. ",1],["ClassMethods","ActiveSupport::Rescuable","classes/ActiveSupport/Rescuable/ClassMethods.html"," < ","",1],["SafeBuffer","ActiveSupport","classes/ActiveSupport/SafeBuffer.html"," < String","",1],["SecureRandom","ActiveSupport","classes/ActiveSupport/SecureRandom.html"," < ","= Secure random number generator interface. This library is an interface for secure random number generator",1],["StringInquirer","ActiveSupport","classes/ActiveSupport/StringInquirer.html"," < String","Wrapping a string in this class gives you a prettier way to test for equality. The value returned by",1],["TestCase","ActiveSupport","classes/ActiveSupport/TestCase.html"," < ::Test::Unit::TestCase","",1],["Testing","ActiveSupport","classes/ActiveSupport/Testing.html"," < ","",1],["Assertions","ActiveSupport::Testing","classes/ActiveSupport/Testing/Assertions.html"," < ","",1],["Declarative","ActiveSupport::Testing","classes/ActiveSupport/Testing/Declarative.html"," < ","",1],["Performance","ActiveSupport::Testing","classes/ActiveSupport/Testing/Performance.html"," < ","",1],["Benchmarker","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Benchmarker.html"," < Performer","",1],["Metrics","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Metrics.html"," < ","",1],["Base","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Base.html"," < Object","",1],["CpuTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html"," < Time","",1],["GcRuns","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html"," < Base","",1],["GcTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html"," < Base","",1],["Memory","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html"," < Base","",1],["Objects","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html"," < Base","",1],["ProcessTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/ProcessTime.html"," < Time","",1],["Time","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Time.html"," < Base","",1],["WallTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html"," < Time","",1],["Performer","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Performer.html"," < Object","",1],["Profiler","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Profiler.html"," < Performer","",1],["SetupAndTeardown","ActiveSupport::Testing","classes/ActiveSupport/Testing/SetupAndTeardown.html"," < ","",1],["ForClassicTestUnit","ActiveSupport::Testing::SetupAndTeardown","classes/ActiveSupport/Testing/SetupAndTeardown/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::SetupAndTeardown","classes/ActiveSupport/Testing/SetupAndTeardown/ForMiniTest.html"," < ","",1],["TimeWithZone","ActiveSupport","classes/ActiveSupport/TimeWithZone.html"," < Object","A Time-like class that can represent a time in any time zone. Necessary because standard Ruby Time instances",1],["TimeZone","ActiveSupport","classes/ActiveSupport/TimeZone.html"," < Object","",1],["XmlMini","ActiveSupport","classes/ActiveSupport/XmlMini.html"," < ","= XmlMini To use the much faster libxml parser: gem 'libxml-ruby', '=0.9.7' XmlMini.backend = 'LibXML'",1],["XmlMini_LibXMLSAX","ActiveSupport","classes/ActiveSupport/XmlMini_LibXMLSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_LibXMLSAX","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html"," < Object","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["Conversions","ActiveSupport::XmlMini_Nokogiri","classes/ActiveSupport/XmlMini_Nokogiri/Conversions.html"," < ","",1],["Document","ActiveSupport::XmlMini_Nokogiri::Conversions","classes/ActiveSupport/XmlMini_Nokogiri/Conversions/Document.html"," < ","",1],["Node","ActiveSupport::XmlMini_Nokogiri::Conversions","classes/ActiveSupport/XmlMini_Nokogiri/Conversions/Node.html"," < ","",1],["XmlMini_NokogiriSAX","ActiveSupport","classes/ActiveSupport/XmlMini_NokogiriSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_NokogiriSAX","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html"," < Nokogiri::XML::SAX::Document","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["BlankSlate","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/blankslate.rb","classes/BlankSlate.html"," < Object","BlankSlate provides an abstract base class with no predefined methods (except for <tt>\\_\\_send__</tt>",1],["Builder","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/builder/blankslate.rb","classes/Builder.html"," < ","BlankSlate has been promoted to a top level name and is now available as a standalone gem.  We make the",1],["CSS","Builder","classes/Builder/CSS.html"," < BlankSlate","Create a Cascading Style Sheet (CSS) using Ruby. Example usage: css = Builder::CSS.new text_color   ",1],["IllegalBlockError","Builder","classes/Builder/IllegalBlockError.html"," < RuntimeError","Generic error for builder ",1],["XmlBase","Builder","classes/Builder/XmlBase.html"," < BlankSlate","XmlBase is a base class for building XML builders.  See Builder::XmlMarkup and Builder::XmlEvents for",1],["XmlEvents","Builder","classes/Builder/XmlEvents.html"," < XmlMarkup","Create a series of SAX-like XML events (e.g. start_tag, end_tag) from the markup code.  XmlEvent objects",1],["XmlMarkup","Builder","classes/Builder/XmlMarkup.html"," < XmlBase","Create XML markup easily.  All (well, almost all) methods sent to an XmlMarkup object will be translated",1],["Cookie","CGI","classes/CGI/Cookie.html"," < DelegateClass(Array)","",1],["QueryExtension","CGI","classes/CGI/QueryExtension.html"," < ","",1],["Commands","rails-2.3.14/lib/commands/plugin.rb","classes/Commands.html"," < ","",1],["Discover","Commands","classes/Commands/Discover.html"," < Object","",1],["Info","Commands","classes/Commands/Info.html"," < Object","",1],["Install","Commands","classes/Commands/Install.html"," < Object","",1],["List","Commands","classes/Commands/List.html"," < Object","",1],["Plugin","Commands","classes/Commands/Plugin.html"," < Object","",1],["Remove","Commands","classes/Commands/Remove.html"," < Object","",1],["Source","Commands","classes/Commands/Source.html"," < Object","",1],["Sources","Commands","classes/Commands/Sources.html"," < Object","",1],["Unsource","Commands","classes/Commands/Unsource.html"," < Object","",1],["Update","Commands","classes/Commands/Update.html"," < Object","",1],["Continuum","activesupport-2.3.14/lib/active_support/vendor/memcache-client-1.7.4/memcache.rb","classes/Continuum.html"," < ","",1],["Entry","Continuum","classes/Continuum/Entry.html"," < Object","",1],["DateTime","activesupport-2.3.14/lib/active_support/core_ext/date_time.rb","classes/DateTime.html"," < Object","",1],["Dir","rails-2.3.14/lib/rails_generator/lookup.rb","classes/Dir.html"," < Object","",1],["DispatchServlet","rails-2.3.14/lib/webrick_server.rb","classes/DispatchServlet.html"," < WEBrick::HTTPServlet::AbstractServlet","A custom dispatch servlet for use with WEBrick. It dispatches requests (using the Rails Dispatcher) to",1],["ERB","activesupport-2.3.14/lib/active_support/core_ext/string/output_safety.rb","classes/ERB.html"," < Object","",1],["Util","ERB","classes/ERB/Util.html"," < ","",1],["Enumerable","activesupport-2.3.14/lib/active_support/core_ext/enumerable.rb","classes/Enumerable.html"," < ","",1],["Fixnum","activesupport-2.3.14/lib/active_support/core_ext/string/output_safety.rb","classes/Fixnum.html"," < Object","Enhance the Fixnum class with a XML escaped character conversion. ",1],["Fixtures","activerecord-2.3.14/lib/active_record/fixtures.rb","classes/Fixtures.html"," < (RUBY_VERSION < '1.9' ? YAML::Omap : Hash)","Fixtures are a way of organizing data that you want to test against; in short, sample data. = Fixture",1],["GetText","activesupport-2.3.14/lib/active_support/vendor/i18n-0.4.1/i18n/gettext/po_parser.rb","classes/GetText.html"," < ","",1],["PoParser","GetText","classes/GetText/PoParser.html"," < Racc::Parser","",1],["FullSanitizer","HTML","classes/HTML/FullSanitizer.html"," < Sanitizer","",1],["LinkSanitizer","HTML","classes/HTML/LinkSanitizer.html"," < FullSanitizer","",1],["Sanitizer","HTML","classes/HTML/Sanitizer.html"," < Object","",1],["Selector","HTML","classes/HTML/Selector.html"," < Object","Selects HTML elements using CSS 2 selectors. The +Selector+ class uses CSS selector expressions to match",1],["WhiteListSanitizer","HTML","classes/HTML/WhiteListSanitizer.html"," < Sanitizer","",1],["HashWithIndifferentAccess","activesupport-2.3.14/lib/active_support/core_ext/hash/indifferent_access.rb","classes/HashWithIndifferentAccess.html"," < Hash","This class has dubious semantics and we only have it so that people can write params[:key] instead of",1],["I18n","activesupport-2.3.14/lib/active_support/vendor/i18n-0.4.1/i18n/backend/active_record/missing.rb","classes/I18n.html"," < ","This extension stores translation stub records for missing translations to the database. This is useful",1],["ArgumentError","I18n","classes/I18n/ArgumentError.html"," < ::ArgumentError","",1],["Backend","I18n","classes/I18n/Backend.html"," < ","",1],["ActiveRecord","I18n::Backend","classes/I18n/Backend/ActiveRecord.html"," < Object","ActiveRecord model used to store actual translations to the database. This model expects a table like",1],["Implementation","I18n::Backend::ActiveRecord","classes/I18n/Backend/ActiveRecord/Implementation.html"," < ","",1],["Missing","I18n::Backend::ActiveRecord","classes/I18n/Backend/ActiveRecord/Missing.html"," < ","",1],["StoreProcs","I18n::Backend::ActiveRecord","classes/I18n/Backend/ActiveRecord/StoreProcs.html"," < ","",1],["Translation","I18n::Backend::ActiveRecord","classes/I18n/Backend/ActiveRecord/Translation.html"," < ::ActiveRecord::Base","",1],["Base","I18n::Backend","classes/I18n/Backend/Base.html"," < ","",1],["Cache","I18n::Backend","classes/I18n/Backend/Cache.html"," < ","TODO Should the cache be cleared if new translations are stored? ",1],["Cascade","I18n::Backend","classes/I18n/Backend/Cascade.html"," < ","",1],["Chain","I18n::Backend","classes/I18n/Backend/Chain.html"," < Object","Backend that chains multiple other backends and checks each of them when a translation needs to be looked",1],["Cldr","I18n::Backend","classes/I18n/Backend/Cldr.html"," < ","",1],["Fallbacks","I18n::Backend","classes/I18n/Backend/Fallbacks.html"," < ","",1],["Flatten","I18n::Backend","classes/I18n/Backend/Flatten.html"," < ","This module contains several helpers to assist flattening translations. You may want to flatten translations",1],["Gettext","I18n::Backend","classes/I18n/Backend/Gettext.html"," < ","",1],["PoData","I18n::Backend::Gettext","classes/I18n/Backend/Gettext/PoData.html"," < Hash","",1],["InterpolationCompiler","I18n::Backend","classes/I18n/Backend/InterpolationCompiler.html"," < ","",1],["Compiler","I18n::Backend::InterpolationCompiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html"," < ","",1],["KeyValue","I18n::Backend","classes/I18n/Backend/KeyValue.html"," < Object","This is a basic backend for key value stores. It receives on initialization the store, which should respond",1],["Implementation","I18n::Backend::KeyValue","classes/I18n/Backend/KeyValue/Implementation.html"," < ","",1],["Memoize","I18n::Backend","classes/I18n/Backend/Memoize.html"," < ","",1],["Metadata","I18n::Backend","classes/I18n/Backend/Metadata.html"," < ","",1],["Pluralization","I18n::Backend","classes/I18n/Backend/Pluralization.html"," < ","",1],["Simple","I18n::Backend","classes/I18n/Backend/Simple.html"," < Object","A simple backend that reads translations from YAML files and stores them in an in-memory hash. Relies",1],["Implementation","I18n::Backend::Simple","classes/I18n/Backend/Simple/Implementation.html"," < ","",1],["Transliterator","I18n::Backend","classes/I18n/Backend/Transliterator.html"," < ","",1],["HashTransliterator","I18n::Backend::Transliterator","classes/I18n/Backend/Transliterator/HashTransliterator.html"," < Object","A transliterator which accepts a Hash of characters as its translation rule. ",1],["ProcTransliterator","I18n::Backend::Transliterator","classes/I18n/Backend/Transliterator/ProcTransliterator.html"," < Object","A transliterator which accepts a Proc as its transliteration rule. ",1],["Config","I18n","classes/I18n/Config.html"," < Object","",1],["Gettext","I18n","classes/I18n/Gettext.html"," < ","",1],["Helpers","I18n::Gettext","classes/I18n/Gettext/Helpers.html"," < ","Implements classical Gettext style accessors. To use this include the module to the global namespace",1],["InvalidLocale","I18n","classes/I18n/InvalidLocale.html"," < ArgumentError","",1],["InvalidPluralizationData","I18n","classes/I18n/InvalidPluralizationData.html"," < ArgumentError","",1],["Locale","I18n","classes/I18n/Locale.html"," < ","",1],["Fallbacks","I18n::Locale","classes/I18n/Locale/Fallbacks.html"," < Hash","",1],["Tag","I18n::Locale","classes/I18n/Locale/Tag.html"," < ","",1],["Parents","I18n::Locale::Tag","classes/I18n/Locale/Tag/Parents.html"," < ","",1],["Rfc4646","I18n::Locale::Tag","classes/I18n/Locale/Tag/Rfc4646.html"," < Struct.new(*RFC4646_SUBTAGS)","",1],["Parser","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646/Parser.html"," < ","",1],["Simple","I18n::Locale::Tag","classes/I18n/Locale/Tag/Simple.html"," < Object","",1],["MissingInterpolationArgument","I18n","classes/I18n/MissingInterpolationArgument.html"," < ArgumentError","",1],["MissingTranslationData","I18n","classes/I18n/MissingTranslationData.html"," < ArgumentError","",1],["ReservedInterpolationKey","I18n","classes/I18n/ReservedInterpolationKey.html"," < ArgumentError","",1],["UnknownFileType","I18n","classes/I18n/UnknownFileType.html"," < ArgumentError","",1],["Kernel","activesupport-2.3.14/lib/active_support/core_ext/kernel/daemonizing.rb","classes/Kernel.html"," < ","Since Ruby is very dynamic, methods added to the ancestors of BlankSlate <em>after BlankSlate is defined</em>",1],["KeyError","activesupport-2.3.14/lib/active_support/vendor/i18n-0.4.1/i18n/core_ext/string/interpolate.rb","classes/KeyError.html"," < IndexError","encoding: utf-8 ",1],["LibXML","activesupport-2.3.14/lib/active_support/xml_mini/libxml.rb","classes/LibXML.html"," < ","",1],["Conversions","LibXML","classes/LibXML/Conversions.html"," < ","",1],["Document","LibXML::Conversions","classes/LibXML/Conversions/Document.html"," < ","",1],["Node","LibXML::Conversions","classes/LibXML/Conversions/Node.html"," < ","",1],["Logger","activesupport-2.3.14/lib/active_support/core_ext/logger.rb","classes/Logger.html"," < Object","Extensions to the built in Ruby logger. If you want to use the default log formatter as defined in the",1],["Formatter","Logger","classes/Logger/Formatter.html"," < Object","",1],["SimpleFormatter","Logger","classes/Logger/SimpleFormatter.html"," < Logger::Formatter","Simple formatter which only displays the message. ",1],["MemCache","activesupport-2.3.14/lib/active_support/vendor/memcache-client-1.7.4/memcache.rb","classes/MemCache.html"," < Object","A Ruby client library for memcached. ",1],["MemCacheError","MemCache","classes/MemCache/MemCacheError.html"," < RuntimeError","Base MemCache exception class. ",1],["Server","MemCache","classes/MemCache/Server.html"," < Object","This class represents a memcached server instance. ",1],["Mime","actionpack-2.3.14/lib/action_controller/mime_type.rb","classes/Mime.html"," < ","",1],["Type","Mime","classes/Mime/Type.html"," < Object","Encapsulates the notion of a mime type. Can be used at render time, for example, with: class PostsController",1],["Module","activesupport-2.3.14/lib/active_support/core_ext/module/attr_accessor_with_default.rb","classes/Module.html"," < Object","Also, modules included into Object need to be scanned and have their instance methods removed from blank",1],["Object","rails-2.3.14/lib/rails_generator/lookup.rb","classes/Object.html"," < Object","Same as above, except in Object. ",1],["PGresult","activerecord-2.3.14/lib/active_record/connection_adapters/postgresql_adapter.rb","classes/PGresult.html"," < Object","",1],["Plugin","rails-2.3.14/lib/commands/plugin.rb","classes/Plugin.html"," < Object","",1],["Process","activesupport-2.3.14/lib/active_support/core_ext/process/daemon.rb","classes/Process.html"," < ","",1],["REXML","activesupport-2.3.14/lib/active_support/core_ext/rexml.rb","classes/REXML.html"," < ","",1],["Document","REXML","classes/REXML/Document.html"," < Element","",1],["Entity","REXML","classes/REXML/Entity.html"," < Child","",1],["RackLintPatch","actionpack-2.3.14/lib/action_controller/rack_lint_patch.rb","classes/RackLintPatch.html"," < ","Rack 1.0 does not allow string subclass body. This does not play well with our ActiveSupport::SafeBuffer.",1],["AllowStringSubclass","RackLintPatch","classes/RackLintPatch/AllowStringSubclass.html"," < ","",1],["Rails","rails-2.3.14/lib/initializer.rb","classes/Rails.html"," < ","",1],["Configuration","Rails","classes/Rails/Configuration.html"," < Object","The Configuration class holds all the parameters for the Initializer and ships with defaults that suites",1],["Generator","Rails","classes/Rails/Generator.html"," < ","Rails::Generator is a code generation platform tailored for the Rails web application framework.  Generators",1],["AbstractGemSource","Rails::Generator","classes/Rails/Generator/AbstractGemSource.html"," < Source","",1],["Base","Rails::Generator","classes/Rails/Generator/Base.html"," < Object","The base code generator is bare-bones.  It sets up the source and destination paths and tells the logger",1],["Commands","Rails::Generator","classes/Rails/Generator/Commands.html"," < ","",1],["Base","Rails::Generator::Commands","classes/Rails/Generator/Commands/Base.html"," < DelegateClass(Rails::Generator::Base)","Generator commands delegate Rails::Generator::Base and implement a standard set of actions.  Their behavior",1],["Create","Rails::Generator::Commands","classes/Rails/Generator/Commands/Create.html"," < Base","Create is the premier generator command.  It copies files, creates directories, renders templates, and",1],["Destroy","Rails::Generator::Commands","classes/Rails/Generator/Commands/Destroy.html"," < RewindBase","Undo the actions performed by a generator.  Rewind the action manifest and attempt to completely erase",1],["List","Rails::Generator::Commands","classes/Rails/Generator/Commands/List.html"," < Base","List a generator's action manifest. ",1],["RewindBase","Rails::Generator::Commands","classes/Rails/Generator/Commands/RewindBase.html"," < Base","Base class for commands which handle generator actions in reverse, such as Destroy. ",1],["Update","Rails::Generator::Commands","classes/Rails/Generator/Commands/Update.html"," < Create","Update generator's action manifest. ",1],["GemGeneratorSource","Rails::Generator","classes/Rails/Generator/GemGeneratorSource.html"," < AbstractGemSource","GemGeneratorSource hits the mines to quarry for generators.  The latest versions of gems named *_generator",1],["GemPathSource","Rails::Generator","classes/Rails/Generator/GemPathSource.html"," < AbstractGemSource","GemPathSource looks for generators within any RubyGem's /rails_generators/<generator_name>_generator.rb",1],["GeneratedAttribute","Rails::Generator","classes/Rails/Generator/GeneratedAttribute.html"," < Object","",1],["GeneratorError","Rails::Generator","classes/Rails/Generator/GeneratorError.html"," < StandardError","",1],["Lookup","Rails::Generator","classes/Rails/Generator/Lookup.html"," < ","Generator lookup is managed by a list of sources which return specs describing where to find and how",1],["ClassMethods","Rails::Generator::Lookup","classes/Rails/Generator/Lookup/ClassMethods.html"," < ","",1],["Manifest","Rails::Generator","classes/Rails/Generator/Manifest.html"," < Object","Manifest captures the actions a generator performs.  Instantiate a manifest with an optional target object,",1],["NamedBase","Rails::Generator","classes/Rails/Generator/NamedBase.html"," < Base","The base generator for named components: models, controllers, mailers, etc.  The target name is taken",1],["Options","Rails::Generator","classes/Rails/Generator/Options.html"," < ","",1],["ClassMethods","Rails::Generator::Options","classes/Rails/Generator/Options/ClassMethods.html"," < ","",1],["PathSource","Rails::Generator","classes/Rails/Generator/PathSource.html"," < Source","PathSource looks for generators in a filesystem directory. ",1],["Scripts","Rails::Generator","classes/Rails/Generator/Scripts.html"," < ","",1],["Base","Rails::Generator::Scripts","classes/Rails/Generator/Scripts/Base.html"," < Object","Generator scripts handle command-line invocation.  Each script responds to an invoke! class method which",1],["Source","Rails::Generator","classes/Rails/Generator/Source.html"," < Object","Sources enumerate (yield from #each) generator specs which describe where to find and how to create generators.",1],["Spec","Rails::Generator","classes/Rails/Generator/Spec.html"," < Object","A spec knows where a generator was found and how to instantiate it. Metadata include the generator's",1],["UsageError","Rails::Generator","classes/Rails/Generator/UsageError.html"," < GeneratorError","",1],["Initializer","Rails","classes/Rails/Initializer.html"," < Object","The Initializer is responsible for processing the Rails configuration, such as setting the $LOAD_PATH,",1],["SecretKeyGenerator","Rails","classes/Rails/SecretKeyGenerator.html"," < Object","A class for creating random secret keys. This class will do its best to create a random secret key that's",1],["RailsEnvironment","rails-2.3.14/lib/commands/plugin.rb","classes/RailsEnvironment.html"," < Object","",1],["RailsFCGIHandler","rails-2.3.14/lib/fcgi_handler.rb","classes/RailsFCGIHandler.html"," < Object","",1],["RecursiveHTTPFetcher","rails-2.3.14/lib/commands/plugin.rb","classes/RecursiveHTTPFetcher.html"," < Object","",1],["Repositories","rails-2.3.14/lib/commands/plugin.rb","classes/Repositories.html"," < Object","",1],["Repository","rails-2.3.14/lib/commands/plugin.rb","classes/Repository.html"," < Object","",1],["SourceAnnotationExtractor","rails-2.3.14/lib/source_annotation_extractor.rb","classes/SourceAnnotationExtractor.html"," < Object","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",1],["Annotation","SourceAnnotationExtractor","classes/SourceAnnotationExtractor/Annotation.html"," < Struct.new(:line, :tag, :text)","",1],["TZInfo","activesupport-2.3.14/lib/active_support/vendor/tzinfo-0.3.12/tzinfo/data_timezone.rb","classes/TZInfo.html"," < ","---  ",1],["AmbiguousTime","TZInfo","classes/TZInfo/AmbiguousTime.html"," < StandardError","Indicate a specified time in a local timezone has more than one possible time in UTC. This happens when",1],["Definitions","TZInfo","classes/TZInfo/Definitions.html"," < ","",1],["Africa","TZInfo::Definitions","classes/TZInfo/Definitions/Africa.html"," < ","",1],["Algiers","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Algiers.html"," < ","",1],["Cairo","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Cairo.html"," < ","",1],["Casablanca","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Casablanca.html"," < ","",1],["Harare","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Harare.html"," < ","",1],["Johannesburg","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Johannesburg.html"," < ","",1],["Monrovia","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Monrovia.html"," < ","",1],["Nairobi","TZInfo::Definitions::Africa","classes/TZInfo/Definitions/Africa/Nairobi.html"," < ","",1],["America","TZInfo::Definitions","classes/TZInfo/Definitions/America.html"," < ","",1],["Argentina","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Argentina.html"," < ","",1],["Buenos_Aires","TZInfo::Definitions::America::Argentina","classes/TZInfo/Definitions/America/Argentina/Buenos_Aires.html"," < ","",1],["San_Juan","TZInfo::Definitions::America::Argentina","classes/TZInfo/Definitions/America/Argentina/San_Juan.html"," < ","",1],["Bogota","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Bogota.html"," < ","",1],["Caracas","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Caracas.html"," < ","",1],["Chicago","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Chicago.html"," < ","",1],["Chihuahua","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Chihuahua.html"," < ","",1],["Denver","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Denver.html"," < ","",1],["Godthab","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Godthab.html"," < ","",1],["Guatemala","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Guatemala.html"," < ","",1],["Halifax","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Halifax.html"," < ","",1],["Indiana","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Indiana.html"," < ","",1],["Indianapolis","TZInfo::Definitions::America::Indiana","classes/TZInfo/Definitions/America/Indiana/Indianapolis.html"," < ","",1],["Juneau","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Juneau.html"," < ","",1],["La_Paz","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/La_Paz.html"," < ","",1],["Lima","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Lima.html"," < ","",1],["Los_Angeles","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Los_Angeles.html"," < ","",1],["Mazatlan","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Mazatlan.html"," < ","",1],["Mexico_City","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Mexico_City.html"," < ","",1],["Monterrey","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Monterrey.html"," < ","",1],["New_York","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/New_York.html"," < ","",1],["Phoenix","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Phoenix.html"," < ","",1],["Regina","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Regina.html"," < ","",1],["Santiago","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Santiago.html"," < ","",1],["Sao_Paulo","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Sao_Paulo.html"," < ","",1],["St_Johns","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/St_Johns.html"," < ","",1],["Tijuana","TZInfo::Definitions::America","classes/TZInfo/Definitions/America/Tijuana.html"," < ","",1],["Asia","TZInfo::Definitions","classes/TZInfo/Definitions/Asia.html"," < ","",1],["Almaty","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Almaty.html"," < ","",1],["Baghdad","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Baghdad.html"," < ","",1],["Baku","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Baku.html"," < ","",1],["Bangkok","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Bangkok.html"," < ","",1],["Chongqing","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Chongqing.html"," < ","",1],["Colombo","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Colombo.html"," < ","",1],["Dhaka","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Dhaka.html"," < ","",1],["Hong_Kong","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Hong_Kong.html"," < ","",1],["Irkutsk","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Irkutsk.html"," < ","",1],["Jakarta","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Jakarta.html"," < ","",1],["Jerusalem","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Jerusalem.html"," < ","",1],["Kabul","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Kabul.html"," < ","",1],["Kamchatka","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Kamchatka.html"," < ","",1],["Karachi","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Karachi.html"," < ","",1],["Katmandu","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Katmandu.html"," < ","",1],["Kolkata","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Kolkata.html"," < ","",1],["Krasnoyarsk","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Krasnoyarsk.html"," < ","",1],["Kuala_Lumpur","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Kuala_Lumpur.html"," < ","",1],["Kuwait","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Kuwait.html"," < ","",1],["Magadan","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Magadan.html"," < ","",1],["Muscat","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Muscat.html"," < ","",1],["Novosibirsk","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Novosibirsk.html"," < ","",1],["Rangoon","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Rangoon.html"," < ","",1],["Riyadh","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Riyadh.html"," < ","",1],["Seoul","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Seoul.html"," < ","",1],["Shanghai","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Shanghai.html"," < ","",1],["Singapore","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Singapore.html"," < ","",1],["Taipei","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Taipei.html"," < ","",1],["Tashkent","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Tashkent.html"," < ","",1],["Tbilisi","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Tbilisi.html"," < ","",1],["Tehran","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Tehran.html"," < ","",1],["Tokyo","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Tokyo.html"," < ","",1],["Ulaanbaatar","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Ulaanbaatar.html"," < ","",1],["Urumqi","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Urumqi.html"," < ","",1],["Vladivostok","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Vladivostok.html"," < ","",1],["Yakutsk","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Yakutsk.html"," < ","",1],["Yekaterinburg","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Yekaterinburg.html"," < ","",1],["Yerevan","TZInfo::Definitions::Asia","classes/TZInfo/Definitions/Asia/Yerevan.html"," < ","",1],["Atlantic","TZInfo::Definitions","classes/TZInfo/Definitions/Atlantic.html"," < ","",1],["Azores","TZInfo::Definitions::Atlantic","classes/TZInfo/Definitions/Atlantic/Azores.html"," < ","",1],["Cape_Verde","TZInfo::Definitions::Atlantic","classes/TZInfo/Definitions/Atlantic/Cape_Verde.html"," < ","",1],["South_Georgia","TZInfo::Definitions::Atlantic","classes/TZInfo/Definitions/Atlantic/South_Georgia.html"," < ","",1],["Australia","TZInfo::Definitions","classes/TZInfo/Definitions/Australia.html"," < ","",1],["Adelaide","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Adelaide.html"," < ","",1],["Brisbane","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Brisbane.html"," < ","",1],["Darwin","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Darwin.html"," < ","",1],["Hobart","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Hobart.html"," < ","",1],["Melbourne","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Melbourne.html"," < ","",1],["Perth","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Perth.html"," < ","",1],["Sydney","TZInfo::Definitions::Australia","classes/TZInfo/Definitions/Australia/Sydney.html"," < ","",1],["Etc","TZInfo::Definitions","classes/TZInfo/Definitions/Etc.html"," < ","",1],["UTC","TZInfo::Definitions::Etc","classes/TZInfo/Definitions/Etc/UTC.html"," < ","",1],["Europe","TZInfo::Definitions","classes/TZInfo/Definitions/Europe.html"," < ","",1],["Amsterdam","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Amsterdam.html"," < ","",1],["Athens","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Athens.html"," < ","",1],["Belgrade","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Belgrade.html"," < ","",1],["Berlin","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Berlin.html"," < ","",1],["Bratislava","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Bratislava.html"," < ","",1],["Brussels","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Brussels.html"," < ","",1],["Bucharest","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Bucharest.html"," < ","",1],["Budapest","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Budapest.html"," < ","",1],["Copenhagen","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Copenhagen.html"," < ","",1],["Dublin","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Dublin.html"," < ","",1],["Helsinki","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Helsinki.html"," < ","",1],["Istanbul","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Istanbul.html"," < ","",1],["Kiev","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Kiev.html"," < ","",1],["Lisbon","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Lisbon.html"," < ","",1],["Ljubljana","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Ljubljana.html"," < ","",1],["London","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/London.html"," < ","",1],["Madrid","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Madrid.html"," < ","",1],["Minsk","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Minsk.html"," < ","",1],["Moscow","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Moscow.html"," < ","",1],["Paris","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Paris.html"," < ","",1],["Prague","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Prague.html"," < ","",1],["Riga","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Riga.html"," < ","",1],["Rome","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Rome.html"," < ","",1],["Sarajevo","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Sarajevo.html"," < ","",1],["Skopje","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Skopje.html"," < ","",1],["Sofia","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Sofia.html"," < ","",1],["Stockholm","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Stockholm.html"," < ","",1],["Tallinn","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Tallinn.html"," < ","",1],["Vienna","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Vienna.html"," < ","",1],["Vilnius","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Vilnius.html"," < ","",1],["Warsaw","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Warsaw.html"," < ","",1],["Zagreb","TZInfo::Definitions::Europe","classes/TZInfo/Definitions/Europe/Zagreb.html"," < ","",1],["Pacific","TZInfo::Definitions","classes/TZInfo/Definitions/Pacific.html"," < ","",1],["Auckland","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Auckland.html"," < ","",1],["Fiji","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Fiji.html"," < ","",1],["Guam","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Guam.html"," < ","",1],["Honolulu","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Honolulu.html"," < ","",1],["Majuro","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Majuro.html"," < ","",1],["Midway","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Midway.html"," < ","",1],["Noumea","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Noumea.html"," < ","",1],["Pago_Pago","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Pago_Pago.html"," < ","",1],["Port_Moresby","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Port_Moresby.html"," < ","",1],["Tongatapu","TZInfo::Definitions::Pacific","classes/TZInfo/Definitions/Pacific/Tongatapu.html"," < ","",1],["InvalidTimezoneIdentifier","TZInfo","classes/TZInfo/InvalidTimezoneIdentifier.html"," < StandardError","Thrown by Timezone#get if the identifier given is not valid. ",1],["NoOffsetsDefined","TZInfo","classes/TZInfo/NoOffsetsDefined.html"," < StandardError","Thrown if no offsets have been defined when calling period_for_utc or periods_for_local. Indicates an",1],["PeriodNotFound","TZInfo","classes/TZInfo/PeriodNotFound.html"," < StandardError","Thrown to indicate that no TimezonePeriod matching a given time could be found. ",1],["Timezone","TZInfo","classes/TZInfo/Timezone.html"," < Object","Timezone is the base class of all timezones. It provides a factory method get to access timezones by",1],["TimezonePeriod","TZInfo","classes/TZInfo/TimezonePeriod.html"," < Object","A period of time in a timezone where the same offset from UTC applies. All the methods that take times",1],["UnknownTimezone","TZInfo","classes/TZInfo/UnknownTimezone.html"," < StandardError","Thrown if an attempt is made to use a timezone created with Timezone.new(nil). ",1],["Test","activesupport-2.3.14/lib/active_support/testing/deprecation.rb","classes/Test.html"," < ","",1],["Unit","Test","classes/Test/Unit.html"," < ","",1],["+","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003029","(other)","Adds another Duration or a Numeric to this Duration. Numeric values are treated as seconds. ",2],["+","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003116","(other)","Returns a new Chars object containing the _other_ object concatenated to the string. Example: ('Café'.mb_chars",2],["+","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002945","(other)","",2],["+","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003262","(other)","",2],["+","Builder::CSS","classes/Builder/CSS.html#M003326","(part)","",2],["-","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003030","(other)","Subtracts another Duration or a Numeric from this Duration. Numeric values are treated as seconds. ",2],["-","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003265","(other)","",2],["<<","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002305","(javascript)","Writes raw JavaScript to the page. Example: page << \"alert('JavaScript with Prototype.');\" ",2],["<<","Builder::XmlBase","classes/Builder/XmlBase.html#M003356","(text)","Append text to the output target without escaping any markup. May be used within the markup brackets",2],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#M001041","(version_string)","",2],["<=>","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003115","(other)","Returns <tt>-1</tt>, <tt>0</tt> or <tt>+1</tt> depending on whether the Chars object is to be sorted",2],["<=>","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003253","(other)","Use the time in UTC for comparisons. ",2],["<=>","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003308","(zone)","Compare this time zone to the parameter. The two are comapred first on their offsets, and then by name.",2],["<=>","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003664","(tz)","Compares two Timezones based on their identifier. Returns -1 if tz is less than self, 0 if tz is equal",2],["==","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001767","(middleware)","",2],["==","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002400","(path)","",2],["==","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000693","(comparison_object)","Returns true if the +comparison_object+ is the same object, or is of the same type and has the same id.",2],["==","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001232","(other_aggregation)","Returns +true+ if +self+ and +other_aggregation+ have the same +name+ attribute, +active_record+ attribute,",2],["==","ActiveResource::Base","classes/ActiveResource/Base.html#M001403","(other)","Test for equality.  Resource are equal if and only if +other+ is the same object or is an instance of",2],["==","ActiveResource::Request","classes/ActiveResource/Request.html#M001485","(req)","",2],["==","ActiveResource::Response","classes/ActiveResource/Response.html#M001498","(other)","",2],["==","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002574","(other)","",2],["==","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003033","(other)","Returns true if <tt>other</tt> is also a Duration instance with the same <tt>value</tt>, or if <tt>other",2],["==","Mime::Type","classes/Mime/Type.html#M001791","(mime_type)","",2],["==","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003691","(p)","Returns true if this TimezonePeriod is equal to p. This compares the  start_transition, end_transition",2],["===","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000527","(object)","Overwrite the default class equality method to provide support for association proxies. ",2],["===","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Calculations/ClassMethods.html#M002955","(other)","Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances ",2],["===","ActiveSupport::Multibyte::UnicodeDatabase","classes/ActiveSupport/Multibyte/UnicodeDatabase.html#M003124","(other)","",2],["===","Mime::Type","classes/Mime/Type.html#M001790","(list)","",2],["=~","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003117","(other)","Like <tt>String#=~</tt> only it returns the character offset (in codepoints) instead of the byte offset.",2],["=~","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003309","(re)","Compare #name and TZInfo identifier to a supplied regexp, returning true if a match is found. ",2],["=~","Mime::Type","classes/Mime/Type.html#M001792","(mime_type)","",2],[">","Builder::CSS","classes/Builder/CSS.html#M003328","(part)","",2],[">>","Builder::CSS","classes/Builder/CSS.html#M003327","(part)","",2],["GET","ActionController::Request","classes/ActionController/Request.html#M001889","()","Override Rack's GET method to support indifferent access ",2],["POST","ActionController::Request","classes/ActionController/Request.html#M001891","()","Override Rack's POST method to support indifferent access ",2],["[]","ActionController::Http::Headers","classes/ActionController/Http/Headers.html#M001667","(header_name)","",2],["[]","ActionController::Session::AbstractStore::OptionsHash","classes/ActionController/Session/AbstractStore/OptionsHash.html#M001984","(key)","",2],["[]","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001989","(key)","",2],["[]","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002290","(id)","Returns a element reference by finding it through +id+ in the DOM. This element can then be used for",2],["[]","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002384","(path)","",2],["[]","ActionView::Template::EagerPath","classes/ActionView/Template/EagerPath.html#M002408","(path)","",2],["[]","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002402","(path)","Returns a ActionView::Template object for the given path string. The input path should be relative to",2],["[]","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000673","(attr_name)","Returns the value of the attribute identified by <tt>attr_name</tt> after it has been typecast (for example,",2],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000849","(name)","Returns a ColumnDefinition for the column with name +name+. ",2],["[]","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001307","(attribute)","Alias for #on",2],["[]","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001474","(attribute)","Alias for #on",2],["[]","ActiveResource::Formats","classes/ActiveResource/Formats.html#M001466","(mime_type_reference)","Lookup the format class from a mime type reference symbol. Example: ActiveResource::Formats[:xml]  #",2],["[]","ActiveResource::Response","classes/ActiveResource/Response.html#M001496","(key)","",2],["[]","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003139","(*args)","Alias for #slice",2],["[]","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics.html#M003203","(name)","",2],["[]","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003338","(arg)","Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of",2],["[]","I18n::Locale::Fallbacks","classes/I18n/Locale/Fallbacks.html#M003551","(locale)","",2],["[]","MemCache","classes/MemCache.html#M003607","(key, raw = false)","Alias for #get",2],["[]=","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001991","(key, value)","",2],["[]=","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000674","(attr_name, value)","Updates the attribute identified by <tt>attr_name</tt> with the specified +value+. (Alias for the protected",2],["[]=","ActiveResource::Response","classes/ActiveResource/Response.html#M001497","(key, value)","",2],["[]=","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003128","(*args)","Like <tt>String#[]=</tt>, except instead of byte offsets you specify character offsets. Example: s =",2],["[]=","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002745","(key, value)","Assigns a new value to the hash: hash = HashWithIndifferentAccess.new hash[:key] = \"value\" ",2],["[]=","MemCache","classes/MemCache.html#M003608","(key, value)","Shortcut to save a value in the cache.  This method does not set an expiration on the entry.  Use set",2],["_","GetText::PoParser","classes/GetText/PoParser.html#M003545","(x)","",2],["_","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003534","(msgid, options = {})","Alias for #gettext",2],["_assigns","ActionView::TestCase","classes/ActionView/TestCase.html#M002458","()","",2],["_attr_value","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003379","(value)","",2],["_call","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001647","(env)","",2],["_css_block","Builder::CSS","classes/Builder/CSS.html#M003342","(block)","",2],["_css_line","Builder::CSS","classes/Builder/CSS.html#M003350","(sym, *args)","",2],["_dump","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003667","(limit)","Dumps this Timezone for marshalling. ",2],["_end_block","Builder::CSS","classes/Builder/CSS.html#M003343","()","",2],["_end_tag","Builder::XmlEvents","classes/Builder/XmlEvents.html#M003366","(sym)","",2],["_end_tag","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003377","(sym)","Insert an ending tag. ",2],["_ensure_no_block","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003381","(got_block)","",2],["_escape","Builder::XmlBase","classes/Builder/XmlBase.html#M003359","(text)","",2],["_escape_quote","Builder::XmlBase","classes/Builder/XmlBase.html#M003360","(text)","",2],["_indent","Builder::CSS","classes/Builder/CSS.html#M003346","()","",2],["_indent","Builder::XmlBase","classes/Builder/XmlBase.html#M003362","()","",2],["_insert_attributes","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003378","(attrs, order=[])","Insert the attributes (given in the hash). ",2],["_instance_variables","ActionView::TestCase","classes/ActionView/TestCase.html#M002457","()","",2],["_join_with_op!","Builder::CSS","classes/Builder/CSS.html#M003340","(op)","",2],["_load","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003668","(data)","Loads a marshalled Timezone. ",2],["_nested_structures","Builder::CSS","classes/Builder/CSS.html#M003347","(block)","",2],["_nested_structures","Builder::XmlBase","classes/Builder/XmlBase.html#M003363","(block)","",2],["_newline","Builder::CSS","classes/Builder/CSS.html#M003344","()","",2],["_newline","Builder::XmlBase","classes/Builder/XmlBase.html#M003361","()","",2],["_reduce_none","GetText::PoParser","classes/GetText/PoParser.html#M003548","( val, _values, result )","",2],["_special","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003375","(open, close, data=nil, attrs=nil, order=[])","Insert special instruction. ",2],["_start_container","Builder::CSS","classes/Builder/CSS.html#M003348","(sym, atts = {}, with_bracket = true)","",2],["_start_tag","Builder::XmlEvents","classes/Builder/XmlEvents.html#M003365","(sym, attrs, end_too=false)","",2],["_start_tag","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003376","(sym, attrs, end_too=false)","Start an XML tag.  If <tt>end_too</tt> is true, then the start tag is also the end tag (e.g.  <br/> ",2],["_text","Builder::CSS","classes/Builder/CSS.html#M003341","(text)","",2],["_text","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003373","(text)","Insert text directly in to the builder's target. ",2],["_unify_block","Builder::CSS","classes/Builder/CSS.html#M003339","()","",2],["_view","ActionView::TestCase","classes/ActionView/TestCase.html#M002455","()","",2],["abbreviation","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003674","()","The identifier of this period, e.g. \"GMT\" (Greenwich Mean Time) or \"BST\" (British Summer Time) for \"Europe/London\".",2],["abstract_class?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000529","()","Returns whether this class is a base AR class.  If A is a base class and B descends from A, then B.base_class",2],["accepts","ActionController::Request","classes/ActionController/Request.html#M001838","()","Returns the accepted MIME type for the request. ",2],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","classes/ActiveRecord/NestedAttributes/ClassMethods.html#M001198","(*attr_names)","Defines an attributes writer for the specified association(s). If you are using <tt>attr_protected</tt>",2],["accessible_paths","ActionView::Template","classes/ActionView/Template.html#M002413","()","",2],["action_methods","ActionController::Base","classes/ActionController/Base.html#M001605","()","",2],["action_methods","ActionController::Base","classes/ActionController/Base.html#M001606","()","",2],["action_options_for","ActionController::Resources","classes/ActionController/Resources.html#M001948","(action, resource, method = nil, resource_options = {})","",2],["action_prefix","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001808","(options)","",2],["active","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001777","()","",2],["active?","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001766","()","",2],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000891","()","Checks whether the connection to the database is still active. This includes checking whether the database",2],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000926","()","CONNECTION MANAGEMENT ==================================== ",2],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000944","()","Is this connection alive and ready for queries? ",2],["active?","MemCache","classes/MemCache.html#M003589","()","Returns whether there is at least one active server for the object. ",2],["acts_like?","Object","classes/Object.html#M002888","(duck)","A duck-type assistant method. For example, Active Support extends Date to define an acts_like_date? method,",2],["acts_like_date?","ActiveSupport::CoreExtensions::Date::Behavior","classes/ActiveSupport/CoreExtensions/Date/Behavior.html#M002628","()","Enable more predictable duck-typing on Date-like classes. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::CoreExtensions::String::Behavior","classes/ActiveSupport/CoreExtensions/String/Behavior.html#M002909","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003112","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_time?","ActiveSupport::CoreExtensions::Time::Behavior","classes/ActiveSupport/CoreExtensions/Time/Behavior.html#M002952","()","Enable more predictable duck-typing on Time-like classes. See Object#acts_like?. ",2],["acts_like_time?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003284","()","So that +self+ <tt>acts_like?(:time)</tt>. ",2],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000881","()","Returns the human-readable name of the adapter.  Use mixed case - one can always use downcase if needed.",2],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000942","()","Returns 'PostgreSQL' as adapter name for identification purposes. ",2],["add","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001302","(attribute, message = nil, options = {})","Adds an error message (+messsage+) to the +attribute+, which will be returned on a call to <tt>on(attribute)</tt>",2],["add","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001469","(attribute, msg)","Adds an error to an Active Resource object's attribute (named for the +attribute+ parameter) with the",2],["add","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002502","(severity, message = nil, progname = nil, &block)","",2],["add","I18n::Backend::Transliterator::HashTransliterator","classes/I18n/Backend/Transliterator/HashTransliterator.html#M003524","(hash)","Add transliteration rules to the approximations hash. ",2],["add","MemCache","classes/MemCache.html#M003599","(key, value, expiry = 0, raw = false)","Add +key+ to the cache with value +value+ that expires in +expiry+ seconds, but only if +key+ does not",2],["add","Repositories","classes/Repositories.html#M000171","(uri)","",2],["add_association_callbacks","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000463","(association_name, options)","",2],["add_autosave_association_callbacks","ActiveRecord::AutosaveAssociation::ClassMethods","classes/ActiveRecord/AutosaveAssociation/ClassMethods.html#M000395","(reflection)","Adds a validate and save callback for the association as specified by the +reflection+. For performance",2],["add_column","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000970","(table_name, column_name, type, options = {})","",2],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001026","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000819","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column_position!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000981","(sql, options)","",2],["add_conditions!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000562","(sql, conditions, scope = :auto)","Adds a sanitized version of +conditions+ to the +sql+ string. Note that the passed-in +sql+ string is",2],["add_conditions_for","ActionController::Resources","classes/ActionController/Resources.html#M001947","(conditions, method)","",2],["add_counter_cache_callbacks","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000418","(reflection)","",2],["add_extension!","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M001548","(path, extension)","",2],["add_filter","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002493","(&block)","Adds a filter from the block provided. Each line in the backtrace will be mapped against this filter.",2],["add_gem_load_paths","Rails::Initializer","classes/Rails/Initializer.html#M000049","()","",2],["add_general_options!","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000340","(opt)","Adds general options like -h and --quiet.  Usually don't override. ",2],["add_group!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000557","(sql, group, having, scope = :auto)","",2],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000834","(table_name, column_name, options = {})","Adds a new index to the table.  +column_name+ can be a single Symbol, or an Array of Symbols. The index",2],["add_joins!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000561","(sql, joins, scope = :auto)","The optional scope argument is for the current <tt>:find</tt> scope. ",2],["add_layout_conditions","ActionController::Layout::ClassMethods","classes/ActionController/Layout/ClassMethods.html#M001755","(conditions)","",2],["add_limit!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000559","(sql, options, scope = :auto)","The optional scope argument is for the current <tt>:find</tt> scope. ",2],["add_limit!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000770","(sql, options)","Alias for <tt>add_limit_offset!</tt>. ",2],["add_limit_offset!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000774","(sql, options)","Appends +LIMIT+ and +OFFSET+ options to an SQL statement, or some SQL fragment that has the same semantics",2],["add_limited_ids_condition!","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000437","(sql, options, join_dependency)","",2],["add_lock!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000560","(sql, options, scope = :auto)","The optional scope argument is for the current <tt>:find</tt> scope. The <tt>:lock</tt> option has precedence",2],["add_lock!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000776","(sql, options)","Appends a locking clause to an SQL statement. This method *modifies* the +sql+ parameter. # SELECT *",2],["add_observer!","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001212","(klass)","",2],["add_on_blank","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001304","(attributes, custom_message = nil)","Will add an error message to each of the attributes in +attributes+ that is blank (using Object#blank?).",2],["add_on_empty","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001303","(attributes, custom_message = nil)","Will add an error message to each of the attributes in +attributes+ that is empty. ",2],["add_options!","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000339","(opt)","Override to add your options to the parser: def add_options!(opt) opt.on('-v', '--verbose') { |value|",2],["add_order!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000556","(sql, order, scope = :auto)","",2],["add_order_by_for_association_limiting!","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000855","(sql, options)","ORDER BY clause for the passed order option. PostgreSQL overrides this due to its stricter standards",2],["add_plugin_load_paths","Rails::Initializer","classes/Rails/Initializer.html#M000048","()","Adds all load paths from plugins to the global set of load paths, so that code from plugins can be required",2],["add_preloaded_record_to_collection","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000357","(parent_records, reflection_name, associated_record)","",2],["add_preloaded_records_to_collection","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000356","(parent_records, reflection_name, associated_record)","",2],["add_silencer","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002494","(&block)","Adds a silencer from the block provided. If the silencer returns true for a given line, it'll be excluded",2],["add_support_load_paths","Rails::Initializer","classes/Rails/Initializer.html#M000047","()","Add the load paths used by support functions such as the info controller ",2],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000856","(table_name)","Adds timestamps (created_at and updated_at) columns to the named table. ===== Examples add_timestamps(:suppliers)",2],["add_to_base","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001301","(msg)","Adds an error to the base object instead of any particular attribute. This is used to report errors that",2],["add_to_base","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001468","(msg)","Add an error to the base Active Resource object rather than an attribute. ==== Examples my_folder = Folder.find(1)",2],["add_touch_callbacks","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000419","(reflection, touch_attribute)","",2],["advance","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002647","(options)","Provides precise Date calculations for years, months, and days.  The +options+ parameter takes a hash",2],["advance","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002697","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002970","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003273","(options)","",2],["after_create","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000595","()","Is called _after_ <tt>Base.save</tt> on new objects that haven't been saved yet (no record exists). Note",2],["after_destroy","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000612","()","Is called _after_ <tt>Base.destroy</tt> (and all the attributes have been frozen). class Contact < ActiveRecord::Base",2],["after_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001674","(*filters, &block)","Alias for #append_after_filter",2],["after_generate","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000199","()","",2],["after_initialize","Rails::Configuration","classes/Rails/Configuration.html#M000101","(&after_initialize_block)","Adds a block which will be executed after rails has been fully initialized. Useful for per-environment",2],["after_initialize","Rails::Initializer","classes/Rails/Initializer.html#M000074","()","Fires the user-supplied after_initialize block (Configuration#after_initialize) ",2],["after_initialize_blocks","Rails::Configuration","classes/Rails/Configuration.html#M000102","()","Returns the blocks added with Configuration#after_initialize ",2],["after_save","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000592","()","Is called _after_ <tt>Base.save</tt> (regardless of whether it's a +create+ or +update+ save). Note that",2],["after_update","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000600","()","Is called _after_ <tt>Base.save</tt> on existing objects that have a record. Note that this callback",2],["after_validation","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000604","()","Is called _after_ <tt>Validations.validate</tt> (which is part of the <tt>Base.save</tt> call). ",2],["after_validation_on_create","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000606","()","Is called _after_ <tt>Validations.validate</tt> (which is part of the <tt>Base.save</tt> call) on new",2],["after_validation_on_update","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000608","()","Is called _after_ <tt>Validations.validate</tt> (which is part of the <tt>Base.save</tt> call) on existing",2],["aggregate_mapping","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000602","(reflection)","",2],["ago","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002637","(seconds)","Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the",2],["ago","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002702","(seconds)","Returns a new DateTime representing the time a number of seconds ago Do not use this method in combination",2],["ago","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002865","(time = ::Time.now)","Reads best without arguments:  10.minutes.ago ",2],["ago","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002971","(seconds)","Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around",2],["ago","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003037","(time = ::Time.current)","Calculates a new Time or Date that is as far in the past as this Duration represents. ",2],["ago","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003272","(other)","",2],["alert","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002300","(message)","Displays an alert dialog with the given +message+. Example: # Generates: alert('This message is from",2],["alias_attribute","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002815","(new_name, old_name)","Allows you to make aliases for attributes, which includes getter, setter, and query methods. Example:",2],["alias_attribute_with_dirty","ActiveRecord::Dirty::ClassMethods","classes/ActiveRecord/Dirty/ClassMethods.html#M001107","(new_name, old_name)","",2],["alias_method_chain","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002814","(target, feature)","Encapsulates the common pattern of: alias_method :foo_without_feature, :foo alias_method :foo, :foo_with_feature",2],["alive?","MemCache::Server","classes/MemCache/Server.html#M003628","()","Check whether the server connection is alive.  This will cause the socket to attempt to connect if it",2],["all","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000469","(*args)","This is an alias for find(:all).  You can pass in all the same arguments to this method as you can to",2],["all","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003323","()","Return an array of all TimeZone objects. There are multiple TimeZone objects per time zone, in many cases,",2],["all","Repositories","classes/Repositories.html#M000174","()","",2],["all","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003639","()","Returns an array containing all the available Timezones. Returns TimezoneProxy objects to avoid the overhead",2],["all_application_helpers","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001691","()","Extract helper names from files in app/helpers/**/*.rb ",2],["all_attributes_exists?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000575","(attribute_names)","",2],["all_country_zone_identifiers","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003646","()","Returns all the zone identifiers defined for all Countries. This is not the complete set of zone identifiers",2],["all_country_zones","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003645","()","Returns all the Timezones defined for all Countries. This is not the complete set of Timezones as some",2],["all_data_zone_identifiers","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003642","()","Returns an array containing the identifiers of all the available  Timezones that are based on data (are",2],["all_data_zones","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003641","()","Returns an array containing all the available Timezones that are based on data (are not links to other",2],["all_identifiers","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003640","()","Returns an array containing the identifiers of all the available  Timezones. ",2],["all_input_tags","ActionView::Helpers::ActiveRecordHelper","classes/ActionView/Helpers/ActiveRecordHelper.html#M002150","(record, record_name, options)","",2],["all_linked_zone_identifiers","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003644","()","Returns an array containing the identifiers of all the available  Timezones that are links to other Timezones.",2],["all_linked_zones","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003643","()","Returns an array containing all the available Timezones that are links to other Timezones. Returns TimezoneProxy",2],["allow_concurrency","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000712","()","Deprecated and no longer has any effect. ",2],["allow_concurrency=","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000716","(flag)","Deprecated and no longer has any effect. ",2],["announce","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001163","(message)","",2],["any?","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001196","()","",2],["app","Object","classes/Object.html#M000000","(create=false)","reference the global \"app\" instance, created on demand. To recreate the instance, pass a non-false value",2],["append","MemCache","classes/MemCache.html#M003601","(key, value)","Append - 'add this data to an existing key after existing data' Please note the value is always passed",2],["append_after_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001672","(*filters, &block)","The passed <tt>filters</tt> will be appended to the array of filters that run _after_ actions on this",2],["append_around_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001675","(*filters, &block)","If you <tt>append_around_filter A.new, B.new</tt>, the filter chain looks like B#before A#before # run",2],["append_before_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001669","(*filters, &block)","The passed <tt>filters</tt> will be appended to the filter_chain and will execute before the action on",2],["append_conditions","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000368","(reflection, preload_options)","",2],["append_features","ActiveSupport::CoreExtensions::String::Iterators","classes/ActiveSupport/CoreExtensions/String/Iterators.html#M002916","(base)","",2],["append_features","ActiveSupport::CoreExtensions::String::StartsEndsWith","classes/ActiveSupport/CoreExtensions/String/StartsEndsWith.html#M002944","(base)","",2],["append_features","Module","classes/Module.html#M003303","(mod)","",2],["append_sources","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000282","(*args)","Add a source to the end of the list. ",2],["append_view_path","ActionController::Base","classes/ActionController/Base.html#M001560","(path)","Adds a view_path to the end of the view_paths array. This change affects the current request only. self.append_view_path(\"views/default\")",2],["append_view_path","ActionController::Base","classes/ActionController/Base.html#M001543","(path)","Adds a view_path to the end of the view_paths array. If the current class has no view paths, copy them",2],["applicable?","ActionController::Routing::Optimisation::Optimiser","classes/ActionController/Routing/Optimisation/Optimiser.html#M001954","()","Temporarily disabled <tt>:url</tt> optimisation pending proper solution to Issues around request.host",2],["applicable?","ActionController::Routing::Optimisation::PositionalArgumentsWithAdditionalParams","classes/ActionController/Routing/Optimisation/PositionalArgumentsWithAdditionalParams.html#M001961","()","To avoid generating \"http://localhost/?host=foo.example.com\" we can't use this optimisation on routes",2],["apply_ssl_options","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001416","(http)","",2],["approximations","I18n::Backend::Transliterator::HashTransliterator","classes/I18n/Backend/Transliterator/HashTransliterator.html#M003523","()","",2],["arguments_for_call","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002316","(arguments, block = nil)","",2],["around_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001678","(*filters, &block)","Alias for #append_around_filter",2],["array_of_strings?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000554","(o)","",2],["array_or_string_for_javascript","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M002262","(option)","",2],["as_json","ActiveResource::Base","classes/ActiveResource/Base.html#M001417","(options = nil)","Coerces to a hash for JSON encoding. ==== Options The +options+ are passed to the +to_json+ method on",2],["as_json","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003238","(options = nil)","Coerces the date to a string for JSON encoding. ISO 8601 format is used if ActiveSupport::JSON::Encoding.use_standard_json_time_format",2],["as_json","DateTime","classes/DateTime.html#M003082","(options = nil)","Coerces the datetime to a string for JSON encoding. ISO 8601 format is used if ActiveSupport::JSON::Encoding.use_standard_json_time_format",2],["as_json","Object","classes/Object.html#M003084","(options = nil)","",2],["as_load_path","Module","classes/Module.html#M002830","()","Returns String#underscore applied to the module name minus trailing classes. ActiveRecord.as_load_path",2],["assert_blank","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M003176","(object)","Test if an expression is blank. Passes if object.blank? is true. assert_blank [] # => true ",2],["assert_difference","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M003174","(expression, difference = 1, message = nil, &block)","Test numeric difference between the return value of an expression as a result of what is evaluated in",2],["assert_dom_equal","ActionController::Assertions::DomAssertions","classes/ActionController/Assertions/DomAssertions.html#M001505","(expected, actual, message = \"\")","Test two HTML strings for equivalency (e.g., identical up to reordering of attributes) ==== Examples",2],["assert_dom_not_equal","ActionController::Assertions::DomAssertions","classes/ActionController/Assertions/DomAssertions.html#M001506","(expected, actual, message = \"\")","The negated form of +assert_dom_equal+. ==== Examples # assert that the referenced method does not generate",2],["assert_generates","ActionController::Assertions::RoutingAssertions","classes/ActionController/Assertions/RoutingAssertions.html#M001514","(expected_path, options, defaults={}, extras = {}, message=nil)","Asserts that the provided options can be used to generate the provided path.  This is the inverse of",2],["assert_no_difference","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M003175","(expression, message = nil, &block)","Assertion that the numeric result of evaluating an expression is not changed before and after invoking",2],["assert_no_tag","ActionController::Assertions::TagAssertions","classes/ActionController/Assertions/TagAssertions.html#M001522","(*opts)","Identical to +assert_tag+, but asserts that a matching tag does _not_ exist. (See +assert_tag+ for a",2],["assert_present","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M003177","(object)","Test if an expression is not blank. Passes if object.present? is true. assert_present {:data => 'x' }",2],["assert_recognizes","ActionController::Assertions::RoutingAssertions","classes/ActionController/Assertions/RoutingAssertions.html#M001513","(expected_options, path, extras={}, message=nil)","Asserts that the routing of the given +path+ was handled correctly and that the parsed options (given",2],["assert_redirected_to","ActionController::Assertions::ResponseAssertions","classes/ActionController/Assertions/ResponseAssertions.html#M001509","(options = {}, message=nil)","Assert that the redirection options passed in match those of the redirect called in the latest action.",2],["assert_response","ActionController::Assertions::ResponseAssertions","classes/ActionController/Assertions/ResponseAssertions.html#M001508","(type, message = nil)","Asserts that the response is one of the following types: * <tt>:success</tt>   - Status code was 200",2],["assert_routing","ActionController::Assertions::RoutingAssertions","classes/ActionController/Assertions/RoutingAssertions.html#M001515","(path, options, defaults={}, extras={}, message=nil)","Asserts that path and options match both ways; in other words, it verifies that <tt>path</tt> generates",2],["assert_select","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001519","(*args, &block)","An assertion that selects elements and makes one or more equality tests. If the first argument is an",2],["assert_select_email","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001525","(&block)","Extracts the body of an email and runs nested assertions on it. You must enable deliveries for this assertion",2],["assert_select_encoded","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001524","(element = nil, &block)","Extracts the content of an element, treats it as encoded HTML and runs nested assertion on it. You typically",2],["assert_select_rjs","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001523","(*args, &block)","Selects content from the RJS response. === Narrowing down With no arguments, asserts that one or more",2],["assert_tag","ActionController::Assertions::TagAssertions","classes/ActionController/Assertions/TagAssertions.html#M001520","(*opts)","Asserts that there is a tag/node/element in the body of the response that meets all of the given conditions.",2],["assert_template","ActionController::Assertions::ResponseAssertions","classes/ActionController/Assertions/ResponseAssertions.html#M001510","(options = {}, message = nil)","Asserts that the request was rendered with the appropriate template file or partials ==== Examples #",2],["assert_valid","ActionController::Assertions::ModelAssertions","classes/ActionController/Assertions/ModelAssertions.html#M001507","(record)","Ensures that the passed record is valid by Active Record standards and returns any error messages if",2],["assert_valid_keys","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002766","(*valid_keys)","Validate all keys in a hash match *valid keys, raising ArgumentError on a mismatch. Note that keys are",2],["asset_file_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002190","(path)","",2],["assign","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002304","(variable, value)","Assigns the JavaScript +variable+ the given +value+. Examples: # Generates: my_string = \"This is mine!\";",2],["assign_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000702","(attributes={})","Assigns attributes, dealing nicely with both multi and single paramater attributes Assumes attributes",2],["assign_default_content_type_and_charset!","ActionController::Response","classes/ActionController/Response.html#M001922","()","",2],["assign_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000728","(pairs)","Instantiates objects for all attribute classes that needs more than one constructor parameter. This is",2],["assign_names","ActionController::Base","classes/ActionController/Base.html#M001604","()","",2],["assign_names!","Rails::Generator::NamedBase","classes/Rails/Generator/NamedBase.html#M000212","(name)","",2],["assign_shortcuts","ActionController::Base","classes/ActionController/Base.html#M001595","(request, response)","",2],["assign_status","DispatchServlet","classes/DispatchServlet.html#M000137","(res, header)","",2],["assigns","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002088","(key = nil)","",2],["associated_records_to_validate_or_save","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000400","(association, new_record, autosave)","Returns the record for an association collection that should be validated or saved. If +autosave+ is",2],["association_accessor_methods","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000414","(reflection, association_proxy_class)","",2],["association_constructor_method","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000417","(constructor, reflection, association_proxy_class)","",2],["association_valid?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000404","(reflection, association)","Returns whether or not the association is valid and applies any errors to the parent, <tt>self</tt>,",2],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000850","(version, migrations_path = ActiveRecord::Migrator.migrations_path)","",2],["at","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003312","(secs)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from number of seconds",2],["at_beginning_of_day","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002643","()","Alias for #beginning_of_day",2],["at_beginning_of_day","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002711","()","Alias for #beginning_of_day",2],["at_beginning_of_day","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003000","()","Alias for #beginning_of_day",2],["at_beginning_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002673","()","Alias for #beginning_of_month",2],["at_beginning_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003003","()","Alias for #beginning_of_month",2],["at_beginning_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002677","()","Alias for #beginning_of_quarter",2],["at_beginning_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003007","()","Alias for #beginning_of_quarter",2],["at_beginning_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002662","()","Alias for #beginning_of_week",2],["at_beginning_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002993","()","Alias for #beginning_of_week",2],["at_beginning_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002681","()","Alias for #beginning_of_year",2],["at_beginning_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003013","()","Alias for #beginning_of_year",2],["at_end_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002675","()","Alias for #end_of_month",2],["at_end_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003005","()","Alias for #end_of_month",2],["at_end_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002679","()","Alias for #end_of_quarter",2],["at_end_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003011","()","Alias for #end_of_quarter",2],["at_end_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002665","()","Alias for #end_of_week",2],["at_end_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002995","()","Alias for #end_of_week",2],["at_end_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002683","()","Alias for #end_of_year",2],["at_end_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003016","()","Alias for #end_of_year",2],["at_midnight","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002642","()","Alias for #beginning_of_day",2],["at_midnight","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002710","()","Alias for #beginning_of_day",2],["at_midnight","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002999","()","Alias for #beginning_of_day",2],["atom_feed","ActionView::Helpers::AtomFeedHelper","classes/ActionView/Helpers/AtomFeedHelper.html#M002155","(options = {}, &block)","Full usage example: config/routes.rb: ActionController::Routing::Routes.draw do |map| map.resources :posts",2],["atomic_write","ActiveSupport::CoreExtensions::File::Atomic","classes/ActiveSupport/CoreExtensions/File/Atomic.html#M002726","(file_name, temp_dir = Dir.tmpdir)","Write to a file atomically.  Useful for situations where you don't want other processes or threads to",2],["attr_accessible","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000486","(*attributes)","Specifies a white list of model attributes that can be set via mass-assignment, such as <tt>new(attributes)</tt>,",2],["attr_accessor_with_default","Module","classes/Module.html#M002816","(sym, default = nil, &block)","Declare an attribute accessor with an initial default return value. To give attribute <tt>:age</tt> the",2],["attr_internal","Module","classes/Module.html#M002820","(*attrs)","Alias for #attr_internal_accessor",2],["attr_internal_accessor","Module","classes/Module.html#M002819","(*attrs)","Declares an attribute reader and writer backed by an internally-named instance variable. ",2],["attr_internal_ivar_name","Module","classes/Module.html#M002821","(attr)","",2],["attr_internal_reader","Module","classes/Module.html#M002817","(*attrs)","Declares an attribute reader backed by an internally-named instance variable. ",2],["attr_internal_writer","Module","classes/Module.html#M002818","(*attrs)","Declares an attribute writer backed by an internally-named instance variable. ",2],["attr_protected","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000484","(*attributes)","Attributes named in this macro are protected from mass-assignment, such as <tt>new(attributes)</tt>,",2],["attr_readonly","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000488","(*attributes)","Attributes listed as readonly can be set for a new record, but will be ignored in database updates afterwards.",2],["attribute_change","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001098","(attr)","Handle <tt>*_change</tt> for +method_missing+. ",2],["attribute_changed?","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001097","(attr)","Handle <tt>*_changed?</tt> for +method_missing+. ",2],["attribute_condition","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000576","(quoted_column_name, argument)","",2],["attribute_for_inspect","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000685","(attr_name)","Returns an <tt>#inspect</tt>-like string for the value of the attribute +attr_name+. String attributes",2],["attribute_match","HTML::Selector","classes/HTML/Selector.html#M002125","(equality, value)","Create a regular expression to match an attribute value based on the equality operator (=, ^=, |=, etc).",2],["attribute_method_suffix","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000374","(*suffixes)","Declares a method available for all attributes with the given suffix. Uses +method_missing+ and <tt>respond_to?</tt>",2],["attribute_method_suffixes","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000385","()","Default to =, ?, _before_type_cast ",2],["attribute_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000690","()","Returns an array of names for the attributes available on this object sorted alphabetically. ",2],["attribute_present?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000688","(attribute)","Returns true if the specified +attribute+ has been set by the user or by a database load and is neither",2],["attribute_was","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001099","(attr)","Handle <tt>*_was</tt> for +method_missing+. ",2],["attribute_will_change!","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001100","(attr)","Handle <tt>*_will_change!</tt> for +method_missing+. ",2],["attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000680","()","Returns a hash of all the attributes with their names as keys and the values of the attributes as values.",2],["attributes","Rails::Generator::NamedBase","classes/Rails/Generator/NamedBase.html#M000210","()","",2],["attributes=","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000679","(new_attributes, guard_protected_attributes = true)","Allows you to set all the attributes at once by passing in a hash with keys matching the attribute names",2],["attributes_before_type_cast","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000684","()","Returns a hash of attributes before typecasting and deserialization. ",2],["attributes_from_column_definition","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000727","()","Initializes the attributes array with keys matching the columns from the linked table and the values",2],["attributes_from_column_definition_with_lock","ActiveRecord::Locking::Optimistic","classes/ActiveRecord/Locking/Optimistic.html#M001121","()","",2],["attributes_protected_by_default","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000715","()","The primary key and inheritance column can never be set by mass-assignment for security reasons. ",2],["attributes_with_quotes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000721","(include_primary_key = true, include_readonly_attributes = true, attribute_names = @attributes.keys)","Returns a copy of the attributes hash where all the values have been safely quoted for use in an SQL",2],["authenticate","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M001697","(controller, &login_procedure)","",2],["authenticate","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001711","(controller, realm, &password_procedure)","Returns false on a valid response, true otherwise ",2],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#M001693","(realm = \"Application\", &login_procedure)","",2],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#M001705","(realm = \"Application\", &password_procedure)","",2],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#M001694","(&login_procedure)","",2],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#M001709","(realm = \"Application\", &password_procedure)","Authenticate with HTTP Digest, returns true or false ",2],["authentication_header","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001733","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M001704","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001734","(controller, realm, message = nil)","",2],["authorization","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M001699","(request)","",2],["authorization","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001715","(request)","",2],["authorization_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001422","()","Sets authorization header ",2],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002152","(type = :rss, url_options = {}, tag_options = {})","Returns a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed. The +type+",2],["auto_flush","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002508","()","",2],["auto_flushing=","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002503","(period)","Set the auto-flush period. Set to true to flush after every log message, to an integer to flush every",2],["auto_link","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002356","(text, *args, &block)","Turns all URLs and e-mail addresses into clickable links. The <tt>:link</tt> option will limit what should",2],["auto_link_email_addresses","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002366","(text, html_options = {})","Turns all email addresses into clickable links.  If a block is given, each email is yielded and the result",2],["auto_link_urls","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002365","(text, html_options = {})","Turns all urls into clickable links.  If a block is given, each url is yielded and the result is used",2],["auto_linked?","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002367","(left, right)","Detects already linked context or position in the middle of a tag ",2],["available_locales","I18n::Backend::ActiveRecord::Implementation","classes/I18n/Backend/ActiveRecord/Implementation.html#M003387","()","",2],["available_locales","I18n::Backend::ActiveRecord::Translation","classes/I18n/Backend/ActiveRecord/Translation.html#M003384","()","",2],["available_locales","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003403","()","Returns an array of locales for which translations are available ignoring the reserved translation meta",2],["available_locales","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003420","()","",2],["available_locales","I18n::Backend::KeyValue::Implementation","classes/I18n/Backend/KeyValue/Implementation.html#M003475","()","",2],["available_locales","I18n::Backend::Memoize","classes/I18n/Backend/Memoize.html#M003483","()","",2],["available_locales","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003496","()","Get available locales from the translations hash ",2],["available_locales","I18n::Config","classes/I18n/Config.html#M003513","()","Returns an array of locales for which translations are available. Unless you explicitely set the these",2],["available_locales=","I18n::Config","classes/I18n/Config.html#M003514","(locales)","Sets the available locales. ",2],["average","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000543","(column_name, options = {})","Calculates the average value on a given column. The value is returned as a float, or +nil+ if there's",2],["backend","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M003077","()","",2],["backend","I18n::Config","classes/I18n/Config.html#M003509","()","Returns the current backend. Defaults to +Backend::Simple+. ",2],["backend=","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M003078","(name)","",2],["backend=","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M003717","(name)","",2],["backend=","I18n::Config","classes/I18n/Config.html#M003510","(backend)","Sets the current backend. Used to set a custom backend. ",2],["backtrace_cleaner","Rails","classes/Rails.html#M000031","()","",2],["bang?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001115","()","",2],["banner","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000201","()","Override with your own usage banner. ",2],["banner","Rails::Generator::NamedBase","classes/Rails/Generator/NamedBase.html#M000209","()","Override with your own usage banner. ",2],["banner","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000338","()","Override with your own usage banner. ",2],["banner","Rails::Generator::Scripts::Base","classes/Rails/Generator/Scripts/Base.html#M000342","()","Override with your own script usage banner. ",2],["base64","ActiveSupport::SecureRandom","classes/ActiveSupport/SecureRandom.html#M003170","(n=nil)","SecureRandom.base64 generates a random base64 string. The argument n specifies the length of the random",2],["base_class","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000528","()","Returns the base AR subclass that this class descends from. If A extends AR::Base, A.base_class will",2],["batch_order","ActiveRecord::Batches::ClassMethods","classes/ActiveRecord/Batches/ClassMethods.html#M000532","()","",2],["becomes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000649","(klass)","Returns an instance of the specified +klass+ with the attributes of the current record. This is mostly",2],["before_create","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000594","()","Is called _before_ <tt>Base.save</tt> on new objects that haven't been saved yet (no record exists).",2],["before_destroy","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000611","()","Is called _before_ <tt>Base.destroy</tt>. Note: If you need to _destroy_ or _nullify_ associated records",2],["before_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001671","(*filters, &block)","Alias for #append_before_filter",2],["before_save","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000589","()","Is called _before_ <tt>Base.save</tt> (regardless of whether it's a +create+ or +update+ save). ",2],["before_save_collection_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000405","()","Is used as a before_save callback to check while saving a collection association whether or not the parent",2],["before_update","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000599","()","Is called _before_ <tt>Base.save</tt> on existing objects that have a record. ",2],["before_validation","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000603","()","Is called _before_ <tt>Validations.validate</tt> (which is part of the <tt>Base.save</tt> call). ",2],["before_validation_on_create","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000605","()","Is called _before_ <tt>Validations.validate</tt> (which is part of the <tt>Base.save</tt> call) on new",2],["before_validation_on_update","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000607","()","Is called _before_ <tt>Validations.validate</tt> (which is part of the <tt>Base.save</tt> call) on existing",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000767","()","Begins the transaction (and turns off auto-committing). ",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001000","()","Begins a transaction. ",2],["beginning_of_day","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002640","()","Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the",2],["beginning_of_day","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002708","()","Returns a new DateTime representing the start of the day (0:00) ",2],["beginning_of_day","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002997","()","Returns a new Time representing the start of the day (0:00) ",2],["beginning_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002670","()","Returns a new ; DateTime objects will have time set to 0:00DateTime representing the start of the month",2],["beginning_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003002","()","Returns a new Time representing the start of the month (1st of the month, 0:00) ",2],["beginning_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002676","()","Returns a new Date/DateTime representing the start of the quarter (1st of january, april, july, october;",2],["beginning_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003006","()","Returns  a new Time representing the start of the quarter (1st of january, april, july, october, 0:00)",2],["beginning_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002660","()","Returns a new Date/DateTime representing the \"start\" of this week (i.e, Monday; DateTime objects will",2],["beginning_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002991","()","Returns a new Time representing the \"start\" of this week (Monday, 0:00) ",2],["beginning_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002680","()","Returns a new Date/DateTime representing the start of the year (1st of january; DateTime objects will",2],["beginning_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003012","()","Returns  a new Time representing the start of the year (1st of january, 0:00) ",2],["belongs_to","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000411","(association_id, options = {})","Specifies a one-to-one association with another class. This method should only be used if this class",2],["belongs_to","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000876","(*args)","Alias for #references",2],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000861","(*args)","Alias for #references",2],["belongs_to?","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001234","()","Returns +true+ if +self+ is a +belongs_to+ reflection. ",2],["benchmark","ActionController::Benchmarking::ClassMethods","classes/ActionController/Benchmarking/ClassMethods.html#M001528","(title, log_level = Logger::DEBUG, use_silence = true)","Log and benchmark the workings of a single block and silence whatever logging that may have happened",2],["benchmark","ActionView::Helpers::BenchmarkHelper","classes/ActionView/Helpers/BenchmarkHelper.html#M002173","(message = \"Benchmarking\", options = {})","Allows you to measure the execution time of a block  in a template and records the result to the log.",2],["benchmark","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000524","(title, log_level = Logger::DEBUG, use_silence = true)","Log and benchmark multiple statements in a single block. Example: Project.benchmark(\"Creating project\")",2],["benchmark","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003208","()","",2],["best_install_method","RailsEnvironment","classes/RailsEnvironment.html#M000147","()","",2],["between?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003254","(min, max)","",2],["binary_search","Continuum","classes/Continuum.html#M003633","(ary, value, &block)","Find the closest index in Continuum with value <= the given value ",2],["binary_to_string","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000810","(value)","Used to convert from BLOBs to Strings ",2],["blank?","Object","classes/Object.html#M002869","()","An object is blank if it's false, empty, or a whitespace string. For example, \"\", \"   \", +nil+, [], and",2],["blank_slate_method_added","Kernel","classes/Kernel.html#M003299","(name)","Alias for #method_added",2],["blank_slate_method_added","Object","classes/Object.html#M003301","(name)","Alias for #method_added",2],["blankslate_original_append_features","Module","classes/Module.html#M003304","(mod)","Alias for #append_features",2],["block_called_from_erb?","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002337","(block)","",2],["block_called_from_erb?","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002336","(block)","Check whether we're called from an erb template. We'd return a string in any other case, but erb <%=",2],["block_to_function","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002317","(block)","",2],["body","ActionController::Request","classes/ActionController/Request.html#M001886","()","The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap",2],["breakpoint","Kernel","classes/Kernel.html#M002784","()","",2],["breakpoint_server","Rails::Configuration","classes/Rails/Configuration.html#M000092","(_ = nil)","Deprecated options: ",2],["breakpoint_server=","Rails::Configuration","classes/Rails/Configuration.html#M000093","(_ = nil)","Alias for #breakpoint_server",2],["browser_generated?","Mime::Type","classes/Mime/Type.html#M001795","()","",2],["buffer","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002509","()","",2],["build","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001778","(app)","",2],["build","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001769","(app)","",2],["build","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002562","(kind, *methods, &block)","",2],["build_args","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001770","()","",2],["build_callbacks","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002327","(options)","",2],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002520","(*addresses)","",2],["build_middleware_stack","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001649","()","",2],["build_named_route_call","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001810","(records, inflection, options = {})","",2],["build_observer","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002324","(klass, name, options = {})","",2],["build_request_headers","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001421","(headers, http_method=nil)","Builds headers for request to remote service. ",2],["build_request_uri","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002093","(action, parameters)","",2],["builtin_directories","Rails::Configuration","classes/Rails/Configuration.html#M000105","()","",2],["button_to","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002364","(name, options = {}, html_options = {})","Generates a form containing a single button that submits to the URL created by the set of +options+.",2],["button_to_function","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M002256","(name, *args, &block)","Returns a button with the given +name+ text that'll trigger a JavaScript +function+ using the onclick",2],["button_to_remote","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002273","(name, options = {}, html_options = {})","Creates a button with an onclick event which calls a remote action via XMLHttpRequest The options for",2],["byte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002839","()","Alias for #bytes",2],["bytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002838","()","",2],["cache","ActionController::Caching","classes/ActionController/Caching.html#M001618","(key, options = {}, &block)","Convenience accessor ",2],["cache","ActionView::Helpers::CacheHelper","classes/ActionView/Helpers/CacheHelper.html#M002182","(name = {}, options = nil, &block)","A method for caching fragments of a view rather than an entire action or page.  This technique is useful",2],["cache","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000765","()","Enable the query cache within the block. ",2],["cache","ActiveRecord::QueryCache::ClassMethods","classes/ActiveRecord/QueryCache/ClassMethods.html#M001213","(&block)","Enable the query cache within the block if Active Record is configured. ",2],["cache","Rails","classes/Rails.html#M000034","()","",2],["cache","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000294","()","Lookup and cache every generator from the source list. ",2],["cache_asset_timestamps","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002174","()","",2],["cache_asset_timestamps=","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002175","(value)","You can enable or disable the asset tag timestamps cache. With the cache enabled, the asset tag helper",2],["cache_attribute?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000383","(attr_name)","Returns +true+ if the provided attribute is being cached. ",2],["cache_attributes","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000381","(*attribute_names)","+cache_attributes+ allows you to declare which converted attribute values should be cached. Usually caching",2],["cache_configured?","ActionController::Caching","classes/ActionController/Caching.html#M001617","()","",2],["cache_configured?","ActionController::Caching","classes/ActionController/Caching.html#M001619","()","",2],["cache_decr","MemCache","classes/MemCache.html#M003612","(server, cache_key, amount)","Performs a raw decr for +cache_key+ from +server+.  Returns nil if not found. ",2],["cache_fixtures","Fixtures","classes/Fixtures.html#M001136","(connection, fixtures_map)","",2],["cache_for_connection","Fixtures","classes/Fixtures.html#M001132","(connection)","",2],["cache_format","ActionController::Request","classes/ActionController/Request.html#M001853","()","",2],["cache_get","MemCache","classes/MemCache.html#M003613","(server, cache_key)","Fetches the raw data for +cache_key+ from +server+.  Returns nil on cache miss. ",2],["cache_get_multi","MemCache","classes/MemCache.html#M003615","(server, cache_keys)","Fetches +cache_keys+ from +server+ using a multi-get. ",2],["cache_incr","MemCache","classes/MemCache.html#M003616","(server, cache_key, amount)","Performs a raw incr for +cache_key+ from +server+.  Returns nil if not found. ",2],["cache_key","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000630","()","Returns a cache key that can be used to identify this record. ==== Examples Product.new.cache_key   ",2],["cache_key","I18n::Backend::Cache","classes/I18n/Backend/Cache.html#M003402","(*args)","",2],["cache_namespace","I18n","classes/I18n.html#M003396","()","",2],["cache_namespace=","I18n","classes/I18n.html#M003398","(namespace)","",2],["cache_page","ActionController::Caching::Pages","classes/ActionController/Caching/Pages.html#M001581","(content = nil, options = nil)","Manually cache the +content+ in the key determined by +options+. If no content is provided, the contents",2],["cache_page","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M001570","(content, path)","Manually cache the +content+ in the key determined by +path+. Example: cache_page \"I'm the cached content\",",2],["cache_sql","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000775","(sql)","",2],["cache_store","I18n","classes/I18n.html#M003394","()","",2],["cache_store=","ActionController::Caching","classes/ActionController/Caching.html#M001616","(store_option)","Defines the storage option for cached fragments ",2],["cache_store=","I18n","classes/I18n.html#M003395","(store)","",2],["cache_template_loading?","ActionView::Base","classes/ActionView/Base.html#M002131","()","",2],["cached_attributes","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000382","()","Returns the attributes which are cached. By default time related columns with datatype <tt>:datetime,",2],["cached_fixtures","Fixtures","classes/Fixtures.html#M001135","(connection, keys_to_fetch = nil)","",2],["caches_action","ActionController::Caching::Actions::ClassMethods","classes/ActionController/Caching/Actions/ClassMethods.html#M001531","(*actions)","Declares that +actions+ should be cached. See ActionController::Caching::Actions for details. ",2],["caches_page","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M001572","(*actions)","Caches the +actions+ using the page-caching approach that'll store the cache in a path within the page_cache_directory",2],["caching_allowed","ActionController::Caching::Pages","classes/ActionController/Caching/Pages.html#M001583","()","",2],["calculate","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000552","(operation, column_name, options = {})","This calculates aggregate values in the given column.  Methods for count, sum, average, minimum, and",2],["call","ActionController::Base","classes/ActionController/Base.html#M001533","(env)","",2],["call","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001644","(env)","",2],["call","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001645","(env)","",2],["call","ActionController::ParamsParser","classes/ActionController/ParamsParser.html#M001798","(env)","",2],["call","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002011","(env)","",2],["call","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002027","(env)","",2],["call","ActionController::StringCoercion","classes/ActionController/StringCoercion.html#M002054","(env)","",2],["call","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002303","(function, *arguments, &block)","Calls the JavaScript +function+, optionally with the given +arguments+. If a block is given, the block",2],["call","ActionView::TemplateHandler","classes/ActionView/TemplateHandler.html#M002435","(template)","",2],["call","ActionView::TemplateHandlers::Compilable::ClassMethods","classes/ActionView/TemplateHandlers/Compilable/ClassMethods.html#M002433","(template)","",2],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#M000691","(env)","",2],["call","ActiveRecord::QueryCache","classes/ActiveRecord/QueryCache.html#M001216","(env)","",2],["call","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002578","(*args, &block)","",2],["call","Logger::Formatter","classes/Logger/Formatter.html#M002803","(severity, time, progname, msg)","",2],["call","Logger::SimpleFormatter","classes/Logger/SimpleFormatter.html#M002806","(severity, timestamp, progname, msg)","This method is invoked when a log event occurs ",2],["callback","ActiveRecord::Callbacks","classes/ActiveRecord/Callbacks.html#M000615","(method)","",2],["camelcase","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002921","(first_letter = :upper)","Alias for #camelize",2],["camelize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002920","(first_letter = :upper)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to camelize is set to <tt>:lower</tt>",2],["camelize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003059","(lower_case_and_underscored_word, first_letter_in_uppercase = true)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to +camelize+ is set to <tt>:lower</tt>",2],["candidate_for_layout?","ActionMailer::Base","classes/ActionMailer/Base.html#M002479","(options)","",2],["capitalize","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003144","()","Converts the first character to uppercase and the remainder to lowercase. Example: 'über'.mb_chars.capitalize.to_s",2],["capture","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M002192","(*args, &block)","The capture method allows you to extract part of a template into a  variable. You can then use this variable",2],["cas","MemCache","classes/MemCache.html#M003598","(key, expiry=0, raw=false)","\"cas\" is a check and set operation which means \"store this data but only if no one else has updated since",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000781","()","",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000987","()","",2],["catch_schema_changes","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001108","()","",2],["cdata!","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003372","(text)","Insert a CDATA section into the XML markup. For example: xml.cdata!(\"text to be included in cdata\") #=>",2],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003715","(string)","Alias for #characters",2],["cdata_section","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002334","(content)","Returns a CDATA section with the given +content+.  CDATA sections are used to escape blocks of text containing",2],["center","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003131","(integer, padstr=' ')","Works just like <tt>String#center</tt>, only integer specifies characters instead of bytes. Example:",2],["change","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000869","(column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002648","(options)","Returns a new Date where one or more of the elements have been changed according to the +options+ parameter.",2],["change","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002693","(options)","Returns a new DateTime where one or more of the elements have been changed according to the +options+",2],["change","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002969","(options)","Returns a new Time where one or more of the elements have been changed according to the +options+ parameter.",2],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001027","(table_name, column_name, type, options = {})","Changes the column of a table. ",2],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000825","(table_name, column_name, type, options = {})","Changes the column's definition according to the new options. See TableDefinition#column for details",2],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001028","(table_name, column_name, default)","Changes the default value of a table column. ",2],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000828","(table_name, column_name, default)","Sets a new default value for a column.  If you want to set the default value to +NULL+, you are out of",2],["change_column_null","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000972","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001029","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001080","(table_name, column_name, null, default = nil)","",2],["change_default","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000870","(column_name, default)","Sets a new default value for a column. See SchemaStatements#change_column_default ===== Examples t.change_default(:qualification,",2],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000814","(table_name)","A block for changing columns in +table+. === Example # change_table() yields a Table instance change_table(:suppliers)",2],["changed","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001089","()","List of attributes with unsaved changes. person.changed # => [] person.name = 'bob' person.changed #",2],["changed?","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001088","()","Do any attributes have unsaved changes? person.changed? # => false person.name = 'bob' person.changed?",2],["changed_attributes","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001096","()","Map of change <tt>attr => original value</tt>. ",2],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000399","()","Returns whether or not this record has been changed in any way (including whether any of its nested autosave",2],["changes","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001090","()","Map of changed attrs => [original value, new value]. person.changes # => {} person.name = 'bob' person.changes",2],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003714","(string)","",2],["chars","ActiveSupport::CoreExtensions::String::Multibyte","classes/ActiveSupport/CoreExtensions/String/Multibyte.html#M002935","()","",2],["charset","ActionController::Response","classes/ActionController/Response.html#M001913","()","",2],["charset","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000954","()","Returns the database character set. ",2],["charset=","ActionController::Response","classes/ActionController/Response.html#M001912","(charset)","Set the charset of the Content-Type header. Set to nil to remove it. If no content type is set, it defaults",2],["check_box","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002221","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","Returns a checkbox tag tailored for accessing a specified attribute (identified by +method+) on an object",2],["check_box_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002236","(name, value = \"1\", checked = false, options = {})","Creates a check box form input tag. ==== Options * <tt>:disabled</tt> - If set to true, the user will",2],["check_for_name_collision","Builder","classes/Builder.html#M003351","(klass, method_name, defined_constant=nil)","",2],["check_for_unbuilt_gems","Rails::Initializer","classes/Rails/Initializer.html#M000051","()","",2],["check_gem_dependencies","Rails::Initializer","classes/Rails/Initializer.html#M000052","()","",2],["check_multithread_status!","MemCache","classes/MemCache.html#M003625","()","",2],["check_ruby_version","Rails::Initializer","classes/Rails/Initializer.html#M000041","()","Check for valid Ruby version This is done in an external file, so we can use it from the `rails` program",2],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000654","(conn)","Check-in a database connection back into the pool, indicating that you no longer need this connection.",2],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000650","()","Check-out a database connection from the pool, indicating that you want to use it. You should call #checkin",2],["checkout_and_verify","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000666","(c)","",2],["checkout_existing_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000665","()","",2],["checkout_new_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000664","()","",2],["class!","Builder::CSS","classes/Builder/CSS.html#M003333","(arg, &block)","",2],["class_collisions","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000245","(*class_names)","Does nothing for all commands except Create. ",2],["class_collisions","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000262","(*class_names)","Check whether the given class names are already taken by Ruby or Rails.  In the future, expand to check",2],["class_collisions","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000305","(*class_names)","",2],["class_eval","Kernel","classes/Kernel.html#M002792","(*args, &block)","class_eval on an object acts like singleton_class.class_eval. ",2],["class_eval","Object","classes/Object.html#M002890","(*args, &block)","class_eval on an object acts like singleton_class_eval. ",2],["class_file","Rails::Generator::Spec","classes/Rails/Generator/Spec.html#M000348","()","",2],["class_name","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001231","()","Returns the class name for the macro.  For example, <tt>composed_of :balance, :class_name => 'Money'</tt>",2],["class_name","Rails::Generator::Spec","classes/Rails/Generator/Spec.html#M000349","()","",2],["class_of_active_record_descendant","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000590","(klass)","Returns the class descending directly from ActiveRecord::Base or an abstract class, if any, in the inheritance",2],["classify","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002929","()","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["classify","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003072","(table_name)","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["clean","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002492","(backtrace)","Returns the backtrace after all filters and silencers has been run against it. Filters run first, then",2],["clean_backtrace","ActionController::Rescue","classes/ActionController/Rescue.html#M001904","(exception)","",2],["clean_backtrace","ActionController::TestCase::Assertions","classes/ActionController/TestCase/Assertions.html#M002058","(&block)","",2],["clean_within","ActiveSupport::CoreExtensions::Pathname::CleanWithin","classes/ActiveSupport/CoreExtensions/Pathname/CleanWithin.html#M002891","(string)","Clean the paths contained in the provided string. ",2],["cleanup_application","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001639","()","",2],["clear","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001992","()","",2],["clear","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001314","()","Removes all errors that have been added. ",2],["clear","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001483","()","",2],["clear","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002531","()","",2],["clear","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002540","()","",2],["clear","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002559","()","",2],["clear","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002556","()","",2],["clear","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003053","(scope = :all)","Clears the loaded inflections within a given scope (default is <tt>:all</tt>). Give the scope as a symbol",2],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000675","()","Returns any connections in use by the current thread back to the pool, and also returns connections to",2],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000677","()","",2],["clear_buffer","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002510","()","",2],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000771","()","Clears the query cache. One reason you may wish to call this method explicitly is between queries that",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000676","()","Clears the cache which maps classes ",2],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000643","()","Clears the cache which maps classes ",2],["clear_stale_cached_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000647","()","Return any checked-out connections back to the pool by threads that are no longer alive. ",2],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001019","()","Returns the current client message level. ",2],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001020","(level)","Set the client message level. ",2],["clone","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000648","()","Returns a clone of the record that hasn't been assigned an id yet and is treated as a new record.  Note",2],["clone","ActiveResource::Base","classes/ActiveResource/Base.html#M001391","()","Returns a \\clone of the resource that hasn't been assigned an +id+ yet and is treated as a \\new resource.",2],["clone_attribute_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000751","(reader_method, attribute_name)","",2],["clone_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000750","(reader_method = :read_attribute, attributes = {})","",2],["close","ActionController::Reloader::BodyWrapper","classes/ActionController/Reloader/BodyWrapper.html#M001813","()","",2],["close","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002507","()","",2],["close","ActiveSupport::Gzip::Stream","classes/ActiveSupport/Gzip/Stream.html#M003042","()","",2],["close","MemCache::Server","classes/MemCache/Server.html#M003631","()","Close the connection to the memcached server targeted by this object.  The server is not considered dead.",2],["close_connection","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000026","(request)","",2],["collation","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000960","()","Returns the database collation strategy. ",2],["collect_asset_files","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002191","(*path)","",2],["collection_accessor_methods","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000416","(reflection, association_proxy_class, writer = true)","",2],["collection_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001359","(prefix_options = {}, query_options = nil)","Gets the collection path for the REST resources.  If the +query_options+ parameter is omitted, Rails",2],["collection_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001434","(options = nil)","",2],["collection_reader_method","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000415","(reflection, association_proxy_class)","",2],["collection_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002226","(object, method, collection, value_method, text_method, options = {}, html_options = {})","Returns <tt><select></tt> and <tt><option></tt> tags for the collection of existing return values of",2],["colorize_logging","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000453","","Determines whether to use ANSI codes to colorize the logging statements committed by the connection adapter.",2],["column","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000866","(column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["column","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000852","(name, type, options = {})","Instantiates a new column for the table. The +type+ parameter is normally one of the migrations native",2],["column_alias_for","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000569","(*keys)","Converts the given keys to the value that the database adapter returns as a usable column name: column_alias_for(\"users.id\")",2],["column_aliases","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000462","(join_dependency)","",2],["column_for","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000571","(field)","",2],["column_for","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001003","(table_name, column_name)","",2],["column_for_attribute","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000692","(name)","Returns the column object for the named attribute. ",2],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000732","()","the maximum length of a column name ",2],["column_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000509","()","Returns an array of column names as strings. ",2],["column_names","Fixtures","classes/Fixtures.html#M001149","()","",2],["columns","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000507","()","Returns an array of column objects for the table associated with this class. ",2],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001014","(table_name, name = nil)","Returns the list of all column definitions for a table. ",2],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000804","(table_name, name = nil)","Returns an array of Column objects for the table specified by +table_name+. See the concrete implementation",2],["columns_hash","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000508","()","Returns a hash of column objects for the table associated with this class. ",2],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000737","()","the maximum number of columns in a multicolumn index ",2],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000735","()","the maximum number of columns per table ",2],["columns_with_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000773","(*args)","",2],["comma_pair_list","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000744","(hash)","Returns a comma-separated pair list, like \"key1 = val1, key2 = val2\". ",2],["comment!","Builder::CSS","classes/Builder/CSS.html#M003331","(comment_text)","Create a comment string in the output. ",2],["comment!","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003369","(comment_text)","",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000768","()","Commits the transaction (and turns on auto-committing). ",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001001","()","Commits a transaction. ",2],["comparable_time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003209","()","Alias for #utc",2],["compare_with_coercion","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002717","(other)","Layers additional behavior on DateTime#<=> so that Time and ActiveSupport::TimeWithZone instances can",2],["compare_with_coercion","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003022","(other)","Layers additional behavior on Time#<=> so that DateTime and ActiveSupport::TimeWithZone instances can",2],["compile","ActionView::TemplateHandlers::Builder","classes/ActionView/TemplateHandlers/Builder.html#M002438","(template)","",2],["compile","ActionView::TemplateHandlers::Compilable","classes/ActionView/TemplateHandlers/Compilable.html#M002434","(template)","",2],["compile","ActionView::TemplateHandlers::ERB","classes/ActionView/TemplateHandlers/ERB.html#M002440","(template)","",2],["compile","ActionView::TemplateHandlers::RJS","classes/ActionView/TemplateHandlers/RJS.html#M002441","(template)","",2],["compile_all_strings_in","I18n::Backend::InterpolationCompiler","classes/I18n/Backend/InterpolationCompiler.html#M003479","(data)","",2],["compile_if_an_interpolation","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003459","(string)","",2],["compile_interpolation_token","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003466","(key)","",2],["compiled_interpolation_body","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003462","(str)","",2],["complete_request_uri","ActionController::Base","classes/ActionController/Base.html#M001609","()","",2],["complex_template","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000270","(relative_source, relative_destination, template_options = {})","",2],["complex_template","Rails::Generator::Commands::Destroy","classes/Rails/Generator/Commands/Destroy.html#M000293","(*args)","",2],["complex_template","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000308","(relative_source, relative_destination, options = {})","",2],["complex_template","Rails::Generator::Commands::Update","classes/Rails/Generator/Commands/Update.html#M000318","(relative_source, relative_destination, template_options = {})","",2],["compose","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003147","()","Performs composition on all the characters. Example: 'é'.length #=> 3 'é'.mb_chars.compose.to_s.length",2],["compose_codepoints","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003157","(codepoints)","Compose decomposed characters to the composed form. ",2],["composed_of","ActiveRecord::Aggregations::ClassMethods","classes/ActiveRecord/Aggregations/ClassMethods.html#M000351","(part_id, options = {}, &block)","Adds reader and writer methods for manipulating a value object: <tt>composed_of :address</tt> adds <tt>address</tt>",2],["compress","ActiveSupport::Gzip","classes/ActiveSupport/Gzip.html#M003044","(source)","Compresses a string using gzip. ",2],["compute","I18n::Locale::Fallbacks","classes/I18n/Locale/Fallbacks.html#M003553","(tags, include_defaults = true)","",2],["compute_asset_host","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002177","(source)","Pick an asset host for this source. Returns +nil+ if no host is set, the host if no wildcard is set,",2],["compute_javascript_paths","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002183","(*args)","",2],["compute_public_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002176","(source, dir, ext = nil, include_host = true)","Add the the extension +ext+ if not present. Return full URLs otherwise untouched. Prefix with <tt>/dir/</tt>",2],["compute_stylesheet_paths","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002184","(*args)","",2],["compute_type","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000588","(type_name)","Returns the class type of the record using the current module as a prefix. So descendants of MyApp::Business::Account",2],["concat","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002341","(string, unused_binding = nil)","The preferred method of outputting text in your views is to use the <%= \"text\" %> eRuby syntax. The regular",2],["condition_word","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000464","(sql)","",2],["conditions_tables","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000446","(options)","",2],["config","I18n","classes/I18n.html#M003573","()","Gets I18n configuration object. ",2],["config=","I18n","classes/I18n.html#M003574","(value)","Sets I18n configuration object. ",2],["configuration","Rails","classes/Rails.html#M000025","()","The Configuration instance used to configure the Rails environment ",2],["configuration=","Rails","classes/Rails.html#M000027","(configuration)","",2],["configurations","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000444","","Contains the database configuration - as is typically stored in config/database.yml - as a Hash. For",2],["configure_connection","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000993","()","",2],["configure_connection","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001053","()","Configures the encoding, verbosity, and schema search path of the connection. This is called by #connect",2],["configure_dependency_for_belongs_to","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000423","(reflection)","",2],["configure_dependency_for_has_many","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000421","(reflection, extra_conditions = nil)","Creates before_destroy callback methods that nullify, delete or destroy has_many associated objects,",2],["configure_dependency_for_has_one","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000422","(reflection)","Creates before_destroy callback methods that nullify, delete or destroy has_one associated objects, according",2],["configure_http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001414","(http)","",2],["confirm_javascript_function","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002374","(confirm)","",2],["connect","ActionController::Routing::RouteSet::Mapper","classes/ActionController/Routing/RouteSet/Mapper.html#M001968","(path, options = {})","Create an unnamed route with the provided +path+ and +options+. See ActionController::Routing for an",2],["connect","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000991","()","",2],["connect","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001040","()","Connects to a PostgreSQL server and sets up the adapter depending on the connected server's characteristics.",2],["connect_to","MemCache::Server","classes/MemCache/Server.html#M003630","(host, port, timeout=nil)","",2],["connected?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000723","()","Returns true if +ActiveRecord+ is connected. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000682","(klass)","Returns true if a connection that's accessible to this class has already been opened. ",2],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000641","()","Returns true if a connection has already been opened. ",2],["connection","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000707","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000719","()","Returns the connection currently associated with the class. This can also be used to \"borrow\" the connection",2],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000636","()","Retrieve the connection associated with the current thread, or call #checkout to obtain one if necessary.",2],["connection","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001167","()","",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001260","()","",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001256","","Use the ActiveRecord::Base.connection by default. ",2],["connection","ActiveResource::Base","classes/ActiveResource/Base.html#M001348","(refresh = false)","An instance of ActiveResource::Connection that is the base \\connection to the remote service. The +refresh+",2],["connection","ActiveResource::Base","classes/ActiveResource/Base.html#M001428","(refresh = false)","",2],["connection_handler","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000706","","The connection handler ",2],["connection_pool","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000720","()","",2],["connection_pools","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000671","()","",2],["constantize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002932","()","+constantize+ tries to find a declared constant with the name specified in the string. It raises a NameError",2],["constantize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003074","(camel_cased_word)","Tries to find a constant with the name specified in the argument string: \"Module\".constantize     # =>",2],["construct_attributes_from_arguments","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000570","(attribute_names, arguments)","",2],["construct_count_options_from_args","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000555","(*args)","",2],["construct_finder_sql","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000547","(options)","",2],["construct_finder_sql_for_association_limiting","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000439","(options, join_dependency)","",2],["construct_finder_sql_with_included_associations","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000436","(options, join_dependency)","",2],["construct_id_map","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000360","(records, primary_key=nil)","Given a collection of ActiveRecord objects, constructs a Hash which maps the objects' IDs to the relevant",2],["consumes?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003114","(string)","Returns +true+ when the proxy class can handle the string. Returns +false+ otherwise. ",2],["contains_bad_protocols?","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M002114","(attr_name, value)","",2],["content_columns","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000510","()","Returns an array of column objects where the primary id, all columns ending in \"_id\" or \"_count\", and",2],["content_for","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M002193","(name, content = nil, &block)","Calling content_for stores a block of markup in an identifier for later use. You can make subsequent",2],["content_length","ActionController::Request","classes/ActionController/Request.html#M001835","()","Returns the content length of the request as an integer. ",2],["content_tag","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002333","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","Returns an HTML block tag of type +name+ surrounding the +content+. Add HTML attributes by passing an",2],["content_tag_for","ActionView::Helpers::RecordTagHelper","classes/ActionView/Helpers/RecordTagHelper.html#M002278","(tag_name, record, *args, &block)","content_tag_for creates an HTML element with id and class parameters that relate to the specified Active",2],["content_tag_string","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002338","(name, content, options, escape = true)","",2],["content_type","ActionController::Request","classes/ActionController/Request.html#M001836","()","The MIME type of the HTTP request, such as Mime::XML. For backward compatibility, the post \\format is",2],["content_type","ActionController::Response","classes/ActionController/Response.html#M001911","()","Returns the response's content MIME type, or nil if content type has been set. ",2],["content_type","ActionView::Template","classes/ActionView/Template.html#M002416","()","",2],["content_type=","ActionController::Response","classes/ActionController/Response.html#M001910","(mime_type)","Sets the HTTP response's content MIME type. For example, in the controller you could write this: response.content_type",2],["content_type_from_legacy_post_data_format_header","ActionController::ParamsParser","classes/ActionController/ParamsParser.html#M001800","(env)","",2],["controller_class","ActionController::TestCase","classes/ActionController/TestCase.html#M002063","()","",2],["controller_class=","ActionController::TestCase","classes/ActionController/TestCase.html#M002062","(new_class)","",2],["controller_class_name","ActionController::Base","classes/ActionController/Base.html#M001553","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"NeatController\".",2],["controller_class_name","ActionController::Base","classes/ActionController/Base.html#M001535","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"NeatController\".",2],["controller_name","ActionController::Base","classes/ActionController/Base.html#M001536","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"neat\". ",2],["controller_name","ActionController::Base","classes/ActionController/Base.html#M001554","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"neat\". ",2],["controller_name","ActionMailer::Base","classes/ActionMailer/Base.html#M002463","(value = nil)","Alias for #mailer_name",2],["controller_path","ActionController::Base","classes/ActionController/Base.html#M001537","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"one_module/two_module/neat\".",2],["controller_path","ActionController::Base","classes/ActionController/Base.html#M001555","()","Converts the class name from something like \"OneModule::TwoModule::NeatController\" to \"one_module/two_module/neat\".",2],["controller_path","ActionMailer::Base","classes/ActionMailer/Base.html#M002464","(value = nil)","Alias for #mailer_name",2],["controller_path","ActionView::TestCase::TestController","classes/ActionView/TestCase/TestController.html#M002444","()","",2],["controller_relative_to","ActionController::Routing","classes/ActionController/Routing.html#M002008","(controller, previous)","Returns a controller path for a new +controller+ based on a +previous+ controller path. Handles 4 scenarios:",2],["convert_boolean_attributes!","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002377","(html_options, bool_attrs)","Processes the _html_options_ hash, converting the boolean attributes from true/false form into the form",2],["convert_content_type!","ActionController::Response","classes/ActionController/Response.html#M001931","()","",2],["convert_cookies!","ActionController::Response","classes/ActionController/Response.html#M001934","()","",2],["convert_dates_from","ActiveSupport::JSON::Backends::JSONGem","classes/ActiveSupport/JSON/Backends/JSONGem.html#M003048","(data)","",2],["convert_dates_from","ActiveSupport::JSON::Backends::Yajl","classes/ActiveSupport/JSON/Backends/Yajl.html#M003058","(data)","",2],["convert_key","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002764","(key)","",2],["convert_language!","ActionController::Response","classes/ActionController/Response.html#M001933","()","",2],["convert_number_column_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000709","(value)","",2],["convert_options_to_javascript!","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002373","(html_options, url = '')","",2],["convert_value","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002767","(value)","",2],["cookies","ActionController::Cookies","classes/ActionController/Cookies.html#M001633","()","Returns the cookie container, which operates as described above. ",2],["cookies","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002091","()","",2],["count","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000542","(*args)","Count operates using three different approaches. * Count all: By not passing any parameters to count,",2],["count","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001316","()","Alias for #size",2],["count","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001487","()","Alias for #size",2],["count_by_sql","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000479","(sql)","Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part. The use",2],["create","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000472","(attributes = nil, &block)","Creates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["create","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000705","()","Creates a record with values matching those of the instance attributes and returns its id. ",2],["create","ActiveResource::Base","classes/ActiveResource/Base.html#M001430","()","Create (i.e., \\save to the remote service) the \\new resource. ",2],["create","ActiveResource::Base","classes/ActiveResource/Base.html#M001365","(attributes = {})","Creates a new resource instance and makes a request to the remote service that it be saved, making it",2],["create","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003322","(name)","Alias for #new",2],["create!","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001353","(attributes = nil, &block)","Creates an object just like Base.create but calls save! instead of save so an exception is raised if",2],["create_belongs_to_reflection","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000429","(association_id, options)","",2],["create_continuum_for","MemCache","classes/MemCache.html#M003623","(servers)","",2],["create_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000951","(name, options = {})","Create a new MySQL database with optional <tt>:charset</tt> and <tt>:collation</tt>. Charset defaults",2],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001009","(name, options = {})","Create a new PostgreSQL database.  Options include <tt>:owner</tt>, <tt>:template</tt>, <tt>:encoding</tt>,",2],["create_env_table","DispatchServlet","classes/DispatchServlet.html#M000134","(req, origin)","",2],["create_extension_modules","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000465","(association_id, block_extension, extensions)","",2],["create_fixtures","Fixtures","classes/Fixtures.html#M001139","(fixtures_directory, table_names, class_names = {})","",2],["create_fixtures","Object","classes/Object.html#M000095","(*table_names, &block)","",2],["create_has_and_belongs_to_many_reflection","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000431","(association_id, options, &extension)","",2],["create_has_many_reflection","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000426","(association_id, options, &extension)","",2],["create_has_one_reflection","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000427","(association_id, options)","",2],["create_has_one_through_reflection","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000428","(association_id, options)","",2],["create_mail","ActionMailer::Base","classes/ActionMailer/Base.html#M002485","()","",2],["create_or_update","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000703","()","",2],["create_proxy_uri_from","ActiveResource::Base","classes/ActiveResource/Base.html#M001379","(proxy)","Accepts a URI and creates the proxy URI from that. ",2],["create_reflection","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001217","(macro, name, options, active_record)","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000902","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000937","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001005","()","",2],["create_site_uri_from","ActiveResource::Base","classes/ActiveResource/Base.html#M001378","(site)","Accepts a URI and creates the site URI from that. ",2],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000806","(table_name, options = {})","Creates a new table with the name +table_name+. +table_name+ may either be a String or a Symbol. There",2],["create_table!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001245","()","",2],["create_table!","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001264","()","",2],["create_template","ActionView::Template::EagerPath","classes/ActionView/Template/EagerPath.html#M002410","(file)","",2],["create_time_zone_conversion_attribute?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000386","(name, column)","",2],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","classes/ActionView/Helpers/CsrfHelper.html#M002195","()","Returns a meta tag with the cross-site request forgery protection token for forms to use. Place this",2],["css_select","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001518","(*args)","Select and return all matching elements. If called with a single argument, uses that argument as a selector",2],["csv_file_path","Fixtures","classes/Fixtures.html#M001157","()","",2],["current","ActiveSupport::CoreExtensions::Date::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Date/Calculations/ClassMethods.html#M002633","()","Returns Time.zone.today when config.time_zone is set, otherwise just returns Date.today. ",2],["current","ActiveSupport::CoreExtensions::DateTime::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/DateTime/Calculations/ClassMethods.html#M002689","()","",2],["current","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Zones/ClassMethods.html#M002977","()","Returns <tt>Time.zone.now</tt> when <tt>config.time_zone</tt> is set, otherwise just returns <tt>Time.now</tt>.",2],["current_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002359","(name = \"default\")","Returns the current cycle string after a cycle has been started. Useful for complex table highlighing",2],["current_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000953","()","",2],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001015","()","Returns the current database name. ",2],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003699","()","",2],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003708","()","",2],["current_migration_number","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000247","()","",2],["current_page?","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002372","(options)","True if the current request URI was generated by the given +options+. ==== Examples Let's say we're in",2],["current_period","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003660","()","Returns the TimezonePeriod for the current time.  ",2],["current_period_and_time","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003661","()","Returns the current Time and TimezonePeriod as an array. The first element is the time, the second element",2],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000905","()","",2],["current_session_id","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002016","(env)","",2],["current_session_id","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002032","(env)","",2],["current_time_and_period","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003662","()","Alias for #current_period_and_time",2],["current_time_from_proper_timezone","ActiveRecord::Timestamp","classes/ActiveRecord/Timestamp.html#M001281","()","",2],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","classes/ActiveResource/CustomMethods/ClassMethods.html#M001446","(method_name, options = {})","",2],["custom_method_element_url","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001451","(method_name, options = {})","",2],["custom_method_new_element_url","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001452","(method_name, options = {})","",2],["cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002358","(first_value, *values)","Creates a Cycle object whose _to_s_ method cycles through elements of an array every time it is called.",2],["daemon","Process","classes/Process.html#M002892","(nochdir = nil, noclose = nil)","",2],["daemonize","Kernel","classes/Kernel.html#M002782","()","Turns the current script into a daemon process that detaches from the console. It can be shut down with",2],["dasherize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002925","()","Replaces underscores with dashes in the string. \"puni_puni\" # => \"puni-puni\" ",2],["dasherize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003062","(underscored_word)","Replaces underscores with dashes in the string. Example: \"puni_puni\" # => \"puni-puni\" ",2],["data","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001998","()","",2],["data","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001250","()","Lazy-unmarshal session state. ",2],["data","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001268","()","Lazy-unmarshal session state. ",2],["data_column","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001259","","The data field defaults to 'data'. ",2],["data_column_name","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001240","","Customizable data column name.  Defaults to 'data'. ",2],["data_column_size_limit","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001241","()","",2],["database_configuration","Rails::Configuration","classes/Rails/Configuration.html#M000098","()","Loads and returns the contents of the #database_configuration_file. The contents of the file are processed",2],["date_select","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002200","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based",2],["datetime_format","Logger","classes/Logger.html#M002798","()","Get the logging datetime format. Returns nil if the formatter does not support datetime formatting. ",2],["datetime_format=","Logger","classes/Logger.html#M002796","(datetime_format)","Logging date-time format (string passed to +strftime+). Ignored if the formatter does not respond to",2],["datetime_select","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002203","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing",2],["day","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002860","()","Alias for #days",2],["days","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002859","()","",2],["days_in_month","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Calculations/ClassMethods.html#M002956","(month, year = now.year)","Return the number of days in the given month. If no year is specified, it will use the current year.",2],["debug","ActionView::Helpers::DebugHelper","classes/ActionView/Helpers/DebugHelper.html#M002196","(object)","Returns a YAML representation of +object+ wrapped with <pre> and </pre>. If the object cannot be converted",2],["debug_rjs","ActionView::Base","classes/ActionView/Base.html#M002129","","Specify whether RJS responses should be wrapped in a try/catch block that alert()s the caught exception",2],["debugger","Kernel","classes/Kernel.html#M002783","()","Starts a debugging session if ruby-debug has been loaded (call script/server --debugger to do load it).",2],["declare!","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003370","(inst, *args, &block)","Insert an XML declaration into the XML markup. For example: xml.declare! :ELEMENT, :blah, \"yada\" # =>",2],["decode","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001460","(json)","",2],["decode","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001464","(xml)","",2],["decode","ActiveSupport::JSON::Backends::JSONGem","classes/ActiveSupport/JSON/Backends/JSONGem.html#M003047","(json)","Converts a JSON string into a Ruby object. ",2],["decode","ActiveSupport::JSON::Backends::Yajl","classes/ActiveSupport/JSON/Backends/Yajl.html#M003057","(json)","Parses a JSON string or IO and convert it into an object ",2],["decode","ActiveSupport::JSON::Backends::Yaml","classes/ActiveSupport/JSON/Backends/Yaml.html#M003065","(json)","Converts a JSON string into a Ruby object. ",2],["decode64","ActiveSupport::Base64","classes/ActiveSupport/Base64.html#M002490","(data)","Decodes a base 64 encoded string to its original representation. ActiveSupport::Base64.decode64(\"T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==\")",2],["decode_credentials","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M001702","(request)","",2],["decode_credentials","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001732","(header)","",2],["decode_credentials_header","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001728","(request)","",2],["decompose","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003146","()","Performs canonical decomposition on all the characters. Example: 'é'.length #=> 2 'é'.mb_chars.decompose.to_s.length",2],["decompose_codepoints","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003156","(type, codepoints)","Decompose composed characters to the decomposed form. ",2],["decompress","ActiveSupport::Gzip","classes/ActiveSupport/Gzip.html#M003043","(source)","Decompresses a gzipped string. ",2],["decr","MemCache","classes/MemCache.html#M003592","(key, amount = 1)","Decrements the value for +key+ by +amount+ and returns the new value. +key+ must already exist.  If +key+",2],["decrement","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000662","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and subtracts the value passed as +by+ (default is 1). The decrement",2],["decrement","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002589","(key, amount = 1)","",2],["decrement","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002558","(key, amount = 1)","",2],["decrement","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002555","(key, amount = 1)","",2],["decrement!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000663","(attribute, by = 1)","Wrapper around +decrement+ that saves the record. This method differs from its non-bang version in that",2],["decrement_counter","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000483","(counter_name, id)","Decrement a number field by one, usually representing a count. This works the same as increment_counter",2],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000900","()","",2],["decrypt","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003094","(encrypted_message)","",2],["decrypt_and_verify","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003097","(value)","",2],["deep_merge","ActiveSupport::CoreExtensions::Hash::DeepMerge","classes/ActiveSupport/CoreExtensions/Hash/DeepMerge.html#M002735","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. ",2],["deep_merge!","ActiveSupport::CoreExtensions::Hash::DeepMerge","classes/ActiveSupport/CoreExtensions/Hash/DeepMerge.html#M002736","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. Modifies the receiver in place. ",2],["default","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002744","(key = nil)","",2],["default","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003406","(locale, object, subject, options = {})","Evaluates defaults. If given subject is an Array, it walks the array and returns the first translation",2],["default","Rails::Generator::GeneratedAttribute","classes/Rails/Generator/GeneratedAttribute.html#M000265","()","",2],["default","RailsEnvironment","classes/RailsEnvironment.html#M000141","()","",2],["default=","RailsEnvironment","classes/RailsEnvironment.html#M000142","(rails_env)","",2],["default_autoload_once_paths","Rails::Configuration","classes/Rails/Configuration.html#M000111","()","Doesn't matter since plugins aren't in autoload_paths yet. ",2],["default_autoload_paths","Rails::Configuration","classes/Rails/Configuration.html#M000109","()","",2],["default_cache_classes","Rails::Configuration","classes/Rails/Configuration.html#M000122","()","",2],["default_cache_store","Rails::Configuration","classes/Rails/Configuration.html#M000131","()","",2],["default_controller_paths","Rails::Configuration","classes/Rails/Configuration.html#M000119","()","",2],["default_database_configuration_file","Rails::Configuration","classes/Rails/Configuration.html#M000115","()","",2],["default_dependency_loading","Rails::Configuration","classes/Rails/Configuration.html#M000120","()","",2],["default_eager_load_paths","Rails::Configuration","classes/Rails/Configuration.html#M000112","()","",2],["default_error_messages","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001299","()","",2],["default_exception_handler","I18n","classes/I18n.html#M003583","(exception, locale, key, options)","Handles exceptions raised in the backend. All exceptions except for MissingTranslationData exceptions",2],["default_frameworks","Rails::Configuration","classes/Rails/Configuration.html#M000108","()","",2],["default_gems","Rails::Configuration","classes/Rails/Configuration.html#M000132","()","",2],["default_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001420","()","",2],["default_helper_module!","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001689","()","",2],["default_i18n","Rails::Configuration","classes/Rails/Configuration.html#M000133","()","",2],["default_input_block","ActionView::Helpers::ActiveRecordHelper","classes/ActionView/Helpers/ActiveRecordHelper.html#M002151","()","",2],["default_locale","I18n::Config","classes/I18n/Config.html#M003511","()","Returns the current default locale. Defaults to :'en' ",2],["default_locale=","I18n::Config","classes/I18n/Config.html#M003512","(locale)","Sets the current default locale. Used to set a custom default locale. ",2],["default_log_level","Rails::Configuration","classes/Rails/Configuration.html#M000114","()","",2],["default_log_path","Rails::Configuration","classes/Rails/Configuration.html#M000113","()","",2],["default_options","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001298","()","Return user options with default options. ",2],["default_options","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000333","()","Convenient access to class default options. ",2],["default_options","Rails::Generator::Options::ClassMethods","classes/Rails/Generator/Options/ClassMethods.html#M000329","(options = nil)","",2],["default_plugin_loader","Rails::Configuration","classes/Rails/Configuration.html#M000129","()","",2],["default_plugin_locators","Rails::Configuration","classes/Rails/Configuration.html#M000128","()","",2],["default_plugin_paths","Rails::Configuration","classes/Rails/Configuration.html#M000127","()","",2],["default_plugins","Rails::Configuration","classes/Rails/Configuration.html#M000126","()","",2],["default_preload_frameworks","Rails::Configuration","classes/Rails/Configuration.html#M000121","()","",2],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001110","()","",2],["default_routes_configuration_file","Rails::Configuration","classes/Rails/Configuration.html#M000117","()","",2],["default_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000582","(options = {})","Sets the default options for the model. The format of the <tt>options</tt> argument is the same as in",2],["default_select","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000546","(qualified)","",2],["default_separator","I18n::Config","classes/I18n/Config.html#M003515","()","Returns the current default scope separator. Defaults to '.' ",2],["default_separator=","I18n::Config","classes/I18n/Config.html#M003516","(separator)","Sets the current default scope separator. ",2],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000777","(table, column)","",2],["default_template","ActionController::Base","classes/ActionController/Base.html#M001610","(action_name = self.action_name)","",2],["default_template_format","ActionMailer::Base","classes/ActionMailer/Base.html#M002478","()","",2],["default_template_name","ActionController::Base","classes/ActionController/Base.html#M001611","(action_name = self.action_name)","",2],["default_timezone","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000454","","Determines whether to use Time.local (using :local) or Time.utc (using :utc) when pulling dates and times",2],["default_url_options","ActionController::Base","classes/ActionController/Base.html#M001582","(options = nil)","Overwrite to implement a number of default options that all url_for-based methods will use. The default",2],["default_view_path","Rails::Configuration","classes/Rails/Configuration.html#M000118","()","",2],["default_whiny_nils","Rails::Configuration","classes/Rails/Configuration.html#M000125","()","",2],["defaults","Repositories","classes/Repositories.html#M000178","()","",2],["defaults=","I18n::Locale::Fallbacks","classes/I18n/Locale/Fallbacks.html#M003550","(defaults)","",2],["define","ActiveRecord::Schema","classes/ActiveRecord/Schema.html#M001220","(info={}, &block)","Eval the given block. All methods available to the current connection adapter are available within the",2],["define_around_helper","Logger","classes/Logger.html#M002793","(level)","",2],["define_attr_method","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000578","(name, value=nil, &block)","Defines an \"attribute\" method (like +inheritance_column+ or +table_name+). A new (class) method will",2],["define_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000378","()","Generates all the attribute related methods for columns in the database accessors, mutators and query",2],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","classes/ActiveSupport/Callbacks/ClassMethods.html#M002590","(*callbacks)","",2],["define_dispatcher_callbacks","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001634","(cache_classes)","",2],["define_question_method","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000390","(attr_name)","Defines a predicate method <tt>attr_name?</tt>. ",2],["define_read_method","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000387","(symbol, attr_name, column)","Define an attribute reader method.  Cope with nil column. ",2],["define_read_method_for_serialized_attribute","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000388","(attr_name)","Define read method for serialized attribute. ",2],["define_read_method_for_time_zone_conversion","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000389","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["define_read_methods","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000380","()","Alias for #define_attribute_methods",2],["define_write_method","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000391","(attr_name)","",2],["define_write_method_for_time_zone_conversion","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000392","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["delay","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002306","(seconds = 1)","Executes the content of the block after a delay of +seconds+. Example: # Generates: #     setTimeout(function()",2],["delegate","Module","classes/Module.html#M002825","(*methods)","Provides a delegate class method to easily expose contained objects' methods as your own. Pass one or",2],["delete","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001722","(path, parameters = nil, headers = nil)","Performs a DELETE request with the given parameters. See get() for more details. ",2],["delete","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001997","(key)","",2],["delete","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002083","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating DELETE HTTP method and set/volley the response ",2],["delete","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000644","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["delete","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000474","(id)","Deletes the row with a primary key matching the +id+ argument, using a SQL +DELETE+ statement, and returns",2],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000760","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete","ActiveResource::Base","classes/ActiveResource/Base.html#M001367","(id, options = {})","Deletes the resources with the ID in the +id+ parameter. ==== Options All options specify \\prefix and",2],["delete","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001394","(path, headers = {})","Execute a DELETE request (see HTTP protocol documentation if unfamiliar). Used to delete resources. ",2],["delete","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001444","(custom_method_name, options = {})","",2],["delete","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001450","(method_name, options = {})","",2],["delete","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002514","(name, options = nil)","",2],["delete","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002537","(name, options = nil)","",2],["delete","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002585","(key, options = nil)","",2],["delete","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002549","(key, options = nil)","",2],["delete","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002551","(name, options = nil)","",2],["delete","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002568","(callback)","",2],["delete","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002759","(key)","Removes a specified key from the hash. ",2],["delete","MemCache","classes/MemCache.html#M003603","(key, expiry = 0)","Removes +key+ from the cache in +expiry+ seconds. ",2],["delete?","ActionController::Request","classes/ActionController/Request.html#M001830","()","Is this a DELETE request?  Equivalent to <tt>request.method == :delete</tt>. ",2],["delete_all","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000478","(conditions = nil)","Deletes the records matching +conditions+ without instantiating the records first, and hence not calling",2],["delete_all_has_many_dependencies","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000424","(record, reflection_name, association_class, dependent_conditions)","",2],["delete_existing_fixtures","Fixtures","classes/Fixtures.html#M001142","()","",2],["delete_matched","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002515","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002538","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002586","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002552","(matcher, options = nil)","",2],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000786","(sql, name = nil)","Executes the delete statement and returns the number of rows affected. ",2],["delete_via_redirect","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001717","(path, parameters = nil, headers = nil)","Performs a DELETE request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["deliver","ActionMailer::Base","classes/ActionMailer/Base.html#M002468","(mail)","Deliver the given mail object directly. This can be used to deliver a preconstructed mail object, like:",2],["deliver!","ActionMailer::Base","classes/ActionMailer/Base.html#M002474","(mail = @mail)","Delivers a TMail::Mail object. By default, it delivers the cached mail object (from the <tt>create!</tt>",2],["demodulize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002926","()","Removes the module part from the constant expression in the string. \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["demodulize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003064","(class_name_in_module)","Removes the module part from the expression in the string. Examples: \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["dependency","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000241","(generator_name, args, runtime_options = {})","",2],["dependency","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000304","(generator_name, args, options = {})","",2],["derive_class_name","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001235","()","",2],["descends_from_active_record?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000518","()","True if this isn't a concrete subclass needing a STI type condition. ",2],["destination_path","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000198","(relative_destination)","Return the full path from the destination root for the given path. Example for destination_root = '/dest':",2],["destroy","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002020","(env)","",2],["destroy","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M002002","()","",2],["destroy","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002045","(env)","",2],["destroy","ActionController::Session::MemCacheStore","classes/ActionController/Session/MemCacheStore.html#M002026","(env)","",2],["destroy","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000475","(id)","Destroy an object (or multiple objects) that has the given id, the object is instantiated first, therefore",2],["destroy","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000645","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["destroy","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001274","(env)","",2],["destroy","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001271","()","",2],["destroy","ActiveResource::Base","classes/ActiveResource/Base.html#M001410","()","Deletes the resource from the remote service. ==== Examples my_id = 3 my_person = Person.find(my_id)",2],["destroy_all","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000477","(conditions = nil)","Destroys the records matching +conditions+ by instantiating each record and calling its +destroy+ method.",2],["destroyed?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000698","()","Returns +true+ if the record has been destroyed. ",2],["detect_type","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003434","(object, options)","",2],["determine_default_controller_class","ActionController::TestCase","classes/ActionController/TestCase.html#M002064","(name)","",2],["determine_default_helper_class","ActionView::TestCase","classes/ActionView/TestCase.html#M002451","(name)","",2],["determine_install_method","Commands::Install","classes/Commands/Install.html#M000225","()","",2],["determine_source","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002187","(source, collection)","",2],["diff","ActiveSupport::CoreExtensions::Hash::Diff","classes/ActiveSupport/CoreExtensions/Hash/Diff.html#M002737","(h2)","Returns a hash that represents the difference between two hashes. Examples: {1 => 2}.diff(1 => 2)   ",2],["diff_cmd","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000258","()","",2],["direct_key","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003469","(key)","",2],["directory","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000271","(relative_path)","Create a directory including any missing parent directories. Always skips directories which exist. ",2],["directory","Rails::Generator::Commands::Destroy","classes/Rails/Generator/Commands/Destroy.html#M000291","(relative_path)","Remove each directory in the given path from right to left. Remove each subdirectory if it exists and",2],["directory","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000310","(relative_path)","",2],["directory","Rails::Generator::Commands::Update","classes/Rails/Generator/Commands/Update.html#M000319","(relative_path)","",2],["dirname","ActiveSupport::Multibyte::UnicodeDatabase","classes/ActiveSupport/Multibyte/UnicodeDatabase.html#M003125","()","Returns the directory in which the data files are stored ",2],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000764","(base, *method_names)","",2],["disable_dependency_loading","Rails::Initializer","classes/Rails/Initializer.html#M000078","()","",2],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000890","(&block)","Override to turn off referential integrity while executing <tt>&block</tt>. ",2],["discard","ActionController::Flash::FlashHash","classes/ActionController/Flash/FlashHash.html#M001662","(k = nil)","Marks the entire flash or a single flash entry to be discarded by the end of the current action: flash.discard",2],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000893","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000642","()","Disconnects all connections in the pool, and clears the pool. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000928","()","",2],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000947","()","Close the connection. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001049","()","",2],["dispatch","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001635","(cgi = nil, session_options = CgiRequest::DEFAULT_SESSION_OPTIONS, output = $stdout)","DEPRECATE: Remove CGI support ",2],["dispatch","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001641","()","",2],["dispatch","DispatchServlet","classes/DispatchServlet.html#M000110","(options = {})","Start the WEBrick server with the given options, mounting the DispatchServlet at <tt>/</tt>. ",2],["dispatch_cgi","ActionController::CGIHandler","classes/ActionController/CGIHandler.html#M001631","(app, cgi, out = $stdout)","",2],["dispatch_cgi","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001643","(cgi, session_options)","DEPRECATE: Remove CGI support ",2],["dispatcher_error","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000011","(e, msg = \"\")","",2],["dispatcher_log","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000010","(level, msg)","",2],["display","SourceAnnotationExtractor","classes/SourceAnnotationExtractor.html#M000089","(results, options={})","Prints the mapping from filenames to annotations in +results+ ordered by filename. The +options+ hash",2],["distance_of_time_in_words","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002197","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time or Date objects or integers as seconds. Set",2],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002199","(from_time, include_seconds = false)","Alias for #time_ago_in_words",2],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000854","(columns, order_by)","SELECT DISTINCT clause for a given set of columns and a given ORDER BY clause. Both PostgreSQL and Oracle",2],["div_for","ActionView::Helpers::RecordTagHelper","classes/ActionView/Helpers/RecordTagHelper.html#M002276","(record, *args, &block)","Produces a wrapper DIV element with id and class parameters that relate to the specified Active Record",2],["dom_class","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M001818","(record_or_class, prefix = nil)","The DOM class convention is to use the singular form of an object or class. Examples: dom_class(post)",2],["dom_class","ActionView::Helpers::RecordIdentificationHelper","classes/ActionView/Helpers/RecordIdentificationHelper.html#M002270","(*args, &block)","See ActionController::RecordIdentifier.dom_class -- this is just a delegate to that for convenient access",2],["dom_id","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M001819","(record, prefix = nil)","The DOM id convention is to use the singular form of an object or class with the id following an underscore.",2],["dom_id","ActionView::Helpers::RecordIdentificationHelper","classes/ActionView/Helpers/RecordIdentificationHelper.html#M002271","(*args, &block)","See ActionController::RecordIdentifier.dom_id -- this is just a delegate to that for convenient access",2],["domain","ActionController::Request","classes/ActionController/Request.html#M001868","(tld_length = 1)","Returns the \\domain part of a \\host, such as \"rubyonrails.org\" in \"www.rubyonrails.org\". You can specify",2],["downcase","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003143","()","Convert characters in the string to lowercase. Example: 'VĚDA A VÝZKUM'.mb_chars.downcase.to_s #=> \"věda",2],["download","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000248","(link)","",2],["draggable","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002309","(id, options = {})","Creates a script.aculo.us draggable element. See ActionView::Helpers::ScriptaculousHelper for more information.",2],["draggable_element","ActionView::Helpers::ScriptaculousHelper","classes/ActionView/Helpers/ScriptaculousHelper.html#M002328","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ draggable. Example: <%= draggable_element(\"my_image\",",2],["drop_receiving","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002310","(id, options = {})","Creates a script.aculo.us drop receiving element. See ActionView::Helpers::ScriptaculousHelper for more",2],["drop_receiving_element","ActionView::Helpers::ScriptaculousHelper","classes/ActionView/Helpers/ScriptaculousHelper.html#M002330","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ receive dropped draggable elements (created",2],["drop_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000962","(table_name, options = {})","",2],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000818","(table_name, options = {})","Drops a table from the database. ",2],["drop_table!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001246","()","",2],["drop_table!","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001265","()","",2],["dst?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003220","()","",2],["dst?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003682","()","true if daylight savings is in effect for this period; otherwise false. ",2],["dup","ActiveResource::Base","classes/ActiveResource/Base.html#M001407","()","Duplicate the current resource without saving it. ==== Examples my_invoice = Invoice.create(:customer",2],["dup","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002576","()","",2],["dup","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002752","()","Returns an exact copy of the hash. ",2],["duplicable?","Object","classes/Object.html#M002719","()","Can you safely .dup this object? False for nil, false, true, symbols, and numbers; true otherwise. ",2],["duration_of_variable_length?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003294","(obj)","",2],["each","ActionController::CGIHandler::ProperStream","classes/ActionController/CGIHandler/ProperStream.html#M001629","()","",2],["each","ActionController::Response","classes/ActionController/Response.html#M001924","(&callback)","",2],["each","ActionController::StringCoercion::UglyBody","classes/ActionController/StringCoercion/UglyBody.html#M002051","()","",2],["each","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001309","()","Yields each attribute and associated message per error added. class Company < ActiveRecord::Base validates_presence_of",2],["each","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001477","()","Yields each attribute and associated message per error added. ==== Examples my_person = Person.new(params[:person])",2],["each","Rails::Generator::GemGeneratorSource","classes/Rails/Generator/GemGeneratorSource.html#M000309","()","Yield latest versions of generator gems. ",2],["each","Rails::Generator::GemPathSource","classes/Rails/Generator/GemPathSource.html#M000314","()","Yield each generator within rails_generator subdirectories. ",2],["each","Rails::Generator::PathSource","classes/Rails/Generator/PathSource.html#M000302","()","Yield each eligible subdirectory. ",2],["each","Rails::Generator::Source","classes/Rails/Generator/Source.html#M000299","()","The each method must be implemented in subclasses. The base implementation raises an error. ",2],["each","Repositories","classes/Repositories.html#M000181","(&block)","",2],["each","Repositories","classes/Repositories.html#M000170","(&block)","",2],["each","Repository","classes/Repository.html#M000184","(&block)","",2],["each_char","ActiveSupport::CoreExtensions::String::Iterators","classes/ActiveSupport/CoreExtensions/String/Iterators.html#M002917","()","Yields a single-character string for each character in the string. When $KCODE = 'UTF8', multi-byte characters",2],["each_error","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001310","()","Yields each attribute and associated error per error added. class Company < ActiveRecord::Base validates_presence_of",2],["each_full","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001311","()","Yields each full error message added. So <tt>Person.errors.add(\"first_name\", \"can't be empty\")</tt> will",2],["each_full","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001478","()","Yields each full error message added. So Person.errors.add(\"first_name\", \"can't be empty\") will be returned",2],["each_with_hack","RackLintPatch::AllowStringSubclass","classes/RackLintPatch/AllowStringSubclass.html#M001804","()","",2],["each_with_object","Enumerable","classes/Enumerable.html#M002721","(memo, &block)","Iterates over a collection, passing the current element *and* the +memo+ to the block. Handy for building",2],["element_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001433","(options = nil)","",2],["element_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001355","(id, prefix_options = {}, query_options = nil)","Gets the element path for the given ID in +id+.  If the +query_options+ parameter is omitted, Rails will",2],["empty?","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001313","()","Returns true if no errors have been added. ",2],["empty?","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001194","()","",2],["empty_insert_statement","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000780","(table_name)","",2],["empty_insert_statement","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001083","(table_name)","",2],["emulate_booleans","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000910","","By default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)</tt> as boolean. If you",2],["enable_warnings","Kernel","classes/Kernel.html#M002786","()","Sets $VERBOSE to true for the duration of the block and back to its original value afterwards. ",2],["encode","ActiveResource::Base","classes/ActiveResource/Base.html#M001418","(options={})","Returns the serialized string representation of the resource in the configured serialization format specified",2],["encode","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001459","(hash, options = nil)","",2],["encode","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001463","(hash, options={})","",2],["encode64","ActiveSupport::Base64","classes/ActiveSupport/Base64.html#M002489","(data)","Encodes a string to its base 64 representation. Each 60 characters of output is separated by a newline",2],["encode64s","ActiveSupport::CoreExtensions::Base64::Encoding","classes/ActiveSupport/CoreExtensions/Base64/Encoding.html#M002615","(value)","Encodes the value as base64 without the newline breaks. This makes the base64 encoding readily usable",2],["encode_cookies","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001740","()","Encode the cookies hash in a format suitable for passing to a request. ",2],["encode_credentials","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M001703","(user_name, password)","",2],["encode_credentials","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001727","(http_method, credentials, password, password_is_ha1)","",2],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001016","()","Returns the current database encoding format. ",2],["encrypt","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003089","(value)","",2],["encrypt_and_sign","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003096","(value)","",2],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003710","()","",2],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003713","(name)","",2],["end_of_day","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002644","()","Converts Date to a Time (or DateTime if necessary) with the time portion set to the end of the day (23:59:59)",2],["end_of_day","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002712","()","Returns a new DateTime representing the end of the day (23:59:59) ",2],["end_of_day","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003001","()","Returns a new Time representing the end of the day, 23:59:59.999999 (.999999999 in ruby1.9) ",2],["end_of_month","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002674","()","Returns a new Date/DateTime representing the end of the month (last day of the month; DateTime objects",2],["end_of_month","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003004","()","Returns a new Time representing the end of the month (end of the last day of the month) ",2],["end_of_quarter","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002678","()","Returns a new Date/DateTime representing the end of the quarter (last day of march, june, september,",2],["end_of_quarter","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003008","()","Returns a new Time representing the end of the quarter (end of the last day of march, june, september,",2],["end_of_week","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002663","()","Returns a new Date/DateTime representing the end of this week (Sunday, DateTime objects will have time",2],["end_of_week","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002994","()","Returns a new Time representing the end of this week (Sunday, 23:59:59) ",2],["end_of_year","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002682","()","Returns a new Time representing the end of the year (31st of december; DateTime objects will have time",2],["end_of_year","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003014","()","Returns a new Time representing the end of the year (end of the 31st of december) ",2],["ends_with?","ActiveSupport::CoreExtensions::String::StartsEndsWith","classes/ActiveSupport/CoreExtensions/String/StartsEndsWith.html#M002951","(suffix)","Does the string end with the specified +suffix+? ",2],["ensure_cache_path","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002518","(path)","",2],["ensure_proper_type","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000708","()","Sets the attribute used for single table inheritance to this class name if this is not the ActiveRecord::Base",2],["ensure_secret_secure","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002042","(secret)","To prevent users from using something insecure like \"Password\" we make sure that the secret they've provided",2],["ensure_session_key","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002041","(key)","",2],["entity_expansion_limit=","REXML::Document","classes/REXML/Document.html#M002902","(val)","",2],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#M002167","(record, options = {})","Creates an entry tag for a specific record and prefills the id using class and id. Options: * <tt>:published</tt>:",2],["entry_count_for","MemCache","classes/MemCache.html#M003624","(server, total_servers, total_weight)","",2],["enumerate","SourceAnnotationExtractor","classes/SourceAnnotationExtractor.html#M000079","(tag, options={})","Prints all annotations with tag +tag+ under the root directories +app+, +lib+, and +test+ (recursively).",2],["env","Rails","classes/Rails.html#M000033","()","",2],["env_name","ActionController::Http::Headers","classes/ActionController/Http/Headers.html#M001668","(header_name)","Converts a HTTP header name to an environment variable name. ",2],["environment","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M003192","()","",2],["environment","Rails::Configuration","classes/Rails/Configuration.html#M000100","()","Return the currently selected environment. By default, it returns the value of the RAILS_ENV constant.",2],["environment=","Commands::Plugin","classes/Commands/Plugin.html#M000187","(value)","",2],["environment_path","Rails::Configuration","classes/Rails/Configuration.html#M000099","()","The path to the current environment's file (<tt>development.rb</tt>, etc.). By default the file is at",2],["eql?","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002401","(path)","",2],["eql?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000694","(comparison_object)","Delegates to == ",2],["eql?","ActiveResource::Base","classes/ActiveResource/Base.html#M001405","(other)","Tests for equality (delegates to ==). ",2],["eql?","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002575","(other)","",2],["eql?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003261","(other)","",2],["eql?","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003665","(tz)","Returns true if and only if the identifier of tz is equal to the  identifier of this Timezone. ",2],["eql?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003692","(p)","Returns true if this TimezonePeriods is equal to p. This compares the start_transition, end_transition",2],["erase","Rails::Generator::Manifest","classes/Rails/Generator/Manifest.html#M000326","()","Erase recorded actions. ",2],["erb_render","Fixtures","classes/Fixtures.html#M001160","(fixture_content)","",2],["erb_trim_mode","ActionView::TemplateHandlers::ERB","classes/ActionView/TemplateHandlers/ERB.html#M002439","","Specify trim mode for the ERB compiler. Defaults to '-'. See ERb documentation for suitable values. ",2],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003711","(error_message)","",2],["error_message_on","ActionView::Helpers::ActiveRecordHelper","classes/ActionView/Helpers/ActiveRecordHelper.html#M002148","(object, method, *args)","Returns a string containing the error message attached to the +method+ on the +object+ if one exists.",2],["error_messages_for","ActionView::Helpers::ActiveRecordHelper","classes/ActionView/Helpers/ActiveRecordHelper.html#M002149","(*params)","Returns a string with a <tt>DIV</tt> containing all of the error messages for the objects located as",2],["errors","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001361","()","Returns the Errors object that holds all information about attribute error messages. ",2],["errors","ActiveResource::Validations","classes/ActiveResource/Validations.html#M001503","()","Returns the Errors object that holds all information about attribute error messages. ",2],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000964","(original_value)","Escapes binary strings for bytea input to the database. ",2],["escape_javascript","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M002257","(javascript)","Escape carrier returns and single and double quotes for JavaScript segments. ",2],["escape_key_sym","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003474","(key)","",2],["escape_once","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002335","(html)","Returns an escaped version of +html+ without affecting existing escaped entities. ==== Examples escape_once(\"1",2],["escape_plain_str","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003473","(str)","",2],["establish_connection","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000710","(spec = nil)","Establishes the connection to the database. Accepts a hash as input where the <tt>:adapter</tt> key must",2],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000672","(name, spec)","",2],["etag","ActionController::Response","classes/ActionController/Response.html#M001917","()","",2],["etag=","ActionController::Response","classes/ActionController/Response.html#M001919","(etag)","",2],["etag?","ActionController::Response","classes/ActionController/Response.html#M001918","()","",2],["etag_matches?","ActionController::Request","classes/ActionController/Request.html#M001846","(etag)","",2],["evaluate_attribute_method","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000393","(attr_name, method_definition, method_name=attr_name)","Evaluate the definition for an attribute related method ",2],["evaluate_method","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002580","(method, *args, &block)","",2],["evaluate_remote_response","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002281","()","Returns '<tt>eval(request.responseText)</tt>' which is the JavaScript function that +form_remote_tag+",2],["even?","ActiveSupport::CoreExtensions::Integer::EvenOdd","classes/ActiveSupport/CoreExtensions/Integer/EvenOdd.html#M002774","()","",2],["exabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002851","()","Alias for #exabytes",2],["exabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002850","()","",2],["except","ActiveSupport::CoreExtensions::Hash::Except","classes/ActiveSupport/CoreExtensions/Hash/Except.html#M002740","(*keys)","Returns a new hash without the given keys. ",2],["except!","ActiveSupport::CoreExtensions::Hash::Except","classes/ActiveSupport/CoreExtensions/Hash/Except.html#M002741","(*keys)","Replaces the hash without the given keys. ",2],["exception_handler","I18n::Config","classes/I18n/Config.html#M003517","()","Return the current exception handler. Defaults to :default_exception_handler. ",2],["exception_handler=","I18n::Config","classes/I18n/Config.html#M003518","(exception_handler)","Sets the exception handler. ",2],["excerpt","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002349","(text, phrase, *args)","Extracts an excerpt from +text+ that matches the first instance of +phrase+. The <tt>:radius</tt> option",2],["exclude?","Enumerable","classes/Enumerable.html#M002725","(object)","The negative of the Enumerable#include?. Returns true if the collection does not include the object.",2],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000757","(sql, name = nil, skip_logging = false)","Executes the SQL statement in the context of this connection. ",2],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000995","(sql, name = nil)","Executes an SQL statement, returning a PGresult object on success or raising a PGError exception otherwise.",2],["execute_callstack_for_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000730","(callstack)","",2],["exempt_from_layout","ActionView::Template","classes/ActionView/Template.html#M002411","(*extensions)","Don't render layouts for templates with the given extensions. ",2],["exempt_from_layout?","ActionView::Template","classes/ActionView/Template.html#M002422","()","",2],["exist","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002550","(key, options = nil)","",2],["exist?","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002516","(name, options = nil)","",2],["exist?","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002539","(name, options = nil)","",2],["exist?","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002587","(key, options = nil)","",2],["exist?","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002553","(name,options = nil)","",2],["exist?","Repositories","classes/Repositories.html#M000173","(uri)","",2],["existing_migrations","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000251","(file_name)","",2],["exists?","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002017","(env)","",2],["exists?","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M002000","()","",2],["exists?","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002033","(env)","",2],["exists?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000471","(id_or_conditions = {})","Returns true if a record exists in the table that matches the +id+ or conditions given, or false otherwise.",2],["exists?","ActiveResource::Base","classes/ActiveResource/Base.html#M001368","(id, options = {})","Asserts the existence of a resource, returning <tt>true</tt> if the resource is found. ==== Examples",2],["exists?","ActiveResource::Base","classes/ActiveResource/Base.html#M001412","()","Evaluates to <tt>true</tt> if this resource is not <tt>new?</tt> and is found on the remote service.",2],["exit_handler","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000016","(signal)","",2],["exit_now_handler","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000015","(signal)","",2],["expand_attribute_names_for_aggregates","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000573","(attribute_names)","Similar in purpose to +expand_hash_conditions_for_aggregates+. ",2],["expand_cache_key","ActiveSupport::Cache","classes/ActiveSupport/Cache.html#M002566","(key, namespace = nil)","",2],["expand_hash_conditions_for_aggregates","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000610","(attrs)","Accepts a hash of SQL conditions and replaces those attributes that correspond to a +composed_of+ relationship",2],["expand_id_conditions","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000577","(id_or_conditions)","Interpret Array and Hash as conditions and anything else as an id. ",2],["expand_javascript_sources","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002185","(sources, recursive = false)","",2],["expand_keys","I18n::Backend::ActiveRecord::Implementation","classes/I18n/Backend/ActiveRecord/Implementation.html#M003390","(key)","For a key :'foo.bar.baz' return ['foo', 'foo.bar', 'foo.bar.baz'] ",2],["expand_stylesheet_sources","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002186","(sources, recursive)","",2],["expected_response","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001723","(http_method, uri, credentials, password, password_is_ha1=true)","Returns the expected response for a request of +http_method+ to +uri+ with the decoded +credentials+",2],["expire_action","ActionController::Caching::Actions","classes/ActionController/Caching/Actions.html#M001532","(options = {})","",2],["expire_fragment","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M001566","(key, options = nil)","Removes fragments from the cache. +key+ can take one of three forms: * String - This would normally take",2],["expire_page","ActionController::Caching::Pages","classes/ActionController/Caching/Pages.html#M001576","(options = {})","Expires the page that was cached with the +options+ as a key. Example: expire_page :controller => \"lists\",",2],["expire_page","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M001569","(path)","Expires the page that was cached with the +path+ as a key. Example: expire_page \"/lists/show\" ",2],["expires_in","ActionController::Base","classes/ActionController/Base.html#M001588","(seconds, options = {})","Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a \"private\" instruction, so that intermediate",2],["expires_in","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002591","(options)","",2],["expires_now","ActionController::Base","classes/ActionController/Base.html#M001589","()","Sets a HTTP 1.1 Cache-Control header of \"no-cache\" so no caching should occur by the browser or intermediate",2],["extended","ActionController::UploadedFile","classes/ActionController/UploadedFile.html#M002074","(object)","",2],["extended","ActiveRecord::Dirty::ClassMethods","classes/ActiveRecord/Dirty/ClassMethods.html#M001106","(base)","",2],["extended","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001124","(base)","",2],["extension","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001457","()","",2],["extension","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001461","()","",2],["externals","RailsEnvironment","classes/RailsEnvironment.html#M000148","()","",2],["externals=","RailsEnvironment","classes/RailsEnvironment.html#M000149","(items)","",2],["extra_tags_for_form","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002248","(html_options)","",2],["extract_annotations_from","SourceAnnotationExtractor","classes/SourceAnnotationExtractor.html#M000087","(file, pattern)","If +file+ is the filename of a file that contains annotations this method returns a hash with a single",2],["extract_callstack_for_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000741","(pairs)","",2],["extract_default","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000808","(default)","",2],["extract_extension","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M001549","(request)","",2],["extract_header_and_body","DispatchServlet","classes/DispatchServlet.html#M000135","(data)","",2],["extract_limit","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000832","(sql_type)","",2],["extract_modules","Rails::Generator::NamedBase","classes/Rails/Generator/NamedBase.html#M000216","(name)","Extract modules from filesystem-style or ruby-style path: good/fun/stuff Good::Fun::Stuff produce the",2],["extract_options","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002570","(*methods, &block)","",2],["extract_options","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002569","(*methods, &block)","",2],["extract_options!","ActiveSupport::CoreExtensions::Array::ExtractOptions","classes/ActiveSupport/CoreExtensions/Array/ExtractOptions.html#M002602","()","Extracts options from a set of arguments. Removes and returns the last element in the array if it's a",2],["extract_pg_identifier_from_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001069","(name)","",2],["extract_precision","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000833","(sql_type)","",2],["extract_record","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001811","(record_or_hash_or_array)","",2],["extract_repository_uri","Commands::Discover","classes/Commands/Discover.html#M000222","(uri)","",2],["extract_scale","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000835","(sql_type)","",2],["extract_scope","I18n::Gettext","classes/I18n/Gettext.html#M003547","(msgid, separator)","",2],["extract_selected_and_disabled","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002249","(selected)","",2],["extract_session_id","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002015","(env)","",2],["extract_session_id","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002030","(env)","",2],["extract_string_default!","I18n::Backend::Fallbacks","classes/I18n/Backend/Fallbacks.html#M003438","(options)","",2],["extract_value","ActionController::Routing::OptionalFormatSegment","classes/ActionController/Routing/OptionalFormatSegment.html#M001981","()","",2],["extract_values_from_collection","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002250","(collection, value_method, selected)","",2],["failsafe_logger","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001654","()","",2],["failsafe_response","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001646","(exception)","",2],["failsafe_response_body","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001650","()","",2],["fallback_string_to_date","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000830","(string)","",2],["fallback_string_to_time","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000831","(string)","",2],["fallbacks","I18n","classes/I18n.html#M003432","()","Returns the current fallbacks implementation. Defaults to +I18n::Locale::Fallbacks+. ",2],["fallbacks=","I18n","classes/I18n.html#M003433","(fallbacks)","Sets the current fallbacks implementation. Use this to set a different fallbacks implementation. ",2],["fast_string_to_date","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000826","(string)","",2],["fast_string_to_time","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000827","(string)","Doesn't handle time zones. ",2],["fetch","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002579","(key, options = {})","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["fetch","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002546","(key, options = {})","",2],["fetch","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002750","(key, *extras)","Fetches the value for the specified key, same as doing hash[key] ",2],["fetch","I18n::Backend::Cache","classes/I18n/Backend/Cache.html#M003401","(*args, &block)","",2],["fetch","MemCache","classes/MemCache.html#M003594","(key, expiry = 0, raw = false)","Performs a +get+ with the given +key+.  If  the value does not exist and a block was given, the block",2],["fetch","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000253","(links = @urls_to_fetch)","",2],["fetch_dir","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000256","(url)","",2],["field_changed?","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001104","(attr, old, value)","",2],["field_set_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002244","(legend = nil, options = nil, &block)","Creates a field set for grouping HTML form elements. <tt>legend</tt> will become the fieldset's title",2],["field_type","Rails::Generator::GeneratedAttribute","classes/Rails/Generator/GeneratedAttribute.html#M000264","()","",2],["fields_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002209","(record_or_name_or_array, *args, &block)","Creates a scope around a specific model object like form_for, but doesn't create the form tags themselves.",2],["fifth","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002599","()","Equal to <tt>self[4]</tt>. ",2],["file","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000266","(relative_source, relative_destination, file_options = {}, &block)","Copy a file from source to destination with collision checking. The file_options hash accepts :chmod",2],["file","Rails::Generator::Commands::Destroy","classes/Rails/Generator/Commands/Destroy.html#M000287","(relative_source, relative_destination, file_options = {})","Remove a file if it exists and is a file. ",2],["file","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000306","(relative_source, relative_destination, options = {})","",2],["file","Rails::Generator::Commands::Update","classes/Rails/Generator/Commands/Update.html#M000316","(relative_source, relative_destination, options = {})","",2],["file_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002219","(object_name, method, options = {})","Returns an file upload input tag tailored for accessing a specified attribute (identified by +method+)",2],["file_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002231","(name, options = {})","Creates a file upload field.  If you are using file uploads then you will also need to set the multipart",2],["filename","ActionView::Template","classes/ActionView/Template.html#M002423","()","",2],["filename","ActiveSupport::Multibyte::UnicodeDatabase","classes/ActiveSupport/Multibyte/UnicodeDatabase.html#M003126","()","Returns the filename for the data file for this version ",2],["filter","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002496","(backtrace)","",2],["filter_chain","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001683","()","Returns an array of Filter objects for this controller. ",2],["filter_parameter_logging","ActionController::Base","classes/ActionController/Base.html#M001545","(*filter_words, &block)","Replace sensitive parameter data from the request log. Filters parameters that have any of the arguments",2],["find","ActiveRecord::Associations::HasOneThroughAssociation","classes/ActiveRecord/Associations/HasOneThroughAssociation.html#M000371","(*args)","",2],["find","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000466","(*args)","Find operates with four different retrieval approaches: * Find by id - This can either be a specific",2],["find","ActiveResource::Base","classes/ActiveResource/Base.html#M001366","(*arguments)","Core method for finding resources.  Used similarly to Active Record's +find+ method. ==== Arguments The",2],["find","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002567","(callback, &block)","",2],["find","Plugin","classes/Plugin.html#M000151","(name)","",2],["find","RailsEnvironment","classes/RailsEnvironment.html#M000140","(dir=nil)","",2],["find","SourceAnnotationExtractor","classes/SourceAnnotationExtractor.html#M000081","(dirs=%w(app lib test))","Returns a hash that maps filenames under +dirs+ (recursively) to arrays with their annotations. Only",2],["find_all_tag","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002097","(conditions)","",2],["find_associated_records","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000366","(ids, reflection, preload_options)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001248","(*args)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001249","(session_id)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001242","(session_id)","Hook to set up sessid compatibility. ",2],["find_by_session_id","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001261","(session_id)","Look up a session by id and unmarshal its data if found. ",2],["find_by_sql","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000470","(sql)","Executes a custom SQL query against your database and returns all the results.  The results will be returned",2],["find_cmd","Object","classes/Object.html#M000138","(*commands)","",2],["find_each","ActiveRecord::Batches::ClassMethods","classes/ActiveRecord/Batches/ClassMethods.html#M000522","(options = {})","Yields each record that was found by the find +options+. The find is performed by find_in_batches with",2],["find_every","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000537","(options)","",2],["find_every","ActiveResource::Base","classes/ActiveResource/Base.html#M001369","(options)","Find every resource ",2],["find_first_string_default","I18n::Backend::Fallbacks","classes/I18n/Backend/Fallbacks.html#M003439","(defaults)","",2],["find_from_ids","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000538","(ids, options)","",2],["find_hidden_method","BlankSlate","classes/BlankSlate.html#M003296","(name)","",2],["find_hidden_method","Object","classes/Object.html#M003302","(name)","",2],["find_home","Repositories","classes/Repositories.html#M000179","()","",2],["find_in","SourceAnnotationExtractor","classes/SourceAnnotationExtractor.html#M000084","(dir)","Returns a hash that maps filenames under +dir+ (recursively) to arrays with their annotations. Only files",2],["find_in_batches","ActiveRecord::Batches::ClassMethods","classes/ActiveRecord/Batches/ClassMethods.html#M000525","(options = {})","Yields each batch of records that was found by the find +options+ as an array. The size of each batch",2],["find_initial","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000534","(options)","",2],["find_last","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000535","(options)","",2],["find_one","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000539","(id, options)","",2],["find_one","ActiveResource::Base","classes/ActiveResource/Base.html#M001370","(options)","Find a single resource from a one-off URL ",2],["find_or_create_resource_for","ActiveResource::Base","classes/ActiveResource/Base.html#M001437","(name)","Tries to find a resource for a given name; if it fails, then the resource is created ",2],["find_or_create_resource_for_collection","ActiveResource::Base","classes/ActiveResource/Base.html#M001435","(name)","Tries to find a resource for a given collection name; if it fails, then the resource is created ",2],["find_parameter_position","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000743","(multiparameter_name)","",2],["find_plugin","Repositories","classes/Repositories.html#M000175","(name)","",2],["find_resource_in_modules","ActiveResource::Base","classes/ActiveResource/Base.html#M001436","(resource_name, module_names)","Tries to find a resource in a non empty list of nested modules Raises a NameError if it was not found",2],["find_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001276","(id)","",2],["find_single","ActiveResource::Base","classes/ActiveResource/Base.html#M001373","(scope, options)","Find a single resource from the default URL ",2],["find_some","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000540","(ids, options)","",2],["find_synonyms","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000283","(word)","Look up synonyms on WordNet.  Thanks to Florian Gross (flgr). ",2],["find_tag","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002096","(conditions)","",2],["find_target","ActiveRecord::Associations::HasOneThroughAssociation","classes/ActiveRecord/Associations/HasOneThroughAssociation.html#M000372","()","",2],["find_tzinfo","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003320","(name)","TODO: Preload instead of lazy load for thread safety ",2],["find_with_associations","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000420","(options = {})","",2],["finder?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001113","()","",2],["first","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000467","(*args)","A convenience wrapper for <tt>find(:first, *args)</tt>. You can pass in all the same arguments to this",2],["first","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001191","(*args)","",2],["fixture_file_upload","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002100","(path, mime_type = nil, binary = false)","Shortcut for <tt>ActionController::TestUploadedFile.new(ActionController::TestCase.fixture_path + path,",2],["fixture_is_cached?","Fixtures","classes/Fixtures.html#M001133","(connection, table_name)","",2],["fixtures","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001173","(*table_names)","",2],["flash","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002090","()","",2],["flatten_keys","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003453","(hash, escape, prev_key=nil, &block)","Flatten keys for nested Hashes by chaining up keys: >> { \"a\" => { \"b\" => { \"c\" => \"d\", \"e\" => \"f\" },",2],["flatten_translations","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003454","(locale, data, escape, subtree)","Receives a hash of translations (where the key is a locale and the value is another hash) and return",2],["flush","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002506","()","",2],["flush_all","MemCache","classes/MemCache.html#M003604","(delay=0)","Flush the cache from all memcache servers. A non-zero value for +delay+ will ensure that the flush is",2],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M003095","(*syms, &block)","",2],["flush_logger","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001648","()","",2],["follow_redirect!","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001707","()","Follow a single redirect response. If the last response was not a redirect, an exception will be raised.",2],["for_class","HTML::Selector","classes/HTML/Selector.html#M002115","(cls)","Creates a new selector for the given class name. ",2],["for_id","HTML::Selector","classes/HTML/Selector.html#M002116","(id)","Creates a new selector for the given id. ",2],["force_file_collision?","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000257","(destination, src, dst, file_options = {}, &block)","Ask the user interactively whether to force collision. ",2],["foreign_key","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002931","(separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["foreign_key","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003073","(class_name, separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["form","ActionView::Helpers::ActiveRecordHelper","classes/ActionView/Helpers/ActiveRecordHelper.html#M002147","(record_name, options = {})","Returns an entire form with all needed input tags for a specified Active Record object. For example,",2],["form_authenticity_param","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001841","()","",2],["form_authenticity_token","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001847","()","Sets the token value for the current session.  Pass a <tt>:secret</tt> option in +protect_from_forgery+",2],["form_data?","ActionController::Request","classes/ActionController/Request.html#M001888","()","",2],["form_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002201","(record_or_name_or_array, *args, &proc)","Creates a form and a scope around a specific model object that is used as a base for questioning about",2],["form_remote_for","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002279","(record_or_name_or_array, *args, &proc)","Alias for #remote_form_for",2],["form_remote_tag","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002275","(options = {}, &block)","Returns a form tag that will submit using XMLHttpRequest in the background instead of the regular reloading",2],["form_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002223","(url_for_options = {}, options = {}, *parameters_for_url, &block)","Starts a form tag that points the action to an url configured with <tt>url_for_options</tt> just like",2],["form_tag_html","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002251","(html_options)","",2],["form_tag_in_block","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002252","(html_options, &block)","",2],["format","ActionController::Request","classes/ActionController/Request.html#M001850","()","Returns the Mime type for the \\format used in the request. GET /posts/5.xml   | request.format => Mime::XML",2],["format","ActiveResource::Base","classes/ActiveResource/Base.html#M001342","()","Returns the current format, default is ActiveResource::Formats::XmlFormat. ",2],["format","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M003270","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M003275","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003256","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M003264","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Time","classes/ActiveSupport/Testing/Performance/Metrics/Time.html#M003230","(measurement)","",2],["format=","ActionController::Request","classes/ActionController/Request.html#M001851","(extension)","Sets the \\format by string extension, which can be used to force custom formats that are not controlled",2],["format=","ActiveResource::Base","classes/ActiveResource/Base.html#M001340","(mime_type_reference_or_format)","Sets the format that attributes are sent and received in from a mime type reference: Person.format =",2],["format_and_extension","ActionView::Template","classes/ActionView/Template.html#M002414","()","",2],["format_currency","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003427","(locale, object, format = :default, options = {})","",2],["format_date","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003429","(locale, object, format = :default, options = {})","",2],["format_datetime","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003431","(locale, object, format = :default, options = {})","",2],["format_datetime","Logger","classes/Logger.html#M002810","(datetime)","",2],["format_datetime","Logger::Formatter","classes/Logger/Formatter.html#M002804","(time)","",2],["format_decimal","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003424","(locale, object, format = :default, options = {})","",2],["format_integer","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003426","(locale, object, format = :default, options = {})","",2],["format_log_entry","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000908","(message, dump = nil)","",2],["format_message","Logger","classes/Logger.html#M002809","(severity, timestamp, msg, progname)","",2],["format_message","Logger","classes/Logger.html#M002807","(severity, timestamp, progname, msg)","",2],["format_percent","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003428","(locale, object, format = :default, options = {})","",2],["format_time","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003430","(locale, object, format = :default, options = {})","",2],["formatted_offset","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002695","(colon = true, alternate_utc_string = nil)","Returns the +utc_offset+ as an +HH:MM formatted string. Examples: datetime = DateTime.civil(2000, 1,",2],["formatted_offset","ActiveSupport::CoreExtensions::Time::Conversions","classes/ActiveSupport/CoreExtensions/Time/Conversions.html#M002958","(colon = true, alternate_utc_string = nil)","Returns the UTC offset as an +HH:MM formatted string. Time.local(2000).formatted_offset         # =>",2],["formatted_offset","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003227","(colon = true, alternate_utc_string = nil)","",2],["formatted_offset","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003307","(colon=true, alternate_utc_string = nil)","Returns the offset of this time zone as a formatted string, of the format \"+HH:MM\". ",2],["formatted_polymorphic_path","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001807","(record_or_hash, options = {})","",2],["formatted_polymorphic_url","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001806","(record_or_hash, options = {})","",2],["formatter","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003436","(locale, type, format)","",2],["formatter","Logger","classes/Logger.html#M002800","()","Get the current formatter. The default formatter is a SimpleFormatter which only displays the log message",2],["fortnight","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002864","()","Alias for #fortnights",2],["fortnights","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002863","()","",2],["forty_two","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002600","()","Equal to <tt>self[41]</tt>. Also known as accessing \"the reddit\". ",2],["fourth","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002598","()","Equal to <tt>self[3]</tt>. ",2],["fragment_cache_key","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M001561","(key)","Given a key (as described in <tt>expire_fragment</tt>), returns a key suitable for use in reading, writing,",2],["fragment_exist?","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M001565","(key, options = nil)","Check if a cached fragment from the location signified by <tt>key</tt> exists (see <tt>expire_fragment</tt>",2],["framework_paths","Rails::Configuration","classes/Rails/Configuration.html#M000106","()","",2],["framework_root_path","Rails::Configuration","classes/Rails/Configuration.html#M000107","()","",2],["freeze","ActionView::ReloadableTemplate::Unfreezable","classes/ActionView/ReloadableTemplate/Unfreezable.html#M002391","()","",2],["freeze","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000696","()","Freeze the attributes hash such that associations are still accessible, even on destroyed records. ",2],["freeze","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003287","()","",2],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M003090","()","",2],["fresh?","ActionController::Request","classes/ActionController/Request.html#M001849","(response)","Check response freshness (Last-Modified and ETag) against request If-Modified-Since and If-None-Match",2],["fresh_when","ActionController::Base","classes/ActionController/Base.html#M001587","(options)","Sets the etag, last_modified, or both on the response and renders a \"304 Not Modified\" response if the",2],["friendly_identifier","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003653","(skip_first_part = false)","Returns a friendlier version of the identifier. Set skip_first_part to  omit the first part of the identifier",2],["from","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002594","(position)","Returns the tail of the array from +position+. %w( a b c d ).from(0)  # => %w( a b c d ) %w( a b c d",2],["from_array","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001489","(messages)","Grabs errors from an array of messages (like ActiveRecord::Validations) ",2],["from_json","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001239","(json)","",2],["from_json","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001492","(json)","Grabs errors from the json response. ",2],["from_now","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002868","(time = ::Time.now)","Alias for #since",2],["from_now","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003036","(time = ::Time.current)","Alias for #since",2],["from_xml","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001254","(xml)","",2],["from_xml","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001494","(xml)","Grabs errors from the XML response. ",2],["from_xml","ActiveSupport::CoreExtensions::Hash::ClassMethods","classes/ActiveSupport/CoreExtensions/Hash/ClassMethods.html#M002738","(xml)","",2],["from_xml_data","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001465","(data)","Manipulate from_xml Hash, because xml_simple is not exactly what we want for Active Resource. ",2],["frozen?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000697","()","Returns +true+ if the attributes hash has been frozen. ",2],["full_message","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001293","()","",2],["full_messages","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001312","(options = {})","Returns all the full error messages in an array. class Company < ActiveRecord::Base validates_presence_of",2],["full_messages","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001480","()","Returns all the full error messages in an array. ==== Examples my_person = Person.new(params[:person])",2],["full_options","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000334","(runtime_options = {})","Merge together our instance options.  In increasing precedence: default_options   (class default options)",2],["full_options","Rails::Generator::Options::ClassMethods","classes/Rails/Generator/Options/ClassMethods.html#M000330","(runtime_options = {})","Merge together our class options.  In increasing precedence: default_options   (class default options)",2],["full_test_name","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M003181","()","",2],["future?","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002636","()","Tells whether the Date object's date lies in the future ",2],["future?","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002691","()","Tells whether the DateTime object's datetime lies in the future ",2],["future?","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002967","()","Tells whether the Time object's time lies in the future ",2],["future?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003260","()","",2],["g_length","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003148","()","Returns the number of grapheme clusters in the string. Example: 'क्षि'.mb_chars.length #=> 4 'क्षि'.mb_chars.g_length",2],["g_pack","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003153","(unpacked)","Reverse operation of g_unpack. Example: Chars.g_pack(Chars.g_unpack('क्षि')) #=> 'क्षि' ",2],["g_unpack","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003152","(string)","Unpack the string at grapheme boundaries. Returns a list of character lists. Example: Chars.g_unpack('क्षि')",2],["gc_countdown","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000024","()","",2],["gem","Rails::Configuration","classes/Rails/Configuration.html#M000091","(name, options = {})","Adds a single Gem dependency to the rails application. By default, it will require the library with the",2],["generate","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M003103","(value)","",2],["generate_digest","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M003106","(data)","",2],["generate_full_message","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001297","(options = {})","Wraps an error message into a full_message format. The default full_message format for any locale is",2],["generate_message","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001296","(options = {})","Translates an error message in it's default scope (<tt>activerecord.errrors.messages</tt>). Error messages",2],["generate_message","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001319","(attribute, message = :invalid, options = {})","",2],["generate_optimisation_block","ActionController::Routing::Optimisation","classes/ActionController/Routing/Optimisation.html#M001949","(route, kind)","",2],["generate_secret","Rails::SecretKeyGenerator","classes/Rails/SecretKeyGenerator.html#M000345","()","Generate a random secret key with the best possible method available on the current platform. ",2],["generate_sid","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002013","()","",2],["generate_sid","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002044","()","",2],["generated_methods?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000377","()","",2],["generation_code","ActionController::Routing::Optimisation::Optimiser","classes/ActionController/Routing/Optimisation/Optimiser.html#M001952","()","",2],["generation_code","ActionController::Routing::Optimisation::PositionalArguments","classes/ActionController/Routing/Optimisation/PositionalArguments.html#M001956","()","",2],["generation_code","ActionController::Routing::Optimisation::PositionalArgumentsWithAdditionalParams","classes/ActionController/Routing/Optimisation/PositionalArgumentsWithAdditionalParams.html#M001959","()","This case uses almost the same code as positional arguments, but add a question mark and args.last.to_query",2],["generator_full_paths","Rails::Generator::GemPathSource","classes/Rails/Generator/GemPathSource.html#M000315","()","",2],["generic_url_rewriter","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001741","()","Get a temporary URL writer object ",2],["get","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001719","(path, parameters = nil, headers = nil)","Performs a GET request with the given parameters. - +path+: The URI (as a String) on which you want to",2],["get","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002080","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating GET HTTP method and set/volley the response ",2],["get","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001393","(path, headers = {})","Execute a GET request. Used to get (find) resources. ",2],["get","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001439","(custom_method_name, options = {})","Invokes a GET to a given custom REST method. For example: Person.get(:active)  # GET /people/active.xml",2],["get","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001447","(method_name, options = {})","",2],["get","I18n::Backend::Transliterator","classes/I18n/Backend/Transliterator.html#M003504","(rule = nil)","Get a transliterator instance. ",2],["get","MemCache","classes/MemCache.html#M003593","(key, raw = false)","Retrieves +key+ from memcache.  If +raw+ is false, the value will be unmarshalled. ",2],["get","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003636","(identifier)","Returns a timezone by its identifier (e.g. \"Europe/London\",  \"America/Chicago\" or \"UTC\"). Raises InvalidTimezoneIdentifier",2],["get?","ActionController::Request","classes/ActionController/Request.html#M001827","()","Is this a GET (or HEAD) request?  Equivalent to <tt>request.method == :get</tt>. ",2],["get_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002362","(name)","The cycle helpers need to store the cycles in a place that is guaranteed to be reset every time a page",2],["get_multi","MemCache","classes/MemCache.html#M003595","(*keys)","Retrieves multiple values from memcached in parallel, if possible. The memcached protocol supports the",2],["get_period_and_ensure_valid_local_time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003292","()","",2],["get_proxies","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003670","(identifiers)","Returns an array of proxies corresponding to the given array of  identifiers. ",2],["get_proxy","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003637","(identifier)","Returns a proxy for the Timezone with the given identifier. The proxy will cause the real timezone to",2],["get_server_for_key","MemCache","classes/MemCache.html#M003611","(key, options = {})","Pick a server to handle the request based on a hash of the key. ",2],["get_session","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002018","(env, sid)","",2],["get_session","ActionController::Session::MemCacheStore","classes/ActionController/Session/MemCacheStore.html#M002024","(env, sid)","",2],["get_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001272","(env, sid)","",2],["get_session_model","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001275","(env, sid)","",2],["get_via_redirect","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001712","(path, parameters = nil, headers = nil)","Performs a GET request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["get_zone","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Zones/ClassMethods.html#M002978","(time_zone)","",2],["getgm","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003210","()","Alias for #utc",2],["getlocal","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003219","()","Alias for #localtime",2],["gets","MemCache","classes/MemCache.html#M003614","(key, raw = false)","",2],["gettext","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003533","(msgid, options = {})","",2],["getutc","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002714","()","Alias for #utc",2],["getutc","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003211","()","Alias for #utc",2],["gigabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002845","()","Alias for #gigabytes",2],["gigabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002844","()","",2],["git_url?","Plugin","classes/Plugin.html#M000154","()","",2],["gmt?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003223","()","Alias for #utc?",2],["gmt_offset","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003225","()","Alias for #utc_offset",2],["gmtime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003212","()","Alias for #utc",2],["gmtoff","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003226","()","Alias for #utc_offset",2],["group!","Builder::CSS","classes/Builder/CSS.html#M003335","(*args, &block)","",2],["group_by","Enumerable","classes/Enumerable.html#M002718","()","Collect an enumerable into sets, grouped by the result of a block. Useful, for example, for grouping",2],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002229","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","Returns <tt><select></tt>, <tt><optgroup></tt> and <tt><option></tt> tags for the collection of existing",2],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002241","(grouped_options, selected_key = nil, prompt = nil)","Returns a string of <tt><option></tt> tags, like <tt>options_for_select</tt>, but wraps them with <tt><optgroup></tt>",2],["gsub_file","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000255","(relative_destination, regexp, *args, &block)","",2],["guard_against_unlimitable_reflections","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000434","(reflections, options)","",2],["guard_conditions","ActionController::Routing::Optimisation::Optimiser","classes/ActionController/Routing/Optimisation/Optimiser.html#M001951","()","",2],["guard_conditions","ActionController::Routing::Optimisation::PositionalArguments","classes/ActionController/Routing/Optimisation/PositionalArguments.html#M001955","()","",2],["guard_conditions","ActionController::Routing::Optimisation::PositionalArgumentsWithAdditionalParams","classes/ActionController/Routing/Optimisation/PositionalArgumentsWithAdditionalParams.html#M001958","()","",2],["guess_name","Plugin","classes/Plugin.html#M000167","(url)","",2],["h","ERB::Util","classes/ERB/Util.html#M002939","(s)","Alias for #html_escape",2],["h","ERB::Util","classes/ERB/Util.html#M002939","(s)","Alias for #html_escape",2],["ha1","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001724","(credentials, password)","",2],["handle_conditional_get!","ActionController::Response","classes/ActionController/Response.html#M001928","()","",2],["handle_error","MemCache","classes/MemCache.html#M003619","(server, error)","Handles +error+ from +server+. ",2],["handle_exception","I18n","classes/I18n.html#M003584","(exception, locale, key, options)","Any exceptions thrown in translate will be sent to the @@exception_handler which can be a Symbol, a Proc",2],["handle_interpolation_token","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003465","(interpolation, matchdata)","",2],["handle_response","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001408","(response)","Handles response and error codes from remote service. ",2],["handle_unverified_request","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001839","()","",2],["handler_for_rescue","ActiveSupport::Rescuable","classes/ActiveSupport/Rescuable.html#M003166","(exception)","",2],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000412","(association_id, options = {}, &extension)","Specifies a many-to-many relationship with another class. This associates two classes via an intermediate",2],["has_attribute?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000689","(attr_name)","Returns true if the given attribute is in the attributes hash ",2],["has_default?","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000798","()","",2],["has_key?","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001990","(key)","",2],["has_many","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000409","(association_id, options = {}, &extension)","Specifies a one-to-many association. The following methods for retrieval and query of collections of",2],["has_one","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000410","(association_id, options = {})","Specifies a one-to-one association with another class. This method should only be used if the other class",2],["has_primary_key_column?","Fixtures","classes/Fixtures.html#M001146","()","",2],["has_session_id?","ActionController::Session::AbstractStore::OptionsHash","classes/ActionController/Session/AbstractStore/OptionsHash.html#M001985","()","",2],["hash","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000695","()","Delegates to id in order to allow two records of the same type and id to work with something like: [",2],["hash","ActiveResource::Base","classes/ActiveResource/Base.html#M001406","()","Delegates to id in order to allow two resources of the same type and \\id to work with something like:",2],["hash","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002577","()","",2],["hash","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003280","()","Alias for #to_i",2],["hash","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003666","()","Returns a hash of this Timezone. ",2],["hash","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003693","()","Returns a hash of this TimezonePeriod. ",2],["hash_for","MemCache","classes/MemCache.html#M003610","(key)","Returns an interoperable hash value for +key+.  (I think, docs are sketchy for down servers). ",2],["head","ActionController::Base","classes/ActionController/Base.html#M001573","(*args)","Return a response that has no content (merely headers). The options argument is interpreted to be a hash",2],["head","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001725","(path, parameters = nil, headers = nil)","Performs a HEAD request with the given parameters. See get() for more details. ",2],["head","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002084","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating HEAD HTTP method and set/volley the response ",2],["head","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001401","(path, headers = {})","Execute a HEAD request. Used to obtain meta-information about resources, such as whether they exist and",2],["head?","ActionController::Request","classes/ActionController/Request.html#M001831","()","Is this a HEAD request? Since <tt>request.method</tt> sees HEAD as <tt>:get</tt>, this \\method checks",2],["headers","ActionController::Request","classes/ActionController/Request.html#M001832","()","Provides access to the request's HTTP headers, for example: request.headers[\"Content-Type\"] # => \"text/plain\"",2],["headers","ActiveResource::Base","classes/ActiveResource/Base.html#M001349","()","",2],["headers_match?","ActiveResource::Request","classes/ActiveResource/Request.html#M001491","(req)","",2],["helper","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001681","(*args, &block)","The +helper+ class method can take a series of helper module names, a block, or both. * <tt>*args</tt>:",2],["helper","Object","classes/Object.html#M000003","()","",2],["helper_attr","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001687","(*attrs)","Declares helper accessors for controller attributes. For example, the following adds new +name+ and <tt>name=</tt>",2],["helper_class","ActionView::TestCase","classes/ActionView/TestCase.html#M002450","()","",2],["helper_method","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001686","(*methods)","Declare a controller method as a helper. For example, the following makes the +current_user+ controller",2],["helper_method","ActionView::TestCase","classes/ActionView/TestCase.html#M002452","(*methods)","",2],["helpers","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001688","()","Provides a proxy to access helpers methods from outside the view. ",2],["hex","ActiveSupport::SecureRandom","classes/ActiveSupport/SecureRandom.html#M003169","(n=nil)","SecureRandom.hex generates a random hex string. The argument n specifies the length of the random length.",2],["hidden_actions","ActionController::Base","classes/ActionController/Base.html#M001538","()","Return an array containing the names of public methods that have been marked hidden from the action processor.",2],["hidden_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002217","(object_name, method, options = {})","Returns a hidden input tag tailored for accessing a specified attribute (identified by +method+) on an",2],["hidden_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002230","(name, value = nil, options = {})","Creates a hidden form input field used to transmit data that would be lost due to HTTP's statelessness",2],["hide","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002298","(*ids)","Hides the visible DOM elements with the given +ids+. Example: # Hide a few people # Generates: [\"person_29\",",2],["hide","BlankSlate","classes/BlankSlate.html#M003295","(name)","Hide the method named +name+ in the BlankSlate class.  Don't hide +instance_eval+ or any method beginning",2],["hide_action","ActionController::Base","classes/ActionController/Base.html#M001539","(*names)","Hide each of the given methods from being callable as actions. ",2],["highlight","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002348","(text, phrases, *args)","Highlights one or more +phrases+ everywhere in +text+ by inserting it into a <tt>:highlighter</tt> string.",2],["host","ActionController::Request","classes/ActionController/Request.html#M001862","()","Returns the host for this request, such as example.com. ",2],["host!","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001706","(name)","Set the host name to use in the next request. session.host! \"www.example.com\" ",2],["host_with_port","ActionController::Request","classes/ActionController/Request.html#M001863","()","Returns a \\host:\\port string for this request, such as \"example.com\" or \"example.com:8080\". ",2],["hour","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002858","()","Alias for #hours",2],["hours","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002857","()","",2],["html?","Mime::Type","classes/Mime/Type.html#M001794","()","",2],["html_document","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002095","()","",2],["html_escape","ERB::Util","classes/ERB/Util.html#M002938","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h</tt>. In your",2],["html_escape","ERB::Util","classes/ERB/Util.html#M002938","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h</tt>. In your",2],["html_options_for_form","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002247","(url_for_options, options, *parameters_for_url)","",2],["html_safe","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002947","()","",2],["html_safe?","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002946","()","",2],["html_safe?","Fixnum","classes/Fixnum.html#M002943","()","",2],["html_safe?","Object","classes/Object.html#M002942","()","",2],["html_safe_translation_keys","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M002347","(keys, translations)","",2],["http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001501","()","",2],["http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001411","()","Creates new Net::HTTP instance for communication with remote service and resources. ",2],["http_format_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001424","(http_method)","",2],["http_only=","CGI::Cookie","classes/CGI/Cookie.html#M001622","(val)","Sets whether the Cookie is an HTTP only cookie or not. ",2],["httpdate","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003243","()","",2],["https!","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001700","(flag = true)","Specify whether or not the session should mimic a secure HTTPS request. session.https! session.https!(false)",2],["https?","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001701","()","Return +true+ if the session is mimicking a secure HTTPS request. if session.https? ... end ",2],["human","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003052","(rule, replacement)","Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using",2],["human_attribute_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000516","(attribute_key_name, options = {})","Transforms attribute key names into a more humane format, such as \"First name\" instead of \"first_name\".",2],["human_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000517","(options = {})","Transform the modelname into a more humane format, using I18n. Defaults to the basic humanize method.",2],["human_name","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000807","()","Returns the human name of the column name. ===== Examples Column.new('sales_stage', ...).human_name #",2],["humanize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002930","()","Capitalizes the first word, turns underscores into spaces, and strips '_id'. Like +titleize+, this is",2],["humanize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003063","(lower_case_and_underscored_word)","Capitalizes the first word and turns underscores into spaces and strips a trailing \"_id\", if any. Like",2],["id","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000628","()","A model instance's primary key is always available as model.id whether you name it the default 'id' or",2],["id","ActiveResource::Base","classes/ActiveResource/Base.html#M001398","()","Gets the <tt>\\id</tt> attribute of the resource. ",2],["id!","Builder::CSS","classes/Builder/CSS.html#M003332","(arg, &block)","",2],["id=","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000634","(value)","Sets the primary ID. ",2],["id=","ActiveResource::Base","classes/ActiveResource/Base.html#M001399","(id)","Sets the <tt>\\id</tt> attribute of the resource. ",2],["id_from_response","ActiveResource::Base","classes/ActiveResource/Base.html#M001432","(response)","Takes a response from a typical create post and pulls the ID out ",2],["identical?","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000268","(source, destination, &block)","Checks if the source and the destination file are identical. If passed a block then the source file is",2],["identifier","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003649","()","The identifier of the timezone, e.g. \"Europe/Paris\". ",2],["identify","Fixtures","classes/Fixtures.html#M001140","(label)","Returns a consistent, platform-independent identifier for +label+. Identifiers are positive integers",2],["if_modified_since","ActionController::Request","classes/ActionController/Request.html#M001843","()","",2],["if_none_match","ActionController::Request","classes/ActionController/Request.html#M001844","()","",2],["image_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002170","(source)","Computes the path to an image asset in the public images directory. Full paths from the document root",2],["image_submit_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002243","(source, options = {})","Displays an image which when clicked will submit the form. <tt>source</tt> is passed to AssetTagHelper#image_path",2],["image_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002172","(source, options = {})","Returns an html image tag for the +source+. The +source+ can be a full path or a file that exists in",2],["implementation","I18n::Locale::Tag","classes/I18n/Locale/Tag.html#M003570","()","Returns the current locale tag implementation. Defaults to +I18n::Locale::Tag::Simple+. ",2],["implementation=","I18n::Locale::Tag","classes/I18n/Locale/Tag.html#M003571","(implementation)","Sets the current locale tag implementation. Use this to set a different locale tag implementation. ",2],["in","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002639","(seconds)","Alias for #since",2],["in","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002707","(seconds)","Alias for #since",2],["in","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002979","(seconds)","Alias for #since",2],["in_char_class?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003151","(codepoint, classes)","Detect whether the codepoint is in a certain character class. Returns +true+ when it's in the specified",2],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000738","()","the maximum number of elements in an IN (x,y,z) clause ",2],["in_groups","ActiveSupport::CoreExtensions::Array::Grouping","classes/ActiveSupport/CoreExtensions/Array/Grouping.html#M002609","(number, fill_with = nil)","Splits or iterates over the array in +number+ of groups, padding any remaining slots with +fill_with+",2],["in_groups_of","ActiveSupport::CoreExtensions::Array::Grouping","classes/ActiveSupport/CoreExtensions/Array/Grouping.html#M002607","(number, fill_with = nil)","Splits or iterates over the array in groups of size +number+, padding any remaining slots with +fill_with+",2],["in_or_equals_for_ids","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000369","(ids)","",2],["in_time_zone","ActiveSupport::CoreExtensions::Time::Zones","classes/ActiveSupport/CoreExtensions/Time/Zones.html#M002989","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone</tt>. Time.zone = 'Hawaii'         # => 'Hawaii' Time.utc(2000).in_time_zone",2],["in_time_zone","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003214","(new_zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone</tt>, or the specified zone. ",2],["include","ActionView::Base::ProxyModule","classes/ActionView/Base/ProxyModule.html#M002134","(*args)","",2],["include?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003121","(other)","Returns +true+ if contained string contains _other_. Returns +false+ otherwise. Example: 'Café'.mb_chars.include?('é')",2],["include_eager_conditions?","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000456","(options, tables = nil, joined_tables = nil)","Checks if the conditions reference a table other than the current model table ",2],["include_eager_order?","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000458","(options, tables = nil, joined_tables = nil)","Checks if the query order references a table other than the current model's table. ",2],["include_eager_select?","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000459","(options, joined_tables = nil)","",2],["include_helper_modules!","ActionView::TestCase","classes/ActionView/TestCase.html#M002453","()","",2],["include_with_range?","ActiveSupport::CoreExtensions::Range::IncludeRange","classes/ActiveSupport/CoreExtensions/Range/IncludeRange.html#M002899","(value)","Extends the default Range#include? to support range comparisons. (1..5).include?(1..5) # => true (1..5).include?(2..3)",2],["included","ActionController::CgiExt::Stdinput","classes/ActionController/CgiExt/Stdinput.html#M001627","(base)","",2],["included","ActionController::Cookies","classes/ActionController/Cookies.html#M001632","(base)","",2],["included","ActionController::Flash","classes/ActionController/Flash.html#M001655","(base)","",2],["included","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001824","(base)","",2],["included","ActionController::TestCase::RaiseActionExceptions","classes/ActionController/TestCase/RaiseActionExceptions.html#M002059","(base)","",2],["included","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002079","(base)","",2],["included","ActionController::UploadedFile","classes/ActionController/UploadedFile.html#M002073","(base)","",2],["included","ActionView::TemplateHandlers::Compilable","classes/ActionView/TemplateHandlers/Compilable.html#M002432","(base)","",2],["included","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000394","(base)","",2],["included","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000763","(base)","",2],["included","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001085","(base)","",2],["included","ActiveRecord::NamedScope","classes/ActiveRecord/NamedScope.html#M001185","(base)","All subclasses of ActiveRecord::Base have one named scope: * <tt>scoped</tt> - which allows for the creation",2],["included","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001236","(base)","",2],["included","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001169","(base)","",2],["included","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001282","(base)","",2],["included","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001438","(base)","",2],["included","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks.html#M002584","(base)","",2],["included","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M003087","(base)","",2],["included","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M003180","(base)","",2],["included","ActiveSupport::Testing::SetupAndTeardown","classes/ActiveSupport/Testing/SetupAndTeardown.html#M003178","(base)","",2],["included","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003480","(base)","",2],["included","RackLintPatch::AllowStringSubclass","classes/RackLintPatch/AllowStringSubclass.html#M001803","(base)","",2],["included","Rails::Generator::Commands","classes/Rails/Generator/Commands.html#M000237","(base)","Even more convenient access to commands.  Include Commands in the generator Base class to get a nice",2],["included","Rails::Generator::Lookup","classes/Rails/Generator/Lookup.html#M000279","(base)","",2],["included","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000324","(base)","",2],["included_in_classes","Module","classes/Module.html#M002826","()","Returns the classes in the current ObjectSpace where this module has been mixed in according to Module#included_modules.",2],["incr","MemCache","classes/MemCache.html#M003596","(key, amount = 1)","Increments the value for +key+ by +amount+ and returns the new value. +key+ must already exist.  If +key+",2],["increment","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000657","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and adds the value passed as +by+ (default is 1). The increment",2],["increment","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002588","(key, amount = 1)","",2],["increment","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002557","(key, amount = 1)","",2],["increment","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002554","(key, amount = 1)","",2],["increment!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000661","(attribute, by = 1)","Wrapper around +increment+ that saves the record. This method differs from its non-bang version in that",2],["increment_counter","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000482","(counter_name, id)","Increment a number field by one, usually representing a count. This is used for caching aggregate values,",2],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000899","()","",2],["index","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000867","(column_name, options = {})","Adds a new index to the table. +column_name+ can be a single Symbol, or an Array of Symbols. See SchemaStatements#add_index",2],["index","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003123","(needle, offset=0)","Returns the position _needle_ in the string, counting in codepoints. Returns +nil+ if _needle_ isn't",2],["index","Repository","classes/Repository.html#M000185","()","",2],["index_by","Enumerable","classes/Enumerable.html#M002722","()","Convert an enumerable to a hash. Examples: people.index_by(&:login) => { \"nextangle\" => <Person ...>,",2],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000842","(table_name, index_name, default)","Verify the existence of an index. The default argument is returned if the underlying implementation does",2],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000734","()","the maximum length of an index name ",2],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001033","()","",2],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001012","(table_name, name = nil)","Returns the list of all indexes for a table. ",2],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000736","()","the maximum number of indexes per table ",2],["inflect_names","Rails::Generator::NamedBase","classes/Rails/Generator/NamedBase.html#M000219","(name)","",2],["inflections","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003054","()","Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules.",2],["inflections_with_route_reloading","ActionController::Routing","classes/ActionController/Routing.html#M002010","(&block)","Ensures that routes are reloaded when Rails inflections are updated. ",2],["info","Plugin","classes/Plugin.html#M000158","()","",2],["inheritance_column","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000498","()","Defines the column name for use with single table inheritance -- can be set in subclasses like so: self.inheritance_column",2],["inheritance_column_name","Fixtures","classes/Fixtures.html#M001148","()","",2],["inherited","ActiveRecord::Observing::ClassMethods","classes/ActiveRecord/Observing/ClassMethods.html#M001204","(subclass)","Notify observers when the observed class is subclassed. ",2],["inherited_with_helper","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M001690","(child)","",2],["inherited_with_layout","ActionController::Layout::ClassMethods","classes/ActionController/Layout/ClassMethods.html#M001752","(child)","",2],["inherited_with_options","Rails::Generator::Options::ClassMethods","classes/Rails/Generator/Options/ClassMethods.html#M000325","(sub)","",2],["init_translations","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003499","()","",2],["initialize_cache","Rails::Initializer","classes/Rails/Initializer.html#M000062","()","",2],["initialize_current_url","ActionController::Base","classes/ActionController/Base.html#M001596","()","",2],["initialize_database","Rails::Initializer","classes/Rails/Initializer.html#M000060","()","This initialization routine does nothing unless <tt>:active_record</tt> is one of the frameworks to load",2],["initialize_database_middleware","Rails::Initializer","classes/Rails/Initializer.html#M000061","()","",2],["initialize_defaults","ActionMailer::Base","classes/ActionMailer/Base.html#M002475","(method_name)","Set up the default values for the various instance variables of this mailer. Subclasses may override",2],["initialize_dependency_mechanism","Rails::Initializer","classes/Rails/Initializer.html#M000068","()","Sets the dependency loading mechanism based on the value of Configuration#cache_classes. ",2],["initialize_encoding","Rails::Initializer","classes/Rails/Initializer.html#M000059","()","For Ruby 1.8, this initialization sets $KCODE to 'u' to enable the multibyte safe operations. Plugin",2],["initialize_framework_caches","Rails::Initializer","classes/Rails/Initializer.html#M000063","()","",2],["initialize_framework_logging","Rails::Initializer","classes/Rails/Initializer.html#M000065","()","Sets the logger for Active Record, Action Controller, and Action Mailer (but only for those frameworks",2],["initialize_framework_settings","Rails::Initializer","classes/Rails/Initializer.html#M000073","()","Initializes framework-specific settings for each of the loaded frameworks (Configuration#frameworks).",2],["initialize_framework_views","Rails::Initializer","classes/Rails/Initializer.html#M000066","()","Sets +ActionController::Base#view_paths+ and +ActionMailer::Base#template_root+ (but only for those frameworks",2],["initialize_i18n","Rails::Initializer","classes/Rails/Initializer.html#M000071","()","Set the i18n configuration from config.i18n but special-case for the load_path which should be appended",2],["initialize_logger","Rails::Initializer","classes/Rails/Initializer.html#M000064","()","If the RAILS_DEFAULT_LOGGER constant is already set, this initialization routine does nothing. If the",2],["initialize_metal","Rails::Initializer","classes/Rails/Initializer.html#M000072","()","",2],["initialize_query","CGI::QueryExtension","classes/CGI/QueryExtension.html#M001626","()","Neuter CGI parameter parsing. ",2],["initialize_routing","Rails::Initializer","classes/Rails/Initializer.html#M000067","()","If Action Controller is not one of the loaded frameworks (Configuration#frameworks) this does nothing.",2],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000848","()","Should not be called normally, but this operation is non-destructive. The migrations module handles this",2],["initialize_template_class","ActionController::Base","classes/ActionController/Base.html#M001594","(response)","",2],["initialize_template_class","ActionMailer::Base","classes/ActionMailer/Base.html#M002483","(assigns)","",2],["initialize_time_zone","Rails::Initializer","classes/Rails/Initializer.html#M000070","()","Sets the default value for Time.zone, and turns on ActiveRecord::Base#time_zone_aware_attributes. If",2],["initialize_whiny_nils","Rails::Initializer","classes/Rails/Initializer.html#M000069","()","Loads support for \"whiny nil\" (noisy warnings when methods are invoked on +nil+ values) if Configuration#whiny_nils",2],["initialize_with_stdinput","ActionController::CgiExt::Stdinput","classes/ActionController/CgiExt/Stdinput.html#M001628","(type = nil, stdinput = $stdin)","",2],["initialize_without_template_tracking","ActionView::Base","classes/ActionView/Base.html#M002443","(*args)","Alias for #initialize",2],["initialized=","Rails","classes/Rails.html#M000029","(initialized)","",2],["initialized?","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003493","()","",2],["initialized?","Rails","classes/Rails.html#M000028","()","",2],["inject_persistent_session_id","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002047","(data)","",2],["input","ActionView::Helpers::ActiveRecordHelper","classes/ActionView/Helpers/ActiveRecordHelper.html#M002142","(record_name, method, options = {})","Returns a default input tag for the type of object returned by the method. For example, if <tt>@post</tt>",2],["insert","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001772","(index, *args, &block)","",2],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000758","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000989","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Executes an INSERT query and returns the new record's ID ",2],["insert","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003120","(offset, fragment)","Inserts the passed string at specified codepoint offsets. Example: 'Café'.mb_chars.insert(4, ' périferôl').to_s",2],["insert_after","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001774","(index, *args, &block)","",2],["insert_before","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001773","(index, *args, &block)","Alias for #insert",2],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000779","(fixture, table_name)","Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple",2],["insert_fixtures","Fixtures","classes/Fixtures.html#M001143","()","",2],["insert_html","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002293","(position, id, *options_for_render)","Inserts HTML at the specified +position+ relative to the DOM element identified by the given +id+. +position+",2],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000784","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Returns the last auto-generated ID from the affected table. ",2],["inspect","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001768","()","",2],["inspect","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001999","()","",2],["inspect","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000520","()","Returns a string like 'Post id:integer, title:string, body:text' ",2],["inspect","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000701","()","Returns the contents of the record as a nicely formatted string. ",2],["inspect","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003232","()","",2],["inspect","Continuum::Entry","classes/Continuum/Entry.html#M003635","()","",2],["inspect","MemCache","classes/MemCache.html#M003588","()","Returns a string representation of the cache object. ",2],["inspect","MemCache::Server","classes/MemCache/Server.html#M003627","()","Return a string representation of the server object. ",2],["inspect","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003652","()","Returns internal object state as a programmer-readable string. ",2],["inspect","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003694","()","Returns internal object state as a programmer-readable string. ",2],["install","Plugin","classes/Plugin.html#M000156","(method=nil, options = {})","",2],["install","RailsEnvironment","classes/RailsEnvironment.html#M000143","(name_uri_or_plugin)","",2],["install_gem_spec_stubs","Rails::Initializer","classes/Rails/Initializer.html#M000042","()","If Rails is vendored and RubyGems is available, install stub GemSpecs for Rails, Active Support, Active",2],["install_signal_handler","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000013","(signal, handler = nil)","",2],["install_signal_handlers","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000012","()","",2],["install_using_checkout","Plugin","classes/Plugin.html#M000162","(options = {})","",2],["install_using_export","Plugin","classes/Plugin.html#M000161","(options = {})","",2],["install_using_externals","Plugin","classes/Plugin.html#M000163","(options = {})","",2],["install_using_git","Plugin","classes/Plugin.html#M000165","(options = {})","",2],["install_using_http","Plugin","classes/Plugin.html#M000164","(options = {})","",2],["installed?","Plugin","classes/Plugin.html#M000155","()","",2],["instance","Rails::Generator::Commands","classes/Rails/Generator/Commands.html#M000236","(command, generator)","Here's a convenient way to get a handle on generator commands. Command.instance('destroy', my_generator)",2],["instance","Rails::Generator::Lookup","classes/Rails/Generator/Lookup.html#M000280","(generator_name, args, runtime_options = {})","Convenience method to instantiate another generator. ",2],["instance","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000292","(generator_name, args = [], runtime_options = {})","Convenience method to lookup and instantiate a generator. ",2],["instance","Repositories","classes/Repositories.html#M000180","()","",2],["instance_exec","Object","classes/Object.html#M002882","(*args, &block)","Evaluate the block with the given arguments within the context of this object, so self is set to the",2],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000379","(method_name)","Checks whether the method is defined in the model or any of its subclasses that also derive from Active",2],["instance_variable_defined?","Object","classes/Object.html#M002877","(variable)","",2],["instance_variable_names","Object","classes/Object.html#M002881","()","",2],["instantiate","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000541","(record)","Finder methods must instantiate through this method to work with the single-table inheritance model that",2],["instantiate_all_loaded_fixtures","Fixtures","classes/Fixtures.html#M001138","(object, load_instances = true)","",2],["instantiate_collection","ActiveResource::Base","classes/ActiveResource/Base.html#M001374","(collection, prefix_options = {})","",2],["instantiate_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001183","()","",2],["instantiate_fixtures","Fixtures","classes/Fixtures.html#M001137","(object, table_name, fixtures, load_instances = true)","",2],["instantiate_observers","ActiveRecord::Observing::ClassMethods","classes/ActiveRecord/Observing/ClassMethods.html#M001203","()","Instantiate the global Active Record observers. ",2],["instantiate_record","ActiveResource::Base","classes/ActiveResource/Base.html#M001375","(record, prefix_options = {})","",2],["instantiate_time_object","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000729","(name, values)","",2],["instantiator?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001114","()","",2],["instruct!","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003371","(directive_tag=:xml, attrs={})","Insert a processing instruction into the XML markup.  E.g. For example: xml.instruct! #=> <?xml version=\"1.0\"",2],["interpolate","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003410","(locale, string, values = {})","Interpolates values into a given string. interpolate \"file %{file} opened by %%{user}\", :file => 'test.txt',",2],["interpolate","I18n::Backend::InterpolationCompiler","classes/I18n/Backend/InterpolationCompiler.html#M003477","(locale, string, values)","",2],["interpolate","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003488","(locale, entry, values = {})","",2],["interpolate_key","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003468","(key)","",2],["interpolate_lambda?","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003412","(object, string, key)","returns true when the given value responds to :call and the key is an interpolation placeholder in the",2],["interpolate_or_raise_missing","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003467","(key)","",2],["interpolate_sql","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000726","(sql, record = nil)","Interpolate custom SQL string in instance context. Optional record argument is meant for custom insert_sql.",2],["interpolate_sql_for_preload","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000367","(sql)","",2],["interpolated_str?","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003460","(str)","",2],["interpolates?","I18n::Backend::ActiveRecord::Translation","classes/I18n/Backend/ActiveRecord/Translation.html#M003385","(key)","",2],["interpolation_chunk","ActionController::Routing::OptionalFormatSegment","classes/ActionController/Routing/OptionalFormatSegment.html#M001978","()","",2],["interpret_uri","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001731","(path)","Tailors the session based on the given URI, setting the HTTPS value and the hostname. ",2],["invalid?","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001305","(attribute)","Returns true if the specified +attribute+ has errors associated with it. class Company < ActiveRecord::Base",2],["invalid?","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001360","()","Performs the opposite of <tt>valid?</tt>. Returns true if errors were added, false otherwise. ",2],["invalid?","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001472","(attribute)","Returns true if the specified +attribute+ has errors associated with it. ==== Examples my_resource =",2],["invalidate_cache!","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000295","()","Clear the cache whenever the source list changes. ",2],["invoke!","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000240","()","Replay action manifest.  RewindBase subclass rewinds manifest. ",2],["invoke!","Rails::Generator::Commands::RewindBase","classes/Rails/Generator/Commands/RewindBase.html#M000261","()","Rewind action manifest. ",2],["irregular","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003050","(singular, plural)","Specifies a new irregular that applies to both pluralization and singularization at the same time. This",2],["is_a?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003285","(klass)","Say we're a Time to thwart type checking. ",2],["is_utf8?","ActiveSupport::CoreExtensions::String::Multibyte","classes/ActiveSupport/CoreExtensions/String/Multibyte.html#M002934","()","Returns true if the string has UTF-8 semantics (a String used for purely byte resources is unlikely to",2],["is_utf8?","ActiveSupport::CoreExtensions::String::Multibyte","classes/ActiveSupport/CoreExtensions/String/Multibyte.html#M002937","()","",2],["isdst","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003221","()","Alias for #dst?",2],["iso8601","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003234","(fraction_digits = 0)","Alias for #xmlschema",2],["j","ERB::Util","classes/ERB/Util.html#M002941","(s)","Alias for #json_escape",2],["j","ERB::Util","classes/ERB/Util.html#M002941","(s)","Alias for #json_escape",2],["javascript_include_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002156","(*sources)","Returns an html script tag for each of the +sources+ provided. You can pass in the filename (.js extension",2],["javascript_object_for","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002315","(object)","",2],["javascript_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002153","(source)","Computes the path to a javascript asset in the public javascripts directory. If the +source+ filename",2],["javascript_src_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002180","(source, options)","",2],["javascript_tag","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M002258","(content_or_options_with_block = nil, html_options = {}, &block)","Returns a JavaScript tag with the +content+ inside. Example: javascript_tag \"alert('All is good')\" Returns:",2],["join_asset_file_contents","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002188","(paths)","",2],["join_table_name","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000413","(first_table_name, second_table_name)","Generates a join table name from two provided table names. The names in the join table namesme end up",2],["join_type","ActiveRecord::Associations::ClassMethods::InnerJoinDependency::InnerJoinAssociation","classes/ActiveRecord/Associations/ClassMethods/InnerJoinDependency/InnerJoinAssociation.html#M000511","()","",2],["joined_tables","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000452","(options)","",2],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000740","()","maximum number of joins in a single query ",2],["json_escape","ERB::Util","classes/ERB/Util.html#M002940","(s)","A utility method for escaping HTML entities in JSON strings. This method is also aliased as <tt>j</tt>.",2],["json_escape","ERB::Util","classes/ERB/Util.html#M002940","(s)","A utility method for escaping HTML entities in JSON strings. This method is also aliased as <tt>j</tt>.",2],["keep","ActionController::Flash::FlashHash","classes/ActionController/Flash/FlashHash.html#M001661","(k = nil)","Keeps either the entire current flash or a specific flash entry available for the next action: flash.keep",2],["key?","ActionController::Request","classes/ActionController/Request.html#M001823","(key)","",2],["key?","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002748","(key)","Checks the hash for a key matching the argument passed in: hash = HashWithIndifferentAccess.new hash[\"key\"]",2],["kilobyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002841","()","Alias for #kilobytes",2],["kilobytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002840","()","",2],["kind_of?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003286","(klass)","Alias for #is_a?",2],["klass","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001765","()","",2],["klass","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000799","()","Returns the Ruby class that corresponds to the abstract data type. ",2],["klass","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001230","()","Returns the class for the macro.  For example, <tt>composed_of :balance, :class_name => 'Money'</tt>",2],["klass","Rails::Generator::Spec","classes/Rails/Generator/Spec.html#M000347","()","Look up the generator class.  Require its class file, find the class in ObjectSpace, tag it with this",2],["l","ActionController::Translation","classes/ActionController/Translation.html#M002071","(*args)","Alias for #localize",2],["l","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M002344","(*args)","Alias for #localize",2],["label","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002212","(object_name, method, text = nil, options = {})","Returns a label tag tailored for labelling an input field for a specified attribute (identified by +method+)",2],["label_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002228","(name, text = nil, options = {})","Creates a label field ==== Options   * Creates standard HTML attributes for the tag. ==== Examples label_tag",2],["last","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000468","(*args)","A convenience wrapper for <tt>find(:last, *args)</tt>. You can pass in all the same arguments to this",2],["last","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001192","(*args)","",2],["last_modified","ActionController::Response","classes/ActionController/Response.html#M001914","()","",2],["last_modified=","ActionController::Response","classes/ActionController/Response.html#M001916","(utc_time)","",2],["last_modified?","ActionController::Response","classes/ActionController/Response.html#M001915","()","",2],["layout","ActionController::Layout::ClassMethods","classes/ActionController/Layout/ClassMethods.html#M001749","(template_name, conditions = {}, auto = false)","If a layout is specified, all rendered actions will have their result rendered when the layout <tt>yield</tt>s.",2],["length","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001317","()","Alias for #size",2],["length","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001488","()","Alias for #size",2],["length","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003136","()","Alias for #size",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000782","(where_sql, quoted_table_name, quoted_primary_key)","",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000988","(where_sql, quoted_table_name, quoted_primary_key)","",2],["link_to","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002361","(*args, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+. See the valid options",2],["link_to_function","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M002255","(name, *args, &block)","Returns a link of the given +name+ that will trigger a JavaScript +function+ using the onclick handler",2],["link_to_if","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002370","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ if +condition+ is",2],["link_to_remote","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002272","(name, options = {}, html_options = nil)","Returns a link to a remote action defined by <tt>options[:url]</tt> (using the url_for format) that's",2],["link_to_unless","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002369","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless +condition+",2],["link_to_unless_current","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002368","(name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless the current",2],["links","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003451","()","Store flattened links. ",2],["links","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000244","(base_url, contents)","",2],["literal","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002291","(code)","Returns an object whose <tt>to_json</tt> evaluates to +code+. Use this to pass a literal JavaScript expression",2],["ljust","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003130","(integer, padstr=' ')","Works just like <tt>String#ljust</tt>, only integer specifies characters instead of bytes. Example: \"¾",2],["load","ActiveResource::Base","classes/ActiveResource/Base.html#M001423","(attributes)","A method to manually load attributes from a \\hash. Recursively loads collections of resources.  This",2],["load","ActiveSupport::Multibyte::UnicodeDatabase","classes/ActiveSupport/Multibyte/UnicodeDatabase.html#M003122","()","Loads the Unicode database and returns all the internal objects of UnicodeDatabase. ",2],["load!","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M002006","()","",2],["load!","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002383","()","Alias for #new_request!",2],["load!","ActionView::Template","classes/ActionView/Template.html#M002427","()","",2],["load!","ActionView::Template::EagerPath","classes/ActionView/Template/EagerPath.html#M002407","()","",2],["load!","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002403","()","",2],["load!","Repositories","classes/Repositories.html#M000176","()","",2],["load_all_templates_from_dir","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002388","(dir)","load all templates from the directory of the requested template ",2],["load_application_classes","Rails::Initializer","classes/Rails/Initializer.html#M000058","()","Eager load application classes ",2],["load_application_initializers","Rails::Initializer","classes/Rails/Initializer.html#M000075","()","",2],["load_attributes_from_response","ActiveResource::Base","classes/ActiveResource/Base.html#M001431","(response)","",2],["load_environment","Rails::Initializer","classes/Rails/Initializer.html#M000055","()","Loads the environment specified by Configuration#environment_path, which is typically one of development,",2],["load_file","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003413","(filename)","Loads a single translations file by delegating to #load_rb or #load_yml depending on the file extension",2],["load_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001182","()","",2],["load_for_read!","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M002003","()","",2],["load_for_write!","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M002005","()","",2],["load_found","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001200","()","",2],["load_gems","Rails::Initializer","classes/Rails/Initializer.html#M000050","()","",2],["load_index","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003669","()","Loads in the index of timezones if it hasn't already been loaded. ",2],["load_instances?","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001184","()","",2],["load_migration","ActiveRecord::MigrationProxy","classes/ActiveRecord/MigrationProxy.html#M001171","()","",2],["load_observers","Rails::Initializer","classes/Rails/Initializer.html#M000056","()","",2],["load_once_paths","Rails::Configuration","classes/Rails/Configuration.html#M000085","()","Deprecated, use autoload_once_paths. ",2],["load_once_paths=","Rails::Configuration","classes/Rails/Configuration.html#M000086","(paths)","Deprecated, use autoload_once_paths=. ",2],["load_path","I18n::Config","classes/I18n/Config.html#M003520","()","Allow clients to register paths providing translation data sources. The backend defines acceptable sources.",2],["load_path=","I18n::Config","classes/I18n/Config.html#M003521","(load_path)","Sets the load path instance. Custom implementations are expected to behave like a Ruby Array. ",2],["load_paths","Rails::Configuration","classes/Rails/Configuration.html#M000082","()","Deprecated, use autoload_paths. ",2],["load_paths=","Rails::Configuration","classes/Rails/Configuration.html#M000083","(paths)","Deprecated, use autoload_paths=. ",2],["load_plugins","Rails::Initializer","classes/Rails/Initializer.html#M000053","()","Loads all plugins in <tt>config.plugin_paths</tt>.  <tt>plugin_paths</tt> defaults to <tt>vendor/plugins</tt>",2],["load_po","I18n::Backend::Gettext","classes/I18n/Backend/Gettext.html#M003445","(filename)","",2],["load_rb","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003414","(filename)","Loads a plain Ruby translations file. eval'ing the file must yield a Hash containing translation data",2],["load_session","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002014","(env)","",2],["load_session","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002029","(env)","",2],["load_session_id!","ActionController::Session::AbstractStore::OptionsHash","classes/ActionController/Session/AbstractStore/OptionsHash.html#M001986","()","",2],["load_translations","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003391","(*filenames)","Accepts a list of paths to translation files. Loads translations from plain Ruby (*.rb) or YAML files",2],["load_view_paths","Rails::Initializer","classes/Rails/Initializer.html#M000057","()","",2],["load_yml","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003415","(filename)","Loads a YAML translations file. The data must have locales as toplevel keys. ",2],["loaded?","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M002001","()","",2],["loaded?","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001251","()","Has the session been loaded yet? ",2],["loaded?","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001269","()","",2],["local","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003311","(*args)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from given values.",2],["local_after_start?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003687","(local)","true if the given local DateTime is after the start of the period  (inclusive); otherwise false. ",2],["local_before_end?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003688","(local)","true if the given local DateTime is before the end of the period  (exclusive); otherwise false. ",2],["local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002561","()","",2],["local_constant_names","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002833","()","Returns the names of the constants defined locally rather than the constants themselves. See <tt>local_constants</tt>.",2],["local_constants","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002831","()","Returns the constants that have been defined locally by this object and not in an ancestor. This method",2],["local_end","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003681","()","The end time of the period in local time as a DateTime. May be nil if  unbounded. ",2],["local_offset","ActiveSupport::CoreExtensions::DateTime::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/DateTime/Calculations/ClassMethods.html#M002688","()","DateTimes aren't aware of DST rules, so use a consistent non-DST offset when creating a DateTime with",2],["local_request?","ActionController::Rescue","classes/ActionController/Rescue.html#M001882","()","True if the request came from localhost, 127.0.0.1. Override this method if you wish to redefine the",2],["local_start","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003680","()","The start time of the period in local time as a DateTime. May be nil if  unbounded. ",2],["local_time","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Calculations/ClassMethods.html#M002964","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:local</tt>. ",2],["local_to_utc","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003317","(time, dst=true)","Adjust the given time to the simultaneous time in UTC. Returns a Time.utc() instance. ",2],["local_to_utc","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003658","(local, dst = nil)","Converts a time in the local timezone to UTC. local can either be a DateTime, Time or timestamp (Time.to_i).",2],["locale","I18n::Config","classes/I18n/Config.html#M003507","()","The only configuration value that is not global and scoped to thread is :locale. It defaults to the default_locale.",2],["locale=","I18n::Config","classes/I18n/Config.html#M003508","(locale)","Sets the current locale pseudo-globally, i.e. in the Thread.current hash. ",2],["localize","ActionController::Translation","classes/ActionController/Translation.html#M002070","(*args)","",2],["localize","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M002343","(*args)","Delegates to I18n.localize with no additional functionality. ",2],["localize","I18n","classes/I18n.html#M003579","(object, options = {})","Localizes certain objects, such as dates and numbers to local formatting. ",2],["localize","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003397","(locale, object, format = :default, options = {})","Acts the same as +strftime+, but uses a localized version of the format string. Takes a key from the",2],["localize","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003422","(locale, object, format = :default, options = {})","",2],["localize","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003423","(locale, object, format = :default, options = {})","",2],["localtime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003215","()","Returns a <tt>Time.local()</tt> instance of the simultaneous time in your system's <tt>ENV['TZ']</tt>",2],["location","ActionController::Response","classes/ActionController/Response.html#M001908","()","",2],["location=","ActionController::Response","classes/ActionController/Response.html#M001909","(url)","",2],["lock!","ActiveRecord::Locking::Pessimistic","classes/ActiveRecord/Locking/Pessimistic.html#M001134","(lock = true)","Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking",2],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001127","()","The version column used for optimistic locking. Defaults to +lock_version+. ",2],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001125","()","Is optimistic locking enabled for this table? Returns true if the +lock_optimistically+ flag is set to",2],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000907","(sql, name)","",2],["log","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002592","(operation, key, options)","",2],["log_error","ActionController::Rescue","classes/ActionController/Rescue.html#M001874","(exception)","Overwrite to implement custom logging of errors. By default logs as fatal. ",2],["log_failsafe_exception","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001653","(exception)","",2],["log_info","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000906","(sql, name, ms)","",2],["log_processing","ActionController::Base","classes/ActionController/Base.html#M001597","()","",2],["log_processing_for_parameters","ActionController::Base","classes/ActionController/Base.html#M001599","()","",2],["log_processing_for_request_id","ActionController::Base","classes/ActionController/Base.html#M001598","()","",2],["log_protected_attribute_removal","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000714","(*attributes)","",2],["logger","ActionController::ParamsParser","classes/ActionController/ParamsParser.html#M001801","()","",2],["logger","ActiveResource::Base","classes/ActiveResource/Base.html#M001329","","The logger for diagnosing and tracing Active Resource calls. ",2],["logger","Rails","classes/Rails.html#M000030","()","",2],["logger","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000009","()","",2],["lookup","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003349","(name)","",2],["lookup","I18n::Backend::ActiveRecord::Implementation","classes/I18n/Backend/ActiveRecord/Implementation.html#M003389","(locale, key, scope = [], options = {})","",2],["lookup","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003405","(locale, key, scope = [], options = {})","The method which actually looks up for the translation in the store. ",2],["lookup","I18n::Backend::Cascade","classes/I18n/Backend/Cascade.html#M003408","(locale, key, scope = [], options = {})","",2],["lookup","I18n::Backend::KeyValue::Implementation","classes/I18n/Backend/KeyValue/Implementation.html#M003476","(locale, key, scope = [], options = {})","",2],["lookup","I18n::Backend::Memoize","classes/I18n/Backend/Memoize.html#M003487","(locale, key, scope = nil, options = {})","",2],["lookup","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003501","(locale, key, scope = [], options = {})","Looks up a translation from the translations hash. Returns nil if eiher key is nil, or locale, scope",2],["lookup","Mime::Type","classes/Mime/Type.html#M001781","(string)","",2],["lookup","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000289","(generator_name)","Lookup knows how to find generators' Specs from a list of Sources. Searches the sources, in order, for",2],["lookup_by_extension","Mime::Type","classes/Mime/Type.html#M001782","(extension)","",2],["lookup_class","Rails::Generator::Spec","classes/Rails/Generator/Spec.html#M000350","()","Search for the first Class descending from Rails::Generator::Base whose name matches the requested class",2],["lookup_currency","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003441","(locale, currency, count)","",2],["lookup_format","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003437","(locale, type, format)","",2],["lookup_format_data","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003440","(locale, type)","",2],["lookup_missing_generator","Object","classes/Object.html#M000275","(class_id)","Lookup missing generators using const_missing.  This allows any generator to reference another without",2],["lookup_store","ActiveSupport::Cache","classes/ActiveSupport/Cache.html#M002563","(*store_option)","Creates a new CacheStore object according to the given options. If no arguments are passed to this method,",2],["loop_on_multiple_args","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002311","(method, ids)","",2],["ls","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000239","()","",2],["lstrip","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003133","()","Strips entire range of Unicode whitespace from the left of the string. ",2],["macro","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001228","()","Returns the macro type. For example, <tt>composed_of :balance, :class_name => 'Money'</tt> will return",2],["mail_to","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002371","(email_address, name = nil, html_options = {})","Creates a mailto link tag to the specified +email_address+, which is also used as the name of the link",2],["mailer_name","ActionMailer::Base","classes/ActionMailer/Base.html#M002460","(value = nil)","Override the mailer name, which defaults to an inflected version of the mailer's class name. If you want",2],["mailer_name","ActionMailer::Base","classes/ActionMailer/Base.html#M002462","()","",2],["mailer_name=","ActionMailer::Base","classes/ActionMailer/Base.html#M002461","(value)","",2],["make_cache_key","MemCache","classes/MemCache.html#M003609","(key)","Create a key for the cache, incorporating the namespace qualifier if requested. ",2],["make_test_case_available_to_view!","ActionView::TestCase","classes/ActionView/TestCase.html#M002454","()","",2],["mandatory_options","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000332","()","Convenient access to class mandatory options. ",2],["mandatory_options","Rails::Generator::Options::ClassMethods","classes/Rails/Generator/Options/ClassMethods.html#M000328","(options = nil)","",2],["manifest","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000195","()","Generators must provide a manifest.  Use the +record+ method to create a new manifest and record your",2],["many?","Enumerable","classes/Enumerable.html#M002723","(&block)","Returns true if the collection has more than 1 element. Functionally equivalent to collection.size >",2],["map","I18n::Locale::Fallbacks","classes/I18n/Locale/Fallbacks.html#M003552","(mappings)","",2],["map_associations","ActionController::Resources","classes/ActionController/Resources.html#M001939","(resource, options)","",2],["map_collection_actions","ActionController::Resources","classes/ActionController/Resources.html#M001941","(map, resource)","",2],["map_default_collection_actions","ActionController::Resources","classes/ActionController/Resources.html#M001942","(map, resource)","",2],["map_default_singleton_actions","ActionController::Resources","classes/ActionController/Resources.html#M001943","(map, resource)","",2],["map_has_many_associations","ActionController::Resources","classes/ActionController/Resources.html#M001940","(resource, associations, options)","",2],["map_member_actions","ActionController::Resources","classes/ActionController/Resources.html#M001945","(map, resource)","",2],["map_new_actions","ActionController::Resources","classes/ActionController/Resources.html#M001944","(map, resource)","",2],["map_resource","ActionController::Resources","classes/ActionController/Resources.html#M001937","(entities, options = {}, &block)","",2],["map_resource_routes","ActionController::Resources","classes/ActionController/Resources.html#M001946","(map, resource, action, route_path, route_name = nil, method = nil, resource_options = {} )","",2],["map_singleton_resource","ActionController::Resources","classes/ActionController/Resources.html#M001938","(entities, options = {}, &block)","",2],["mark_dead","MemCache::Server","classes/MemCache/Server.html#M003632","(error)","Mark the server as dead and close its socket. ",2],["mark_features!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000021","()","Make a note of $\" so we can safely reload this instance. ",2],["mark_for_destruction","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000397","()","Marks this record to be destroyed as part of the parents save transaction. This does _not_ actually destroy",2],["markdown","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002354","(text)","Returns the text with all the Markdown codes turned into HTML tags. <i>This method requires BlueCloth[http://www.deveiate.org/projects/BlueCloth]",2],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000398","()","Returns whether or not this record will be destroyed as part of the parents save transaction. Only useful",2],["marshal","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002039","(session)","Marshal a session hash into safe cookie data. Include an integrity hash. ",2],["marshal","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001243","(data)","",2],["marshal","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001262","(data)","",2],["marshal_data!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001252","()","",2],["marshal_dump","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003288","()","",2],["marshal_load","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003289","(variables)","",2],["match","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001111","(method)","",2],["match","ActiveRecord::DynamicScopeMatch","classes/ActiveRecord/DynamicScopeMatch.html#M001116","(method)","",2],["match","HTML::Selector","classes/HTML/Selector.html#M002118","(element, first_only = false)","Matches an element against the selector. For a simple selector this method returns an array with the",2],["match","I18n::Locale::Tag::Rfc4646::Parser","classes/I18n/Locale/Tag/Rfc4646/Parser.html#M003569","(tag)","",2],["match_attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000375","(method_name)","Returns MatchData if method_name is an attribute method. ",2],["match_extraction","ActionController::Routing::OptionalFormatSegment","classes/ActionController/Routing/OptionalFormatSegment.html#M001982","(next_capture)","the value should not include the period (.) ",2],["mattr_accessor","Module","classes/Module.html#M002824","(*syms)","",2],["mattr_reader","Module","classes/Module.html#M002822","(*syms)","",2],["mattr_writer","Module","classes/Module.html#M002823","(*syms)","",2],["maximum","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000548","(column_name, options = {})","Calculates the maximum value on a given column. The value is returned with the same data type of the",2],["mb_chars","ActiveSupport::CoreExtensions::String::Multibyte","classes/ActiveSupport/CoreExtensions/String/Multibyte.html#M002933","()","== Multibyte proxy +mb_chars+ is a multibyte safe proxy for string methods. In Ruby 1.8 and older it",2],["mb_chars","ActiveSupport::CoreExtensions::String::Multibyte","classes/ActiveSupport/CoreExtensions/String/Multibyte.html#M002936","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003207","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#M003240","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M003269","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M003267","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M003268","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M003271","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M003274","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003242","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003250","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003248","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003247","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003241","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M003249","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M003258","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M003257","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M003263","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::ProcessTime","classes/ActiveSupport/Testing/Performance/Metrics/ProcessTime.html#M003235","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Time","classes/ActiveSupport/Testing/Performance/Metrics/Time.html#M003229","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html#M003236","()","",2],["measure_mode","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003206","()","",2],["media_type","ActionController::Request","classes/ActionController/Request.html#M001837","()","",2],["megabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002843","()","Alias for #megabytes",2],["megabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002842","()","",2],["memoize","ActiveSupport::Memoizable","classes/ActiveSupport/Memoizable.html#M003098","(*symbols)","",2],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M003091","()","",2],["memoized_ivar_for","ActiveSupport::Memoizable","classes/ActiveSupport/Memoizable.html#M003086","(symbol)","",2],["memoized_lookup","I18n::Backend::Memoize","classes/I18n/Backend/Memoize.html#M003489","()","",2],["merge","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002753","(hash)","Merges the instantized and the specified hashes together, giving precedence to the values from the second",2],["merge_conditions","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000533","(*conditions)","Merges conditions so that the result is a valid +condition+ ",2],["merge_includes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000550","(first, second)","Merges includes so that the result is a valid +include+ ",2],["merge_joins","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000551","(*joins)","",2],["message","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001292","()","",2],["metaclass","Object","classes/Object.html#M002884","()","Get object's meta (ghost, eigenclass, singleton) class. Deprecated in favor of Object#singleton_class.",2],["method","ActionController::Request","classes/ActionController/Request.html#M001826","()","Returns the HTTP request \\method used for action processing as a lowercase symbol, such as <tt>:post</tt>.",2],["method_added","Kernel","classes/Kernel.html#M003298","(name)","Detect method additions to Kernel and remove them in the BlankSlate class. ",2],["method_added","Object","classes/Object.html#M003300","(name)","Detect method additions to Object and remove them in the BlankSlate class. ",2],["method_javascript_function","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002376","(method, url = '', href = nil)","",2],["method_missing","ActionController::Integration::Runner","classes/ActionController/Integration/Runner.html#M001754","(sym, *args, &block)","Delegate unhandled messages to the current session instance. ",2],["method_missing","ActionController::Reloader::BodyWrapper","classes/ActionController/Reloader/BodyWrapper.html#M001814","(*args, &block)","",2],["method_missing","ActionController::StringCoercion::UglyBody","classes/ActionController/StringCoercion/UglyBody.html#M002052","(*args, &block)","",2],["method_missing","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002098","(selector, *args, &block)","",2],["method_missing","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#M002158","(method, *arguments, &block)","Delegate to xml builder, first wrapping the element in a xhtml namespaced div element if the method and",2],["method_missing","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002318","(method, *arguments)","",2],["method_missing","ActionView::TestCase","classes/ActionView/TestCase.html#M002459","(selector, *args)","",2],["method_missing","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000567","(method_id, *arguments, &block)","Enables dynamic finders like <tt>find_by_user_name(user_name)</tt> and <tt>find_by_user_name_and_password(user_name,",2],["method_missing","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000845","(symbol, *args)","Handles non supported datatypes - e.g. XML ",2],["method_missing","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001168","(method, *arguments, &block)","",2],["method_missing","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001199","(method, *args, &block)","",2],["method_missing","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003110","(method, *args, &block)","Forward all undefined methods to the wrapped string. ",2],["method_missing","ActiveSupport::StringInquirer","classes/ActiveSupport/StringInquirer.html#M003168","(method_name, *arguments)","",2],["method_missing","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003291","(sym, *args, &block)","Send the missing method to +time+ instance, and wrap result in a new TimeWithZone with the existing +time_zone+.",2],["method_missing","Builder::CSS","classes/Builder/CSS.html#M003336","(sym, *args, &block)","",2],["method_missing","Builder::XmlBase","classes/Builder/XmlBase.html#M003354","(sym, *args, &block)","Create XML markup based on the name of the method.  This method is never invoked directly, but is called",2],["method_missing","Mime::Type","classes/Mime/Type.html#M001796","(method, *args)","",2],["method_missing","Rails::Generator::Manifest","classes/Rails/Generator/Manifest.html#M000321","(action, *args, &block)","Record an action. ",2],["method_option_to_s","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002323","(method)","",2],["method_segment","ActionView::Template","classes/ActionView/Template.html#M002425","()","",2],["microseconds","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000820","(time)","'0.123456' -> 123456 '1.123456' -> 123456 ",2],["middleware","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002542","()","",2],["middleware","Rails::Configuration","classes/Rails/Configuration.html#M000104","()","",2],["midnight","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002641","()","Alias for #beginning_of_day",2],["midnight","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002709","()","Alias for #beginning_of_day",2],["midnight","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002998","()","Alias for #beginning_of_day",2],["migrate","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001155","(direction)","Execute this migration in the named direction ",2],["migration","ActiveRecord::MigrationProxy","classes/ActiveRecord/MigrationProxy.html#M001170","()","",2],["migration_directory","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000250","(relative_path)","",2],["migration_exists?","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000252","(file_name)","",2],["migration_template","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000273","(relative_source, relative_destination, template_options = {})","When creating a migration, it knows to find the first available file in db/migrate and use the migration.rb",2],["migration_template","Rails::Generator::Commands::Destroy","classes/Rails/Generator/Commands/Destroy.html#M000297","(relative_source, relative_destination, template_options = {})","When deleting a migration, it knows to delete every file named \"[0-9]*_#{file_name}\". ",2],["migration_template","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000312","(relative_source, relative_destination, options = {})","",2],["migrations_path","ActiveRecord::Schema","classes/ActiveRecord/Schema.html#M001218","()","",2],["mime_type","ActionView::Template","classes/ActionView/Template.html#M002417","()","",2],["mime_type","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001458","()","",2],["mime_type","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001462","()","",2],["minimum","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000544","(column_name, options = {})","Calculates the minimum value on a given column.  The value is returned with the same data type of the",2],["minus_with_coercion","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003021","(other)","Time#- can also be used to determine the number of seconds between two Time instances. We're layering",2],["minute","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002856","()","Alias for #minutes",2],["minutes","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002855","()","",2],["missing_key","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003471","(key)","",2],["model_class","Fixtures","classes/Fixtures.html#M001144","()","",2],["model_name","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002836","()","Returns an ActiveSupport::ModelName object for module. It can be used to retrieve all kinds of naming-related",2],["model_name_from_record_or_class","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M001822","(record_or_class)","",2],["monday","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002661","()","Alias for #beginning_of_week",2],["monday","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002992","()","Alias for #beginning_of_week",2],["month","ActiveSupport::CoreExtensions::Float::Time","classes/ActiveSupport/CoreExtensions/Float/Time.html#M002732","()","Alias for #months",2],["month","ActiveSupport::CoreExtensions::Integer::Time","classes/ActiveSupport/CoreExtensions/Integer/Time.html#M002778","()","Alias for #months",2],["months","ActiveSupport::CoreExtensions::Float::Time","classes/ActiveSupport/CoreExtensions/Float/Time.html#M002730","()","",2],["months","ActiveSupport::CoreExtensions::Integer::Time","classes/ActiveSupport/CoreExtensions/Integer/Time.html#M002777","()","",2],["months_ago","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002649","(months)","Returns a new Date/DateTime representing the time a number of specified months ago ",2],["months_ago","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002980","(months)","Returns a new Time representing the time a number of specified months ago ",2],["months_since","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002650","(months)","Returns a new Date/DateTime representing the time a number of specified months in the future ",2],["months_since","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002981","(months)","Returns a new Time representing the time a number of specified months in the future ",2],["months_without_deprecation","ActiveSupport::CoreExtensions::Float::Time","classes/ActiveSupport/CoreExtensions/Float/Time.html#M002731","()","",2],["msg2str","Logger","classes/Logger.html#M002812","(msg)","",2],["msg2str","Logger::Formatter","classes/Logger/Formatter.html#M002805","(msg)","",2],["mtime","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate.html#M002393","()","",2],["multipart?","ActionView::Template","classes/ActionView/Template.html#M002415","()","",2],["multipart_body","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001745","(params, boundary)","",2],["multipart_requestify","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001744","(params, first=true)","",2],["multiple_of?","ActiveSupport::CoreExtensions::Integer::EvenOdd","classes/ActiveSupport/CoreExtensions/Integer/EvenOdd.html#M002773","(number)","",2],["mute","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002572","()","",2],["n_","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003540","(msgid, msgid_plural, n = 1)","Alias for #ngettext",2],["name","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001227","()","Returns the name of the macro.  For example, <tt>composed_of :balance, :class_name => 'Money'</tt> will",2],["name","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003205","()","",2],["name","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003650","()","An alias for identifier. ",2],["name_with_prefix","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001742","(prefix, name)","",2],["named_host?","ActionController::Request","classes/ActionController/Request.html#M001905","(host)","",2],["named_scope","ActiveRecord::NamedScope::ClassMethods","classes/ActiveRecord/NamedScope/ClassMethods.html#M001188","(name, options = {}, &block)","Adds a class method for retrieving and querying objects. A scope represents a narrowing of a database",2],["names","Rails::Generator::Source","classes/Rails/Generator/Source.html#M000300","()","Return a convenient sorted list of all generator names. ",2],["namespace","ActionController::Routing::RouteSet::Mapper","classes/ActionController/Routing/RouteSet/Mapper.html#M001971","(name, options = {}, &block)","Enables the use of resources in a module by setting the name_prefix, path_prefix, and namespace for the",2],["namespace_lookup?","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003425","(result, options)","",2],["native","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000879","()","",2],["native","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000864","()","",2],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000801","()","Returns a Hash of mappings from the abstract data types to the native database types.  See TableDefinition#column",2],["nested_records_changed_for_autosave?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000401","()","go through nested autosave associations that are loaded in memory (without loading any new ones), and",2],["new","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001517","(*args)","",2],["new","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M001546","(controller, options = {}, infer_extension = true)","When true, infer_extension will look up the cache path extension from the request's path & format. This",2],["new","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001640","(output = $stdout, request = nil, response = nil)","DEPRECATE: Remove arguments, since they are only used by CGI ",2],["new","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001642","(app)","",2],["new","ActionController::Http::Headers","classes/ActionController/Http/Headers.html#M001666","(*args)","",2],["new","ActionController::Integration::Runner","classes/ActionController/Integration/Runner.html#M001746","(*args)","",2],["new","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001692","(app = nil)","Create and initialize a new Session instance. ",2],["new","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001771","(*args, &block)","",2],["new","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001764","(klass, *args, &block)","",2],["new","ActionController::MiddlewareStack::Middleware","classes/ActionController/MiddlewareStack/Middleware.html#M001763","(klass, *args, &block)","",2],["new","ActionController::ParamsParser","classes/ActionController/ParamsParser.html#M001797","(app)","",2],["new","ActionController::Reloader::BodyWrapper","classes/ActionController/Reloader/BodyWrapper.html#M001812","(body, lock)","",2],["new","ActionController::Response","classes/ActionController/Response.html#M001907","()","",2],["new","ActionController::Routing::Optimisation::Optimiser","classes/ActionController/Routing/Optimisation/Optimiser.html#M001950","(route, kind)","",2],["new","ActionController::Routing::OptionalFormatSegment","classes/ActionController/Routing/OptionalFormatSegment.html#M001977","(key = nil, options = {})","",2],["new","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002009","(app, options = {})","",2],["new","ActionController::Session::AbstractStore::OptionsHash","classes/ActionController/Session/AbstractStore/OptionsHash.html#M001983","(by, env, default_options)","",2],["new","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001987","(by, env)","",2],["new","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002023","(app, options = {})","",2],["new","ActionController::Session::MemCacheStore","classes/ActionController/Session/MemCacheStore.html#M002022","(app, options = {})","",2],["new","ActionController::StringCoercion","classes/ActionController/StringCoercion.html#M002053","(app)","",2],["new","ActionController::StringCoercion::UglyBody","classes/ActionController/StringCoercion/UglyBody.html#M002050","(body)","",2],["new","ActionController::TestCase","classes/ActionController/TestCase.html#M002057","(*args)","",2],["new","ActionController::TestUploadedFile","classes/ActionController/TestUploadedFile.html#M002076","(path, content_type = Mime::TEXT, binary = false)","",2],["new","ActionView::Base","classes/ActionView/Base.html#M002442","(*args)","",2],["new","ActionView::Base::ProxyModule","classes/ActionView/Base/ProxyModule.html#M002133","(receiver)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#M002157","(xml)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#M002161","(xml, view, feed_options = {})","",2],["new","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate.html#M002392","(*args)","",2],["new","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002381","(path)","",2],["new","ActionView::Template","classes/ActionView/Template.html#M002412","(template_path, load_path = nil)","",2],["new","ActionView::Template::EagerPath","classes/ActionView/Template/EagerPath.html#M002406","(path)","",2],["new","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002397","(path)","",2],["new","ActionView::TemplateHandler","classes/ActionView/TemplateHandler.html#M002436","(view = nil)","",2],["new","ActionView::TestCase::TestController","classes/ActionView/TestCase/TestController.html#M002445","()","",2],["new","ActiveRecord::AttributeAssignmentError","classes/ActiveRecord/AttributeAssignmentError.html#M000430","(message, exception, attribute)","",2],["new","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000627","(attributes = nil)","New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes",2],["new","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000795","(name, default, sql_type = nil, null = true)","Instantiates a new column in the table. +name+ is the column's name, such as <tt>supplier_id</tt> in",2],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000669","(pools = {})","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#M000687","(app)","",2],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000631","(spec)","Creates a new ConnectionPool object. +spec+ is a ConnectionSpecification object which describes database",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000911","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000943","(connection, logger, connection_parameters, config)","Initializes and connects a PostgreSQL adapter. ",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001042","(connection, logger, config)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#M001039","(version_string)","",2],["new","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000865","(table_name, base)","",2],["new","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000841","(base)","",2],["new","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001112","(method)","",2],["new","ActiveRecord::DynamicScopeMatch","classes/ActiveRecord/DynamicScopeMatch.html#M001117","(method)","",2],["new","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001291","(base, attribute, type = nil, options = {})","",2],["new","ActiveRecord::MultiparameterAssignmentErrors","classes/ActiveRecord/MultiparameterAssignmentErrors.html#M000432","(errors)","",2],["new","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001189","(proxy_scope, options, &block)","",2],["new","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001207","()","Start observing the declared classes and their subclasses. ",2],["new","ActiveRecord::QueryCache","classes/ActiveRecord/QueryCache.html#M001215","(app)","",2],["new","ActiveRecord::RecordInvalid","classes/ActiveRecord/RecordInvalid.html#M001290","(record)","",2],["new","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001226","(macro, name, options, active_record)","",2],["new","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001266","(attributes)","Look for normal and marshaled data, self.find_by_session_id's way of telling us to postpone unmarshaling",2],["new","ActiveResource::Base","classes/ActiveResource/Base.html#M001386","(attributes = {})","Constructor method for \\new resources; the optional +attributes+ parameter takes a \\hash of attributes",2],["new","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001384","(site, format = ActiveResource::Formats[:xml])","The +site+ parameter is required and will set the +site+ attribute to the URI for the remote resource",2],["new","ActiveResource::Request","classes/ActiveResource/Request.html#M001484","(method, path, body = nil, headers = {})","",2],["new","ActiveResource::Response","classes/ActiveResource/Response.html#M001493","(body, message = 200, headers = {})","",2],["new","ActiveResource::SSLError","classes/ActiveResource/SSLError.html#M001455","(message)","",2],["new","ActiveResource::SSLError","classes/ActiveResource/SSLError.html#M001376","(message)","",2],["new","ActiveResource::TimeoutError","classes/ActiveResource/TimeoutError.html#M001453","(message)","",2],["new","ActiveResource::TimeoutError","classes/ActiveResource/TimeoutError.html#M001371","(message)","",2],["new","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002491","()","",2],["new","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002501","(log, level = DEBUG)","",2],["new","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002511","(cache_path)","",2],["new","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002521","(*addresses)","Creates a new MemCacheStore object, with the given memcached server addresses. Each address is either",2],["new","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002529","()","",2],["new","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002545","()","",2],["new","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002573","(kind, method, options = {})","",2],["new","ActiveSupport::Deprecation::DeprecatedObjectProxy","classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html#M003025","(object, message)","",2],["new","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003045","()","",2],["new","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003088","(secret, cipher = 'aes-256-cbc')","",2],["new","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M003101","(secret, digest = 'SHA1')","",2],["new","ActiveSupport::ModelName","classes/ActiveSupport/ModelName.html#M002835","(name)","",2],["new","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003108","(string)","Creates a new Chars instance by wrapping _string_. ",2],["new","ActiveSupport::Multibyte::UnicodeDatabase","classes/ActiveSupport/Multibyte/UnicodeDatabase.html#M003119","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003204","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#M003237","(*args)","",2],["new","ActiveSupport::Testing::Performance::Performer","classes/ActiveSupport/Testing/Performance/Performer.html#M003187","(harness, metric)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M003195","(*args)","",2],["new","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003200","(utc_time, time_zone, local_time = nil, period = nil)","",2],["new","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003305","(name, utc_offset = nil, tzinfo = nil)","Create a new TimeZone object with the given name and offset. The offset is the number of seconds that",2],["new","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003321","(name)","Return a TimeZone instance with the given name, or +nil+ if no such TimeZone instance exists. (This exists",2],["new","Builder::CSS","classes/Builder/CSS.html#M003325","(indent=2)","Create a CSS builder. out::     Object receiving the markup.1  +out+ must respond to <tt><<</tt>. indent::",2],["new","Builder::XmlBase","classes/Builder/XmlBase.html#M003352","(indent=0, initial=0)","Create an XML markup builder. out::     Object receiving the markup.  +out+ must respond to <tt><<</tt>.",2],["new","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003367","(options={})","Create an XML markup builder.  Parameters are specified by an option hash. :target=><em>target_object</em>::",2],["new","CGI::Cookie","classes/CGI/Cookie.html#M001620","(name = '', *value)","Creates a new CGI::Cookie object. The contents of the cookie can be specified as a +name+ and one or",2],["new","Commands::Discover","classes/Commands/Discover.html#M000217","(base_command)","",2],["new","Commands::Info","classes/Commands/Info.html#M000233","(base_command)","",2],["new","Commands::Install","classes/Commands/Install.html#M000223","(base_command)","",2],["new","Commands::List","classes/Commands/List.html#M000192","(base_command)","",2],["new","Commands::Plugin","classes/Commands/Plugin.html#M000186","()","",2],["new","Commands::Remove","classes/Commands/Remove.html#M000230","(base_command)","",2],["new","Commands::Source","classes/Commands/Source.html#M000206","(base_command)","",2],["new","Commands::Sources","classes/Commands/Sources.html#M000203","(base_command)","",2],["new","Commands::Unsource","classes/Commands/Unsource.html#M000213","(base_command)","",2],["new","Commands::Update","classes/Commands/Update.html#M000227","(base_command)","",2],["new","Continuum::Entry","classes/Continuum/Entry.html#M003634","(val, srv)","",2],["new","Fixtures","classes/Fixtures.html#M001141","(connection, table_name, class_name, fixture_path, file_filter = DEFAULT_FILTER_RE)","",2],["new","HTML::Selector","classes/HTML/Selector.html#M002117","(selector, *values)","Creates a new selector from a CSS 2 selector expression. The first argument is the selector expression.",2],["new","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002743","(constructor = {})","",2],["new","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003417","(*backends)","",2],["new","I18n::Backend::KeyValue::Implementation","classes/I18n/Backend/KeyValue/Implementation.html#M003463","(store, subtrees=true)","",2],["new","I18n::Backend::Transliterator::HashTransliterator","classes/I18n/Backend/Transliterator/HashTransliterator.html#M003519","(rule = nil)","",2],["new","I18n::Backend::Transliterator::ProcTransliterator","classes/I18n/Backend/Transliterator/ProcTransliterator.html#M003505","(rule)","",2],["new","I18n::InvalidLocale","classes/I18n/InvalidLocale.html#M003527","(locale)","",2],["new","I18n::InvalidPluralizationData","classes/I18n/InvalidPluralizationData.html#M003529","(entry, count)","",2],["new","I18n::Locale::Fallbacks","classes/I18n/Locale/Fallbacks.html#M003549","(*mappings)","",2],["new","I18n::Locale::Tag::Simple","classes/I18n/Locale/Tag/Simple.html#M003558","(*tag)","",2],["new","I18n::MissingInterpolationArgument","classes/I18n/MissingInterpolationArgument.html#M003530","(values, string)","",2],["new","I18n::MissingTranslationData","classes/I18n/MissingTranslationData.html#M003528","(locale, key, opts = nil)","",2],["new","I18n::ReservedInterpolationKey","classes/I18n/ReservedInterpolationKey.html#M003531","(key, string)","",2],["new","I18n::UnknownFileType","classes/I18n/UnknownFileType.html#M003532","(type, filename)","",2],["new","KeyError","classes/KeyError.html#M003526","(message = nil)","",2],["new","KeyError","classes/KeyError.html#M003525","(message = nil)","",2],["new","Logger::Formatter","classes/Logger/Formatter.html#M002802","()","",2],["new","MemCache","classes/MemCache.html#M003582","(*args)","Accepts a list of +servers+ and a list of +opts+.  +servers+ may be omitted.  See +servers=+ for acceptable",2],["new","MemCache::Server","classes/MemCache/Server.html#M003626","(memcache, host, port = DEFAULT_PORT, weight = DEFAULT_WEIGHT)","Create a new MemCache::Server object for the memcached instance listening on the given host and port,",2],["new","Mime::Type","classes/Mime/Type.html#M001786","(string, symbol = nil, synonyms = [])","",2],["new","Plugin","classes/Plugin.html#M000150","(uri, name=nil)","",2],["new","Rails::Configuration","classes/Rails/Configuration.html#M000094","()","Create a new Configuration instance, initialized with the default values. ",2],["new","Rails::Generator::AbstractGemSource","classes/Rails/Generator/AbstractGemSource.html#M000303","()","",2],["new","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000193","(runtime_args, runtime_options = {})","",2],["new","Rails::Generator::GeneratedAttribute","classes/Rails/Generator/GeneratedAttribute.html#M000263","(name, type)","",2],["new","Rails::Generator::Manifest","classes/Rails/Generator/Manifest.html#M000320","(target = nil)","Take a default action target.  Yield self if block given. ",2],["new","Rails::Generator::NamedBase","classes/Rails/Generator/NamedBase.html#M000208","(runtime_args, runtime_options = {})","",2],["new","Rails::Generator::PathSource","classes/Rails/Generator/PathSource.html#M000301","(label, path)","",2],["new","Rails::Generator::Source","classes/Rails/Generator/Source.html#M000296","(label)","",2],["new","Rails::Generator::Spec","classes/Rails/Generator/Spec.html#M000346","(name, path, source)","",2],["new","Rails::Initializer","classes/Rails/Initializer.html#M000039","(configuration)","Create a new Initializer instance that references the given Configuration instance. ",2],["new","Rails::SecretKeyGenerator","classes/Rails/SecretKeyGenerator.html#M000344","(identifier)","",2],["new","RailsEnvironment","classes/RailsEnvironment.html#M000139","(dir)","",2],["new","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000005","(log_file_path = nil, gc_request_period = nil)","Initialize the FastCGI instance with the path to a crash log detailing unhandled exceptions (default",2],["new","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000238","(urls_to_fetch, level = 1, cwd = \".\")","",2],["new","Repositories","classes/Repositories.html#M000169","(cache_file = File.join(find_home, \".rails-plugin-sources\"))","",2],["new","Repository","classes/Repository.html#M000182","(uri)","",2],["new","SourceAnnotationExtractor","classes/SourceAnnotationExtractor.html#M000080","(tag)","",2],["new","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003638","(identifier = nil)","If identifier is nil calls super(), otherwise calls get. An identfier  should always be passed in when",2],["new","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003671","(start_transition, end_transition, offset = nil)","Initializes a new TimezonePeriod. ",2],["new?","ActiveResource::Base","classes/ActiveResource/Base.html#M001396","()","A method to determine if the resource a \\new object (i.e., it has not been POSTed to the remote service",2],["new_and_loaded","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002404","(path)","",2],["new_cipher","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003099","()","",2],["new_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000658","()","",2],["new_date","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000821","(year, mon, mday)","",2],["new_http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001413","()","",2],["new_record?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000635","()","Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist yet;",2],["new_record?","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001267","()","",2],["new_record?","ActiveResource::Base","classes/ActiveResource/Base.html#M001397","()","Alias for #new?",2],["new_request!","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002382","()","",2],["new_session","Object","classes/Object.html#M000001","()","create a new session. If a block is given, the new session will be yielded to the block before being",2],["new_time","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000822","(year, mon, mday, hour, min, sec, microsec)","",2],["next_element","HTML::Selector","classes/HTML/Selector.html#M002122","(element, name = nil)","Return the next element after this one. Skips sibling text nodes. With the +name+ argument, returns the",2],["next_migration_number","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000249","()","",2],["next_migration_string","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000254","(padding = 3)","",2],["next_month","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002659","()","Short-hand for months_since(1) ",2],["next_month","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002990","()","Short-hand for months_since(1) ",2],["next_selector","HTML::Selector","classes/HTML/Selector.html#M002128","(statement, values)","Called to create a dependent selector (sibling, descendant, etc). Passes the remainder of the statement",2],["next_week","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002666","(day = :monday)","Returns a new Date/DateTime representing the start of the given day in next week (default is Monday).",2],["next_week","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002996","(day = :monday)","Returns a new Time representing the start of the given day in next week (default is Monday). ",2],["next_year","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002656","()","Short-hand for years_since(1) ",2],["next_year","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002986","()","Short-hand for years_since(1) ",2],["ngettext","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003539","(msgid, msgid_plural, n = 1)","",2],["nil?","Builder::CSS","classes/Builder/CSS.html#M003337","()","\"Cargo culted\" from Jim who also \"cargo culted\" it.  See xmlbase.rb. ",2],["nil?","Builder::XmlBase","classes/Builder/XmlBase.html#M003358","()","For some reason, nil? is sent to the XmlMarkup object.  If nil? is not defined and method_missing is",2],["nil_key","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003470","(key)","",2],["nonce","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001736","(time = Time.now)","Uses an MD5 digest based on time to generate a value to be used only once. A server-specified data string",2],["none?","Enumerable","classes/Enumerable.html#M002724","(&block)","Returns true if none of the elements match the given block. success = responses.none? {|r| r.status /",2],["nonempty_ok_response?","ActionController::Response","classes/ActionController/Response.html#M001929","()","",2],["noreply","MemCache","classes/MemCache.html#M003620","()","",2],["normalize","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003145","(form=ActiveSupport::Multibyte.default_normalization_form)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize","I18n::Backend::Gettext","classes/I18n/Backend/Gettext.html#M003448","(locale, data)","",2],["normalize!","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M001547","(path)","",2],["normalize_argument_to_redirection","ActionController::Assertions::ResponseAssertions","classes/ActionController/Assertions/ResponseAssertions.html#M001512","(fragment)","",2],["normalize_conditions","ActionController::Layout::ClassMethods","classes/ActionController/Layout/ClassMethods.html#M001756","(conditions)","",2],["normalize_flat_keys","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003450","(locale, key, scope, separator)","Shortcut to I18n::Backend::Flatten.normalize_flat_keys and then resolve_links. ",2],["normalize_flat_keys","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003446","(locale, key, scope, separator)","normalize_keys the flatten way. This method is significantly faster and creates way less objects than",2],["normalize_key","I18n","classes/I18n.html#M003586","(key, separator)","",2],["normalize_keys","I18n","classes/I18n.html#M003581","(locale, key, scope, separator = nil)","Merges the given locale, key and scope into a single array of keys. Splits keys that contain dots into",2],["normalize_parameters","ActionController::Request","classes/ActionController/Request.html#M001906","(value)","Convert nested Hashs to HashWithIndifferentAccess and replace file upload hashs with UploadedFile objects",2],["normalize_paths","ActionController::Routing","classes/ActionController/Routing.html#M001994","(paths)","Returns an array of paths, cleaned of double-slashes and relative path references. * \"\\\\\\\" and \"//\" ",2],["normalize_pluralization","I18n::Backend::Gettext","classes/I18n/Backend/Gettext.html#M003452","(locale, key, value)","",2],["normalize_translation_keys","I18n","classes/I18n.html#M003585","(locale, key, scope, separator = nil)","Deprecated. Will raise a warning in future versions and then finally be removed. Use I18n.normalize_keys",2],["normalize_translation_keys","I18n","classes/I18n.html#M003695","(*args)","",2],["normalized_key_cache","I18n","classes/I18n.html#M003587","()","",2],["not_modified?","ActionController::Request","classes/ActionController/Request.html#M001845","(modified_at)","",2],["now","ActionController::Flash::FlashHash","classes/ActionController/Flash/FlashHash.html#M001660","()","Sets a flash that will not be available to the next action, only to the current. flash.now[:message]",2],["now","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003314","()","Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented",2],["now","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003659","()","Returns the current time in the timezone as a Time. ",2],["np_","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003544","(msgctxt, msgid, msgid_plural, n = 1)","Alias for #npgettext",2],["npgettext","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003543","(msgctxt, msgid, msgid_plural, n = 1)","Method signatures: npgettext('Fruits', 'apple', 'apples', 2) npgettext('Fruits', ['apple', 'apples'],",2],["ns_","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003542","(msgid, msgid_plural, n = 1, separator = '|')","Alias for #nsgettext",2],["nsgettext","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003541","(msgid, msgid_plural, n = 1, separator = '|')","Method signatures: nsgettext('Fruits|apple', 'apples', 2) nsgettext(['Fruits|apple', 'apples'], 2) ",2],["nth_child","HTML::Selector","classes/HTML/Selector.html#M002126","(a, b, of_type, reverse)","Returns a lambda that can match an element against the nth-child pseudo class, given the following arguments:",2],["nullify_has_many_dependencies","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000425","(record, reflection_name, association_class, primary_key_name, dependent_conditions)","",2],["number?","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000797","()","Returns +true+ if the column is either of type integer, float or decimal. ",2],["number_to_currency","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M002263","(number, options = {})","Formats a +number+ into a currency string (e.g., $13.65). You can customize the format in the +options+",2],["number_to_human_size","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M002267","(number, *args)","Formats the bytes in +size+ into a more understandable representation (e.g., giving it 1500 yields 1.5",2],["number_to_percentage","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M002264","(number, options = {})","Formats a +number+ as a percentage string (e.g., 65%). You can customize the format in the +options+",2],["number_to_phone","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M002259","(number, options = {})","Formats a +number+ into a US phone number (e.g., (555) 123-9876). You can customize the format in the",2],["number_with_delimiter","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M002265","(number, *args)","Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324). You can customize the format",2],["number_with_precision","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M002266","(number, *args)","Formats a +number+ with the specified level of <tt>:precision</tt> (e.g., 112.32 has a precision of 2).",2],["object_from_yaml","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000749","(string)","",2],["observe","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001205","(*models)","Attaches the observer to the supplied model classes. ",2],["observe_field","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002283","(field_id, options = {})","Observes the field with the DOM ID specified by +field_id+ and calls a callback when its contents have",2],["observe_form","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002284","(form_id, options = {})","Observes the form with the DOM ID specified by +form_id+ and calls a callback when its contents have",2],["observed_class","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001206","()","The class observed by default is inferred from the observer's class name: assert_equal Person, PersonObserver.observed_class",2],["observed_classes","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001210","()","",2],["observed_subclasses","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001211","()","",2],["observers","ActiveRecord::Observing::ClassMethods","classes/ActiveRecord/Observing/ClassMethods.html#M001202","()","Gets the current observers. ",2],["observers=","ActiveRecord::Observing::ClassMethods","classes/ActiveRecord/Observing/ClassMethods.html#M001201","(*observers)","Activates the observers assigned. Examples: # Calls PersonObserver.instance ActiveRecord::Base.observers",2],["odd?","ActiveSupport::CoreExtensions::Integer::EvenOdd","classes/ActiveSupport/CoreExtensions/Integer/EvenOdd.html#M002775","()","",2],["old_datetime_format","Logger","classes/Logger.html#M002799","()","Alias for #datetime_format",2],["old_datetime_format=","Logger","classes/Logger.html#M002797","(datetime_format)","Alias for #datetime_format=",2],["old_format_datetime","Logger","classes/Logger.html#M002811","(datetime)","Alias for #format_datetime",2],["old_format_message","Logger","classes/Logger.html#M002808","(severity, timestamp, progname, msg)","Alias for #format_message",2],["old_formatter","Logger","classes/Logger.html#M002801","()","Alias for #formatter",2],["old_msg2str","Logger","classes/Logger.html#M002813","(msg)","Alias for #msg2str",2],["on","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001306","(attribute)","Returns +nil+, if no errors are associated with the specified +attribute+. Returns the error message,",2],["on","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001473","(attribute)","A method to return the errors associated with +attribute+, which returns nil, if no errors are  associated",2],["on_base","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001308","()","Returns errors assigned to the base object through +add_to_base+ according to the normal rules of <tt>on(attribute)</tt>.",2],["on_base","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001475","()","A method to return errors assigned to +base+ object through add_to_base, which returns nil, if no errors",2],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003706","(string)","Alias for #on_characters",2],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003705","(string)","",2],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003701","()","",2],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003704","(name)","",2],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003700","()","",2],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M003702","(name, attrs = {})","",2],["only_child","HTML::Selector","classes/HTML/Selector.html#M002127","(of_type)","Creates a only child lambda. Pass +of-type+ to only look at elements of its type. ",2],["opaque","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001738","()","Opaque based on random generation - but changing each request? ",2],["open_session","ActionController::Integration::Runner","classes/ActionController/Integration/Runner.html#M001748","(application = nil)","Open a new session instance. If a block is given, the new session is yielded to the block before being",2],["open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000898","()","",2],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002239","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","Returns a string of <tt><option></tt> tags, like <tt>options_from_collection_for_select</tt>, but groups",2],["option_text_and_value","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002245","(option)","",2],["option_value_selected?","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002246","(value, selected)","",2],["options","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001229","()","Returns the hash of options used for the macro.  For example, it would return <tt>{ :class_name => \"Money\"",2],["options","Commands::Discover","classes/Commands/Discover.html#M000218","()","",2],["options","Commands::Info","classes/Commands/Info.html#M000234","()","",2],["options","Commands::Install","classes/Commands/Install.html#M000224","()","",2],["options","Commands::List","classes/Commands/List.html#M000194","()","",2],["options","Commands::Plugin","classes/Commands/Plugin.html#M000188","()","",2],["options","Commands::Remove","classes/Commands/Remove.html#M000231","()","",2],["options","Commands::Source","classes/Commands/Source.html#M000207","()","",2],["options","Commands::Sources","classes/Commands/Sources.html#M000204","()","",2],["options","Commands::Unsource","classes/Commands/Unsource.html#M000214","()","",2],["options","Commands::Update","classes/Commands/Update.html#M000228","()","",2],["options","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000331","()","Each instance has an options hash that's populated by #parse. ",2],["options_for_ajax","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002322","(options)","",2],["options_for_javascript","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M002261","(options)","",2],["options_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002234","(container, selected = nil)","Accepts a container (hash, array, enumerable, your type) and returns a string of option tags. Given a",2],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002237","(collection, value_method, text_method, selected = nil)","Returns a string of option tags that have been compiled by iterating over the +collection+ and assigning",2],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000862","(options)","",2],["ord","ActiveSupport::CoreExtensions::String::Conversions","classes/ActiveSupport/CoreExtensions/String/Conversions.html#M002910","()","'a'.ord == 'a'[0] for Ruby 1.9 forward compatibility. ",2],["ord","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003141","()","Returns the codepoint of the first character in the string. Example: 'こんにちは'.mb_chars.ord #=> 12371 ",2],["order_tables","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000447","(options)","",2],["ordinalize","ActiveSupport::CoreExtensions::Integer::Inflections","classes/ActiveSupport/CoreExtensions/Integer/Inflections.html#M002776","()","Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such",2],["ordinalize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003076","(number)","Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st,",2],["orig_delete","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001445","(custom_method_name, options = {})","Alias for #delete",2],["original_filename","ActionController::UploadedFile","classes/ActionController/UploadedFile.html#M002075","()","Take the basename of the upload's original filename. This handles the full Windows paths given by Internet",2],["output_filename","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M003194","()","",2],["output_filename","ActiveSupport::Testing::Performance::Performer","classes/ActiveSupport/Testing/Performance/Performer.html#M003189","()","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M003199","(printer_class)","",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000761","()","Checks whether there is currently no transaction active. This is done by querying the database driver,",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001004","()","The ruby-pg driver supports inspecting the transaction status, while the ruby-postgres driver does not.",2],["overlaps?","ActiveSupport::CoreExtensions::Range::Overlaps","classes/ActiveSupport/CoreExtensions/Range/Overlaps.html#M002900","(other)","Compare two ranges and see if they overlap eachother (1..5).overlaps?(4..6) # => true (1..5).overlaps?(7..9)",2],["p_","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003538","(msgctxt, msgid)","Alias for #pgettext",2],["page","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002312","()","",2],["page_cache_file","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M001574","(path)","",2],["page_cache_path","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M001575","(path)","",2],["parameterize","ActionController::Assertions::ResponseAssertions","classes/ActionController/Assertions/ResponseAssertions.html#M001511","(value)","Proxy to to_param if the object will respond to it. ",2],["parameterize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002927","(sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameterize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003067","(string, sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameters","ActionController::Request","classes/ActionController/Request.html#M001879","()","Returns both GET and POST \\parameters in a single hash. ",2],["params","ActionController::Request","classes/ActionController/Request.html#M001880","()","Alias for #parameters",2],["parent","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002828","()","Returns the module which contains this one according to its name. module M module N end end X = M::N",2],["parent","I18n::Locale::Tag::Parents","classes/I18n/Locale/Tag/Parents.html#M003554","()","",2],["parent_name","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002827","()","Returns the name of the module containing this one. p M::N.parent_name # => \"M\" ",2],["parents","ActiveSupport::CoreExtensions::Module","classes/ActiveSupport/CoreExtensions/Module.html#M002829","()","Returns all the parents of this module according to its name, ordered from nested outwards. The receiver",2],["parents","I18n::Locale::Tag::Parents","classes/I18n/Locale/Tag/Parents.html#M003556","()","",2],["parse","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003313","(str, now=now)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from parsed string.",2],["parse","ActiveSupport::XmlMini_LibXMLSAX","classes/ActiveSupport/XmlMini_LibXMLSAX.html#M003707","(string)","",2],["parse","ActiveSupport::XmlMini_NokogiriSAX","classes/ActiveSupport/XmlMini_NokogiriSAX.html#M003716","(string)","",2],["parse","CGI::Cookie","classes/CGI/Cookie.html#M001625","(raw_cookie)","Parses a raw cookie string into a hash of <tt>cookie-name => cookie-object</tt> pairs. cookies = CGI::Cookie::parse(\"raw_cookie_string\")",2],["parse","I18n::Backend::Gettext","classes/I18n/Backend/Gettext.html#M003447","(filename)","",2],["parse","Mime::Type","classes/Mime/Type.html#M001785","(accept_header)","",2],["parse!","Commands::Discover","classes/Commands/Discover.html#M000220","(args)","",2],["parse!","Commands::Info","classes/Commands/Info.html#M000235","(args)","",2],["parse!","Commands::Install","classes/Commands/Install.html#M000226","(args)","",2],["parse!","Commands::List","classes/Commands/List.html#M000197","(args)","",2],["parse!","Commands::Plugin","classes/Commands/Plugin.html#M000189","(args=ARGV)","",2],["parse!","Commands::Plugin","classes/Commands/Plugin.html#M000191","(args=ARGV)","",2],["parse!","Commands::Remove","classes/Commands/Remove.html#M000232","(args)","",2],["parse!","Commands::Source","classes/Commands/Source.html#M000211","(args)","",2],["parse!","Commands::Sources","classes/Commands/Sources.html#M000205","(args)","",2],["parse!","Commands::Unsource","classes/Commands/Unsource.html#M000215","(args)","",2],["parse!","Commands::Update","classes/Commands/Update.html#M000229","(args)","",2],["parse!","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000335","(args, runtime_options = {})","Parse arguments into the options hash.  Classes may customize parsing behavior by overriding these methods:",2],["parse_extensions","ActionView::Template","classes/ActionView/Template.html#M002431","(extensions)","returns parsed extensions as an array [locale, format, extension] ",2],["parse_formatted_parameters","ActionController::ParamsParser","classes/ActionController/ParamsParser.html#M001799","(env)","",2],["parse_sqlite_config!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001036","(config)","",2],["parse_yaml_string","Fixtures","classes/Fixtures.html#M001159","(fixture_content)","",2],["parser","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646.html#M003561","()","",2],["parser=","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646.html#M003562","(parser)","",2],["partial_path","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M001815","(record_or_class, controller_path = nil)","Returns plural/singular for a record or class. Example: partial_path(post)                   # => \"posts/post\"",2],["partial_path","ActionView::Helpers::RecordIdentificationHelper","classes/ActionView/Helpers/RecordIdentificationHelper.html#M002269","(*args, &block)","See ActionController::RecordIdentifier.partial_path -- this is just a delegate to that for convenient",2],["password","ActiveResource::Base","classes/ActiveResource/Base.html#M001338","()","Gets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Base","classes/ActiveResource/Base.html#M001339","(password)","Sets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001389","(password)","Set password for remote service. ",2],["password_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002216","(object_name, method, options = {})","Returns an input tag of the \"password\" type tailored for accessing a specified attribute (identified",2],["password_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002233","(name = \"password\", value = nil, options = {})","Creates a password field, a masked text field that will hide the users input behind a mask character.",2],["past?","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002634","()","Tells whether the Date object's date lies in the past ",2],["past?","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002690","()","Tells whether the DateTime object's datetime lies in the past ",2],["past?","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002965","()","Tells whether the Time object's time lies in the past ",2],["past?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003255","()","",2],["path","ActionController::Request","classes/ActionController/Request.html#M001876","()","Returns the interpreted \\path to requested resource after all the installation directory of this application",2],["path","ActionView::Template","classes/ActionView/Template.html#M002418","()","",2],["path_for","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M001544","(controller, options, infer_extension = true)","",2],["path_parameters","ActionController::Request","classes/ActionController/Request.html#M001885","()","Returns a hash with the \\parameters used to form the \\path of the request. Returned hash keys are strings:",2],["path_to_image","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002171","(source)","Alias for #image_path",2],["path_to_javascript","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002154","(source)","Alias for #javascript_path",2],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002168","(source)","Alias for #stylesheet_path",2],["path_without_extension","ActionView::Template","classes/ActionView/Template.html#M002419","()","",2],["path_without_format_and_extension","ActionView::Template","classes/ActionView/Template.html#M002420","()","",2],["perform_action","ActionController::Base","classes/ActionController/Base.html#M001602","()","",2],["perform_caching?","I18n","classes/I18n.html#M003399","()","",2],["perform_delivery_sendmail","ActionMailer::Base","classes/ActionMailer/Base.html#M002487","(mail)","",2],["perform_delivery_smtp","ActionMailer::Base","classes/ActionMailer/Base.html#M002486","(mail)","",2],["perform_delivery_test","ActionMailer::Base","classes/ActionMailer/Base.html#M002488","(mail)","",2],["performed?","ActionController::Base","classes/ActionController/Base.html#M001603","()","",2],["period","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003213","()","Returns the underlying TZInfo::TimezonePeriod. ",2],["period_for_local","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003319","(time, dst=true)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["period_for_local","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003656","(local, dst = nil)","Returns the TimezonePeriod for the given local time. local can either be a DateTime, Time or integer",2],["period_for_utc","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003318","(time)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["period_for_utc","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003654","(utc)","Returns the TimezonePeriod for the given UTC time. utc can either be a DateTime, Time or integer timestamp",2],["periodically_call_remote","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002274","(options = {})","Periodically calls the specified url (<tt>options[:url]</tt>) every <tt>options[:frequency]</tt> seconds",2],["periods_for_local","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003655","(local)","Returns the set of TimezonePeriod instances that are valid for the given local time as an array. If you",2],["persistent_session_id!","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002046","(data)","",2],["petabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002849","()","Alias for #petabytes",2],["petabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002848","()","",2],["pgettext","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003537","(msgctxt, msgid)","",2],["plugin_loader","Rails::Initializer","classes/Rails/Initializer.html#M000054","()","",2],["plugins","Repository","classes/Repository.html#M000183","()","",2],["plugins=","Rails::Configuration","classes/Rails/Configuration.html#M000088","(plugins)","",2],["plural","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003046","(rule, replacement)","Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular",2],["plural_class_name","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M001820","(record_or_class)","Returns the plural class name of a record or class. Examples: plural_class_name(post)             # =>",2],["plural_keys","I18n::Gettext","classes/I18n/Gettext.html#M003546","(locale)","returns an array of plural keys for the given locale so that we can convert from gettext's integer-index",2],["pluralize","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002350","(count, singular, plural = nil)","Attempts to pluralize the +singular+ word unless +count+ is 1. If +plural+ is supplied, it will use that",2],["pluralize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002918","()","Returns the plural form of the word in the string. \"post\".pluralize             # => \"posts\" \"octopus\".pluralize",2],["pluralize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003055","(word)","Returns the plural form of the word in the string. Examples: \"post\".pluralize             # => \"posts\"",2],["pluralize","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003409","(locale, entry, count)","Picks a translation from an array according to English pluralization rules. It will pick the first translation",2],["pluralize","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003491","(locale, entry, count)","",2],["pluralize","I18n::Backend::Pluralization","classes/I18n/Backend/Pluralization.html#M003495","(locale, entry, count)","Overwrites the Base backend translate method so that it will check the translation meta data space (:i18n)",2],["pluralize_table_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000451","","Indicates whether table names should be the pluralized versions of the corresponding class names. If",2],["pluralizer","I18n::Backend::Pluralization","classes/I18n/Backend/Pluralization.html#M003502","(locale)","",2],["pluralizers","I18n::Backend::Pluralization","classes/I18n/Backend/Pluralization.html#M003497","()","",2],["polymorphic_path","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001805","(record_or_hash_or_array, options = {})","Returns the path component of a URL for the given record. It uses <tt>polymorphic_url</tt> with <tt>:routing_type",2],["polymorphic_url","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001802","(record_or_hash_or_array, options = {})","Constructs a call to a named RESTful route for the given record and returns the resulting URL string.",2],["pop_d","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000243","()","",2],["popup_javascript_function","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002375","(popup)","",2],["port","ActionController::Request","classes/ActionController/Request.html#M001864","()","Returns the port number of this request as an integer. ",2],["port_string","ActionController::Request","classes/ActionController/Request.html#M001866","()","Returns a \\port suffix like \":8080\" if the \\port number of this request is not the default HTTP \\port",2],["possible_controllers","ActionController::Routing","classes/ActionController/Routing.html#M002004","()","Returns the array of controller names currently available to ActionController::Routing. ",2],["post","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001720","(path, parameters = nil, headers = nil)","Performs a POST request with the given parameters. See get() for more details. ",2],["post","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002081","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating POST HTTP method and set/volley the response ",2],["post","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001400","(path, body = '', headers = {})","Execute a POST request. Used to create new resources. ",2],["post","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001440","(custom_method_name, options = {}, body = '')","",2],["post","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001448","(method_name, options = {}, body = nil)","",2],["post?","ActionController::Request","classes/ActionController/Request.html#M001828","()","Is this a POST request?  Equivalent to <tt>request.method == :post</tt>. ",2],["post_via_redirect","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001713","(path, parameters = nil, headers = nil)","Performs a POST request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001038","()","Returns the version of the connected PostgreSQL version. ",2],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000887","(table_name = nil)","Should primary key values be selected from their corresponding sequence before the insert statement?",2],["prefix","ActiveResource::Base","classes/ActiveResource/Base.html#M001350","(options={})","Gets the \\prefix for a resource's nested URL (e.g., <tt>prefix/collectionname/1.xml</tt>) This method",2],["prefix=","ActiveResource::Base","classes/ActiveResource/Base.html#M001352","(value = '/')","Sets the \\prefix for a resource's nested URL (e.g., <tt>prefix/collectionname/1.xml</tt>). Default value",2],["prefix_parameters","ActiveResource::Base","classes/ActiveResource/Base.html#M001380","()","contains a set of the current prefix parameters. ",2],["prefix_source","ActiveResource::Base","classes/ActiveResource/Base.html#M001351","()","An attribute reader for the source string for the resource path \\prefix.  This method is regenerated",2],["preload_associations","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000354","(records, associations, preload_options={})","Eager loads the named associations for the given ActiveRecord record(s). In this description, 'association",2],["preload_belongs_to_association","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000365","(records, reflection, preload_options={})","",2],["preload_frameworks","Rails::Initializer","classes/Rails/Initializer.html#M000046","()","Preload all frameworks specified by the Configuration#frameworks. Used by Passenger to ensure everything's",2],["preload_has_and_belongs_to_many_association","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000361","(records, reflection, preload_options={})","",2],["preload_has_many_association","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000363","(records, reflection, preload_options={})","",2],["preload_has_one_association","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000362","(records, reflection, preload_options={})","",2],["preload_one_association","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000355","(records, association, preload_options={})","Preloads a specific named association for the given records. This is called by +preload_associations+",2],["preload_through_records","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000364","(records, reflection, through_association)","",2],["prepare!","ActionController::Response","classes/ActionController/Response.html#M001923","()","",2],["prepare!","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002012","(env)","",2],["prepare!","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002028","(env)","",2],["prepare_controller_class","ActionController::TestCase","classes/ActionController/TestCase.html#M002065","(new_class)","",2],["prepare_dispatcher","Rails::Initializer","classes/Rails/Initializer.html#M000076","()","",2],["prepend","MemCache","classes/MemCache.html#M003602","(key, value)","Prepend - 'add this data to an existing key before existing data' Please note the value is always passed",2],["prepend_after_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001673","(*filters, &block)","The passed <tt>filters</tt> will be prepended to the array of filters that run _after_ actions on this",2],["prepend_around_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001676","(*filters, &block)","If you <tt>prepend_around_filter A.new, B.new</tt>, the filter chain looks like: A#before B#before #",2],["prepend_before_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001670","(*filters, &block)","The passed <tt>filters</tt> will be prepended to the filter_chain and will execute before the action",2],["prepend_sources","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000284","(*args)","Add a source to the beginning of the list. ",2],["prepend_view_path","ActionController::Base","classes/ActionController/Base.html#M001542","(path)","Adds a view_path to the front of the view_paths array. If the current class has no view paths, copy them",2],["prepend_view_path","ActionController::Base","classes/ActionController/Base.html#M001559","(path)","Adds a view_path to the front of the view_paths array. This change affects the current request only.",2],["presence","Object","classes/Object.html#M002873","()","Returns object if it's #present? otherwise returns nil. object.presence is equivalent to object.present?",2],["present?","Object","classes/Object.html#M002870","()","An object is present if it's not blank. ",2],["preserve_encoding","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003411","(string)","",2],["prev_month","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002658","()","Short-hand for months_ago(1) ",2],["prev_month","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002988","()","Short-hand for months_ago(1) ",2],["prev_year","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002655","()","Short-hand for years_ago(1) ",2],["prev_year","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002985","()","Short-hand for years_ago(1) ",2],["primary_key","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000494","()","Defines the primary key field -- can be overridden in subclasses. Overwriting will negate any effect",2],["primary_key","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000986","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001024","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000847","(name)","Appends a primary key definition to the table definition. Can be called multiple times, but this is probably",2],["primary_key_name","Fixtures","classes/Fixtures.html#M001145","()","",2],["primary_key_prefix_type","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000445","","Accessor for the prefix type that will be prepended to every primary key column name. The options are",2],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M003093","(*syms)","",2],["process","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001735","(method, path, parameters = nil, headers = nil)","Performs the actual request. ",2],["process","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002085","(action, parameters = nil, session = nil, flash = nil, http_method = 'GET')","",2],["process","Rails::Initializer","classes/Rails/Initializer.html#M000040","()","Sequentially step through all of the available initialization routines, in order (view execution order",2],["process!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000006","(provider = FCGI)","",2],["process!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000004","(*args, &block)","Initialize and run the FastCGI instance, passing arguments through to new. ",2],["process_attributes_for","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M002113","(node, options)","",2],["process_cleanup","ActionController::Base","classes/ActionController/Base.html#M001614","()","",2],["process_each_request","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000007","(provider)","",2],["process_node","HTML::FullSanitizer","classes/HTML/FullSanitizer.html#M002107","(node, result, options)","",2],["process_node","HTML::LinkSanitizer","classes/HTML/LinkSanitizer.html#M002109","(node, result, options)","",2],["process_node","HTML::Sanitizer","classes/HTML/Sanitizer.html#M002105","(node, result, options)","",2],["process_node","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M002112","(node, result, options)","",2],["process_request","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000008","(request)","",2],["process_view_paths","ActionView::Base","classes/ActionView/Base.html#M002132","(value)","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003216","()","",2],["protect_against_forgery?","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001848","()","",2],["protect_against_forgery?","ActionView::TestCase","classes/ActionView/TestCase.html#M002448","()","",2],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","classes/ActionController/RequestForgeryProtection/ClassMethods.html#M001833","(options = {})","Turn on request forgery protection. Bear in mind that only non-GET, HTML/JavaScript requests are checked.",2],["protocol","ActionController::Request","classes/ActionController/Request.html#M001859","()","Returns 'https://' if this is an SSL request and 'http://' otherwise. ",2],["proxy","ActiveResource::Base","classes/ActiveResource/Base.html#M001333","()","Gets the \\proxy variable if a proxy is required ",2],["proxy=","ActiveResource::Base","classes/ActiveResource/Base.html#M001335","(proxy)","Sets the URI of the http proxy to the value in the +proxy+ argument. ",2],["proxy=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001387","(proxy)","Set the proxy for remote service. ",2],["proxy_found","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001197","()","",2],["public_path","Rails","classes/Rails.html#M000036","()","",2],["public_path=","Rails","classes/Rails.html#M000037","(path)","",2],["push_d","RecursiveHTTPFetcher","classes/RecursiveHTTPFetcher.html#M000242","(dir)","",2],["put","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001721","(path, parameters = nil, headers = nil)","Performs a PUT request with the given parameters. See get() for more details. ",2],["put","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002082","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating PUT HTTP method and set/volley the response ",2],["put","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001395","(path, body = '', headers = {})","Execute a PUT request (see HTTP protocol documentation if unfamiliar). Used to update resources. ",2],["put","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001443","(custom_method_name, options = {}, body = '')","",2],["put","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001449","(method_name, options = {}, body = '')","",2],["put?","ActionController::Request","classes/ActionController/Request.html#M001829","()","Is this a PUT request?  Equivalent to <tt>request.method == :put</tt>. ",2],["put_via_redirect","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001714","(path, parameters = nil, headers = nil)","Performs a PUT request, following any subsequent redirect. See +request_via_redirect+ for more information.",2],["query_parameters","ActionController::Request","classes/ActionController/Request.html#M001890","()","Alias for #GET",2],["query_string","ActionController::Request","classes/ActionController/Request.html#M001870","()","Returns the query string, accounting for server idiosyncrasies. ",2],["query_string","ActiveResource::Base","classes/ActiveResource/Base.html#M001381","(options)","Builds the query string for the request. ",2],["quote","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000918","(value, column = nil)","QUOTING ================================================== ",2],["quote","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000788","(value, column = nil)","Quotes the column value to help prevent {SQL injection attacks}[http://en.wikipedia.org/wiki/SQL_injection].",2],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000790","(column_name)","Quotes the column name. Defaults to no quoting. ",2],["quote_columns","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000747","(quoter, hash)","",2],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000789","(s)","Quotes a string, escaping any ' (single quote) and \\ (backslash) characters. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000889","(name)","Override to return the quoted table name. Defaults to column quoting. ",2],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000976","(name)","Checks the following cases: - table_name - \"table.name\" - schema_name.table_name - schema_name.\"table.name\"",2],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000791","(table_name)","Quotes the table name. Defaults to column name quoting. ",2],["quote_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000725","(value, column = nil)","Quote strings appropriately for SQL statements. ",2],["quoted_column_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000745","(attributes = attributes_with_quotes)","",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000990","(column_names, options = {})","",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000859","(column_names, options = {})","Overridden by the mysql adapter for supporting index lengths ",2],["quoted_comma_pair_list","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000748","(quoter, hash)","",2],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000794","(value)","",2],["quoted_false","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000924","()","",2],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000793","()","",2],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001128","()","Quote the column name used for optimistic locking. ",2],["quoted_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000746","()","",2],["quoted_true","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000923","()","",2],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","classes/ActiveRecord/ConnectionAdapters/Quoting.html#M000792","()","",2],["radio_button","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002222","(object_name, method, tag_value, options = {})","Returns a radio button tag for accessing a specified attribute (identified by +method+) on an object",2],["radio_button_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002238","(name, value, checked = false, options = {})","Creates a radio button; use groups of radio buttons named the same to allow users to select from a group",2],["rails_asset_id","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002178","(source)","Use the RAILS_ASSET_ID environment variable or the source's modification time as its cache-busting asset",2],["rails_env","Plugin","classes/Plugin.html#M000168","()","",2],["raise_class_collision","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000278","(class_name)","Raise a usage error with an informative WordNet suggestion. Thanks to Florian Gross (flgr). ",2],["raise_on_error_response!","MemCache","classes/MemCache.html#M003622","(response)","",2],["raise_on_session_data_overflow!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001255","()","Ensures that the data about to be stored in the database is not larger than the data storage column.",2],["raise_unspecified_currency!","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003443","()","",2],["raise_unspecified_format_type!","I18n::Backend::Cldr","classes/I18n/Backend/Cldr.html#M003442","()","",2],["random_bytes","ActiveSupport::SecureRandom","classes/ActiveSupport/SecureRandom.html#M003167","(n=nil)","SecureRandom.random_bytes generates a random binary string. The argument n specifies the length of the",2],["random_number","ActiveSupport::SecureRandom","classes/ActiveSupport/SecureRandom.html#M003171","(n=0)","SecureRandom.random_number generates a random number. If an positive integer is given as n, SecureRandom.random_number",2],["raw","ActionView::Helpers::RawOutputHelper","classes/ActionView/Helpers/RawOutputHelper.html#M002268","(stringish)","",2],["raw?","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002533","(options)","",2],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000897","()","Provides access to the underlying database driver for this adapter. For example, this method returns",2],["raw_host_with_port","ActionController::Request","classes/ActionController/Request.html#M001861","()","Returns the \\host for this request, such as \"example.com\". ",2],["raw_post","ActionController::Request","classes/ActionController/Request.html#M001877","()","Read the request \\body. This is useful for web services that need to work with raw requests directly.",2],["read","ActionController::CGIHandler::ProperStream","classes/ActionController/CGIHandler/ProperStream.html#M001630","(*args)","",2],["read","ActiveSupport::Cache::CompressedMemCacheStore","classes/ActiveSupport/Cache/CompressedMemCacheStore.html#M002504","(name, options = nil)","",2],["read","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002512","(name, options = nil)","",2],["read","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002535","(name, options = nil)","",2],["read","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002581","(key, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["read","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002543","(key, options = nil)","",2],["read","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002547","(name, options = nil)","",2],["read_csv_fixture_files","Fixtures","classes/Fixtures.html#M001154","()","",2],["read_fixture_files","Fixtures","classes/Fixtures.html#M001150","()","",2],["read_fragment","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M001564","(key, options = nil)","Reads a cached fragment from the location signified by <tt>key</tt> (see <tt>expire_fragment</tt> for",2],["read_multi","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002522","(*keys)","Reads multiple keys from the cache. ",2],["read_multi","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002534","(*names)","",2],["read_yaml_fixture_files","Fixtures","classes/Fixtures.html#M001151","()","",2],["readable_inspect","ActiveSupport::CoreExtensions::Date::Conversions","classes/ActiveSupport/CoreExtensions/Date/Conversions.html#M002667","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005\" ",2],["readable_inspect","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002696","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005 14:30:00 +0000\"",2],["reader_method","ActiveRecord::Aggregations::ClassMethods","classes/ActiveRecord/Aggregations/ClassMethods.html#M000352","(name, class_name, mapping, allow_nil, constructor)","",2],["readme","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000246","(*args)","Does nothing for all commands except Create. ",2],["readme","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000272","(*relative_sources)","Display a README. ",2],["readme","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000311","(*args)","",2],["readonly!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000700","()","Marks this record as read only. ",2],["readonly?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000699","()","Returns +true+ if the record is read only. Records loaded through joins with piggy-back attributes will",2],["readonly?","MemCache","classes/MemCache.html#M003590","()","Returns whether or not the cache object was created read only. ",2],["readonly_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000489","()","Returns an array of all the attributes that have been specified as readonly. ",2],["real_file_path","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002517","(name)","",2],["rebuild_attribute_method_regexp","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000384","()","Suffixes a, ?, c become regexp /(a|\\?|c)$/ ",2],["receive","ActionMailer::Base","classes/ActionMailer/Base.html#M002467","(raw_email)","Receives a raw email, parses it into an email object, decodes it, instantiates a new mailer, and passes",2],["recognized_request_for","ActionController::Assertions::RoutingAssertions","classes/ActionController/Assertions/RoutingAssertions.html#M001516","(path, request_method = nil)","Recognizes the route for a given path. ",2],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000892","()","Disconnects from the database if already connected, and establishes a new connection with the database.",2],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000927","()","",2],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000946","()","Close then reopen the connection. ",2],["record","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002313","(line)","",2],["record","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M003191","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M003198","()","",2],["record","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000200","()","Convenience method for generator subclasses to record a manifest. ",2],["record_entity_expansion!","REXML::Document","classes/REXML/Document.html#M002903","()","",2],["recycle!","ActionController::TestResponse","classes/ActionController/TestResponse.html#M002072","()","",2],["redirect","ActionController::Response","classes/ActionController/Response.html#M001920","(url, status)","",2],["redirect?","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001718","()","Returns +true+ if the last response was a redirect. ",2],["redirect_to","ActionController::Base","classes/ActionController/Base.html#M001584","(options = {}, response_status = {})","Redirects the browser to the target specified in +options+. This parameter can take one of three forms:",2],["redirect_to","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002301","(location)","Redirects the browser to the given +location+ using JavaScript, in the same form as +url_for+. Examples:",2],["redirect_to_full_url","ActionController::Base","classes/ActionController/Base.html#M001585","(url, status)","",2],["redirect_to_url","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002092","()","",2],["reference?","Rails::Generator::GeneratedAttribute","classes/Rails/Generator/GeneratedAttribute.html#M000267","()","",2],["references","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000875","(*args)","Adds a reference. Optionally adds a +type+ column. <tt>references</tt> and <tt>belongs_to</tt> are acceptable.",2],["references","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000860","(*args)","",2],["references_eager_loaded_tables?","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000460","(options)","",2],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001222","(aggregation)","Returns the AggregateReflection object for the named +aggregation+ (use the symbol). Example: Account.reflect_on_aggregation(:balance)",2],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001221","()","Returns an array of AggregateReflection objects for all the aggregations in the class. ",2],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001223","(macro = nil)","Returns an array of AssociationReflection objects for all the associations in the class. If you only",2],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001225","()","Returns an array of AssociationReflection objects for all associations which have <tt>:autosave</tt>",2],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001224","(association)","Returns the AssociationReflection object for the named +association+ (use the symbol). Example: Account.reflect_on_association(:owner)",2],["reflect_on_included_associations","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000433","(associations)","",2],["reflections","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001219","()","Returns a hash containing all AssociationReflection objects for the current class Example: Invoice.reflections",2],["regexp_chunk","ActionController::Routing::OptionalFormatSegment","classes/ActionController/Routing/OptionalFormatSegment.html#M001979","()","",2],["register","Mime::Type","classes/Mime/Type.html#M001784","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",2],["register_alias","Mime::Type","classes/Mime/Type.html#M001783","(string, symbol, extension_synonyms = [])","Registers an alias that's not used on mime type lookup, but can be referenced directly. Especially useful",2],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002159","(expansions)","Register one or more javascript files to be included when <tt>symbol</tt> is passed to <tt>javascript_include_tag</tt>.",2],["register_javascript_include_default","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002164","(*sources)","Register one or more additional JavaScript files to be included when <tt>javascript_include_tag :defaults</tt>",2],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002163","(expansions)","Register one or more stylesheet files to be included when <tt>symbol</tt> is passed to <tt>stylesheet_link_tag</tt>.",2],["register_template","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002386","(template)","",2],["register_template_from_file","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002385","(template_full_file_path)","",2],["regular_writer","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002746","(key, value)","Alias for #[]=",2],["relative_path","ActionView::Template","classes/ActionView/Template.html#M002421","()","",2],["relative_path_for_template_file","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002405","(full_file_path)","",2],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000637","()","Signal that the thread is finished with the current connection. #release_connection releases the connection-thread",2],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000904","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000939","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001007","()","",2],["reload","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002302","()","Reloads the browser's current +location+ using JavaScript Examples: # Generates: window.location.reload();",2],["reload","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000670","(options = nil)","Reloads the attributes of this object from the database. The optional options argument is passed to find",2],["reload","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001190","()","",2],["reload","ActiveResource::Base","classes/ActiveResource/Base.html#M001419","()","A method to \\reload the attributes of this object from the remote web service. ==== Examples my_branch",2],["reload!","I18n","classes/I18n.html#M003575","()","Tells the backend to reload translations. Used in situations like the Rails development environment.",2],["reload!","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003404","()","",2],["reload!","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003418","()","",2],["reload!","I18n::Backend::Memoize","classes/I18n/Backend/Memoize.html#M003486","()","",2],["reload!","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003498","()","Clean up translations hash and set initialized to false on reload! ",2],["reload!","Object","classes/Object.html#M000002","()","reloads the environment ",2],["reload!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000020","()","",2],["reload_application","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001638","()","",2],["reload_handler","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000017","(signal)","",2],["reload_plugins?","Rails::Configuration","classes/Rails/Configuration.html#M000090","()","Returns true if plugin reloading is enabled. ",2],["reload_with_autosave_associations","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000396","(options = nil)","Reloads the attributes of the object as usual and removes a mark for destruction. ",2],["remote_form_for","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002277","(record_or_name_or_array, *args, &proc)","Creates a form that will submit using XMLHttpRequest in the background instead of the regular reloading",2],["remote_function","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002282","(options)","Returns the JavaScript needed for a remote function. Takes the same arguments as link_to_remote. Example:",2],["remote_ip","ActionController::Request","classes/ActionController/Request.html#M001856","()","Determines originating IP address.  REMOTE_ADDR is the standard but will fail if the user is behind a",2],["remove","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002296","(*ids)","Removes the DOM elements with the given +ids+ from the page. Example: # Remove a few people # Generates:",2],["remove","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000871","(*column_names)","Removes the column(s) from the table definition. ===== Examples t.remove(:qualification) t.remove(:qualification,",2],["remove","Repositories","classes/Repositories.html#M000172","(uri)","",2],["remove_attributes_protected_from_mass_assignment","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000711","(attributes)","",2],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000878","(*args)","Alias for #remove_references",2],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000823","(table_name, *column_names)","Removes the column(s) from the table definition. ===== Examples remove_column(:suppliers, :qualification)",2],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000824","(table_name, *column_names)","Alias for #remove_column",2],["remove_connection","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000724","(klass = self)","",2],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000683","(klass)","Remove the connection for this class. This will close the active connection and the defined connection",2],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000837","(table_name, options = {})","Remove the given index from the table. Remove the suppliers_name_index in the suppliers table. remove_index",2],["remove_index","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000872","(options = {})","Removes the given index from the table. ===== Examples ====== Remove the suppliers_name_index in the",2],["remove_possible_method","Module","classes/Module.html#M002834","(method)","",2],["remove_readonly_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000713","(attributes)","Removes attributes which have been marked as readonly. ",2],["remove_references","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000877","(*args)","Removes a reference. Optionally removes a +type+ column. <tt>remove_references</tt> and <tt>remove_belongs_to</tt>",2],["remove_silencers!","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002495","()","Will remove all silencers, but leave in the filters. This is useful if your context of debugging suddenly",2],["remove_stale_cached_threads!","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000660","(cache, &block)","Remove stale threads from the cache. ",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000858","(table_name)","Removes the timestamp columns (created_at and updated_at) from the table definition. ===== Examples remove_timestamps(:suppliers)",2],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000873","()","Removes the timestamp columns (created_at and updated_at) from the table. ===== Example t.remove_timestamps",2],["rename","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000874","(column_name, new_column_name)","Renames a column. ===== Example t.rename(:description, :name) ",2],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001031","(table_name, column_name, new_column_name)","Renames a column in a table. ",2],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000829","(table_name, column_name, new_column_name)","Renames a column. ===== Example rename_column(:suppliers, :description, :name) ",2],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000839","(table_name, old_name, new_name)","Rename an index. Rename the index_people_on_last_name index to index_users_on_last_name rename_index",2],["rename_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000968","(table_name, new_name)","",2],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001025","(name, new_name)","Renames a table. ",2],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001075","(name, new_name)","",2],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000817","(table_name, new_name)","Renames a table. ===== Example rename_table('octopuses', 'octopi') ",2],["render","ActionController::Base","classes/ActionController/Base.html#M001567","(options = nil, extra_options = {}, &block)","Renders the content that will be returned to the browser as the response body. === Rendering an action",2],["render","ActionMailer::Base","classes/ActionMailer/Base.html#M002477","(opts)","",2],["render","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002314","(*options_for_render)","",2],["render","ActionView::TemplateHandler","classes/ActionView/TemplateHandler.html#M002437","(template, local_assigns)","",2],["render","ActionView::TestCase","classes/ActionView/TestCase.html#M002447","(options = {}, local_assigns = {}, &block)","",2],["render_file","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000276","(path, options = {})","",2],["render_message","ActionMailer::Base","classes/ActionMailer/Base.html#M002476","(method_name, body)","",2],["render_optional_error_file","ActionController::Rescue","classes/ActionController/Rescue.html#M001878","(status_code)","Attempts to render a static error page based on the <tt>status_code</tt> thrown, or just return headers",2],["render_template","ActionController::Failsafe","classes/ActionController/Failsafe.html#M001652","(filename)","",2],["render_template","ActionView::Template","classes/ActionView/Template.html#M002426","(view, local_assigns = {})","",2],["render_template_part","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000259","(template_options)","",2],["render_to_string","ActionController::Base","classes/ActionController/Base.html#M001571","(options = nil, &block)","Renders according to the same rules as <tt>render</tt>, but returns the result in a string instead of",2],["reorder_characters","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003155","(codepoints)","Re-order codepoints so the string becomes canonical. ",2],["replace","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002295","(id, *options_for_render)","Replaces the \"outer HTML\" (i.e., the entire element, not just its contents) of the DOM element with the",2],["replace","MemCache","classes/MemCache.html#M003600","(key, value, expiry = 0, raw = false)","Add +key+ to the cache with value +value+ that expires in +expiry+ seconds, but only if +key+ already",2],["replace_html","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002294","(id, *options_for_render)","Replaces the inner HTML of the DOM element with the given +id+. +options_for_render+ may be either a",2],["replace_or_append!","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002565","(chain)","TODO: Decompose into more Array like behavior ",2],["replay","Rails::Generator::Manifest","classes/Rails/Generator/Manifest.html#M000322","(target = nil)","Replay recorded actions. ",2],["report","ActiveSupport::Testing::Performance::Performer","classes/ActiveSupport/Testing/Performance/Performer.html#M003188","()","",2],["report","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M003197","()","",2],["request","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001404","(method, path, *arguments)","Makes request to remote service. ",2],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#M001695","(realm = \"Application\")","",2],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#M001710","(realm = \"Application\", message = nil)","Render output including the HTTP Digest authentication header ",2],["request_method","ActionController::Request","classes/ActionController/Request.html#M001825","()","Returns the true HTTP request \\method as a lowercase symbol, such as <tt>:get</tt>. If the request \\method",2],["request_origin","ActionController::Base","classes/ActionController/Base.html#M001608","()","",2],["request_parameters","ActionController::Request","classes/ActionController/Request.html#M001892","()","Alias for #POST",2],["request_setup","MemCache","classes/MemCache.html#M003621","(key)","Performs setup for making a request with +key+ from memcached.  Returns the server to fetch the key from",2],["request_uri","ActionController::Request","classes/ActionController/Request.html#M001873","()","Returns the request URI, accounting for server idiosyncrasies. WEBrick includes the full URL. IIS leaves",2],["request_via_redirect","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001708","(http_method, path, parameters = nil, headers = nil)","Performs a request using the specified method, following any subsequent redirect. Note that the redirects",2],["requestify","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001743","(parameters, prefix=nil)","Convert the given parameters to a request string. The parameters may be a string, +nil+, or a Hash. ",2],["requests","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001383","()","",2],["requests","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001470","()","Returns an array of all request objects that have been sent to the mock.  You can use this to check if",2],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001175","(table_names = nil)","",2],["require_frameworks","Rails::Initializer","classes/Rails/Initializer.html#M000045","()","Requires all frameworks specified by the Configuration#frameworks list. By default, all frameworks (Active",2],["require_library_or_gem","Kernel","classes/Kernel.html#M002790","(library_name)","Require a library with fallback to RubyGems.  Warnings during library loading are silenced to increase",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000895","()","Returns true if its safe to reload the connection between requests for development mode. ",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001047","()","",2],["requires_session_id?","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002048","(data)","",2],["rescue_action","ActionController::Rescue","classes/ActionController/Rescue.html#M001872","(exception)","Exception handler called when the performance of an action raises an exception. ",2],["rescue_action_in_public","ActionController::Rescue","classes/ActionController/Rescue.html#M001875","(exception)","Overwrite to implement public exception handling (for requests answering false to <tt>local_request?</tt>).",2],["rescue_action_in_public!","ActionController::TestCase","classes/ActionController/TestCase.html#M002067","()","Cause the action to be rescued according to the regular rules for rescue_action when the visitor is not",2],["rescue_action_locally","ActionController::Rescue","classes/ActionController/Rescue.html#M001883","(exception)","Render detailed diagnostics for unhandled exceptions rescued from a controller action. ",2],["rescue_action_without_handler","ActionController::Rescue","classes/ActionController/Rescue.html#M001887","(exception)","",2],["rescue_action_without_handler","ActionController::TestCase::RaiseActionExceptions","classes/ActionController/TestCase/RaiseActionExceptions.html#M002060","(e)","",2],["rescue_from","ActiveSupport::Rescuable::ClassMethods","classes/ActiveSupport/Rescuable/ClassMethods.html#M003164","(*klasses, &block)","Rescue exceptions raised in controller actions. <tt>rescue_from</tt> receives a series of exception classes",2],["rescue_with_handler","ActiveSupport::Rescuable","classes/ActiveSupport/Rescuable.html#M003165","(exception)","Tries to rescue the exception by looking up and calling a registered handler. ",2],["rescues_path","ActionController::Rescue","classes/ActionController/Rescue.html#M001896","(template_name)","",2],["reserved_key","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003472","(key)","",2],["reset","MemCache","classes/MemCache.html#M003605","()","Reset the connection to all memcache servers.  This should be called if there is a problem with a cache",2],["reset!","ActionController::Integration::Runner","classes/ActionController/Integration/Runner.html#M001747","()","Reset the current session. This is useful for testing multiple sessions in a single test case. ",2],["reset!","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001696","()","Resets the instance. This can be used to reset the state information in an existing session instance,",2],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000894","()","Reset the state of this connection, directing the DBMS to clear transactions and other connection-related",2],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000929","()","",2],["reset!","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001479","()","Deletes all logged requests and responses. ",2],["reset_cache","Fixtures","classes/Fixtures.html#M001131","(connection = nil)","",2],["reset_cache_if_stale!","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate.html#M002395","()","",2],["reset_column_information","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000513","()","Resets all the cached information about columns, which will cause them to be reloaded on the next request.",2],["reset_counters","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000480","(id, *counters)","Resets one or more counter caches to their correct value using an SQL count query.  This is useful when",2],["reset_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002360","(name = \"default\")","Resets a cycle so that it starts from the first element the next time it is called. Pass in +name+ to",2],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001129","()","Reset the column used for optimistic locking back to the +lock_version+ default. ",2],["reset_memoizations!","I18n::Backend::Memoize","classes/I18n/Backend/Memoize.html#M003490","(locale=nil)","",2],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000778","(table, column, sequence = nil)","Set the sequence to the max value of the table's column. ",2],["reset_session","ActionController::Base","classes/ActionController/Base.html#M001590","()","Resets the session by clearing out all the objects stored within and initializing a new session object.",2],["reset_session","ActionController::Request","classes/ActionController/Request.html#M001900","()","",2],["reset_sources","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000285","()","Reset the source list. ",2],["reset_target!","ActiveRecord::Associations::HasOneThroughAssociation","classes/ActiveRecord/Associations/HasOneThroughAssociation.html#M000373","()","",2],["reset_variables_added_to_assigns","ActionController::Base","classes/ActionController/Base.html#M001607","()","",2],["resolve","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003407","(locale, object, subject, options = nil)","Resolves a translation. If the given subject is a Symbol, it will be translated with the given options.",2],["resolve_link","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003456","(locale, key)","",2],["resource","ActionController::Resources","classes/ActionController/Resources.html#M001936","(*entities, &block)","Creates named routes for implementing verb-oriented controllers for a singleton \\resource. A singleton",2],["resources","ActionController::Resources","classes/ActionController/Resources.html#M001935","(*entities, &block)","Creates named routes for implementing verb-oriented controllers for a collection \\resource. For example:",2],["respond_to","ActionController::MimeResponds::InstanceMethods","classes/ActionController/MimeResponds/InstanceMethods.html#M001779","(*types, &block)","Without web-service support, an action which collects the data for displaying a list of people might",2],["respond_to","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001476","(*args)","Accepts a block which declares a set of requests and responses for the HttpMock to respond to in the",2],["respond_to?","ActionController::Reloader::BodyWrapper","classes/ActionController/Reloader/BodyWrapper.html#M001816","(symbol, include_private = false)","",2],["respond_to?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000530","(method_id, include_private = false)","",2],["respond_to?","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001195","(method, include_private = false)","",2],["respond_to?","ActiveResource::Base","classes/ActiveResource/Base.html#M001426","(method, include_priv = false)","A method to determine if an object responds to a message (e.g., a method call). In Active Resource, a",2],["respond_to?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003111","(method, include_private=false)","Returns +true+ if _obj_ responds to the given method. Private methods are included in the search only",2],["respond_to?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003290","(sym, include_priv = false)","Ensure proxy class responds to all methods that underlying time instance responds to. ",2],["respond_to?","CGI::Cookie","classes/CGI/Cookie.html#M001624","(method, include_private = false)","FIXME: work around broken 1.8.7 DelegateClass#respond_to? ",2],["respond_to_without_attributes?","ActiveResource::Base","classes/ActiveResource/Base.html#M001427","(method, include_priv = false)","Alias for #respond_to?",2],["response_code_for_rescue","ActionController::Rescue","classes/ActionController/Rescue.html#M001898","(exception)","",2],["response_from_page_or_rjs","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001526","()","+assert_select+ and +css_select+ call this to obtain the content in the HTML page, or from all the RJS",2],["response_from_page_or_rjs","ActionView::TestCase","classes/ActionView/TestCase.html#M002456","()","Support the selector assertions Need to experiment if this priority is the best one: rendered => output_buffer",2],["responses","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001471","()","Returns the list of requests and their mocked responses. Look up a response for a request using responses.assoc(request).",2],["restart!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000019","()","",2],["restart_handler","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000018","(signal)","",2],["restore!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000022","()","",2],["retrieve_connection","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000722","()","",2],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#M000686","(klass)","",2],["returning","Object","classes/Object.html#M002885","(value)","Returns +value+ after yielding +value+ to the block. This simplifies the process of constructing an object,",2],["reveal","BlankSlate","classes/BlankSlate.html#M003297","(name)","Redefine a previously hidden method so that it may be called on a blank slate object. ",2],["reverse","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003137","()","Reverses all characters in the string. Example: 'Café'.mb_chars.reverse.to_s #=> 'éfaC' ",2],["reverse_merge","ActiveSupport::CoreExtensions::Hash::ReverseMerge","classes/ActiveSupport/CoreExtensions/Hash/ReverseMerge.html#M002769","(other_hash)","Performs the opposite of <tt>merge</tt>, with the keys and values from the first hash taking precedence",2],["reverse_merge","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002758","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["reverse_merge!","ActiveSupport::CoreExtensions::Hash::ReverseMerge","classes/ActiveSupport/CoreExtensions/Hash/ReverseMerge.html#M002771","(other_hash)","Performs the opposite of <tt>merge</tt>, with the keys and values from the first hash taking precedence",2],["reverse_sql_order","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000536","(order_query)","",2],["reverse_update","ActiveSupport::CoreExtensions::Hash::ReverseMerge","classes/ActiveSupport/CoreExtensions/Hash/ReverseMerge.html#M002772","(other_hash)","Alias for #reverse_merge!",2],["rewind","Rails::Generator::Manifest","classes/Rails/Generator/Manifest.html#M000323","(target = nil)","Rewind recorded actions. ",2],["rewrite_asset_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002179","(source)","Break out the asset path rewrite in case plugins wish to put the asset id someplace other than the query",2],["rfc2822","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003244","()","",2],["rfc822","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003245","()","Alias for #rfc2822",2],["rindex","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003127","(needle, offset=nil)","Returns the position _needle_ in the string, counting in codepoints, searching backward from _offset_",2],["rjust","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003129","(integer, padstr=' ')","Works just like <tt>String#rjust</tt>, only integer specifies characters instead of bytes. Example: \"¾",2],["rollback_active_record_state!","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001288","()","Reset id and @new_record if the transaction rolls back. ",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000769","()","Rolls back the transaction (and turns on auto-committing). Must be done if the transaction block raises",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001002","()","Aborts a transaction. ",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000903","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000938","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001006","()","",2],["root","ActionController::Routing::RouteSet::Mapper","classes/ActionController/Routing/RouteSet/Mapper.html#M001969","(options = {})","Creates a named route called \"root\" for matching the root level request. ",2],["root","Rails","classes/Rails.html#M000032","()","",2],["round_with_precision","ActiveSupport::CoreExtensions::Float::Rounding","classes/ActiveSupport/CoreExtensions/Float/Rounding.html#M002728","(precision = nil)","Rounds the float with the specified precision. x = 1.337 x.round    # => 1 x.round(1) # => 1.3 x.round(2)",2],["route_resources","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000274","(*resources)","",2],["route_resources","Rails::Generator::Commands::Destroy","classes/Rails/Generator/Commands/Destroy.html#M000298","(*resources)","",2],["route_resources","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000313","(*resources)","",2],["routing_type","ActionController::PolymorphicRoutes","classes/ActionController/PolymorphicRoutes.html#M001809","(options)","",2],["rstrip","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003132","()","Strips entire range of Unicode whitespace from the right of the string. ",2],["run","ActionController::Reloader","classes/ActionController/Reloader.html#M001817","(lock = @@default_lock)","",2],["run","ActiveSupport::Callbacks::CallbackChain","classes/ActiveSupport/Callbacks/CallbackChain.html#M002564","(object, options = {}, &terminator)","",2],["run","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M003182","(result)","",2],["run","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M003190","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M003196","()","",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","classes/ActiveSupport/Testing/SetupAndTeardown/ForClassicTestUnit.html#M003183","(result)","This redefinition is unfortunate but test/unit shows us no alternative. Doubly unfortunate: hax to support",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","classes/ActiveSupport/Testing/SetupAndTeardown/ForMiniTest.html#M003179","(runner)","",2],["run","Rails::Generator::Scripts::Base","classes/Rails/Generator/Scripts/Base.html#M000341","(args = [], runtime_options = {})","Run the generator script.  Takes an array of unparsed arguments and a hash of parsed arguments, takes",2],["run","Rails::Initializer","classes/Rails/Initializer.html#M000038","(command = :process, configuration = Configuration.new)","Runs the initializer. By default, this will invoke the #process method, which simply executes all of",2],["run_callbacks","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks.html#M002593","(kind, options = {}, &block)","Runs all the callbacks defined for the given options. If a block is given it will be called after each",2],["run_gc!","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000023","()","",2],["run_in_transaction?","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001179","()","",2],["run_install_hook","Plugin","classes/Plugin.html#M000159","()","",2],["run_prepare_callbacks","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001637","()","",2],["run_profile","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M003186","(metric)","",2],["run_test","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M003184","(metric, mode)","",2],["run_uninstall_hook","Plugin","classes/Plugin.html#M000160","()","",2],["run_warmup","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M003185","()","",2],["s_","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003536","(msgid, separator = '|')","Alias for #sgettext",2],["safe_to_array","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000553","(o)","Object#to_a is deprecated, though it does have the desired behavior ",2],["sample","ActiveSupport::CoreExtensions::Array::RandomAccess","classes/ActiveSupport/CoreExtensions/Array/RandomAccess.html#M002613","(n=nil)","Backport of Array#sample based on Marc-Andre Lafortune's http://github.com/marcandre/backports/ ",2],["sanitize","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M002285","(html, options = {})","This +sanitize+ helper will html encode all tags and strip all attributes that aren't specifically allowed.",2],["sanitize","HTML::FullSanitizer","classes/HTML/FullSanitizer.html#M002106","(text, options = {})","",2],["sanitize","HTML::Sanitizer","classes/HTML/Sanitizer.html#M002102","(text, options = {})","",2],["sanitize_css","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M002286","(style)","Sanitizes a block of CSS code. Used by +sanitize+ when it comes across a style attribute. ",2],["sanitize_css","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M002110","(style)","Sanitizes a block of css code.  Used by #sanitize when it comes across a style attribute ",2],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000787","(limit)","Sanitizes the given LIMIT parameter in order to prevent SQL injection. +limit+ may be anything that can",2],["sanitize_sql_array","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000618","(ary)","Accepts an array of conditions.  The array has each value sanitized and interpolated into the SQL statement.",2],["sanitize_sql_for_assignment","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000598","(assignments)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_for_conditions","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000597","(condition, table_name = quoted_table_name)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_hash_for_assignment","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000617","(attrs)","Sanitizes a hash of attribute/value pairs into SQL conditions for a SET clause. { :status => nil, :group_id",2],["sanitize_sql_hash_for_conditions","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000613","(attrs, default_table_name = quoted_table_name)","Sanitizes a hash of attribute/value pairs into SQL conditions for a WHERE clause. { :name => \"foo'bar\",",2],["sanitize_to_id","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002254","(name)","see http://www.w3.org/TR/html4/types.html#type-name ",2],["sanitizeable?","HTML::LinkSanitizer","classes/HTML/LinkSanitizer.html#M002108","(text)","",2],["sanitizeable?","HTML::Sanitizer","classes/HTML/Sanitizer.html#M002103","(text)","",2],["save","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000639","()","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001270","()","",2],["save","ActiveResource::Base","classes/ActiveResource/Base.html#M001409","()","A method to \\save (+POST+) or \\update (+PUT+) a resource.  It delegates to +create+ if a \\new object,",2],["save","Repositories","classes/Repositories.html#M000177","()","",2],["save!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000640","()","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save_belongs_to_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000408","(reflection)","Saves the associated record if it's new or <tt>:autosave</tt> is enabled on the association. In addition,",2],["save_collection_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000406","(reflection)","Saves any new associated records, or all loaded autosave associations if <tt>:autosave</tt> is enabled",2],["save_has_one_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000407","(reflection)","Saves the associated record if it's new or <tt>:autosave</tt> is enabled on the association. In addition,",2],["save_with_validation","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001356","(perform_validation = true)","The validation process on save can be skipped by passing false. The regular Base#save method is replaced",2],["save_with_validation","ActiveResource::Validations","classes/ActiveResource/Validations.html#M001500","()","Validate a resource and save (POST) it to the remote web service. ",2],["save_with_validation!","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001357","()","Attempts to save the record just like Base#save but will raise a RecordInvalid exception instead of returning",2],["say","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001164","(message, subitem=false)","",2],["say_with_time","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001165","(message)","",2],["schema_format","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000455","","Specifies the format to use when dumping the database schema with Rails' Rakefile.  If :sql, the schema",2],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001018","()","Returns the active schema search path. ",2],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001017","(schema_csv)","Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have",2],["scope?","ActiveRecord::DynamicScopeMatch","classes/ActiveRecord/DynamicScopeMatch.html#M001118","()","",2],["scope_keys_by_partial","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M002345","(keys)","",2],["scoped","ActiveRecord::NamedScope::ClassMethods","classes/ActiveRecord/NamedScope/ClassMethods.html#M001187","(scope, &block)","",2],["scopes","ActiveRecord::NamedScope::ClassMethods","classes/ActiveRecord/NamedScope/ClassMethods.html#M001186","()","",2],["scrape","Commands::Discover","classes/Commands/Discover.html#M000221","(uri)","",2],["search_dir","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002519","(dir, &callback)","",2],["second","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002596","()","Equal to <tt>self[1]</tt>. ",2],["second","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002854","()","Alias for #seconds",2],["seconds","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002853","()","",2],["seconds_since_midnight","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002692","()","Seconds since midnight: DateTime.now.seconds_since_midnight ",2],["seconds_since_midnight","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002968","()","Seconds since midnight: Time.now.seconds_since_midnight ",2],["seconds_since_unix_epoch","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002705","()","",2],["secret_key","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001739","()","Set in /initializers/session_store.rb, and loaded even if sessions are not in use. ",2],["secure=","CGI::Cookie","classes/CGI/Cookie.html#M001621","(val)","Sets whether the Cookie is a secure cookie or not. ",2],["secure_compare","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M003105","(a, b)","For <= 1.8.6 ",2],["secure_compare","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M003104","(a, b)","constant-time comparison algorithm to prevent timing attacks ",2],["select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002225","(object, method, choices, options = {}, html_options = {})","Create a select tag and a series of contained option tags for the provided object and method. The option",2],["select","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002292","(pattern)","Returns a collection reference by finding it through a CSS +pattern+ in the DOM. This collection can",2],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000783","(sql, name = nil)","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000996","(sql, name = nil)","",2],["select","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001055","(sql, name = nil)","Executes a SELECT query and returns the results, performing any data type conversions that are required",2],["select","HTML::Selector","classes/HTML/Selector.html#M002119","(root)","Selects and returns an array with all matching elements, beginning with one node and traversing through",2],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000752","(sql, name = nil)","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select_all_rows","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000435","(options, join_dependency)","",2],["select_all_with_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000772","(*args)","",2],["select_date","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002206","(date = Date.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, and day) pre-selected with the +date+. It's possible",2],["select_datetime","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002205","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, day, hour, and minute) pre-selected with the",2],["select_day","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002213","(date, options = {}, html_options = {})","Returns a select tag with options for each of the days 1 through 31 with the current day selected. The",2],["select_first","HTML::Selector","classes/HTML/Selector.html#M002120","(root)","Similar to #select but returns the first matching element. Returns +nil+ if no element matches the selector.",2],["select_hour","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002211","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the hours 0 through 23 with the current hour selected.",2],["select_limited_ids_list","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000438","(options, join_dependency)","",2],["select_minute","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002210","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected.",2],["select_month","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002215","(date, options = {}, html_options = {})","Returns a select tag with options for each of the months January through December with the current month",2],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000753","(sql, name = nil)","Returns a record hash with the column names as keys and column values as values. ",2],["select_raw","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001059","(sql, name = nil)","",2],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000756","(sql, name = nil)","Returns an array of arrays containing the field values. Order is the same as that returned by +columns+.",2],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000930","(sql, name = nil)","DATABASE STATEMENTS ====================================== ",2],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000984","(sql, name = nil)","Executes a SELECT query and returns an array of rows. Each row is an array of field values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001063","(sql, name = nil)","",2],["select_second","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002208","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the seconds 0 through 59 with the current second selected.",2],["select_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002224","(name, option_tags = nil, options = {})","Creates a dropdown selection box, or if the <tt>:multiple</tt> option is set to true, a multiple choice",2],["select_time","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002207","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for hour and minute) You can set <tt>:time_separator</tt> key",2],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000754","(sql, name = nil)","Returns a single value from a record ",2],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000755","(sql, name = nil)","Returns an array of the values of the first column in a select: select_values(\"SELECT id FROM companies",2],["select_year","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002218","(date, options = {}, html_options = {})","Returns a select tag with options for each of the five years on each side of the current, which is selected.",2],["selects_tables","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000448","(options)","",2],["self_and_parents","I18n::Locale::Tag::Parents","classes/I18n/Locale/Tag/Parents.html#M003555","()","",2],["send_actions","Rails::Generator::Manifest","classes/Rails/Generator/Manifest.html#M000327","(target, actions)","",2],["send_data","ActionController::Streaming","classes/ActionController/Streaming.html#M002055","(data, options = {})","Sends the given binary data to the browser. This method is similar to <tt>render :text => data</tt>,",2],["send_file","ActionController::Streaming","classes/ActionController/Streaming.html#M002049","(path, options = {})","Sends the file, by default streaming it 4096 bytes at a time. This way the whole file doesn't need to",2],["send_file_headers!","ActionController::Streaming","classes/ActionController/Streaming.html#M002056","(options)","",2],["send_response","ActionController::Base","classes/ActionController/Base.html#M001551","()","",2],["sending_file?","ActionController::Response","classes/ActionController/Response.html#M001921","()","",2],["serialize","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000490","(attr_name, class_name = Object)","If you have an attribute that needs to be saved to the database as an object, and retrieved as the same",2],["serialized_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000491","()","Returns a hash of all the attributes that have been specified for serialization as keys and their class",2],["server_port","ActionController::Request","classes/ActionController/Request.html#M001903","()","",2],["server_software","ActionController::Request","classes/ActionController/Request.html#M001857","()","Returns the lowercase name of the HTTP server software. ",2],["servers=","MemCache","classes/MemCache.html#M003591","(servers)","Set the servers that the requests will be distributed between.  Entries can be either strings of the",2],["session","ActionController::Request","classes/ActionController/Request.html#M001894","()","",2],["session","ActionController::SessionManagement::ClassMethods","classes/ActionController/SessionManagement/ClassMethods.html#M002038","(*args)","",2],["session","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002089","()","",2],["session=","ActionController::SessionManagement::ClassMethods","classes/ActionController/SessionManagement/ClassMethods.html#M002036","(options = {})","",2],["session_enabled?","ActionController::Base","classes/ActionController/Base.html#M001556","()","",2],["session_id","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001988","()","",2],["session_id_column","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001258","","The session id field defaults to 'session_id'. ",2],["session_options","ActionController::Request","classes/ActionController/Request.html#M001901","()","",2],["session_options","ActionController::SessionManagement::ClassMethods","classes/ActionController/SessionManagement/ClassMethods.html#M002037","()","Returns the hash used to configure the session. Example use: ActionController::Base.session_options[:secure]",2],["session_options=","ActionController::Request","classes/ActionController/Request.html#M001902","(options)","",2],["session_store","ActionController::SessionManagement::ClassMethods","classes/ActionController/SessionManagement/ClassMethods.html#M002035","()","Returns the session store class currently used. ",2],["session_store=","ActionController::SessionManagement::ClassMethods","classes/ActionController/SessionManagement/ClassMethods.html#M002031","(store)","Set the session store to be used for keeping the session data between requests. By default, sessions",2],["set","MemCache","classes/MemCache.html#M003597","(key, value, expiry = 0, raw = false)","",2],["set_association_collection_records","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000358","(id_to_record_map, reflection_name, associated_records, key)","",2],["set_association_single_records","ActiveRecord::AssociationPreload::ClassMethods","classes/ActiveRecord/AssociationPreload/ClassMethods.html#M000359","(id_to_record_map, reflection_name, associated_records, key)","",2],["set_autoload_paths","Rails::Initializer","classes/Rails/Initializer.html#M000044","()","Set the paths from which Rails will automatically load source files, and the load_once paths. ",2],["set_charset","DispatchServlet","classes/DispatchServlet.html#M000136","(header)","",2],["set_comment","I18n::Backend::Gettext::PoData","classes/I18n/Backend/Gettext/PoData.html#M003444","(msgid_or_sym, comment)","",2],["set_conditional_cache_control!","ActionController::Response","classes/ActionController/Response.html#M001930","()","",2],["set_content_length!","ActionController::Response","classes/ActionController/Response.html#M001932","()","Don't set the Content-Length for block-based bodies as that would mean reading it all into memory. Not",2],["set_cookie","ActionController::Response","classes/ActionController/Response.html#M001927","(key, value)","",2],["set_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002363","(name, cycle_object)","",2],["set_default_backend","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M003080","()","",2],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001172","(class_names = {})","",2],["set_inheritance_column","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000503","(value = nil, &block)","Sets the name of the inheritance column to use to the given value, or (if the value # is nil or false)",2],["set_load_path","Rails::Initializer","classes/Rails/Initializer.html#M000043","()","Set the <tt>$LOAD_PATH</tt> based on the value of Configuration#autoload_paths. Duplicates are removed.",2],["set_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001126","(value = nil, &block)","Set the column to use for optimistic locking. Defaults to +lock_version+. ",2],["set_primary_key","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000502","(value = nil, &block)","Sets the name of the primary key column to use to the given value, or (if the value is nil or false)",2],["set_root_path!","Rails::Configuration","classes/Rails/Configuration.html#M000096","()","Set the root_path to RAILS_ROOT and canonicalize it. ",2],["set_sequence_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000504","(value = nil, &block)","Sets the name of the sequence to use when generating ids to the given value, or (if the value is nil",2],["set_session","ActionController::Session::AbstractStore","classes/ActionController/Session/AbstractStore.html#M002019","(env, sid, session_data)","",2],["set_session","ActionController::Session::MemCacheStore","classes/ActionController/Session/MemCacheStore.html#M002025","(env, sid, session_data)","",2],["set_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001273","(env, sid, session_data)","",2],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000955","()","Enable standard-conforming strings if available. ",2],["set_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000501","(value = nil, &block)","Sets the table name to use to the given value, or (if the value is nil or false) to the value returned",2],["setup_controller_request_and_response","ActionController::TestCase","classes/ActionController/TestCase.html#M002066","()","",2],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001176","(table_names = nil)","",2],["setup_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001180","()","",2],["setup_sessid_compatibility!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001247","()","Compatibility with tables using sessid instead of session_id. ",2],["setup_with_controller","ActionView::TestCase","classes/ActionView/TestCase.html#M002446","()","",2],["sgettext","I18n::Gettext::Helpers","classes/I18n/Gettext/Helpers.html#M003535","(msgid, separator = '|')","",2],["should_run_callback?","ActiveSupport::Callbacks::Callback","classes/ActiveSupport/Callbacks/Callback.html#M002583","(*args)","",2],["show","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002297","(*ids)","Shows hidden DOM elements with the given +ids+. Example: # Show a few people # Generates: [\"person_6\",",2],["show_variable","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000982","(name)","SHOW VARIABLES LIKE 'name' ",2],["silence","ActionController::Benchmarking::ClassMethods","classes/ActionController/Benchmarking/ClassMethods.html#M001529","()","Silences the logger for the duration of the block. ",2],["silence","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000526","()","Silences the logger for the duration of the block. ",2],["silence","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M002497","(backtrace)","",2],["silence","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002500","(temporary_level = ERROR)","Silences the logger for the duration of the block. ",2],["silence","Logger","classes/Logger.html#M002795","(temporary_level = Logger::ERROR)","Silences the logger for the duration of the block. ",2],["silence!","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002571","()","",2],["silence_stream","Kernel","classes/Kernel.html#M002788","(stream)","Silences any stream for the duration of the block. silence_stream(STDOUT) do puts 'This will never be",2],["silence_warnings","Kernel","classes/Kernel.html#M002785","()","Sets $VERBOSE to nil for the duration of the block and back to its original value afterwards. silence_warnings",2],["silencer","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M002499","","Set to false to disable the silencer ",2],["silencer","Logger","classes/Logger.html#M002794","","Set to false to disable the silencer ",2],["simple_format","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002355","(text, html_options={})","Returns +text+ transformed into HTML using simple formatting rules. Two or more consecutive newlines(<tt>\\n\\n</tt>)",2],["simple_selector","HTML::Selector","classes/HTML/Selector.html#M002123","(statement, values, can_negate = true)","Creates a simple selector given the statement and array of substitution values. Returns a hash with the",2],["simplified_type","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000836","(field_type)","",2],["since","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002638","(seconds)","Converts Date to a Time (or DateTime if necessary) with the time portion set to the beginning of the",2],["since","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002706","(seconds)","Returns a new DateTime representing the time a number of seconds since the instance time Do not use this",2],["since","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002867","(time = ::Time.now)","Reads best with argument:  10.minutes.since(time) ",2],["since","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002972","(seconds)","Returns a new Time representing the time a number of seconds since the instance time, this is basically",2],["since","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003035","(time = ::Time.current)","Calculates a new Time or Date that is as far in the future as this Duration represents. ",2],["since","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003266","(other)","",2],["singleton_class","Kernel","classes/Kernel.html#M002791","()","Returns the object's singleton class. ",2],["singleton_class","Object","classes/Object.html#M002889","()","Returns the object's singleton class. ",2],["singular","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003049","(rule, replacement)","Specifies a new singularization rule and its replacement. The rule can either be a string or a regular",2],["singular_class_name","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M001821","(record_or_class)","Returns the singular class name of a record or class. Examples: singular_class_name(post)           ",2],["singularize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002919","()","The reverse of +pluralize+, returns the singular form of a word in a string. \"posts\".singularize    ",2],["singularize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003056","(word)","The reverse of +pluralize+, returns the singular form of a word in a string. Examples: \"posts\".singularize",2],["site","ActiveResource::Base","classes/ActiveResource/Base.html#M001330","()","Gets the URI of the REST resources to map for this class.  The site variable is required for Active Resource's",2],["site=","ActiveResource::Base","classes/ActiveResource/Base.html#M001332","(site)","Sets the URI of the REST resources to map for this class to the value in the +site+ argument. The site",2],["site=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001385","(site)","Set URI for remote service. ",2],["size","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001315","()","Returns the total number of errors added. Two errors added to the same attribute will be counted as such.",2],["size","ActiveRecord::NamedScope::Scope","classes/ActiveRecord/NamedScope/Scope.html#M001193","()","",2],["size","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001486","()","Returns the total number of errors added. Two errors added to the same attribute will be counted as such",2],["size","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003135","()","Returns the number of codepoints in the string ",2],["skip_after_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001680","(*filters)","Removes the specified filters from the +after+ filter chain. Note that this only works for skipping method-reference",2],["skip_before_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001679","(*filters)","Removes the specified filters from the +before+ filter chain. Note that this only works for skipping",2],["skip_filter","ActionController::Filters::ClassMethods","classes/ActionController/Filters/ClassMethods.html#M001682","(*filters)","Removes the specified filters from the filter chain. This only works for method reference (symbol) filters,",2],["slice","ActiveSupport::CoreExtensions::Hash::Slice","classes/ActiveSupport/CoreExtensions/Hash/Slice.html#M002768","(*keys)","Returns a new hash with only the given keys. ",2],["slice","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003138","(*args)","Implements Unicode-aware slice with codepoints. Slicing on one point returns the codepoints for that",2],["slice!","ActiveSupport::CoreExtensions::Hash::Slice","classes/ActiveSupport/CoreExtensions/Hash/Slice.html#M002770","(*keys)","Replaces the hash with only the given keys. Returns a hash contained the removed key/value pairs {:a",2],["slice!","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003140","(*args)","Like <tt>String#slice!</tt>, except instead of byte offsets you specify character offsets. Example: s",2],["socket","MemCache::Server","classes/MemCache/Server.html#M003629","()","Try to connect to the memcached server targeted by this object. Returns the connected socket object on",2],["sort_parts","ActionMailer::Base","classes/ActionMailer/Base.html#M002484","(parts, order = [])","",2],["sortable","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002308","(id, options = {})","Creates a script.aculo.us sortable element. Useful to recreate sortable elements after items get added",2],["sortable_element","ActionView::Helpers::ScriptaculousHelper","classes/ActionView/Helpers/ScriptaculousHelper.html#M002325","(element_id, options = {})","Makes the element with the DOM ID specified by +element_id+ sortable by drag-and-drop and make an Ajax",2],["source","ActionView::Template","classes/ActionView/Template.html#M002424","()","",2],["source_code","ActionController::Routing::Optimisation::Optimiser","classes/ActionController/Routing/Optimisation/Optimiser.html#M001953","()","",2],["source_path","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000196","(relative_source)","Return the full path from the source root for the given path. Example for source_root = '/source': source_path('some/path.rb')",2],["sources","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000281","()","The list of sources where we look, in order, for generators. ",2],["split","ActionView::Template","classes/ActionView/Template.html#M002430","(file)","Returns file split into an array [base_path, name, locale, format, extension] ",2],["split","ActiveSupport::CoreExtensions::Array::Grouping","classes/ActiveSupport/CoreExtensions/Array/Grouping.html#M002610","(value = nil)","Divides the array into one or more subarrays based on a delimiting +value+ or the result of an optional",2],["split","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003118","(*args)","Works just like <tt>String#split</tt>, with the exception that the items in the resulting list are Chars",2],["split_args","Commands::Plugin","classes/Commands/Plugin.html#M000190","(args)","",2],["split_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001382","(options = {})","split an option hash into two hashes, one containing the prefix options, and the other containing the",2],["split_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001441","(options = {})","",2],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000739","()","the maximum length of a SQL query ",2],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001109","()","",2],["squish","ActiveSupport::CoreExtensions::String::Filters","classes/ActiveSupport/CoreExtensions/String/Filters.html#M002914","()","Returns the string, first removing all whitespace on both ends of the string, and then changing remaining",2],["squish!","ActiveSupport::CoreExtensions::String::Filters","classes/ActiveSupport/CoreExtensions/String/Filters.html#M002915","()","Performs a destructive squish. See String#squish. ",2],["ssl?","ActionController::Request","classes/ActionController/Request.html#M001860","()","Is this an SSL request? ",2],["ssl_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001346","()","Returns the SSL options hash. ",2],["ssl_options=","ActiveResource::Base","classes/ActiveResource/Base.html#M001345","(opts={})","Options that will get applied to an SSL connection. * <tt>:key</tt> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA",2],["ssl_options=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001392","(opts={})","Hash of options applied to Net::HTTP instance when +site+ protocol is 'https'. ",2],["stale?","ActionController::Base","classes/ActionController/Base.html#M001586","(options)","Sets the etag and/or last_modified on the response and checks it against the client request. If the request",2],["stale?","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate.html#M002394","()","",2],["stale_session_check!","ActionController::Session::AbstractStore::SessionUtils","classes/ActionController/Session/AbstractStore/SessionUtils.html#M002021","()","",2],["standard_port","ActionController::Request","classes/ActionController/Request.html#M001865","()","Returns the standard \\port number for this request's protocol. ",2],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003709","()","",2],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M003712","(name, attrs = [])","",2],["starts_with?","ActiveSupport::CoreExtensions::String::StartsEndsWith","classes/ActiveSupport/CoreExtensions/String/StartsEndsWith.html#M002950","(prefix)","Does the string start with the specified +prefix+? ",2],["stats","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002532","()","",2],["stats","MemCache","classes/MemCache.html#M003606","()","Returns statistics for each memcached server.  An explanation of the statistics can be found in the memcached",2],["std_offset","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003673","()","Offset from the local time where daylight savings is in effect (seconds). E.g.: utc_offset could be -5",2],["step_with_blockless","ActiveSupport::CoreExtensions::Range::BlocklessStep","classes/ActiveSupport/CoreExtensions/Range/BlocklessStep.html#M002894","(value = 1, &block)","",2],["step_with_blockless","ActiveSupport::CoreExtensions::Range::BlocklessStep","classes/ActiveSupport/CoreExtensions/Range/BlocklessStep.html#M002895","(value = 1, &block)","",2],["sti_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000531","()","",2],["store","ActionController::Flash::FlashHash","classes/ActionController/Flash/FlashHash.html#M001664","(session, key = \"flash\")","",2],["store!","Builder::CSS","classes/Builder/CSS.html#M003334","(sym, &block)","",2],["store_default_translation","I18n::Backend::ActiveRecord::Missing","classes/I18n/Backend/ActiveRecord/Missing.html#M003380","(locale, key, interpolations)","",2],["store_default_translations","I18n::Backend::ActiveRecord::Missing","classes/I18n/Backend/ActiveRecord/Missing.html#M003374","(locale, key, options = {})","",2],["store_link","I18n::Backend::Flatten","classes/I18n/Backend/Flatten.html#M003455","(locale, key, link)","",2],["store_translations","I18n::Backend::ActiveRecord::Implementation","classes/I18n/Backend/ActiveRecord/Implementation.html#M003388","(locale, data, options = {})","",2],["store_translations","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003392","(locale, data, options = {})","This method receives a locale, a data hash and options for storing translations. Should be implemented",2],["store_translations","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003419","(locale, data, options = {})","",2],["store_translations","I18n::Backend::InterpolationCompiler","classes/I18n/Backend/InterpolationCompiler.html#M003478","(locale, data, options = {})","",2],["store_translations","I18n::Backend::KeyValue::Implementation","classes/I18n/Backend/KeyValue/Implementation.html#M003464","(locale, data, options = {})","",2],["store_translations","I18n::Backend::Memoize","classes/I18n/Backend/Memoize.html#M003484","(locale, data, options = {})","",2],["store_translations","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003494","(locale, data, options = {})","Stores translations for the given locale in memory. This uses a deep merge for the translations hash,",2],["strftime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003252","(format)","Replaces <tt>%Z</tt> and <tt>%z</tt> directives with +zone+ and +formatted_offset+, respectively, before",2],["strftime","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003663","(format, utc = Time.now.utc)","Converts a time in UTC to local time and returns it as a string  according to the given format. The formatting",2],["string_to_binary","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000809","(value)","Used to convert from Strings to BLOBs ",2],["string_to_date","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000811","(string)","",2],["string_to_dummy_time","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000813","(string)","",2],["string_to_time","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000812","(string)","",2],["stringify_keys","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002749","()","Return a new hash with all keys converted to strings. ",2],["stringify_keys!","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002754","()","Destructively convert all keys to strings. ",2],["stringify_keys!","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002760","()","",2],["strip","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003134","()","Strips entire range of Unicode whitespace from the right and left of the string. ",2],["strip_links","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M002288","(html)","Strips all link tags from +text+ leaving just the link text. ==== Examples strip_links('<a href=\"http://www.rubyonrails.org\">Ruby",2],["strip_out_controller","ActionController::Base","classes/ActionController/Base.html#M001612","(path)","",2],["strip_tags","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M002287","(html)","Strips all HTML tags from the +html+, including comments.  This uses the html-scanner tokenizer and so",2],["strip_whitespace!","ActionController::Assertions::DomAssertions","classes/ActionController/Assertions/DomAssertions.html#M001504","(nodes)","",2],["structure_dump","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000843","()","Returns a string of <tt>CREATE TABLE</tt> SQL statement(s) for recreating the entire structure of the",2],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002169","(*sources)","Returns a stylesheet link tag for the sources specified as arguments. If you don't specify an extension,",2],["stylesheet_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002166","(source)","Computes the path to a stylesheet asset in the public stylesheets directory. If the +source+ filename",2],["stylesheet_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002181","(source, options)","",2],["subdomains","ActionController::Request","classes/ActionController/Request.html#M001869","(tld_length = 1)","Returns all the \\subdomains as an array, so <tt>[\"dev\", \"www\"]</tt> would be returned for \"dev.www.rubyonrails.org\".",2],["submit_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002240","(value = \"Save changes\", options = {})","Creates a submit button with the text <tt>value</tt> as the caption. ==== Options * <tt>:confirm => 'question?'</tt>",2],["submit_to_remote","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002280","(name, value, options = {})","Returns a button input tag with the element name of +name+ and a value (i.e., display text) of +value+",2],["subtags","I18n::Locale::Tag::Simple","classes/I18n/Locale/Tag/Simple.html#M003559","()","",2],["success?","ActiveResource::Response","classes/ActiveResource/Response.html#M001495","()","",2],["sum","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000549","(column_name, options = {})","Calculates the sum of values on a given column. The value is returned with the same data type of the",2],["sum","Enumerable","classes/Enumerable.html#M002720","(identity = 0, &block)","Calculates a sum from the elements. Examples: payments.sum { |p| p.price * p.tax_rate } payments.sum(&:price)",2],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001048","()","",2],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000884","()","Does this adapter support using DISTINCT within COUNT?  This is +true+ for all adapters except sqlite.",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000885","()","Does this adapter support DDL rollbacks in transactions?  That is, would CREATE TABLE or ALTER TABLE",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000957","()","",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001044","()","",2],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000956","()","",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000882","()","Does this adapter support migrations?  Backend specific, as the abstract adapter always returns +false+.",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000949","()","Does PostgreSQL support migrations? ",2],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000883","()","Can this adapter determine the primary key for tables not attached to an ActiveRecord class, such as",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000886","()","Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite does not. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000958","()","",2],["supports_views?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000997","()","",2],["suppress","Kernel","classes/Kernel.html#M002789","(*exception_classes)","Blocks and ignores any exception passed as argument if raised within the block. suppress(ZeroDivisionError)",2],["suppress_messages","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001166","()","",2],["svn_command","Plugin","classes/Plugin.html#M000166","(cmd, options = {})","",2],["svn_url?","Plugin","classes/Plugin.html#M000153","()","",2],["swap","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001775","(target, *args, &block)","",2],["symbolize_keys","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002755","()","Return a new hash with all keys converted to symbols. ",2],["symbolize_keys!","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002756","()","Destructively convert all keys to symbols. ",2],["symbolize_keys!","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002761","()","",2],["symbolized_path_parameters","ActionController::Request","classes/ActionController/Request.html#M001884","()","The same as <tt>path_parameters</tt> with explicitly symbolized keys. ",2],["synchronize","Module","classes/Module.html#M002837","(*methods)","Synchronize access around a method, delegating synchronization to a particular mutex. A mutex (either",2],["t","ActionController::Translation","classes/ActionController/Translation.html#M002069","(*args)","Alias for #translate",2],["t","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M002342","(keys, options = {})","Alias for #translate",2],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000802","(table_name)","Truncates a table alias according to the limits of the current adapter. ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000731","()","the maximum length of a table alias ",2],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000959","()","Returns the configured supported identifier length supported by PostgreSQL, or report the default of",2],["table_exists?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000506","()","Indicates whether the table associated with this class exists ",2],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#M000803","(table_name)","def tables(name = nil) end ",2],["table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000492","()","Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy",2],["table_name","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001257","","The table name defaults to 'sessions'. ",2],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#M000733","()","the maximum length of a table name ",2],["table_name_prefix","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000449","","Accessor for the name of the prefix string to prepend to every table name. So if set to \"basecamp_\",",2],["table_name_suffix","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000450","","Works like +table_name_prefix+, but appends instead of prepends (set to \"_basecamp\" gives \"projects_basecamp\",",2],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001086","(table_name)","",2],["tableize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002928","()","Creates the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tableize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003071","(class_name)","Create the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001011","(name = nil)","Returns the list of all tables in the schema search path or a specified schema. ",2],["tables_in_hash","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000443","(hash)","",2],["tables_in_string","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000442","(string)","",2],["tag","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002332","(name, options = nil, open = false, escape = true)","Returns an empty HTML tag of type +name+ which by default is XHTML compliant. Set +open+ to true to create",2],["tag","I18n::Locale::Tag","classes/I18n/Locale/Tag.html#M003572","(tag)","Factory method for locale tags. Delegates to the current locale tag implementation. ",2],["tag","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646.html#M003560","(tag)","Parses the given tag and returns a Tag instance if it is valid. Returns false if the given tag is not",2],["tag","I18n::Locale::Tag::Simple","classes/I18n/Locale/Tag/Simple.html#M003557","(tag)","",2],["tag!","Builder::XmlBase","classes/Builder/XmlBase.html#M003353","(sym, *args, &block)","Create a tag named +sym+.  Other than the first argument which is the tag name, the arguments are the",2],["tag_options","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M002339","(options, escape = true)","",2],["tap","Object","classes/Object.html#M002886","()","Yields <code>x</code> to the block, and then returns <code>x</code>. The primary purpose of this method",2],["target","ActiveSupport::Deprecation::DeprecatedObjectProxy","classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html#M003026","()","",2],["target!","Builder::CSS","classes/Builder/CSS.html#M003330","()","Return the target of the builder ",2],["target!","Builder::XmlMarkup","classes/Builder/XmlMarkup.html#M003368","()","Return the target of the builder. ",2],["teardown_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001181","()","",2],["template","ActionView::Base","classes/ActionView/Base.html#M002139","()","Access the current template being rendered. Returns a ActionView::Template object. ",2],["template","Rails::Generator::Commands::Create","classes/Rails/Generator/Commands/Create.html#M000269","(relative_source, relative_destination, template_options = {})","Generate a file for a Rails application using an ERuby template. Looks up and evaluates a template by",2],["template","Rails::Generator::Commands::Destroy","classes/Rails/Generator/Commands/Destroy.html#M000290","(relative_source, relative_destination, file_options = {})","Alias for #file",2],["template","Rails::Generator::Commands::List","classes/Rails/Generator/Commands/List.html#M000307","(relative_source, relative_destination, options = {})","",2],["template","Rails::Generator::Commands::Update","classes/Rails/Generator/Commands/Update.html#M000317","(relative_source, relative_destination, options = {})","",2],["template_files_from_dir","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002390","(dir)","get all the template filenames from the dir ",2],["template_format","ActionController::Request","classes/ActionController/Request.html#M001852","()","Returns a symbolized version of the <tt>:format</tt> parameter of the request. If no \\format is given",2],["template_format","ActionView::Base","classes/ActionView/Base.html#M002138","()","The format to be used when choosing between multiple templates with the same name but differing formats.",2],["template_part_mark","Rails::Generator::Commands::Base","classes/Rails/Generator/Commands/Base.html#M000260","(name, id)","",2],["template_path","ActionMailer::Base","classes/ActionMailer/Base.html#M002482","()","",2],["template_path_for_local_rescue","ActionController::Rescue","classes/ActionController/Rescue.html#M001897","(exception)","",2],["template_path_includes_controller?","ActionController::Base","classes/ActionController/Base.html#M001613","(path)","",2],["template_root","ActionMailer::Base","classes/ActionMailer/Base.html#M002480","()","",2],["template_root","ActionMailer::Base","classes/ActionMailer/Base.html#M002469","()","",2],["template_root=","ActionMailer::Base","classes/ActionMailer/Base.html#M002470","(root)","",2],["template_root=","ActionMailer::Base","classes/ActionMailer/Base.html#M002481","(root)","",2],["templates_dir_from_path","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002389","(path)","",2],["templates_in_path","ActionView::Template::EagerPath","classes/ActionView/Template/EagerPath.html#M002409","()","",2],["terabyte","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002847","()","Alias for #terabytes",2],["terabytes","ActiveSupport::CoreExtensions::Numeric::Bytes","classes/ActiveSupport/CoreExtensions/Numeric/Bytes.html#M002846","()","",2],["test","ActiveSupport::Testing::Declarative","classes/ActiveSupport/Testing/Declarative.html#M003173","(name, &block)","test \"verify something\" do ... end ",2],["tests","ActionController::TestCase","classes/ActionController/TestCase.html#M002061","(controller_class)","Sets the controller class name. Useful if the name can't be inferred from test class. Expects +controller_class+",2],["tests","ActionView::TestCase","classes/ActionView/TestCase.html#M002449","(helper_class)","",2],["text!","Builder::XmlBase","classes/Builder/XmlBase.html#M003355","(text)","Append text to the output target.  Escape any markup.  May be used within the markup brackets as: builder.p",2],["text!","Builder::XmlEvents","classes/Builder/XmlEvents.html#M003364","(text)","",2],["text?","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000796","()","Returns +true+ if the column is either of type string or text. ",2],["text_area","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002220","(object_name, method, options = {})","Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified",2],["text_area_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002235","(name, content = nil, options = {})","Creates a text input area; use a textarea for longer text inputs such as blog posts or descriptions.",2],["text_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M002214","(object_name, method, options = {})","Returns an input tag of the \"text\" type tailored for accessing a specified attribute (identified by +method+)",2],["text_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002227","(name, value = nil, options = {})","Creates a standard text field; use these text fields to input smaller chunks of text like a username",2],["textilize","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002352","(text, *options)","Returns the text with all the Textile[http://www.textism.com/tools/textile] codes turned into HTML tags.",2],["textilize_without_paragraph","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002353","(text)","Returns the text with all the Textile codes turned into HTML tags, but without the bounding <p> tag that",2],["third","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002597","()","Equal to <tt>self[2]</tt>. ",2],["thread_local_key","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002560","()","",2],["threadsafe!","Rails::Configuration","classes/Rails/Configuration.html#M000097","()","Enable threaded mode. Allows concurrent requests to controller actions and multiple database connections.",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003158","(string)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003149","()","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003201","()","Returns a Time or DateTime instance that represents the time in +time_zone+. ",2],["time_ago_in_words","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002198","(from_time, include_seconds = false)","Like distance_of_time_in_words, but where <tt>to_time</tt> is fixed to <tt>Time.now</tt>. ==== Examples",2],["time_select","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M002202","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing",2],["time_with_datetime_fallback","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Calculations/ClassMethods.html#M002959","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","Returns a new Time if requested year can be accommodated by Ruby's Time class (i.e., if year is within",2],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002242","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","Returns a string of option tags for pretty much any time zone in the world. Supply a TimeZone name as",2],["time_zone_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M002232","(object, method, priority_zones = nil, options = {}, html_options = {})","Return select and option tags for the given object and method, using #time_zone_options_for_select to",2],["timeout","ActiveResource::Base","classes/ActiveResource/Base.html#M001344","()","Gets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Base","classes/ActiveResource/Base.html#M001343","(timeout)","Sets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001390","(timeout)","Set the number of seconds after which HTTP requests to the remote service should time out. ",2],["timestamp_column_names","Fixtures","classes/Fixtures.html#M001147","()","",2],["timestamped_migrations","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000457","","Specify whether or not to use timestamps for migration numbers ",2],["timestamps","ActiveRecord::ConnectionAdapters::Table","classes/ActiveRecord/ConnectionAdapters/Table.html#M000868","()","Adds timestamps (created_at and updated_at) columns to the table. See SchemaStatements#add_timestamps",2],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000857","(*args)","Appends <tt>:datetime</tt> columns <tt>:created_at</tt> and <tt>:updated_at</tt> to the table. ",2],["titlecase","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002923","()","Alias for #titleize",2],["titleize","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002922","()","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["titleize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003060","(word)","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["to","ActiveSupport::CoreExtensions::Array::Access","classes/ActiveSupport/CoreExtensions/Array/Access.html#M002595","(position)","Returns the beginning of the array up to +position+. %w( a b c d ).to(0)  # => %w( a ) %w( a b c d ).to(2)",2],["to_a","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003277","()","",2],["to_a","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646.html#M003568","()","",2],["to_a","I18n::Locale::Tag::Simple","classes/I18n/Locale/Tag/Simple.html#M003565","()","",2],["to_date","ActiveSupport::CoreExtensions::Date::Conversions","classes/ActiveSupport/CoreExtensions/Date/Conversions.html#M002668","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_date","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002698","()","Converts self to a Ruby Date object; time portion is discarded ",2],["to_date","ActiveSupport::CoreExtensions::String::Conversions","classes/ActiveSupport/CoreExtensions/String/Conversions.html#M002912","()","",2],["to_date","ActiveSupport::CoreExtensions::Time::Conversions","classes/ActiveSupport/CoreExtensions/Time/Conversions.html#M002960","()","Converts a Time object to a Date, dropping hour, minute, and second precision. my_time = Time.now  #",2],["to_datetime","ActiveSupport::CoreExtensions::Date::Conversions","classes/ActiveSupport/CoreExtensions/Date/Conversions.html#M002671","()","Converts a Date instance to a DateTime, where the time is set to the beginning of the day and UTC offset",2],["to_datetime","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002700","()","To be able to keep Times, Dates and DateTimes interchangeable on conversions ",2],["to_datetime","ActiveSupport::CoreExtensions::String::Conversions","classes/ActiveSupport/CoreExtensions/String/Conversions.html#M002913","()","",2],["to_datetime","ActiveSupport::CoreExtensions::Time::Conversions","classes/ActiveSupport/CoreExtensions/Time/Conversions.html#M002962","()","Converts a Time instance to a Ruby DateTime instance, preserving UTC offset. my_time = Time.now    #",2],["to_datetime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003283","()","",2],["to_f","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002703","()","Converts self to a floating-point number of seconds since the Unix epoch  ",2],["to_f","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003278","()","",2],["to_formatted_s","ActiveSupport::CoreExtensions::Array::Conversions","classes/ActiveSupport/CoreExtensions/Array/Conversions.html#M002606","(format = :default)","Converts a collection of elements into a formatted string by calling <tt>to_s</tt> on all elements and",2],["to_formatted_s","ActiveSupport::CoreExtensions::BigDecimal::Conversions","classes/ActiveSupport/CoreExtensions/BigDecimal/Conversions.html#M002619","(format = DEFAULT_STRING_FORMAT)","",2],["to_formatted_s","ActiveSupport::CoreExtensions::Date::Conversions","classes/ActiveSupport/CoreExtensions/Date/Conversions.html#M002664","(format = :default)","Convert to a formatted string. See DATE_FORMATS for predefined formats. This method is aliased to <tt>to_s</tt>.",2],["to_formatted_s","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002694","(format = :default)","Convert to a formatted string. See Time::DATE_FORMATS for predefined formats. This method is aliased",2],["to_formatted_s","ActiveSupport::CoreExtensions::Range::Conversions","classes/ActiveSupport/CoreExtensions/Range/Conversions.html#M002897","(format = :default)","Gives a human readable format of the range. ==== Example [1..100].to_formatted_s # => \"1..100\" ",2],["to_formatted_s","ActiveSupport::CoreExtensions::Time::Conversions","classes/ActiveSupport/CoreExtensions/Time/Conversions.html#M002957","(format = :default)","Converts to a formatted string. See DATE_FORMATS for builtin formats. This method is aliased to <tt>to_s</tt>.",2],["to_formatted_s","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003251","(format = :default)","Alias for #to_s",2],["to_hash","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001995","()","",2],["to_hash","ActiveSupport::XmlMini_Nokogiri::Conversions::Document","classes/ActiveSupport/XmlMini_Nokogiri/Conversions/Document.html#M003698","()","",2],["to_hash","ActiveSupport::XmlMini_Nokogiri::Conversions::Node","classes/ActiveSupport/XmlMini_Nokogiri/Conversions/Node.html#M003703","(hash = {})","Convert XML document to hash hash:: Hash to merge the converted element into. ",2],["to_hash","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002763","()","Convert to a Hash with String keys. ",2],["to_hash","LibXML::Conversions::Document","classes/LibXML/Conversions/Document.html#M003696","()","",2],["to_hash","LibXML::Conversions::Node","classes/LibXML/Conversions/Node.html#M003697","(hash={})","Convert XML document to hash hash:: Hash to merge the converted element into. ",2],["to_i","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002704","()","Converts self to an integer number of seconds since the Unix epoch ",2],["to_i","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003279","()","",2],["to_json","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001237","(options = {})","Returns a JSON string representing the model. Some configuration is available through +options+. The",2],["to_json","ActiveSupport::JSON::Variable","classes/ActiveSupport/JSON/Variable.html#M003085","(options=nil)","",2],["to_json","Object","classes/Object.html#M003083","(options = nil)","Dumps object in JSON (JavaScript Object Notation). See www.json.org for more info. ",2],["to_local","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003689","(utc)","Converts a UTC DateTime to local time based on the offset of this period. ",2],["to_options","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002757","()","Alias for #symbolize_keys",2],["to_options!","ActiveSupport::CoreExtensions::Hash::Keys","classes/ActiveSupport/CoreExtensions/Hash/Keys.html#M002765","()","Alias for #symbolize_keys!",2],["to_options!","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002762","()","",2],["to_param","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000629","()","Returns a String, which Action Pack uses for constructing an URL to this object. The default implementation",2],["to_param","ActiveResource::Base","classes/ActiveResource/Base.html#M001402","()","Allows Active Resource objects to be used as parameters in Action Pack URL generation. ",2],["to_param","ActiveSupport::CoreExtensions::Array::Conversions","classes/ActiveSupport/CoreExtensions/Array/Conversions.html#M002603","()","Calls <tt>to_param</tt> on all its elements and joins the result with slashes. This is used by <tt>url_for</tt>",2],["to_param","Object","classes/Object.html#M002871","()","Alias of <tt>to_s</tt>. ",2],["to_param","Object","classes/Object.html#M001973","()","",2],["to_prepare","ActionController::Dispatcher","classes/ActionController/Dispatcher.html#M001636","(identifier = nil, &block)","Add a preparation callback. Preparation callbacks are run before every request in development mode, and",2],["to_prepare","Rails::Configuration","classes/Rails/Configuration.html#M000103","(&callback)","Add a preparation callback that will run before every request in development mode, or before the first",2],["to_query","ActiveSupport::CoreExtensions::Array::Conversions","classes/ActiveSupport/CoreExtensions/Array/Conversions.html#M002604","(key)","Converts an array into a string suitable for use as a URL query string, using the given +key+ as the",2],["to_query","Object","classes/Object.html#M002872","(key)","Converts an object into a string suitable for use as a URL query string, using the given <tt>key</tt>",2],["to_s","ActionController::Routing::OptionalFormatSegment","classes/ActionController/Routing/OptionalFormatSegment.html#M001980","()","",2],["to_s","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002398","()","",2],["to_s","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001294","()","Alias for #message",2],["to_s","ActiveResource::Request","classes/ActiveResource/Request.html#M001490","()","",2],["to_s","ActiveResource::SSLError","classes/ActiveResource/SSLError.html#M001456","()","",2],["to_s","ActiveResource::SSLError","classes/ActiveResource/SSLError.html#M001377","()","",2],["to_s","ActiveResource::TimeoutError","classes/ActiveResource/TimeoutError.html#M001372","()","",2],["to_s","ActiveResource::TimeoutError","classes/ActiveResource/TimeoutError.html#M001454","()","",2],["to_s","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002948","()","",2],["to_s","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003246","(format = :default)","<tt>:db</tt> format outputs time in UTC; all others output time in local. Uses TimeWithZone's +strftime+,",2],["to_s","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003310","()","Returns a textual representation of this time zone. ",2],["to_s","CGI::Cookie","classes/CGI/Cookie.html#M001623","()","Converts the Cookie to its string representation. ",2],["to_s","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646.html#M003567","()","",2],["to_s","I18n::Locale::Tag::Simple","classes/I18n/Locale/Tag/Simple.html#M003564","()","",2],["to_s","Mime::Type","classes/Mime/Type.html#M001787","()","",2],["to_s","Plugin","classes/Plugin.html#M000152","()","",2],["to_s","SourceAnnotationExtractor::Annotation","classes/SourceAnnotationExtractor/Annotation.html#M000077","(options={})","Returns a representation of the annotation that looks like this: [126] [TODO] This algorithm is simple",2],["to_s","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003651","()","Returns a friendlier version of the identifier. ",2],["to_sentence","ActiveSupport::CoreExtensions::Array::Conversions","classes/ActiveSupport/CoreExtensions/Array/Conversions.html#M002601","(options = {})","Converts the array to a comma-separated sentence where the last element is joined by the connector word.",2],["to_sql","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000863","()","Returns a String whose contents are the column definitions concatenated together. This string can then",2],["to_str","ActionView::Template::Path","classes/ActionView/Template/Path.html#M002399","()","",2],["to_str","Mime::Type","classes/Mime/Type.html#M001788","()","",2],["to_sym","I18n::Locale::Tag::Rfc4646","classes/I18n/Locale/Tag/Rfc4646.html#M003566","()","",2],["to_sym","I18n::Locale::Tag::Simple","classes/I18n/Locale/Tag/Simple.html#M003563","()","",2],["to_sym","Mime::Type","classes/Mime/Type.html#M001789","()","",2],["to_time","ActiveSupport::CoreExtensions::Date::Conversions","classes/ActiveSupport/CoreExtensions/Date/Conversions.html#M002669","(form = :local)","Converts a Date instance to a Time, where the time is set to the beginning of the day. The timezone can",2],["to_time","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002699","()","Attempts to convert self to a Ruby Time object; returns self if out of range of Ruby Time class If self",2],["to_time","ActiveSupport::CoreExtensions::String::Conversions","classes/ActiveSupport/CoreExtensions/String/Conversions.html#M002911","(form = :utc)","Form can be either :utc (default) or :local. ",2],["to_time","ActiveSupport::CoreExtensions::Time::Conversions","classes/ActiveSupport/CoreExtensions/Time/Conversions.html#M002961","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003282","()","A TimeWithZone acts like a Time, so just return +self+. ",2],["to_utc","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003690","(local)","Converts a local DateTime to UTC based on the offset of this period. ",2],["to_utc_offset_s","ActiveSupport::CoreExtensions::Numeric::Conversions","classes/ActiveSupport/CoreExtensions/Numeric/Conversions.html#M002852","(colon=true)","Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this",2],["to_xml","ActiveRecord::Errors","classes/ActiveRecord/Errors.html#M001318","(options={})","Returns an XML representation of this error object. class Company < ActiveRecord::Base validates_presence_of",2],["to_xml","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001253","(options = {}, &block)","Builds an XML document to represent the model. Some configuration is available through +options+. However",2],["to_xml","ActiveResource::Base","classes/ActiveResource/Base.html#M001415","(options={})","Converts the resource to an XML string representation. ==== Options The +options+ parameter is handed",2],["to_xml","ActiveSupport::CoreExtensions::Array::Conversions","classes/ActiveSupport/CoreExtensions/Array/Conversions.html#M002608","(options = {})","Returns a string that represents this array in XML by sending +to_xml+ to each element. Active Record",2],["to_yaml","ActiveSupport::CoreExtensions::BigDecimal::Conversions","classes/ActiveSupport/CoreExtensions/BigDecimal/Conversions.html#M002620","(opts = {})","This emits the number without any scientific notation. This is better than self.to_f.to_s since it doesn't",2],["to_yaml","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002949","(*args)","",2],["to_yaml","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003239","(options = {})","",2],["today","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003315","()","Return the current date in this time zone. ",2],["today?","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002635","()","Tells whether the Date object's date is today ",2],["today?","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002966","()","Tells whether the Time object's time is today ",2],["today?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003259","()","",2],["toggle","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002299","(*ids)","Toggles the visibility of the DOM elements with the given +ids+. Example: # Show a few people # Generates:",2],["toggle","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000667","(attribute)","Assigns to +attribute+ the boolean opposite of <tt>attribute?</tt>. So if the predicate returns +true+",2],["toggle!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000668","(attribute)","Wrapper around +toggle+ that saves the record. This method differs from its non-bang version in that",2],["token_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M002253","()","",2],["tokenize","HTML::Sanitizer","classes/HTML/Sanitizer.html#M002104","(text, options)","",2],["tokenize","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M002111","(text, options)","",2],["tokenize","I18n::Backend::InterpolationCompiler::Compiler","classes/I18n/Backend/InterpolationCompiler/Compiler.html#M003461","(str)","tokenize(\"foo %{bar} baz %%{buz}\") # => [\"foo \", \"%{bar}\", \" baz \", \"%%{buz}\"] ",2],["tomorrow","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002685","()","Convenience method which returns a new Date/DateTime representing the time 1 day since the instance time",2],["tomorrow","ActiveSupport::CoreExtensions::Date::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Date/Calculations/ClassMethods.html#M002632","()","Returns a new Date representing the date 1 day after today (i.e. tomorrow's date). ",2],["tomorrow","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003018","()","Convenience method which returns a new Time representing the time 1 day since the instance time ",2],["touch","ActiveRecord::Timestamp","classes/ActiveRecord/Timestamp.html#M001278","(attribute = nil)","Saves the record with the updated_at/on attributes set to the current time. If the save fails because",2],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000762","(options = {})","Runs the given block in a database transaction, and returns the result of the block. == Nested transactions",2],["transaction","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001284","(&block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction","ActiveRecord::Transactions::ClassMethods","classes/ActiveRecord/Transactions/ClassMethods.html#M001283","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000901","(joinable)","",2],["transfer_time_values_to_utc_constructor","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003293","(time)","",2],["translate","ActionController::Translation","classes/ActionController/Translation.html#M002068","(*args)","",2],["translate","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M002340","(keys, options = {})","Delegates to I18n#translate but also performs two additional functions. First, it'll catch MissingTranslationData",2],["translate","I18n","classes/I18n.html#M003576","(*args)","Translates, pluralizes and interpolates a given key using a given locale, scope, and default, as well",2],["translate","I18n::Backend::ActiveRecord::Missing","classes/I18n/Backend/ActiveRecord/Missing.html#M003382","(locale, key, options = {})","",2],["translate","I18n::Backend::Base","classes/I18n/Backend/Base.html#M003393","(locale, key, options = {})","",2],["translate","I18n::Backend::Cache","classes/I18n/Backend/Cache.html#M003400","(*args)","",2],["translate","I18n::Backend::Chain","classes/I18n/Backend/Chain.html#M003421","(locale, key, options = {})","",2],["translate","I18n::Backend::Fallbacks","classes/I18n/Backend/Fallbacks.html#M003435","(locale, key, options = {})","Overwrites the Base backend translate method so that it will try each locale given by I18n.fallbacks",2],["translate","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003485","(locale, key, options = {})","",2],["translate!","I18n","classes/I18n.html#M003577","(key, options = {})","",2],["translation_metadata","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003481","()","",2],["translation_metadata=","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003482","(translation_metadata)","",2],["translations","I18n::Backend::Simple::Implementation","classes/I18n/Backend/Simple/Implementation.html#M003500","()","",2],["transliterate","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003070","(string)","",2],["transliterate","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003069","(string)","",2],["transliterate","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003068","(string)","Replaces accented characters with their ascii equivalents. ",2],["transliterate","I18n","classes/I18n.html#M003578","(*args)","Transliterates UTF-8 characters to ASCII. By default this method will transliterate only Latin strings",2],["transliterate","I18n::Backend::Transliterator","classes/I18n/Backend/Transliterator.html#M003503","(locale, string, replacement = nil)","Given a locale and a UTF-8 string, return the locale's ASCII approximation for the string. ",2],["transliterate","I18n::Backend::Transliterator::HashTransliterator","classes/I18n/Backend/Transliterator/HashTransliterator.html#M003522","(string, replacement = nil)","",2],["transliterate","I18n::Backend::Transliterator::ProcTransliterator","classes/I18n/Backend/Transliterator/ProcTransliterator.html#M003506","(string, replacement = nil)","",2],["truncate","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002346","(text, *args)","Truncates a given +text+ after a given <tt>:length</tt> if +text+ is longer than <tt>:length</tt> (defaults",2],["try","Object","classes/Object.html#M003023","(method, *args, &block)","Invokes the method identified by the symbol +method+, passing it any arguments  and/or the block specified,",2],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001174","(file_name)","",2],["tv_sec","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003281","()","Alias for #to_i",2],["type_cast","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000800","(value)","Casts value (which is a String) to an appropriate instance. ",2],["type_cast_attribute_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000742","(multiparameter_name, value)","",2],["type_cast_calculated_value","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000572","(value, column, operation = nil)","",2],["type_cast_code","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000805","(var_name)","",2],["type_cast_using_column","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000574","(value, column)","",2],["type_condition","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000563","(table_alias=nil)","",2],["type_name_with_module","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000545","(type_name)","Nest the type name in the same module as this class. Bar is \"MyApp::Business::Bar\" relative to MyApp::Business::Foo",2],["type_to_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000978","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to MySQL-specific data types. ",2],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001034","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to PostgreSQL-specific data types. ",2],["typecast_xml_value","ActiveSupport::CoreExtensions::Hash::ClassMethods","classes/ActiveSupport/CoreExtensions/Hash/ClassMethods.html#M002739","(value)","",2],["u_unpack","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003150","(string)","Unpack the string at codepoints boundaries. Raises an EncodingError when the encoding of the string isn't",2],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","classes/ActiveRecord/ConnectionAdapters/QueryCache.html#M000766","()","Disable the query cache within the block. ",2],["uncached","ActiveRecord::QueryCache::ClassMethods","classes/ActiveRecord/QueryCache/ClassMethods.html#M001214","(&block)","Disable the query cache within the block if Active Record is configured. ",2],["uncountable","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M003051","(*words)","Add uncountable words that shouldn't be attempted inflected. Examples: uncountable \"money\" uncountable",2],["undecorated_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000565","(class_name = base_class.name)","Guesses the table name, but does not decorate it with prefix and suffix information. ",2],["undef_my_compiled_methods!","ActionView::ReloadableTemplate","classes/ActionView/ReloadableTemplate.html#M002396","()","remove any compiled methods that look like they might belong to me ",2],["underscore","ActiveSupport::CoreExtensions::String::Inflections","classes/ActiveSupport/CoreExtensions/String/Inflections.html#M002924","()","The reverse of +camelize+. Makes an underscored, lowercase form from the expression in the string. +underscore+",2],["underscore","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M003061","(camel_cased_word)","The reverse of +camelize+. Makes an underscored, lowercase form from the expression in the string. Changes",2],["unescape","Object","classes/Object.html#M003024","(str, escaped = @regexp[:ESCAPED])","",2],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000966","(original_value)","Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse",2],["unescape_rjs","ActionController::Assertions::SelectorAssertions","classes/ActionController/Assertions/SelectorAssertions.html#M001527","(rjs_string)","Unescapes a RJS string. ",2],["uninstall","Plugin","classes/Plugin.html#M000157","()","",2],["unmarshal","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002040","(cookie)","Unmarshal cookie data to a hash and verify its integrity. ",2],["unmarshal","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001244","(data)","",2],["unmarshal","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001263","(data)","",2],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M003092","()","",2],["unnormalized","REXML::Entity","classes/REXML/Entity.html#M002901","()","",2],["unpacked_cookie_data","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002034","(env)","",2],["unregister_template","ActionView::ReloadableTemplate::ReloadablePath","classes/ActionView/ReloadableTemplate/ReloadablePath.html#M002387","(template)","remove (probably deleted) template from cache ",2],["unrename_keys","ActiveSupport::CoreExtensions::Hash::ClassMethods","classes/ActiveSupport/CoreExtensions/Hash/ClassMethods.html#M002742","(params)","",2],["until","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002866","(time = ::Time.now)","Alias for #ago",2],["until","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M003038","(time = ::Time.current)","Alias for #ago",2],["unverifiable_types","Mime::Type","classes/Mime/Type.html#M001780","()","",2],["upcase","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003142","()","Convert characters in the string to uppercase. Example: 'Laurent, òu sont les tests?'.mb_chars.upcase.to_s",2],["update","ActionController::Session::AbstractStore::SessionHash","classes/ActionController/Session/AbstractStore/SessionHash.html#M001996","(hash)","",2],["update","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000473","(id, attributes)","Updates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["update","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000704","(attribute_names = @attributes.keys)","Updates the associated record with values matching those of the instance attributes. Returns the number",2],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000759","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update","ActiveResource::Base","classes/ActiveResource/Base.html#M001429","()","Update the resource on the remote service. ",2],["update","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002747","(other_hash)","Updates the instantized hash with values from the second: hash_1 = HashWithIndifferentAccess.new hash_1[:key]",2],["update_all","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000476","(updates, conditions = nil, options = {})","Updates all records with details given if they match a set of conditions supplied, limits and order can",2],["update_attribute","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000651","(name, value)","Updates a single attribute and saves the record without going through the normal validation procedure.",2],["update_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000652","(attributes)","Updates all the attributes from the passed-in Hash and saves the record. If the object is invalid, the",2],["update_attributes!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000655","(attributes)","Updates an object just like Base.update_attributes but calls save! instead of save so an exception is",2],["update_counters","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000481","(id, counters)","A generic \"counter updater\" implementation, intended primarily to be used by increment_counter and decrement_counter,",2],["update_counters_with_lock","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001130","(id, counters)","Make sure the lock version column gets updated when counters are updated. ",2],["update_page","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002320","(&block)","Yields a JavaScriptGenerator and returns the generated JavaScript code. Use this to update multiple elements",2],["update_page_tag","ActionView::Helpers::PrototypeHelper","classes/ActionView/Helpers/PrototypeHelper.html#M002321","(html_options = {}, &block)","Works like update_page but wraps the generated JavaScript in a <script> tag. Use this to include generated",2],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#M000785","(sql, name = nil)","Executes the update statement and returns the number of rows affected. ",2],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M000999","(sql, name = nil)","Executes an UPDATE query and returns the number of affected tuples. ",2],["update_with_dirty","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001103","()","",2],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#M002162","(date_or_time = nil)","Accepts a Date or Time object and inserts it in the proper format. If nil is passed, current time in",2],["url","ActionController::Request","classes/ActionController/Request.html#M001858","()","Returns the complete URL used for this request. ",2],["url_for","ActionController::Base","classes/ActionController/Base.html#M001552","(options = {})","Returns a URL that has been rewritten according to the options hash and the defined routes. (For doing",2],["url_for","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001730","(options)","Returns the URL for the given options, according to the rules specified in the application's routes.",2],["url_for","ActionController::UrlWriter","classes/ActionController/UrlWriter.html#M002099","(options)","Generate a url based on the options provided, default_url_options and the routes defined in routes.rb.",2],["url_for","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M002357","(options = {})","Returns the URL for the set of +options+ provided. This takes the same options as +url_for+ in Action",2],["us_zone_identifiers","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003648","()","Returns all US zone identifiers. A shortcut for  TZInfo::Country.get('US').zone_identifiers. ",2],["us_zones","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003345","()","A convenience method for returning a collection of TimeZone objects for time zones in the USA. ",2],["us_zones","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003647","()","Returns all US Timezone instances. A shortcut for  TZInfo::Country.get('US').zones. Returns TimezoneProxy",2],["usage","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000336","(message = usage_message)","Raise a usage error.  Override usage_message to provide a blurb after the option parser summary. ",2],["usage_message","Rails::Generator::Base","classes/Rails/Generator/Base.html#M000202","()","Read USAGE from file in generator base path. ",2],["usage_message","Rails::Generator::Options","classes/Rails/Generator/Options.html#M000337","()","",2],["usage_message","Rails::Generator::Scripts::Base","classes/Rails/Generator/Scripts/Base.html#M000343","()","",2],["use","ActionController::Flash::FlashHash","classes/ActionController/Flash/FlashHash.html#M001665","(k=nil, v=true)","Used internally by the <tt>keep</tt> and <tt>discard</tt> methods use()               # marks the entire",2],["use","ActionController::MiddlewareStack","classes/ActionController/MiddlewareStack.html#M001776","(*args, &block)","",2],["use_application_sources!","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000286","()","Use application generators (app, ?). ",2],["use_checkout?","RailsEnvironment","classes/RailsEnvironment.html#M000146","()","",2],["use_component_sources!","Rails::Generator::Lookup::ClassMethods","classes/Rails/Generator/Lookup/ClassMethods.html#M000288","()","Use component generators (model, controller, etc). 1.  Rails application.  If RAILS_ROOT is defined we",2],["use_controllers!","ActionController::Routing","classes/ActionController/Routing.html#M002007","(controller_names)","Replaces the internal list of controllers available to ActionController::Routing with the passed argument.",2],["use_externals?","RailsEnvironment","classes/RailsEnvironment.html#M000145","()","",2],["use_svn?","RailsEnvironment","classes/RailsEnvironment.html#M000144","()","",2],["use_zone","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Zones/ClassMethods.html#M002976","(time_zone)","Allows override of <tt>Time.zone</tt> locally inside supplied block; resets <tt>Time.zone</tt> to existing",2],["usec","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003276","()","",2],["user","ActiveResource::Base","classes/ActiveResource/Base.html#M001336","()","Gets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Base","classes/ActiveResource/Base.html#M001337","(user)","Sets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001388","(user)","Set the user for remote service. ",2],["user_home","Dir","classes/Dir.html#M000277","()","User home directory lookup adapted from RubyGems. ",2],["user_name_and_password","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M001698","(request)","",2],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001177","(*methods)","",2],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001178","(method)","",2],["using_limitable_reflections?","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000461","(reflections)","",2],["utc","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002713","()","Adjusts DateTime to UTC by adding its offset value; offset is set to 0 Example: DateTime.civil(2005,",2],["utc","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003202","()","Returns a Time or DateTime instance that represents the time in UTC. ",2],["utc?","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002715","()","Returns true if offset == 0 ",2],["utc?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003222","()","",2],["utc_after_start?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003684","(utc)","true if the given UTC DateTime is after the start of the period  (inclusive); otherwise false. ",2],["utc_before_end?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003685","(utc)","true if the given UTC DateTime is before the end of the period  (exclusive); otherwise false. ",2],["utc_end","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003679","()","The end time of the period in UTC as a DateTime. May be nil if unbounded. ",2],["utc_offset","ActiveSupport::CoreExtensions::DateTime::Calculations","classes/ActiveSupport/CoreExtensions/DateTime/Calculations.html#M002716","()","Returns the offset value in seconds ",2],["utc_offset","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003224","()","",2],["utc_offset","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003306","()","",2],["utc_offset","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003672","()","Base offset of the timezone from UTC (seconds). ",2],["utc_start","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003678","()","The start time of the period in UTC as a DateTime. May be nil if unbounded. ",2],["utc_time","ActiveSupport::CoreExtensions::Time::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Calculations/ClassMethods.html#M002963","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:utc</tt>. ",2],["utc_to_local","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003316","(time)","Adjust the given time to the simultaneous time in the time zone represented by +self+. Returns a Time.utc()",2],["utc_to_local","TZInfo::Timezone","classes/TZInfo/Timezone.html#M003657","(utc)","Converts a time in UTC to the local timezone. utc can either be a DateTime, Time or timestamp (Time.to_i).",2],["utc_total_offset","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003676","()","Total offset from UTC (seconds). Equal to utc_offset + std_offset. ",2],["utc_total_offset_rational","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003677","()","Total offset from UTC (days). Result is a Rational. ",2],["valid?","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001358","()","Runs +validate+ and +validate_on_create+ or +validate_on_update+ and returns true if no errors were added",2],["valid?","ActiveResource::Validations","classes/ActiveResource/Validations.html#M001502","()","Checks for errors on an object (i.e., is resource.errors empty?). ==== Examples my_person = Person.create(params[:person])",2],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001076","( type, options)","See: http://www.sqlite.org/lang_altertable.html SQLite has an additional restriction on the ALTER TABLE",2],["valid_extension?","ActionView::Template","classes/ActionView/Template.html#M002428","(extension)","",2],["valid_for_local?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003686","(local)","true if this period is valid for the given local DateTime; otherwise false. ",2],["valid_for_utc?","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003683","(utc)","true if this period is valid for the given UTC DateTime; otherwise false. ",2],["valid_locale?","ActionView::Template","classes/ActionView/Template.html#M002429","(locale)","",2],["validate","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001362","()","Overwrite this method for validation checks on all saves and use <tt>Errors.add(field, msg)</tt> for",2],["validate_calculation_options","ActiveRecord::Calculations::ClassMethods","classes/ActiveRecord/Calculations/ClassMethods.html#M000568","(operation, options = {})","",2],["validate_collection_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000403","(reflection)","Validate the associated records if <tt>:validate</tt> or <tt>:autosave</tt> is turned on for the association",2],["validate_digest_response","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001716","(request, realm, &password_procedure)","Returns false unless the request credentials response value matches the expected value. First try the",2],["validate_nonce","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M001737","(request, value, seconds_to_timeout=5*60)","Might want a shorter timeout depending on whether the request is a PUT or POST, and if client is browser",2],["validate_on_create","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001363","()","Overwrite this method for validation checks used only on creation. ",2],["validate_on_update","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001364","()","Overwrite this method for validation checks used only on updates. ",2],["validate_render_arguments","ActionController::Base","classes/ActionController/Base.html#M001593","(options, extra_options, has_block)","",2],["validate_single_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000402","(reflection)","Validate the association if <tt>:validate</tt> or <tt>:autosave</tt> is turned on for the association",2],["validates_acceptance_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001323","(*attr_names)","Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar",2],["validates_associated","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001341","(*attr_names)","Validates whether the associated object or objects are all valid themselves. Works with any kind of association.",2],["validates_confirmation_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001322","(*attr_names)","Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.",2],["validates_each","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001321","(*attrs)","Validates each attribute against a block. class Person < ActiveRecord::Base validates_each :first_name,",2],["validates_exclusion_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001334","(*attr_names)","Validates that the value of the specified attribute is not in a particular enumerable object. class Person",2],["validates_format_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001328","(*attr_names)","Validates whether the value of the specified attribute is of the correct form by matching it against",2],["validates_inclusion_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001331","(*attr_names)","Validates whether the value of the specified attribute is available in a particular enumerable object.",2],["validates_length_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001325","(*attrs)","Validates that the specified attribute matches the length restrictions supplied. Only one option can",2],["validates_numericality_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001347","(*attr_names)","Validates whether the value of the specified attribute is numeric by trying to convert it to a float",2],["validates_presence_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001324","(*attr_names)","Validates that the specified attributes are not blank (as defined by Object#blank?). Happens by default",2],["validates_size_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001326","(*attrs)","Alias for #validates_length_of",2],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001327","(*attr_names)","Validates whether the value of the specified attributes are unique across the system. Useful for making",2],["validation_method","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001354","(on)","",2],["value","ActiveRecord::Error","classes/ActiveRecord/Error.html#M001295","()","",2],["value","I18n::Backend::ActiveRecord::Translation","classes/I18n/Backend/ActiveRecord/Translation.html#M003386","()","",2],["value=","I18n::Backend::ActiveRecord::StoreProcs","classes/I18n/Backend/ActiveRecord/StoreProcs.html#M003383","(v)","",2],["value_to_boolean","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000815","(value)","convert something to a boolean ",2],["value_to_decimal","ActiveRecord::ConnectionAdapters::Column","classes/ActiveRecord/ConnectionAdapters/Column.html#M000816","(value)","convert something to a BigDecimal ",2],["values_at","HashWithIndifferentAccess","classes/HashWithIndifferentAccess.html#M002751","(*indices)","Returns an array of the values at the specified indices: hash = HashWithIndifferentAccess.new hash[:a]",2],["verifiable_request_format?","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001842","()","",2],["verification_timeout","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000717","()","Deprecated and no longer has any effect. ",2],["verification_timeout=","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000718","(flag)","Deprecated and no longer has any effect. ",2],["verified_request?","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001840","()","Returns true or false if a request is verified.  Checks: * is the format restricted?  By default, only",2],["verifier","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M003100","()","",2],["verifier_for","ActionController::Session::CookieStore","classes/ActionController/Session/CookieStore.html#M002043","(secret, digest)","",2],["verify","ActionController::Verification::ClassMethods","classes/ActionController/Verification/ClassMethods.html#M002124","(options={})","Verify the given actions so that if certain prerequisites are not met, the user is redirected to a different",2],["verify","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M003102","(signed_message)","",2],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#M000896","(*ignored)","Checks whether the connection to the database is still active (i.e. not stale). This is done under the",2],["verify_authenticity_token","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M001834","()","The actual before_filter that is used.  Modify this to change how you handle unverified requests. ",2],["verify_request?","Mime::Type","classes/Mime/Type.html#M001793","()","Returns true if Action Pack should check requests using this Mime Type for possible request forgery.",2],["version","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M000998","()","",2],["version","Rails","classes/Rails.html#M000035","()","",2],["view_paths","ActionController::Base","classes/ActionController/Base.html#M001540","()","View load paths determine the bases from which template references can be made. So a call to render(\"test/template\")",2],["view_paths","ActionController::Base","classes/ActionController/Base.html#M001557","()","View load paths for controller. ",2],["view_paths=","ActionController::Base","classes/ActionController/Base.html#M001541","(value)","",2],["view_paths=","ActionController::Base","classes/ActionController/Base.html#M001558","(value)","",2],["view_paths=","ActionView::Base","classes/ActionView/Base.html#M002136","(paths)","",2],["visual_effect","ActionView::Helpers::PrototypeHelper::JavaScriptGenerator::GeneratorMethods","classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html#M002307","(name, id = nil, options = {})","Starts a script.aculo.us visual effect. See ActionView::Helpers::ScriptaculousHelper for more information.",2],["visual_effect","ActionView::Helpers::ScriptaculousHelper","classes/ActionView/Helpers/ScriptaculousHelper.html#M002319","(name, element_id = false, js_options = {})","Returns a JavaScript snippet to be used on the Ajax callbacks for starting visual effects. Example: <%=",2],["wants?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M003113","(string)","Returns +true+ if the Chars class can and should act as a proxy for the string _string_. Returns +false+",2],["warn","ActiveSupport::Deprecation::DeprecatedObjectProxy","classes/ActiveSupport/Deprecation/DeprecatedObjectProxy.html#M003027","(callstack, called, args)","",2],["week","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002862","()","Alias for #weeks",2],["weeks","ActiveSupport::CoreExtensions::Numeric::Time","classes/ActiveSupport/CoreExtensions/Numeric/Time.html#M002861","()","",2],["with_backend","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M003079","(name)","",2],["with_backend","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M003718","(name)","",2],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#M000638","()","Reserve a connection, and yield it to a block. Ensure the connection is checked back in when finished.",2],["with_controllers","ActionController::Routing","classes/ActionController/Routing.html#M001993","(names)","Expects an array of controller names as the first argument. Executes the passed block with only the named",2],["with_exclusive_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000580","(method_scoping = {}, &block)","Works like with_scope, but discards any nested properties. ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003228","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003218","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M003217","()","",2],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002541","()","",2],["with_locale","I18n","classes/I18n.html#M003580","(tmp_locale = nil)","Executes block with given I18n.locale set. ",2],["with_metadata","I18n::Backend::Metadata","classes/I18n/Backend/Metadata.html#M003492","(metadata, &block)","",2],["with_options","Object","classes/Object.html#M002887","(options)","An elegant way to factor duplication out of options passed to a series of method calls. Each method called",2],["with_output_file","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M003193","()","",2],["with_routing","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002101","()","A helper to make it easier to test different route configurations. This method temporarily replaces ActionController::Routing::Routes",2],["with_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000579","(method_scoping = {}, action = :merge, &block)","Scope parameters to method calls within the block.  Takes a hash of method_name => parameters hash. method_name",2],["with_server","MemCache","classes/MemCache.html#M003618","(key)","",2],["with_signal_handler","RailsFCGIHandler","classes/RailsFCGIHandler.html#M000014","(signal)","",2],["with_socket_management","MemCache","classes/MemCache.html#M003617","(server, &block)","Gets or creates a socket connected to the given server, and yields it to the block, wrapped in a mutex",2],["with_template","ActionView::Base","classes/ActionView/Base.html#M002141","(current_template)","",2],["with_transaction_returning_status","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001289","(method, *args)","Executes +method+ within a transaction and captures its return value as a status flag. If the status",2],["word_wrap","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M002351","(text, *args)","Wraps the +text+ into lines no longer than +line_width+ width. This method breaks on the first whitespace",2],["wrap","ActiveSupport::CoreExtensions::Array::Wrapper","classes/ActiveSupport/CoreExtensions/Array/Wrapper.html#M002614","(object)","Wraps the object in an Array unless it's an Array.  Converts the object to an Array using #to_ary if",2],["write","ActionController::Response","classes/ActionController/Response.html#M001925","(str)","",2],["write","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001162","(text=\"\")","",2],["write","ActiveSupport::Cache::CompressedMemCacheStore","classes/ActiveSupport/Cache/CompressedMemCacheStore.html#M002505","(name, value, options = nil)","",2],["write","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002513","(name, value, options = nil)","",2],["write","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002524","(key, value, options = nil)","Writes a value to the cache. Possible options: - +:unless_exist+ - set to true if you don't want to update",2],["write","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002536","(name, value, options = nil)","",2],["write","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002582","(key, value, options = nil)","Writes the given value to the cache, with the given key. You may also specify additional options via",2],["write","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002544","(key, value, options = nil)","",2],["write","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002548","(name, value, options = nil)","",2],["write_asset_file_contents","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M002189","(joined_asset_path, asset_paths)","",2],["write_attribute_with_dirty","ActiveRecord::Dirty","classes/ActiveRecord/Dirty.html#M001101","(attr, value)","Wrap write_attribute to remember original attribute value. ",2],["write_fragment","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M001563","(key, content, options = nil)","Writes <tt>content</tt> to the location signified by <tt>key</tt> (see <tt>expire_fragment</tt> for acceptable",2],["writer_method","ActiveRecord::Aggregations::ClassMethods","classes/ActiveRecord/Aggregations/ClassMethods.html#M000353","(name, class_name, mapping, allow_nil, converter)","",2],["xchr","Fixnum","classes/Fixnum.html#M003357","()","XML escaped version of chr ",2],["xhr","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001729","(request_method, path, parameters = nil, headers = nil)","Alias for #xml_http_request",2],["xhr","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002087","(request_method, action, parameters = nil, session = nil, flash = nil)","Alias for #xml_http_request",2],["xhr?","ActionController::Request","classes/ActionController/Request.html#M001855","()","Alias for #xml_http_request?",2],["xhtml_block?","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#M002160","(method, arguments)","True if the method name matches one of the five elements defined in the Atom spec as potentially containing",2],["xml","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000919","(*args)","",2],["xml_column_fallback","ActiveRecord::ConnectionAdapters::TableDefinition","classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#M000846","(*args)","",2],["xml_http_request","ActionController::Integration::Session","classes/ActionController/Integration/Session.html#M001726","(request_method, path, parameters = nil, headers = nil)","Performs an XMLHttpRequest request with the given parameters, mirroring a request from the Prototype",2],["xml_http_request","ActionController::TestProcess","classes/ActionController/TestProcess.html#M002086","(request_method, action, parameters = nil, session = nil, flash = nil)","",2],["xml_http_request?","ActionController::Request","classes/ActionController/Request.html#M001854","()","Returns true if the request's \"X-Requested-With\" header contains \"XMLHttpRequest\". (The Prototype Javascript",2],["xmlschema","ActiveSupport::CoreExtensions::Date::Conversions","classes/ActiveSupport/CoreExtensions/Date/Conversions.html#M002672","()","",2],["xmlschema","ActiveSupport::CoreExtensions::DateTime::Conversions","classes/ActiveSupport/CoreExtensions/DateTime/Conversions.html#M002701","()","Converts datetime to an appropriate format for use in XML ",2],["xmlschema","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003233","(fraction_digits = 0)","",2],["xss_safe?","ActionView::Base","classes/ActionView/Base.html#M002130","()",":nodoc:  ",2],["yaml_file_path","Fixtures","classes/Fixtures.html#M001156","()","",2],["yaml_fixtures_key","Fixtures","classes/Fixtures.html#M001158","(path)","",2],["year","ActiveSupport::CoreExtensions::Float::Time","classes/ActiveSupport/CoreExtensions/Float/Time.html#M002734","()","Alias for #years",2],["year","ActiveSupport::CoreExtensions::Integer::Time","classes/ActiveSupport/CoreExtensions/Integer/Time.html#M002780","()","Alias for #years",2],["years","ActiveSupport::CoreExtensions::Float::Time","classes/ActiveSupport/CoreExtensions/Float/Time.html#M002729","()","Deprication helper methods not available as core_ext is loaded first. ",2],["years","ActiveSupport::CoreExtensions::Integer::Time","classes/ActiveSupport/CoreExtensions/Integer/Time.html#M002779","()","",2],["years_ago","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002651","(years)","Returns a new Date/DateTime representing the time a number of specified years ago ",2],["years_ago","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002982","(years)","Returns a new Time representing the time a number of specified years ago ",2],["years_since","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002652","(years)","Returns a new Date/DateTime representing the time a number of specified years in the future ",2],["years_since","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M002983","(years)","Returns a new Time representing the time a number of specified years in the future ",2],["years_without_deprecation","ActiveSupport::CoreExtensions::Float::Time","classes/ActiveSupport/CoreExtensions/Float/Time.html#M002733","()","",2],["yesterday","ActiveSupport::CoreExtensions::Date::Calculations","classes/ActiveSupport/CoreExtensions/Date/Calculations.html#M002684","()","Convenience method which returns a new Date/DateTime representing the time 1 day ago ",2],["yesterday","ActiveSupport::CoreExtensions::Date::Calculations::ClassMethods","classes/ActiveSupport/CoreExtensions/Date/Calculations/ClassMethods.html#M002631","()","Returns a new Date representing the date 1 day ago (i.e. yesterday's date). ",2],["yesterday","ActiveSupport::CoreExtensions::Time::Calculations","classes/ActiveSupport/CoreExtensions/Time/Calculations.html#M003017","()","Convenience method which returns a new Time representing the time 1 day ago ",2],["zone","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Zones/ClassMethods.html#M002974","()","Returns the TimeZone for the current request, if this has been set (via Time.zone=).  If <tt>Time.zone</tt>",2],["zone","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M003231","()","Time uses +zone+ to display the time zone abbreviation, so we're duck-typing it. ",2],["zone=","ActiveSupport::CoreExtensions::Time::Zones::ClassMethods","classes/ActiveSupport/CoreExtensions/Time/Zones/ClassMethods.html#M002975","(time_zone)","Sets <tt>Time.zone</tt> to a TimeZone object for the current request/thread.  This method accepts any",2],["zone_identifier","TZInfo::TimezonePeriod","classes/TZInfo/TimezonePeriod.html#M003675","()","Alias for #abbreviation",2],["zones_map","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M003324","()","",2],["|","Builder::CSS","classes/Builder/CSS.html#M003329","(part)","",2],["CHANGELOG","files/actionmailer-2_3_14/CHANGELOG.html","files/actionmailer-2_3_14/CHANGELOG.html","","*2.3.11 (February 9, 2011)* *2.3.10 (October 15, 2010)* *2.3.9 (September 4, 2010)* *2.3.8 (May 24, 2010)*",3],["README","files/actionmailer-2_3_14/README.html","files/actionmailer-2_3_14/README.html","","= Action Mailer -- Easy email delivery and testing  Action Mailer is a framework for designing email-service",3],["base.rb","files/actionmailer-2_3_14/lib/action_mailer/base_rb.html","files/actionmailer-2_3_14/lib/action_mailer/base_rb.html","","",3],["CHANGELOG","files/actionpack-2_3_14/CHANGELOG.html","files/actionpack-2_3_14/CHANGELOG.html","","*2.3.11 (February 9, 2011)*  * Two security fixes. CVE-2011-0446, CVE-2011-0447  *2.3.10 (October 15,",3],["README","files/actionpack-2_3_14/README.html","files/actionpack-2_3_14/README.html","","= Action Pack -- On rails from request to response  Action Pack splits the response to a web request",3],["dom_assertions.rb","files/actionpack-2_3_14/lib/action_controller/assertions/dom_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/dom_assertions_rb.html","","",3],["model_assertions.rb","files/actionpack-2_3_14/lib/action_controller/assertions/model_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/model_assertions_rb.html","","",3],["response_assertions.rb","files/actionpack-2_3_14/lib/action_controller/assertions/response_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/response_assertions_rb.html","","",3],["routing_assertions.rb","files/actionpack-2_3_14/lib/action_controller/assertions/routing_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/routing_assertions_rb.html","","",3],["selector_assertions.rb","files/actionpack-2_3_14/lib/action_controller/assertions/selector_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/selector_assertions_rb.html","","--- FIXME: helper { ... } is broken on Ruby 1.9 ",3],["tag_assertions.rb","files/actionpack-2_3_14/lib/action_controller/assertions/tag_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/tag_assertions_rb.html","","",3],["base.rb","files/actionpack-2_3_14/lib/action_controller/base_rb.html","files/actionpack-2_3_14/lib/action_controller/base_rb.html","","",3],["benchmarking.rb","files/actionpack-2_3_14/lib/action_controller/benchmarking_rb.html","files/actionpack-2_3_14/lib/action_controller/benchmarking_rb.html","","",3],["caching.rb","files/actionpack-2_3_14/lib/action_controller/caching_rb.html","files/actionpack-2_3_14/lib/action_controller/caching_rb.html","","",3],["actions.rb","files/actionpack-2_3_14/lib/action_controller/caching/actions_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/actions_rb.html","","",3],["fragments.rb","files/actionpack-2_3_14/lib/action_controller/caching/fragments_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/fragments_rb.html","","",3],["pages.rb","files/actionpack-2_3_14/lib/action_controller/caching/pages_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/pages_rb.html","","",3],["sweeper.rb","files/actionpack-2_3_14/lib/action_controller/caching/sweeper_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/sweeper_rb.html","","",3],["sweeping.rb","files/actionpack-2_3_14/lib/action_controller/caching/sweeping_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/sweeping_rb.html","","",3],["cgi_ext.rb","files/actionpack-2_3_14/lib/action_controller/cgi_ext_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext_rb.html","","",3],["cookie.rb","files/actionpack-2_3_14/lib/action_controller/cgi_ext/cookie_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext/cookie_rb.html","","",3],["query_extension.rb","files/actionpack-2_3_14/lib/action_controller/cgi_ext/query_extension_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext/query_extension_rb.html","","",3],["stdinput.rb","files/actionpack-2_3_14/lib/action_controller/cgi_ext/stdinput_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext/stdinput_rb.html","","",3],["cgi_process.rb","files/actionpack-2_3_14/lib/action_controller/cgi_process_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_process_rb.html","","",3],["cookies.rb","files/actionpack-2_3_14/lib/action_controller/cookies_rb.html","files/actionpack-2_3_14/lib/action_controller/cookies_rb.html","","",3],["dispatcher.rb","files/actionpack-2_3_14/lib/action_controller/dispatcher_rb.html","files/actionpack-2_3_14/lib/action_controller/dispatcher_rb.html","","",3],["failsafe.rb","files/actionpack-2_3_14/lib/action_controller/failsafe_rb.html","files/actionpack-2_3_14/lib/action_controller/failsafe_rb.html","","",3],["filters.rb","files/actionpack-2_3_14/lib/action_controller/filters_rb.html","files/actionpack-2_3_14/lib/action_controller/filters_rb.html","","",3],["flash.rb","files/actionpack-2_3_14/lib/action_controller/flash_rb.html","files/actionpack-2_3_14/lib/action_controller/flash_rb.html","","",3],["headers.rb","files/actionpack-2_3_14/lib/action_controller/headers_rb.html","files/actionpack-2_3_14/lib/action_controller/headers_rb.html","","",3],["helpers.rb","files/actionpack-2_3_14/lib/action_controller/helpers_rb.html","files/actionpack-2_3_14/lib/action_controller/helpers_rb.html","","",3],["http_authentication.rb","files/actionpack-2_3_14/lib/action_controller/http_authentication_rb.html","files/actionpack-2_3_14/lib/action_controller/http_authentication_rb.html","","",3],["integration.rb","files/actionpack-2_3_14/lib/action_controller/integration_rb.html","files/actionpack-2_3_14/lib/action_controller/integration_rb.html","","",3],["layout.rb","files/actionpack-2_3_14/lib/action_controller/layout_rb.html","files/actionpack-2_3_14/lib/action_controller/layout_rb.html","","",3],["middleware_stack.rb","files/actionpack-2_3_14/lib/action_controller/middleware_stack_rb.html","files/actionpack-2_3_14/lib/action_controller/middleware_stack_rb.html","","",3],["middlewares.rb","files/actionpack-2_3_14/lib/action_controller/middlewares_rb.html","files/actionpack-2_3_14/lib/action_controller/middlewares_rb.html","","",3],["mime_responds.rb","files/actionpack-2_3_14/lib/action_controller/mime_responds_rb.html","files/actionpack-2_3_14/lib/action_controller/mime_responds_rb.html","","",3],["mime_type.rb","files/actionpack-2_3_14/lib/action_controller/mime_type_rb.html","files/actionpack-2_3_14/lib/action_controller/mime_type_rb.html","","",3],["mime_types.rb","files/actionpack-2_3_14/lib/action_controller/mime_types_rb.html","files/actionpack-2_3_14/lib/action_controller/mime_types_rb.html","","Build list of Mime types for HTTP responses http://www.iana.org/assignments/media-types/ ",3],["params_parser.rb","files/actionpack-2_3_14/lib/action_controller/params_parser_rb.html","files/actionpack-2_3_14/lib/action_controller/params_parser_rb.html","","",3],["performance_test.rb","files/actionpack-2_3_14/lib/action_controller/performance_test_rb.html","files/actionpack-2_3_14/lib/action_controller/performance_test_rb.html","","",3],["polymorphic_routes.rb","files/actionpack-2_3_14/lib/action_controller/polymorphic_routes_rb.html","files/actionpack-2_3_14/lib/action_controller/polymorphic_routes_rb.html","","",3],["rack_lint_patch.rb","files/actionpack-2_3_14/lib/action_controller/rack_lint_patch_rb.html","files/actionpack-2_3_14/lib/action_controller/rack_lint_patch_rb.html","","Rack 1.0 does not allow string subclass body. This does not play well with our ActiveSupport::SafeBuffer.",3],["record_identifier.rb","files/actionpack-2_3_14/lib/action_controller/record_identifier_rb.html","files/actionpack-2_3_14/lib/action_controller/record_identifier_rb.html","","",3],["reloader.rb","files/actionpack-2_3_14/lib/action_controller/reloader_rb.html","files/actionpack-2_3_14/lib/action_controller/reloader_rb.html","","",3],["request.rb","files/actionpack-2_3_14/lib/action_controller/request_rb.html","files/actionpack-2_3_14/lib/action_controller/request_rb.html","","",3],["request_forgery_protection.rb","files/actionpack-2_3_14/lib/action_controller/request_forgery_protection_rb.html","files/actionpack-2_3_14/lib/action_controller/request_forgery_protection_rb.html","","",3],["rescue.rb","files/actionpack-2_3_14/lib/action_controller/rescue_rb.html","files/actionpack-2_3_14/lib/action_controller/rescue_rb.html","","",3],["resources.rb","files/actionpack-2_3_14/lib/action_controller/resources_rb.html","files/actionpack-2_3_14/lib/action_controller/resources_rb.html","","",3],["response.rb","files/actionpack-2_3_14/lib/action_controller/response_rb.html","files/actionpack-2_3_14/lib/action_controller/response_rb.html","","",3],["routing.rb","files/actionpack-2_3_14/lib/action_controller/routing_rb.html","files/actionpack-2_3_14/lib/action_controller/routing_rb.html","","",3],["builder.rb","files/actionpack-2_3_14/lib/action_controller/routing/builder_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/builder_rb.html","","",3],["optimisations.rb","files/actionpack-2_3_14/lib/action_controller/routing/optimisations_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/optimisations_rb.html","","",3],["recognition_optimisation.rb","files/actionpack-2_3_14/lib/action_controller/routing/recognition_optimisation_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/recognition_optimisation_rb.html","","",3],["route.rb","files/actionpack-2_3_14/lib/action_controller/routing/route_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/route_rb.html","","",3],["route_set.rb","files/actionpack-2_3_14/lib/action_controller/routing/route_set_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/route_set_rb.html","","",3],["routing_ext.rb","files/actionpack-2_3_14/lib/action_controller/routing/routing_ext_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/routing_ext_rb.html","","",3],["segments.rb","files/actionpack-2_3_14/lib/action_controller/routing/segments_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/segments_rb.html","","",3],["abstract_store.rb","files/actionpack-2_3_14/lib/action_controller/session/abstract_store_rb.html","files/actionpack-2_3_14/lib/action_controller/session/abstract_store_rb.html","","",3],["cookie_store.rb","files/actionpack-2_3_14/lib/action_controller/session/cookie_store_rb.html","files/actionpack-2_3_14/lib/action_controller/session/cookie_store_rb.html","","",3],["mem_cache_store.rb","files/actionpack-2_3_14/lib/action_controller/session/mem_cache_store_rb.html","files/actionpack-2_3_14/lib/action_controller/session/mem_cache_store_rb.html","","",3],["session_management.rb","files/actionpack-2_3_14/lib/action_controller/session_management_rb.html","files/actionpack-2_3_14/lib/action_controller/session_management_rb.html","","",3],["status_codes.rb","files/actionpack-2_3_14/lib/action_controller/status_codes_rb.html","files/actionpack-2_3_14/lib/action_controller/status_codes_rb.html","","",3],["streaming.rb","files/actionpack-2_3_14/lib/action_controller/streaming_rb.html","files/actionpack-2_3_14/lib/action_controller/streaming_rb.html","","",3],["string_coercion.rb","files/actionpack-2_3_14/lib/action_controller/string_coercion_rb.html","files/actionpack-2_3_14/lib/action_controller/string_coercion_rb.html","","",3],["test_case.rb","files/actionpack-2_3_14/lib/action_controller/test_case_rb.html","files/actionpack-2_3_14/lib/action_controller/test_case_rb.html","","",3],["test_process.rb","files/actionpack-2_3_14/lib/action_controller/test_process_rb.html","files/actionpack-2_3_14/lib/action_controller/test_process_rb.html","","",3],["translation.rb","files/actionpack-2_3_14/lib/action_controller/translation_rb.html","files/actionpack-2_3_14/lib/action_controller/translation_rb.html","","",3],["uploaded_file.rb","files/actionpack-2_3_14/lib/action_controller/uploaded_file_rb.html","files/actionpack-2_3_14/lib/action_controller/uploaded_file_rb.html","","",3],["url_rewriter.rb","files/actionpack-2_3_14/lib/action_controller/url_rewriter_rb.html","files/actionpack-2_3_14/lib/action_controller/url_rewriter_rb.html","","",3],["html-scanner.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner_rb.html","","",3],["document.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/document_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/document_rb.html","","",3],["node.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/node_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/node_rb.html","","",3],["sanitizer.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/sanitizer_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/sanitizer_rb.html","","",3],["selector.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/selector_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/selector_rb.html",""," ",3],["tokenizer.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/tokenizer_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/tokenizer_rb.html","","",3],["version.rb","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/version_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/version_rb.html","","",3],["verification.rb","files/actionpack-2_3_14/lib/action_controller/verification_rb.html","files/actionpack-2_3_14/lib/action_controller/verification_rb.html","","",3],["base.rb","files/actionpack-2_3_14/lib/action_view/base_rb.html","files/actionpack-2_3_14/lib/action_view/base_rb.html","","",3],["helpers.rb","files/actionpack-2_3_14/lib/action_view/helpers_rb.html","files/actionpack-2_3_14/lib/action_view/helpers_rb.html","","",3],["active_record_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/active_record_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/active_record_helper_rb.html","","",3],["asset_tag_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/asset_tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/asset_tag_helper_rb.html","","",3],["atom_feed_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/atom_feed_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/atom_feed_helper_rb.html","","",3],["benchmark_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/benchmark_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/benchmark_helper_rb.html","","",3],["cache_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/cache_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/cache_helper_rb.html","","",3],["capture_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/capture_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/capture_helper_rb.html","","",3],["csrf_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/csrf_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/csrf_helper_rb.html","","",3],["date_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/date_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/date_helper_rb.html","","",3],["debug_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/debug_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/debug_helper_rb.html","","",3],["form_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/form_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/form_helper_rb.html","","",3],["form_options_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/form_options_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/form_options_helper_rb.html","","",3],["form_tag_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/form_tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/form_tag_helper_rb.html","","",3],["javascript_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/javascript_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/javascript_helper_rb.html","","",3],["number_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/number_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/number_helper_rb.html","","",3],["prototype_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/prototype_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/prototype_helper_rb.html","","",3],["raw_output_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/raw_output_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/raw_output_helper_rb.html","","",3],["record_identification_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/record_identification_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/record_identification_helper_rb.html","","",3],["record_tag_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/record_tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/record_tag_helper_rb.html","","",3],["sanitize_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/sanitize_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/sanitize_helper_rb.html","","",3],["scriptaculous_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/scriptaculous_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/scriptaculous_helper_rb.html","","",3],["tag_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/tag_helper_rb.html","","",3],["text_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/text_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/text_helper_rb.html","","",3],["translation_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/translation_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/translation_helper_rb.html","","",3],["url_helper.rb","files/actionpack-2_3_14/lib/action_view/helpers/url_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/url_helper_rb.html","","require 'action_view/helpers/javascript_helper' ",3],["inline_template.rb","files/actionpack-2_3_14/lib/action_view/inline_template_rb.html","files/actionpack-2_3_14/lib/action_view/inline_template_rb.html","","",3],["partials.rb","files/actionpack-2_3_14/lib/action_view/partials_rb.html","files/actionpack-2_3_14/lib/action_view/partials_rb.html","","",3],["paths.rb","files/actionpack-2_3_14/lib/action_view/paths_rb.html","files/actionpack-2_3_14/lib/action_view/paths_rb.html","","",3],["reloadable_template.rb","files/actionpack-2_3_14/lib/action_view/reloadable_template_rb.html","files/actionpack-2_3_14/lib/action_view/reloadable_template_rb.html","","",3],["renderable.rb","files/actionpack-2_3_14/lib/action_view/renderable_rb.html","files/actionpack-2_3_14/lib/action_view/renderable_rb.html","","encoding: utf-8 ",3],["renderable_partial.rb","files/actionpack-2_3_14/lib/action_view/renderable_partial_rb.html","files/actionpack-2_3_14/lib/action_view/renderable_partial_rb.html","","",3],["template.rb","files/actionpack-2_3_14/lib/action_view/template_rb.html","files/actionpack-2_3_14/lib/action_view/template_rb.html","","",3],["template_error.rb","files/actionpack-2_3_14/lib/action_view/template_error_rb.html","files/actionpack-2_3_14/lib/action_view/template_error_rb.html","","",3],["template_handler.rb","files/actionpack-2_3_14/lib/action_view/template_handler_rb.html","files/actionpack-2_3_14/lib/action_view/template_handler_rb.html","","Legacy TemplateHandler stub ",3],["template_handlers.rb","files/actionpack-2_3_14/lib/action_view/template_handlers_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers_rb.html","","",3],["builder.rb","files/actionpack-2_3_14/lib/action_view/template_handlers/builder_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers/builder_rb.html","","",3],["erb.rb","files/actionpack-2_3_14/lib/action_view/template_handlers/erb_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers/erb_rb.html","","",3],["rjs.rb","files/actionpack-2_3_14/lib/action_view/template_handlers/rjs_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers/rjs_rb.html","","",3],["test_case.rb","files/actionpack-2_3_14/lib/action_view/test_case_rb.html","files/actionpack-2_3_14/lib/action_view/test_case_rb.html","","",3],["CHANGELOG","files/activerecord-2_3_14/CHANGELOG.html","files/activerecord-2_3_14/CHANGELOG.html","","*2.3.11 (February 9, 2011)*  *2.3.10 (October 15, 2010)*  * Security Release to fix CVE-2010-3933  *2.3.9",3],["README","files/activerecord-2_3_14/README.html","files/activerecord-2_3_14/README.html","","= Active Record -- Object-relation mapping put on rails  Active Record connects business objects and",3],["aggregations.rb","files/activerecord-2_3_14/lib/active_record/aggregations_rb.html","files/activerecord-2_3_14/lib/active_record/aggregations_rb.html","","",3],["association_preload.rb","files/activerecord-2_3_14/lib/active_record/association_preload_rb.html","files/activerecord-2_3_14/lib/active_record/association_preload_rb.html","","",3],["associations.rb","files/activerecord-2_3_14/lib/active_record/associations_rb.html","files/activerecord-2_3_14/lib/active_record/associations_rb.html","","",3],["association_collection.rb","files/activerecord-2_3_14/lib/active_record/associations/association_collection_rb.html","files/activerecord-2_3_14/lib/active_record/associations/association_collection_rb.html","","",3],["association_proxy.rb","files/activerecord-2_3_14/lib/active_record/associations/association_proxy_rb.html","files/activerecord-2_3_14/lib/active_record/associations/association_proxy_rb.html","","",3],["belongs_to_association.rb","files/activerecord-2_3_14/lib/active_record/associations/belongs_to_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/belongs_to_association_rb.html","","",3],["belongs_to_polymorphic_association.rb","files/activerecord-2_3_14/lib/active_record/associations/belongs_to_polymorphic_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/belongs_to_polymorphic_association_rb.html","","",3],["has_and_belongs_to_many_association.rb","files/activerecord-2_3_14/lib/active_record/associations/has_and_belongs_to_many_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_and_belongs_to_many_association_rb.html","","",3],["has_many_association.rb","files/activerecord-2_3_14/lib/active_record/associations/has_many_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_many_association_rb.html","","",3],["has_many_through_association.rb","files/activerecord-2_3_14/lib/active_record/associations/has_many_through_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_many_through_association_rb.html","","",3],["has_one_association.rb","files/activerecord-2_3_14/lib/active_record/associations/has_one_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_one_association_rb.html","","",3],["has_one_through_association.rb","files/activerecord-2_3_14/lib/active_record/associations/has_one_through_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_one_through_association_rb.html","","",3],["attribute_methods.rb","files/activerecord-2_3_14/lib/active_record/attribute_methods_rb.html","files/activerecord-2_3_14/lib/active_record/attribute_methods_rb.html","","",3],["autosave_association.rb","files/activerecord-2_3_14/lib/active_record/autosave_association_rb.html","files/activerecord-2_3_14/lib/active_record/autosave_association_rb.html","","",3],["base.rb","files/activerecord-2_3_14/lib/active_record/base_rb.html","files/activerecord-2_3_14/lib/active_record/base_rb.html","","",3],["batches.rb","files/activerecord-2_3_14/lib/active_record/batches_rb.html","files/activerecord-2_3_14/lib/active_record/batches_rb.html","","",3],["calculations.rb","files/activerecord-2_3_14/lib/active_record/calculations_rb.html","files/activerecord-2_3_14/lib/active_record/calculations_rb.html","","",3],["callbacks.rb","files/activerecord-2_3_14/lib/active_record/callbacks_rb.html","files/activerecord-2_3_14/lib/active_record/callbacks_rb.html","","",3],["connection_pool.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/connection_pool_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/connection_pool_rb.html","","",3],["connection_specification.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/connection_specification_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/connection_specification_rb.html","","",3],["database_limits.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/database_limits_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/database_limits_rb.html","","",3],["database_statements.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/database_statements_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/database_statements_rb.html","","",3],["query_cache.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/query_cache_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/query_cache_rb.html","","",3],["quoting.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/quoting_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/quoting_rb.html","","",3],["schema_definitions.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/schema_definitions_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/schema_definitions_rb.html","","",3],["schema_statements.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/schema_statements_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/schema_statements_rb.html","","",3],["abstract_adapter.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract_adapter_rb.html","","",3],["mysql_adapter.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/mysql_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/mysql_adapter_rb.html","","",3],["postgresql_adapter.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/postgresql_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/postgresql_adapter_rb.html","","",3],["sqlite3_adapter.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/sqlite3_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/sqlite3_adapter_rb.html","","",3],["sqlite_adapter.rb","files/activerecord-2_3_14/lib/active_record/connection_adapters/sqlite_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/sqlite_adapter_rb.html","","encoding: binary ",3],["dirty.rb","files/activerecord-2_3_14/lib/active_record/dirty_rb.html","files/activerecord-2_3_14/lib/active_record/dirty_rb.html","","",3],["dynamic_finder_match.rb","files/activerecord-2_3_14/lib/active_record/dynamic_finder_match_rb.html","files/activerecord-2_3_14/lib/active_record/dynamic_finder_match_rb.html","","",3],["dynamic_scope_match.rb","files/activerecord-2_3_14/lib/active_record/dynamic_scope_match_rb.html","files/activerecord-2_3_14/lib/active_record/dynamic_scope_match_rb.html","","",3],["fixtures.rb","files/activerecord-2_3_14/lib/active_record/fixtures_rb.html","files/activerecord-2_3_14/lib/active_record/fixtures_rb.html","","",3],["optimistic.rb","files/activerecord-2_3_14/lib/active_record/locking/optimistic_rb.html","files/activerecord-2_3_14/lib/active_record/locking/optimistic_rb.html","","",3],["pessimistic.rb","files/activerecord-2_3_14/lib/active_record/locking/pessimistic_rb.html","files/activerecord-2_3_14/lib/active_record/locking/pessimistic_rb.html","","",3],["migration.rb","files/activerecord-2_3_14/lib/active_record/migration_rb.html","files/activerecord-2_3_14/lib/active_record/migration_rb.html","","",3],["named_scope.rb","files/activerecord-2_3_14/lib/active_record/named_scope_rb.html","files/activerecord-2_3_14/lib/active_record/named_scope_rb.html","","",3],["nested_attributes.rb","files/activerecord-2_3_14/lib/active_record/nested_attributes_rb.html","files/activerecord-2_3_14/lib/active_record/nested_attributes_rb.html","","",3],["observer.rb","files/activerecord-2_3_14/lib/active_record/observer_rb.html","files/activerecord-2_3_14/lib/active_record/observer_rb.html","","",3],["query_cache.rb","files/activerecord-2_3_14/lib/active_record/query_cache_rb.html","files/activerecord-2_3_14/lib/active_record/query_cache_rb.html","","",3],["reflection.rb","files/activerecord-2_3_14/lib/active_record/reflection_rb.html","files/activerecord-2_3_14/lib/active_record/reflection_rb.html","","",3],["schema.rb","files/activerecord-2_3_14/lib/active_record/schema_rb.html","files/activerecord-2_3_14/lib/active_record/schema_rb.html","","",3],["schema_dumper.rb","files/activerecord-2_3_14/lib/active_record/schema_dumper_rb.html","files/activerecord-2_3_14/lib/active_record/schema_dumper_rb.html","","",3],["serialization.rb","files/activerecord-2_3_14/lib/active_record/serialization_rb.html","files/activerecord-2_3_14/lib/active_record/serialization_rb.html","","",3],["json_serializer.rb","files/activerecord-2_3_14/lib/active_record/serializers/json_serializer_rb.html","files/activerecord-2_3_14/lib/active_record/serializers/json_serializer_rb.html","","",3],["xml_serializer.rb","files/activerecord-2_3_14/lib/active_record/serializers/xml_serializer_rb.html","files/activerecord-2_3_14/lib/active_record/serializers/xml_serializer_rb.html","","",3],["session_store.rb","files/activerecord-2_3_14/lib/active_record/session_store_rb.html","files/activerecord-2_3_14/lib/active_record/session_store_rb.html","","",3],["test_case.rb","files/activerecord-2_3_14/lib/active_record/test_case_rb.html","files/activerecord-2_3_14/lib/active_record/test_case_rb.html","","",3],["timestamp.rb","files/activerecord-2_3_14/lib/active_record/timestamp_rb.html","files/activerecord-2_3_14/lib/active_record/timestamp_rb.html","","",3],["transactions.rb","files/activerecord-2_3_14/lib/active_record/transactions_rb.html","files/activerecord-2_3_14/lib/active_record/transactions_rb.html","","",3],["validations.rb","files/activerecord-2_3_14/lib/active_record/validations_rb.html","files/activerecord-2_3_14/lib/active_record/validations_rb.html","","",3],["version.rb","files/activerecord-2_3_14/lib/active_record/version_rb.html","files/activerecord-2_3_14/lib/active_record/version_rb.html","","",3],["CHANGELOG","files/activeresource-2_3_14/CHANGELOG.html","files/activeresource-2_3_14/CHANGELOG.html","","*2.3.11 (February 9, 2011)* *2.3.10 (October 15, 2010)* *2.3.9 (September 4, 2010)* *2.3.8 (May 24, 2010)*",3],["README","files/activeresource-2_3_14/README.html","files/activeresource-2_3_14/README.html","","= Active Resource  Active Resource (ARes) connects business objects and Representational State Transfer",3],["active_resource.rb","files/activeresource-2_3_14/lib/active_resource_rb.html","files/activeresource-2_3_14/lib/active_resource_rb.html",""," ",3],["base.rb","files/activeresource-2_3_14/lib/active_resource/base_rb.html","files/activeresource-2_3_14/lib/active_resource/base_rb.html","","",3],["connection.rb","files/activeresource-2_3_14/lib/active_resource/connection_rb.html","files/activeresource-2_3_14/lib/active_resource/connection_rb.html","","",3],["custom_methods.rb","files/activeresource-2_3_14/lib/active_resource/custom_methods_rb.html","files/activeresource-2_3_14/lib/active_resource/custom_methods_rb.html","","",3],["exceptions.rb","files/activeresource-2_3_14/lib/active_resource/exceptions_rb.html","files/activeresource-2_3_14/lib/active_resource/exceptions_rb.html","","",3],["formats.rb","files/activeresource-2_3_14/lib/active_resource/formats_rb.html","files/activeresource-2_3_14/lib/active_resource/formats_rb.html","","",3],["json_format.rb","files/activeresource-2_3_14/lib/active_resource/formats/json_format_rb.html","files/activeresource-2_3_14/lib/active_resource/formats/json_format_rb.html","","",3],["xml_format.rb","files/activeresource-2_3_14/lib/active_resource/formats/xml_format_rb.html","files/activeresource-2_3_14/lib/active_resource/formats/xml_format_rb.html","","",3],["http_mock.rb","files/activeresource-2_3_14/lib/active_resource/http_mock_rb.html","files/activeresource-2_3_14/lib/active_resource/http_mock_rb.html","","",3],["validations.rb","files/activeresource-2_3_14/lib/active_resource/validations_rb.html","files/activeresource-2_3_14/lib/active_resource/validations_rb.html","","",3],["version.rb","files/activeresource-2_3_14/lib/active_resource/version_rb.html","files/activeresource-2_3_14/lib/active_resource/version_rb.html","","",3],["CHANGELOG","files/activesupport-2_3_14/CHANGELOG.html","files/activesupport-2_3_14/CHANGELOG.html","","*2.3.11 (February 9, 2011)*  *2.3.10 (October 15, 2010)*   *2.3.9 (September 4, 2010)*  * i18n: bundle",3],["README","files/activesupport-2_3_14/README.html","files/activesupport-2_3_14/README.html","","= Active Support -- Utility classes and standard library extensions from Rails  Active Support is a collection",3],["all.rb","files/activesupport-2_3_14/lib/active_support/all_rb.html","files/activesupport-2_3_14/lib/active_support/all_rb.html","","For forward compatibility with Rails 3. require 'active_support' loads a very bare minumum in Rails 3.",3],["backtrace_cleaner.rb","files/activesupport-2_3_14/lib/active_support/backtrace_cleaner_rb.html","files/activesupport-2_3_14/lib/active_support/backtrace_cleaner_rb.html","","",3],["base64.rb","files/activesupport-2_3_14/lib/active_support/base64_rb.html","files/activesupport-2_3_14/lib/active_support/base64_rb.html","","",3],["basic_object.rb","files/activesupport-2_3_14/lib/active_support/basic_object_rb.html","files/activesupport-2_3_14/lib/active_support/basic_object_rb.html","","",3],["buffered_logger.rb","files/activesupport-2_3_14/lib/active_support/buffered_logger_rb.html","files/activesupport-2_3_14/lib/active_support/buffered_logger_rb.html","","",3],["cache.rb","files/activesupport-2_3_14/lib/active_support/cache_rb.html","files/activesupport-2_3_14/lib/active_support/cache_rb.html","","",3],["compressed_mem_cache_store.rb","files/activesupport-2_3_14/lib/active_support/cache/compressed_mem_cache_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/compressed_mem_cache_store_rb.html","","",3],["drb_store.rb","files/activesupport-2_3_14/lib/active_support/cache/drb_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/drb_store_rb.html","","",3],["file_store.rb","files/activesupport-2_3_14/lib/active_support/cache/file_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/file_store_rb.html","","",3],["mem_cache_store.rb","files/activesupport-2_3_14/lib/active_support/cache/mem_cache_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/mem_cache_store_rb.html","","",3],["memory_store.rb","files/activesupport-2_3_14/lib/active_support/cache/memory_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/memory_store_rb.html","","",3],["local_cache.rb","files/activesupport-2_3_14/lib/active_support/cache/strategy/local_cache_rb.html","files/activesupport-2_3_14/lib/active_support/cache/strategy/local_cache_rb.html","","",3],["synchronized_memory_store.rb","files/activesupport-2_3_14/lib/active_support/cache/synchronized_memory_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/synchronized_memory_store_rb.html","","",3],["callbacks.rb","files/activesupport-2_3_14/lib/active_support/callbacks_rb.html","files/activesupport-2_3_14/lib/active_support/callbacks_rb.html","","",3],["core_ext.rb","files/activesupport-2_3_14/lib/active_support/core_ext_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext_rb.html","","",3],["array.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array_rb.html","","",3],["access.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array/access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/access_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/conversions_rb.html","","",3],["extract_options.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array/extract_options_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/extract_options_rb.html","","",3],["grouping.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array/grouping_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/grouping_rb.html","","",3],["random_access.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array/random_access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/random_access_rb.html","","",3],["wrapper.rb","files/activesupport-2_3_14/lib/active_support/core_ext/array/wrapper_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/wrapper_rb.html","","",3],["base64.rb","files/activesupport-2_3_14/lib/active_support/core_ext/base64_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/base64_rb.html","","",3],["encoding.rb","files/activesupport-2_3_14/lib/active_support/core_ext/base64/encoding_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/base64/encoding_rb.html","","",3],["benchmark.rb","files/activesupport-2_3_14/lib/active_support/core_ext/benchmark_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/benchmark_rb.html","","",3],["bigdecimal.rb","files/activesupport-2_3_14/lib/active_support/core_ext/bigdecimal_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/bigdecimal_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/bigdecimal/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/bigdecimal/conversions_rb.html","","",3],["blank.rb","files/activesupport-2_3_14/lib/active_support/core_ext/blank_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/blank_rb.html","","",3],["cgi.rb","files/activesupport-2_3_14/lib/active_support/core_ext/cgi_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/cgi_rb.html","","",3],["escape_skipping_slashes.rb","files/activesupport-2_3_14/lib/active_support/core_ext/cgi/escape_skipping_slashes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/cgi/escape_skipping_slashes_rb.html","","",3],["class.rb","files/activesupport-2_3_14/lib/active_support/core_ext/class_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class_rb.html","","",3],["attribute.rb","files/activesupport-2_3_14/lib/active_support/core_ext/class/attribute_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/attribute_rb.html","","",3],["attribute_accessors.rb","files/activesupport-2_3_14/lib/active_support/core_ext/class/attribute_accessors_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/attribute_accessors_rb.html","","Extends the class object with class and instance accessors for class attributes, just like the native",3],["delegating_attributes.rb","files/activesupport-2_3_14/lib/active_support/core_ext/class/delegating_attributes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/delegating_attributes_rb.html","","These class attributes behave something like the class inheritable accessors.  But instead of copying",3],["inheritable_attributes.rb","files/activesupport-2_3_14/lib/active_support/core_ext/class/inheritable_attributes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/inheritable_attributes_rb.html","","Retain for backward compatibility.  Methods are now included in Class. ",3],["removal.rb","files/activesupport-2_3_14/lib/active_support/core_ext/class/removal_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/removal_rb.html","","",3],["date.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_rb.html","","",3],["behavior.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date/behavior_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date/behavior_rb.html","","",3],["calculations.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date/calculations_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date/calculations_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date/conversions_rb.html","","",3],["date_time.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date_time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_time_rb.html","","",3],["calculations.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date_time/calculations_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_time/calculations_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/date_time/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_time/conversions_rb.html","","",3],["duplicable.rb","files/activesupport-2_3_14/lib/active_support/core_ext/duplicable_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/duplicable_rb.html","","",3],["enumerable.rb","files/activesupport-2_3_14/lib/active_support/core_ext/enumerable_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/enumerable_rb.html","","",3],["exception.rb","files/activesupport-2_3_14/lib/active_support/core_ext/exception_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/exception_rb.html","","",3],["file.rb","files/activesupport-2_3_14/lib/active_support/core_ext/file_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/file_rb.html","","",3],["atomic.rb","files/activesupport-2_3_14/lib/active_support/core_ext/file/atomic_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/file/atomic_rb.html","","",3],["float.rb","files/activesupport-2_3_14/lib/active_support/core_ext/float_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/float_rb.html","","",3],["rounding.rb","files/activesupport-2_3_14/lib/active_support/core_ext/float/rounding_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/float/rounding_rb.html","","",3],["time.rb","files/activesupport-2_3_14/lib/active_support/core_ext/float/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/float/time_rb.html","","",3],["hash.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/conversions_rb.html","","",3],["deep_merge.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/deep_merge_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/deep_merge_rb.html","","",3],["diff.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/diff_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/diff_rb.html","","",3],["except.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/except_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/except_rb.html","","",3],["indifferent_access.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/indifferent_access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/indifferent_access_rb.html","","This class has dubious semantics and we only have it so that people can write params[:key] instead of",3],["keys.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/keys_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/keys_rb.html","","",3],["reverse_merge.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/reverse_merge_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/reverse_merge_rb.html","","",3],["slice.rb","files/activesupport-2_3_14/lib/active_support/core_ext/hash/slice_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/slice_rb.html","","",3],["integer.rb","files/activesupport-2_3_14/lib/active_support/core_ext/integer_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer_rb.html","","",3],["even_odd.rb","files/activesupport-2_3_14/lib/active_support/core_ext/integer/even_odd_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer/even_odd_rb.html","","",3],["inflections.rb","files/activesupport-2_3_14/lib/active_support/core_ext/integer/inflections_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer/inflections_rb.html","","",3],["time.rb","files/activesupport-2_3_14/lib/active_support/core_ext/integer/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer/time_rb.html","","",3],["kernel.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel_rb.html","","",3],["agnostics.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/agnostics_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/agnostics_rb.html","","",3],["daemonizing.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/daemonizing_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/daemonizing_rb.html","","",3],["debugger.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/debugger_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/debugger_rb.html","","",3],["reporting.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/reporting_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/reporting_rb.html","","",3],["requires.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/requires_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/requires_rb.html","","",3],["singleton_class.rb","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/singleton_class_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/singleton_class_rb.html","","",3],["load_error.rb","files/activesupport-2_3_14/lib/active_support/core_ext/load_error_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/load_error_rb.html","","",3],["logger.rb","files/activesupport-2_3_14/lib/active_support/core_ext/logger_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/logger_rb.html","","Adds the 'around_level' method to Logger. ",3],["module.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module_rb.html","","",3],["aliasing.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/aliasing_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/aliasing_rb.html","","",3],["attr_accessor_with_default.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/attr_accessor_with_default_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/attr_accessor_with_default_rb.html","","",3],["attr_internal.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/attr_internal_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/attr_internal_rb.html","","",3],["attribute_accessors.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/attribute_accessors_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/attribute_accessors_rb.html","","",3],["delegation.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/delegation_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/delegation_rb.html","","",3],["inclusion.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/inclusion_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/inclusion_rb.html","","",3],["introspection.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/introspection_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/introspection_rb.html","","",3],["loading.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/loading_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/loading_rb.html","","",3],["model_naming.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/model_naming_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/model_naming_rb.html","","",3],["remove_method.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/remove_method_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/remove_method_rb.html","","",3],["synchronization.rb","files/activesupport-2_3_14/lib/active_support/core_ext/module/synchronization_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/synchronization_rb.html","","",3],["name_error.rb","files/activesupport-2_3_14/lib/active_support/core_ext/name_error_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/name_error_rb.html","","Add a +missing_name+ method to NameError instances. ",3],["numeric.rb","files/activesupport-2_3_14/lib/active_support/core_ext/numeric_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric_rb.html","","",3],["bytes.rb","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/bytes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/bytes_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/conversions_rb.html","","",3],["time.rb","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/time_rb.html","","",3],["object.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object_rb.html","","",3],["blank.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/blank_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/blank_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/conversions_rb.html","","",3],["extending.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/extending_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/extending_rb.html","","",3],["instance_variables.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/instance_variables_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/instance_variables_rb.html","","",3],["metaclass.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/metaclass_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/metaclass_rb.html","","",3],["misc.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/misc_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/misc_rb.html","","",3],["singleton_class.rb","files/activesupport-2_3_14/lib/active_support/core_ext/object/singleton_class_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/singleton_class_rb.html","","",3],["pathname.rb","files/activesupport-2_3_14/lib/active_support/core_ext/pathname_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/pathname_rb.html","","",3],["clean_within.rb","files/activesupport-2_3_14/lib/active_support/core_ext/pathname/clean_within_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/pathname/clean_within_rb.html","","",3],["proc.rb","files/activesupport-2_3_14/lib/active_support/core_ext/proc_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/proc_rb.html","","",3],["process.rb","files/activesupport-2_3_14/lib/active_support/core_ext/process_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/process_rb.html","","",3],["daemon.rb","files/activesupport-2_3_14/lib/active_support/core_ext/process/daemon_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/process/daemon_rb.html","","",3],["range.rb","files/activesupport-2_3_14/lib/active_support/core_ext/range_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range_rb.html","","",3],["blockless_step.rb","files/activesupport-2_3_14/lib/active_support/core_ext/range/blockless_step_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/blockless_step_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/range/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/conversions_rb.html","","",3],["include_range.rb","files/activesupport-2_3_14/lib/active_support/core_ext/range/include_range_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/include_range_rb.html","","",3],["overlaps.rb","files/activesupport-2_3_14/lib/active_support/core_ext/range/overlaps_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/overlaps_rb.html","","",3],["rexml.rb","files/activesupport-2_3_14/lib/active_support/core_ext/rexml_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/rexml_rb.html","","Fixes the rexml vulnerability disclosed at: http://www.ruby-lang.org/en/news/2008/08/23/dos-vulnerability-in-rexml/",3],["string.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string_rb.html","","encoding: utf-8 ",3],["access.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/access_rb.html","","",3],["behavior.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/behavior_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/behavior_rb.html","","",3],["bytesize.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/bytesize_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/bytesize_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/conversions_rb.html","","",3],["filters.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/filters_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/filters_rb.html","","",3],["inflections.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/inflections_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/inflections_rb.html","","",3],["iterators.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/iterators_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/iterators_rb.html","","",3],["multibyte.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/multibyte_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/multibyte_rb.html","","encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding: utf-8 --- encoding:",3],["output_safety.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/output_safety_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/output_safety_rb.html","","",3],["starts_ends_with.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/starts_ends_with_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/starts_ends_with_rb.html","","",3],["xchar.rb","files/activesupport-2_3_14/lib/active_support/core_ext/string/xchar_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/xchar_rb.html","","",3],["symbol.rb","files/activesupport-2_3_14/lib/active_support/core_ext/symbol_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/symbol_rb.html","","",3],["time.rb","files/activesupport-2_3_14/lib/active_support/core_ext/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time_rb.html","","",3],["behavior.rb","files/activesupport-2_3_14/lib/active_support/core_ext/time/behavior_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/behavior_rb.html","","",3],["calculations.rb","files/activesupport-2_3_14/lib/active_support/core_ext/time/calculations_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/calculations_rb.html","","",3],["conversions.rb","files/activesupport-2_3_14/lib/active_support/core_ext/time/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/conversions_rb.html","","",3],["zones.rb","files/activesupport-2_3_14/lib/active_support/core_ext/time/zones_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/zones_rb.html","","",3],["try.rb","files/activesupport-2_3_14/lib/active_support/core_ext/try_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/try_rb.html","","",3],["uri.rb","files/activesupport-2_3_14/lib/active_support/core_ext/uri_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/uri_rb.html","","",3],["dependencies.rb","files/activesupport-2_3_14/lib/active_support/dependencies_rb.html","files/activesupport-2_3_14/lib/active_support/dependencies_rb.html","","",3],["deprecation.rb","files/activesupport-2_3_14/lib/active_support/deprecation_rb.html","files/activesupport-2_3_14/lib/active_support/deprecation_rb.html","","",3],["duration.rb","files/activesupport-2_3_14/lib/active_support/duration_rb.html","files/activesupport-2_3_14/lib/active_support/duration_rb.html","","",3],["gzip.rb","files/activesupport-2_3_14/lib/active_support/gzip_rb.html","files/activesupport-2_3_14/lib/active_support/gzip_rb.html","","",3],["inflections.rb","files/activesupport-2_3_14/lib/active_support/inflections_rb.html","files/activesupport-2_3_14/lib/active_support/inflections_rb.html","","",3],["inflector.rb","files/activesupport-2_3_14/lib/active_support/inflector_rb.html","files/activesupport-2_3_14/lib/active_support/inflector_rb.html","","encoding: utf-8 ",3],["json.rb","files/activesupport-2_3_14/lib/active_support/json_rb.html","files/activesupport-2_3_14/lib/active_support/json_rb.html","","",3],["jsongem.rb","files/activesupport-2_3_14/lib/active_support/json/backends/jsongem_rb.html","files/activesupport-2_3_14/lib/active_support/json/backends/jsongem_rb.html","","",3],["yajl.rb","files/activesupport-2_3_14/lib/active_support/json/backends/yajl_rb.html","files/activesupport-2_3_14/lib/active_support/json/backends/yajl_rb.html","","",3],["yaml.rb","files/activesupport-2_3_14/lib/active_support/json/backends/yaml_rb.html","files/activesupport-2_3_14/lib/active_support/json/backends/yaml_rb.html","","",3],["decoding.rb","files/activesupport-2_3_14/lib/active_support/json/decoding_rb.html","files/activesupport-2_3_14/lib/active_support/json/decoding_rb.html","","",3],["date.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/date_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/date_rb.html","","",3],["date_time.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/date_time_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/date_time_rb.html","","",3],["enumerable.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/enumerable_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/enumerable_rb.html","","",3],["false_class.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/false_class_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/false_class_rb.html","","",3],["hash.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/hash_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/hash_rb.html","","",3],["nil_class.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/nil_class_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/nil_class_rb.html","","",3],["numeric.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/numeric_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/numeric_rb.html","","",3],["object.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/object_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/object_rb.html","","",3],["regexp.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/regexp_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/regexp_rb.html","","",3],["string.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/string_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/string_rb.html","","",3],["symbol.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/symbol_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/symbol_rb.html","","",3],["time.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/time_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/time_rb.html","","",3],["true_class.rb","files/activesupport-2_3_14/lib/active_support/json/encoders/true_class_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/true_class_rb.html","","",3],["encoding.rb","files/activesupport-2_3_14/lib/active_support/json/encoding_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoding_rb.html","","encoding: utf-8 ",3],["variable.rb","files/activesupport-2_3_14/lib/active_support/json/variable_rb.html","files/activesupport-2_3_14/lib/active_support/json/variable_rb.html","","",3],["memoizable.rb","files/activesupport-2_3_14/lib/active_support/memoizable_rb.html","files/activesupport-2_3_14/lib/active_support/memoizable_rb.html","","",3],["message_encryptor.rb","files/activesupport-2_3_14/lib/active_support/message_encryptor_rb.html","files/activesupport-2_3_14/lib/active_support/message_encryptor_rb.html","","",3],["message_verifier.rb","files/activesupport-2_3_14/lib/active_support/message_verifier_rb.html","files/activesupport-2_3_14/lib/active_support/message_verifier_rb.html","","",3],["multibyte.rb","files/activesupport-2_3_14/lib/active_support/multibyte_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte_rb.html","","encoding: utf-8 ",3],["chars.rb","files/activesupport-2_3_14/lib/active_support/multibyte/chars_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/chars_rb.html","","encoding: utf-8 ",3],["exceptions.rb","files/activesupport-2_3_14/lib/active_support/multibyte/exceptions_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/exceptions_rb.html","","encoding: utf-8 ",3],["unicode_database.rb","files/activesupport-2_3_14/lib/active_support/multibyte/unicode_database_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/unicode_database_rb.html","","encoding: utf-8 ",3],["utils.rb","files/activesupport-2_3_14/lib/active_support/multibyte/utils_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/utils_rb.html","","encoding: utf-8 ",3],["option_merger.rb","files/activesupport-2_3_14/lib/active_support/option_merger_rb.html","files/activesupport-2_3_14/lib/active_support/option_merger_rb.html","","",3],["ordered_hash.rb","files/activesupport-2_3_14/lib/active_support/ordered_hash_rb.html","files/activesupport-2_3_14/lib/active_support/ordered_hash_rb.html","","",3],["ordered_options.rb","files/activesupport-2_3_14/lib/active_support/ordered_options_rb.html","files/activesupport-2_3_14/lib/active_support/ordered_options_rb.html","","",3],["rescuable.rb","files/activesupport-2_3_14/lib/active_support/rescuable_rb.html","files/activesupport-2_3_14/lib/active_support/rescuable_rb.html","","",3],["secure_random.rb","files/activesupport-2_3_14/lib/active_support/secure_random_rb.html","files/activesupport-2_3_14/lib/active_support/secure_random_rb.html","","",3],["string_inquirer.rb","files/activesupport-2_3_14/lib/active_support/string_inquirer_rb.html","files/activesupport-2_3_14/lib/active_support/string_inquirer_rb.html","","",3],["test_case.rb","files/activesupport-2_3_14/lib/active_support/test_case_rb.html","files/activesupport-2_3_14/lib/active_support/test_case_rb.html","","",3],["assertions.rb","files/activesupport-2_3_14/lib/active_support/testing/assertions_rb.html","files/activesupport-2_3_14/lib/active_support/testing/assertions_rb.html","","",3],["declarative.rb","files/activesupport-2_3_14/lib/active_support/testing/declarative_rb.html","files/activesupport-2_3_14/lib/active_support/testing/declarative_rb.html","","",3],["default.rb","files/activesupport-2_3_14/lib/active_support/testing/default_rb.html","files/activesupport-2_3_14/lib/active_support/testing/default_rb.html","","",3],["deprecation.rb","files/activesupport-2_3_14/lib/active_support/testing/deprecation_rb.html","files/activesupport-2_3_14/lib/active_support/testing/deprecation_rb.html","","",3],["performance.rb","files/activesupport-2_3_14/lib/active_support/testing/performance_rb.html","files/activesupport-2_3_14/lib/active_support/testing/performance_rb.html","","",3],["setup_and_teardown.rb","files/activesupport-2_3_14/lib/active_support/testing/setup_and_teardown_rb.html","files/activesupport-2_3_14/lib/active_support/testing/setup_and_teardown_rb.html","","",3],["time_with_zone.rb","files/activesupport-2_3_14/lib/active_support/time_with_zone_rb.html","files/activesupport-2_3_14/lib/active_support/time_with_zone_rb.html","","",3],["time_zone.rb","files/activesupport-2_3_14/lib/active_support/values/time_zone_rb.html","files/activesupport-2_3_14/lib/active_support/values/time_zone_rb.html","","The TimeZone class serves as a wrapper around TZInfo::Timezone instances. It allows us to do the following:",3],["vendor.rb","files/activesupport-2_3_14/lib/active_support/vendor_rb.html","files/activesupport-2_3_14/lib/active_support/vendor_rb.html","","Prefer gems to the bundled libs. ",3],["blankslate.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/blankslate_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/blankslate_rb.html","","",3],["builder.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder_rb.html","","",3],["blankslate.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/blankslate_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/blankslate_rb.html","","",3],["css.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/css_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/css_rb.html",""," ",3],["xchar.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xchar_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xchar_rb.html","","The XChar library is provided courtesy of Sam Ruby (See http://intertwingly.net/stories/2005/09/28/xchar.rb)",3],["xmlbase.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlbase_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlbase_rb.html","","",3],["xmlevents.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlevents_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlevents_rb.html","","",3],["xmlmarkup.rb","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlmarkup_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlmarkup_rb.html","","",3],["i18n.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n_rb.html","","encoding: utf-8 ",3],["backend.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend_rb.html","","",3],["active_record.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record_rb.html","","",3],["missing.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/missing_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/missing_rb.html","","This extension stores translation stub records for missing translations to the database. This is useful",3],["store_procs.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/store_procs_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/store_procs_rb.html","","This module is intended to be mixed into the ActiveRecord backend to allow storing Ruby Procs as translation",3],["translation.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/translation_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/translation_rb.html","","",3],["base.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/base_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/base_rb.html","","encoding: utf-8 ",3],["cache.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cache_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cache_rb.html","","encoding: utf-8 ",3],["cascade.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cascade_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cascade_rb.html","","encoding: utf-8 ",3],["chain.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/chain_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/chain_rb.html","","encoding: utf-8 ",3],["cldr.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cldr_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cldr_rb.html","","encoding: utf-8 ",3],["fallbacks.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/fallbacks_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/fallbacks_rb.html","","encoding: utf-8 ",3],["flatten.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/flatten_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/flatten_rb.html","","",3],["gettext.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/gettext_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/gettext_rb.html","","encoding: utf-8 ",3],["interpolation_compiler.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/interpolation_compiler_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/interpolation_compiler_rb.html","","encoding: utf-8 ",3],["key_value.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/key_value_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/key_value_rb.html","","encoding: utf-8 ",3],["memoize.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/memoize_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/memoize_rb.html","","encoding: utf-8 Memoize module simply memoizes the values returned by lookup using a flat hash and can",3],["metadata.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/metadata_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/metadata_rb.html","","I18n translation metadata is useful when you want to access information about how a translation was looked",3],["pluralization.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/pluralization_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/pluralization_rb.html","","encoding: utf-8 ",3],["simple.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/simple_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/simple_rb.html","","encoding: utf-8 ",3],["transliterator.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/transliterator_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/transliterator_rb.html","","encoding: utf-8 ",3],["config.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/config_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/config_rb.html","","",3],["hash.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/core_ext/hash_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/core_ext/hash_rb.html","","",3],["interpolate.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/core_ext/string/interpolate_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/core_ext/string/interpolate_rb.html","","encoding: utf-8 ",3],["exceptions.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/exceptions_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/exceptions_rb.html","","encoding: utf-8 ",3],["gettext.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext_rb.html","","encoding: utf-8 ",3],["helpers.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext/helpers_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext/helpers_rb.html","","encoding: utf-8 ",3],["po_parser.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext/po_parser_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext/po_parser_rb.html","","",3],["locale.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale_rb.html","","",3],["fallbacks.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/fallbacks_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/fallbacks_rb.html","","encoding: utf-8 ",3],["tag.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag_rb.html","","encoding: utf-8 ",3],["parents.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/parents_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/parents_rb.html","","encoding: utf-8 ",3],["rfc4646.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/rfc4646_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/rfc4646_rb.html","","encoding: utf-8 ",3],["simple.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/simple_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/simple_rb.html","","encoding: utf-8 ",3],["version.rb","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/version_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/version_rb.html","","",3],["memcache.rb","files/activesupport-2_3_14/lib/active_support/vendor/memcache-client-1_7_4/memcache_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/memcache-client-1_7_4/memcache_rb.html","","",3],["tzinfo.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo_rb.html",""," ",3],["data_timezone.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/data_timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/data_timezone_rb.html",""," ",3],["data_timezone_info.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/data_timezone_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/data_timezone_info_rb.html",""," ",3],["Algiers.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Algiers_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Algiers_rb.html","","",3],["Cairo.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Cairo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Cairo_rb.html","","",3],["Casablanca.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Casablanca_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Casablanca_rb.html","","",3],["Harare.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Harare_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Harare_rb.html","","",3],["Johannesburg.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Johannesburg_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Johannesburg_rb.html","","",3],["Monrovia.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Monrovia_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Monrovia_rb.html","","",3],["Nairobi.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Nairobi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Africa/Nairobi_rb.html","","",3],["Buenos_Aires.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Argentina/Buenos_Aires_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Argentina/Buenos_Aires_rb.html","","",3],["San_Juan.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Argentina/San_Juan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Argentina/San_Juan_rb.html","","",3],["Bogota.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Bogota_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Bogota_rb.html","","",3],["Caracas.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Caracas_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Caracas_rb.html","","",3],["Chicago.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Chicago_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Chicago_rb.html","","",3],["Chihuahua.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Chihuahua_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Chihuahua_rb.html","","",3],["Denver.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Denver_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Denver_rb.html","","",3],["Godthab.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Godthab_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Godthab_rb.html","","",3],["Guatemala.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Guatemala_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Guatemala_rb.html","","",3],["Halifax.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Halifax_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Halifax_rb.html","","",3],["Indianapolis.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Indiana/Indianapolis_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Indiana/Indianapolis_rb.html","","",3],["Juneau.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Juneau_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Juneau_rb.html","","",3],["La_Paz.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/La_Paz_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/La_Paz_rb.html","","",3],["Lima.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Lima_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Lima_rb.html","","",3],["Los_Angeles.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Los_Angeles_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Los_Angeles_rb.html","","",3],["Mazatlan.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Mazatlan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Mazatlan_rb.html","","",3],["Mexico_City.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Mexico_City_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Mexico_City_rb.html","","",3],["Monterrey.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Monterrey_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Monterrey_rb.html","","",3],["New_York.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/New_York_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/New_York_rb.html","","",3],["Phoenix.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Phoenix_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Phoenix_rb.html","","",3],["Regina.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Regina_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Regina_rb.html","","",3],["Santiago.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Santiago_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Santiago_rb.html","","",3],["Sao_Paulo.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Sao_Paulo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Sao_Paulo_rb.html","","",3],["St_Johns.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/St_Johns_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/St_Johns_rb.html","","",3],["Tijuana.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Tijuana_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/America/Tijuana_rb.html","","",3],["Almaty.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Almaty_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Almaty_rb.html","","",3],["Baghdad.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Baghdad_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Baghdad_rb.html","","",3],["Baku.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Baku_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Baku_rb.html","","",3],["Bangkok.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Bangkok_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Bangkok_rb.html","","",3],["Chongqing.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Chongqing_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Chongqing_rb.html","","",3],["Colombo.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Colombo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Colombo_rb.html","","",3],["Dhaka.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Dhaka_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Dhaka_rb.html","","",3],["Hong_Kong.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Hong_Kong_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Hong_Kong_rb.html","","",3],["Irkutsk.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Irkutsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Irkutsk_rb.html","","",3],["Jakarta.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Jakarta_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Jakarta_rb.html","","",3],["Jerusalem.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Jerusalem_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Jerusalem_rb.html","","",3],["Kabul.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kabul_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kabul_rb.html","","",3],["Kamchatka.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kamchatka_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kamchatka_rb.html","","",3],["Karachi.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Karachi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Karachi_rb.html","","",3],["Katmandu.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Katmandu_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Katmandu_rb.html","","",3],["Kolkata.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kolkata_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kolkata_rb.html","","",3],["Krasnoyarsk.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Krasnoyarsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Krasnoyarsk_rb.html","","",3],["Kuala_Lumpur.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kuala_Lumpur_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kuala_Lumpur_rb.html","","",3],["Kuwait.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kuwait_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Kuwait_rb.html","","",3],["Magadan.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Magadan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Magadan_rb.html","","",3],["Muscat.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Muscat_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Muscat_rb.html","","",3],["Novosibirsk.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Novosibirsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Novosibirsk_rb.html","","",3],["Rangoon.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Rangoon_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Rangoon_rb.html","","",3],["Riyadh.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Riyadh_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Riyadh_rb.html","","",3],["Seoul.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Seoul_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Seoul_rb.html","","",3],["Shanghai.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Shanghai_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Shanghai_rb.html","","",3],["Singapore.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Singapore_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Singapore_rb.html","","",3],["Taipei.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Taipei_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Taipei_rb.html","","",3],["Tashkent.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tashkent_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tashkent_rb.html","","",3],["Tbilisi.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tbilisi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tbilisi_rb.html","","",3],["Tehran.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tehran_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tehran_rb.html","","",3],["Tokyo.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tokyo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Tokyo_rb.html","","",3],["Ulaanbaatar.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Ulaanbaatar_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Ulaanbaatar_rb.html","","",3],["Urumqi.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Urumqi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Urumqi_rb.html","","",3],["Vladivostok.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Vladivostok_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Vladivostok_rb.html","","",3],["Yakutsk.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Yakutsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Yakutsk_rb.html","","",3],["Yekaterinburg.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Yekaterinburg_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Yekaterinburg_rb.html","","",3],["Yerevan.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Yerevan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Asia/Yerevan_rb.html","","",3],["Azores.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Atlantic/Azores_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Atlantic/Azores_rb.html","","",3],["Cape_Verde.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Atlantic/Cape_Verde_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Atlantic/Cape_Verde_rb.html","","",3],["South_Georgia.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Atlantic/South_Georgia_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Atlantic/South_Georgia_rb.html","","",3],["Adelaide.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Adelaide_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Adelaide_rb.html","","",3],["Brisbane.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Brisbane_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Brisbane_rb.html","","",3],["Darwin.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Darwin_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Darwin_rb.html","","",3],["Hobart.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Hobart_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Hobart_rb.html","","",3],["Melbourne.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Melbourne_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Melbourne_rb.html","","",3],["Perth.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Perth_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Perth_rb.html","","",3],["Sydney.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Sydney_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Australia/Sydney_rb.html","","",3],["UTC.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Etc/UTC_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Etc/UTC_rb.html","","",3],["Amsterdam.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Amsterdam_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Amsterdam_rb.html","","",3],["Athens.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Athens_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Athens_rb.html","","",3],["Belgrade.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Belgrade_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Belgrade_rb.html","","",3],["Berlin.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Berlin_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Berlin_rb.html","","",3],["Bratislava.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Bratislava_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Bratislava_rb.html","","",3],["Brussels.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Brussels_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Brussels_rb.html","","",3],["Bucharest.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Bucharest_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Bucharest_rb.html","","",3],["Budapest.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Budapest_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Budapest_rb.html","","",3],["Copenhagen.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Copenhagen_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Copenhagen_rb.html","","",3],["Dublin.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Dublin_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Dublin_rb.html","","",3],["Helsinki.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Helsinki_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Helsinki_rb.html","","",3],["Istanbul.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Istanbul_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Istanbul_rb.html","","",3],["Kiev.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Kiev_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Kiev_rb.html","","",3],["Lisbon.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Lisbon_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Lisbon_rb.html","","",3],["Ljubljana.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Ljubljana_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Ljubljana_rb.html","","",3],["London.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/London_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/London_rb.html","","",3],["Madrid.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Madrid_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Madrid_rb.html","","",3],["Minsk.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Minsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Minsk_rb.html","","",3],["Moscow.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Moscow_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Moscow_rb.html","","",3],["Paris.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Paris_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Paris_rb.html","","",3],["Prague.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Prague_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Prague_rb.html","","",3],["Riga.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Riga_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Riga_rb.html","","",3],["Rome.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Rome_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Rome_rb.html","","",3],["Sarajevo.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Sarajevo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Sarajevo_rb.html","","",3],["Skopje.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Skopje_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Skopje_rb.html","","",3],["Sofia.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Sofia_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Sofia_rb.html","","",3],["Stockholm.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Stockholm_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Stockholm_rb.html","","",3],["Tallinn.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Tallinn_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Tallinn_rb.html","","",3],["Vienna.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Vienna_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Vienna_rb.html","","",3],["Vilnius.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Vilnius_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Vilnius_rb.html","","",3],["Warsaw.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Warsaw_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Warsaw_rb.html","","",3],["Zagreb.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Zagreb_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Europe/Zagreb_rb.html","","",3],["Auckland.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Auckland_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Auckland_rb.html","","",3],["Fiji.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Fiji_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Fiji_rb.html","","",3],["Guam.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Guam_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Guam_rb.html","","",3],["Honolulu.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Honolulu_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Honolulu_rb.html","","",3],["Majuro.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Majuro_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Majuro_rb.html","","",3],["Midway.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Midway_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Midway_rb.html","","",3],["Noumea.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Noumea_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Noumea_rb.html","","",3],["Pago_Pago.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Pago_Pago_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Pago_Pago_rb.html","","",3],["Port_Moresby.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Port_Moresby_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Port_Moresby_rb.html","","",3],["Tongatapu.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Tongatapu_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/Pacific/Tongatapu_rb.html","","",3],["info_timezone.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/info_timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/info_timezone_rb.html",""," ",3],["linked_timezone.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/linked_timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/linked_timezone_rb.html",""," ",3],["linked_timezone_info.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/linked_timezone_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/linked_timezone_info_rb.html",""," ",3],["offset_rationals.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/offset_rationals_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/offset_rationals_rb.html",""," ",3],["ruby_core_support.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/ruby_core_support_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/ruby_core_support_rb.html","","-- Copyright (c) 2008 Philip Ross Permission is hereby granted, free of charge, to any person obtaining",3],["time_or_datetime.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/time_or_datetime_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/time_or_datetime_rb.html",""," ",3],["timezone.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_rb.html",""," ",3],["timezone_definition.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_definition_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_definition_rb.html",""," ",3],["timezone_info.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_info_rb.html","","---  ",3],["timezone_offset_info.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_offset_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_offset_info_rb.html",""," ",3],["timezone_period.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_period_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_period_rb.html",""," ",3],["timezone_transition_info.rb","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_transition_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_transition_info_rb.html",""," ",3],["version.rb","files/activesupport-2_3_14/lib/active_support/version_rb.html","files/activesupport-2_3_14/lib/active_support/version_rb.html","","",3],["whiny_nil.rb","files/activesupport-2_3_14/lib/active_support/whiny_nil_rb.html","files/activesupport-2_3_14/lib/active_support/whiny_nil_rb.html","","Extensions to +nil+ which allow for more helpful error messages for people who are new to Rails. Ruby",3],["xml_mini.rb","files/activesupport-2_3_14/lib/active_support/xml_mini_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini_rb.html","","",3],["jdom.rb","files/activesupport-2_3_14/lib/active_support/xml_mini/jdom_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/jdom_rb.html","","",3],["libxml.rb","files/activesupport-2_3_14/lib/active_support/xml_mini/libxml_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/libxml_rb.html","","",3],["libxmlsax.rb","files/activesupport-2_3_14/lib/active_support/xml_mini/libxmlsax_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/libxmlsax_rb.html","","",3],["nokogiri.rb","files/activesupport-2_3_14/lib/active_support/xml_mini/nokogiri_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/nokogiri_rb.html","","",3],["nokogirisax.rb","files/activesupport-2_3_14/lib/active_support/xml_mini/nokogirisax_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/nokogirisax_rb.html","","",3],["rexml.rb","files/activesupport-2_3_14/lib/active_support/xml_mini/rexml_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/rexml_rb.html","","= XmlMini ReXML implementation ",3],["CHANGELOG","files/rails-2_3_14/CHANGELOG.html","files/rails-2_3_14/CHANGELOG.html","","*2.3.11 (February 9, 2011)*  *2.3.10 (October 15, 2010)*  *2.3.9 (September 4, 2010)*  * Deprecates config.load_(once_)paths",3],["MIT-LICENSE","files/rails-2_3_14/MIT-LICENSE.html","files/rails-2_3_14/MIT-LICENSE.html","","Copyright (c) 2004-2010 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README","files/rails-2_3_14/README.html","files/rails-2_3_14/README.html","","== Welcome to Rails  Rails is a web-application framework that includes everything needed to create ",3],["code_statistics.rb","files/rails-2_3_14/lib/code_statistics_rb.html","files/rails-2_3_14/lib/code_statistics_rb.html","","",3],["commands.rb","files/rails-2_3_14/lib/commands_rb.html","files/rails-2_3_14/lib/commands_rb.html","","",3],["about.rb","files/rails-2_3_14/lib/commands/about_rb.html","files/rails-2_3_14/lib/commands/about_rb.html","","",3],["console.rb","files/rails-2_3_14/lib/commands/console_rb.html","files/rails-2_3_14/lib/commands/console_rb.html","","",3],["dbconsole.rb","files/rails-2_3_14/lib/commands/dbconsole_rb.html","files/rails-2_3_14/lib/commands/dbconsole_rb.html","","",3],["destroy.rb","files/rails-2_3_14/lib/commands/destroy_rb.html","files/rails-2_3_14/lib/commands/destroy_rb.html","","",3],["generate.rb","files/rails-2_3_14/lib/commands/generate_rb.html","files/rails-2_3_14/lib/commands/generate_rb.html","","",3],["plugin.rb","files/rails-2_3_14/lib/commands/plugin_rb.html","files/rails-2_3_14/lib/commands/plugin_rb.html","","Rails Plugin Manager. Listing available plugins: $ ./script/plugin list continuous_builder          ",3],["runner.rb","files/rails-2_3_14/lib/commands/runner_rb.html","files/rails-2_3_14/lib/commands/runner_rb.html","","",3],["server.rb","files/rails-2_3_14/lib/commands/server_rb.html","files/rails-2_3_14/lib/commands/server_rb.html","","",3],["update.rb","files/rails-2_3_14/lib/commands/update_rb.html","files/rails-2_3_14/lib/commands/update_rb.html","","",3],["console_app.rb","files/rails-2_3_14/lib/console_app_rb.html","files/rails-2_3_14/lib/console_app_rb.html","","",3],["console_sandbox.rb","files/rails-2_3_14/lib/console_sandbox_rb.html","files/rails-2_3_14/lib/console_sandbox_rb.html","","",3],["console_with_helpers.rb","files/rails-2_3_14/lib/console_with_helpers_rb.html","files/rails-2_3_14/lib/console_with_helpers_rb.html","","",3],["dispatcher.rb","files/rails-2_3_14/lib/dispatcher_rb.html","files/rails-2_3_14/lib/dispatcher_rb.html",""," ",3],["fcgi_handler.rb","files/rails-2_3_14/lib/fcgi_handler_rb.html","files/rails-2_3_14/lib/fcgi_handler_rb.html","","",3],["initializer.rb","files/rails-2_3_14/lib/initializer_rb.html","files/rails-2_3_14/lib/initializer_rb.html","","",3],["performance_test_help.rb","files/rails-2_3_14/lib/performance_test_help_rb.html","files/rails-2_3_14/lib/performance_test_help_rb.html","","",3],["rails_generator.rb","files/rails-2_3_14/lib/rails_generator_rb.html","files/rails-2_3_14/lib/rails_generator_rb.html",""," ",3],["base.rb","files/rails-2_3_14/lib/rails_generator/base_rb.html","files/rails-2_3_14/lib/rails_generator/base_rb.html","","",3],["commands.rb","files/rails-2_3_14/lib/rails_generator/commands_rb.html","files/rails-2_3_14/lib/rails_generator/commands_rb.html","","",3],["generated_attribute.rb","files/rails-2_3_14/lib/rails_generator/generated_attribute_rb.html","files/rails-2_3_14/lib/rails_generator/generated_attribute_rb.html","","",3],["lookup.rb","files/rails-2_3_14/lib/rails_generator/lookup_rb.html","files/rails-2_3_14/lib/rails_generator/lookup_rb.html","","",3],["manifest.rb","files/rails-2_3_14/lib/rails_generator/manifest_rb.html","files/rails-2_3_14/lib/rails_generator/manifest_rb.html","","",3],["options.rb","files/rails-2_3_14/lib/rails_generator/options_rb.html","files/rails-2_3_14/lib/rails_generator/options_rb.html","","",3],["scripts.rb","files/rails-2_3_14/lib/rails_generator/scripts_rb.html","files/rails-2_3_14/lib/rails_generator/scripts_rb.html","","",3],["secret_key_generator.rb","files/rails-2_3_14/lib/rails_generator/secret_key_generator_rb.html","files/rails-2_3_14/lib/rails_generator/secret_key_generator_rb.html","","",3],["simple_logger.rb","files/rails-2_3_14/lib/rails_generator/simple_logger_rb.html","files/rails-2_3_14/lib/rails_generator/simple_logger_rb.html","","",3],["spec.rb","files/rails-2_3_14/lib/rails_generator/spec_rb.html","files/rails-2_3_14/lib/rails_generator/spec_rb.html","","",3],["railties_path.rb","files/rails-2_3_14/lib/railties_path_rb.html","files/rails-2_3_14/lib/railties_path_rb.html","","",3],["ruby_version_check.rb","files/rails-2_3_14/lib/ruby_version_check_rb.html","files/rails-2_3_14/lib/ruby_version_check_rb.html","","",3],["rubyprof_ext.rb","files/rails-2_3_14/lib/rubyprof_ext_rb.html","files/rails-2_3_14/lib/rubyprof_ext_rb.html","","",3],["source_annotation_extractor.rb","files/rails-2_3_14/lib/source_annotation_extractor_rb.html","files/rails-2_3_14/lib/source_annotation_extractor_rb.html","","Implements the logic behind the rake tasks for annotations like rake notes rake notes:optimize and friends.",3],["test_help.rb","files/rails-2_3_14/lib/test_help_rb.html","files/rails-2_3_14/lib/test_help_rb.html","","Make double-sure the RAILS_ENV is set to test, so fixtures are loaded to the right database ",3],["webrick_server.rb","files/rails-2_3_14/lib/webrick_server_rb.html","files/rails-2_3_14/lib/webrick_server_rb.html","","Donated by Florian Gross ",3]],"searchIndex":["assertions","domassertions","modelassertions","responseassertions","routingassertions","selectorassertions","tagassertions","base","classmethods","cgihandler","properstream","caching","actions","actioncachepath","classmethods","fragments","pages","classmethods","sweeping","cgiext","stdinput","cookies","dispatcher","failsafe","classmethods","flash","flashhash","classmethods","http","headers","httpauthentication","basic","controllermethods","digest","controllermethods","runner","session","multipartneededexception","integrationtest","classmethods","middlewarestack","middleware","instancemethods","paramsparser","performancetest","polymorphicroutes","recordidentifier","reloader","bodywrapper","request","requestforgeryprotection","classmethods","rescue","classmethods","resources","response","routing","helpers","optimisation","optimiser","positionalarguments","positionalargumentswithadditionalparams","optionalformatsegment","mapper","session","abstractstore","optionshash","sessionhash","sessionutils","cookiestore","cookieoverflow","memcachestore","classmethods","streaming","stringcoercion","uglybody","testcase","assertions","raiseactionexceptions","testprocess","testresponse","testuploadedfile","translation","uploadedfile","uploadedstringio","uploadedtempfile","urlwriter","classmethods","base","base","proxymodule","activerecordhelper","assettaghelper","atomfeedhelper","atombuilder","atomfeedbuilder","benchmarkhelper","cachehelper","capturehelper","classmethods","csrfhelper","datehelper","debughelper","formhelper","formoptionshelper","formtaghelper","javascripthelper","numberhelper","prototypehelper","generatormethods","rawoutputhelper","recordidentificationhelper","recordtaghelper","sanitizehelper","scriptaculoushelper","taghelper","texthelper","translationhelper","urlhelper","partials","reloadabletemplate","reloadablepath","templatedeleted","unfreezable","template","eagerpath","path","templatehandler","builder","compilable","classmethods","erb","rjs","testcase","testcontroller","activerecorderror","adapternotfound","adapternotspecified","classmethods","classmethods","associationtypemismatch","classmethods","innerjoinassociation","hasonethroughassociation","attributeassignmenterror","classmethods","autosaveassociation","classmethods","base","classmethods","classmethods","callbacks","configurationerror","abstractadapter","column","format","connectionhandler","connectionmanagement","connectionpool","databaselimits","databasestatements","mysqladapter","postgresqladapter","querycache","quoting","sqliteadapter","version","schemastatements","table","tabledefinition","connectionnotestablished","connectiontimeouterror","dangerousattributeerror","dirty","classmethods","dynamicfindermatch","dynamicscopematch","error","errors","locking","optimistic","classmethods","pessimistic","migration","migrationproxy","missingattributeerror","multiparameterassignmenterrors","namedscope","classmethods","scope","classmethods","toomanyrecords","observer","classmethods","preparedstatementinvalid","querycache","classmethods","readonlyrecord","recordinvalid","recordnotfound","recordnotsaved","classmethods","macroreflection","rollback","schema","serialization","serializationtypemismatch","sessionstore","session","sqlbypass","staleobjecterror","statementinvalid","testfixtures","classmethods","timestamp","transactions","classmethods","unknownattributeerror","validations","classmethods","activeresource","badrequest","base","clienterror","connection","custommethods","classmethods","instancemethods","errors","forbiddenaccess","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","request","resourceconflict","resourcegone","resourcenotfound","response","sslerror","servererror","timeouterror","unauthorizedaccess","validations","backtracecleaner","base64","bufferedlogger","severity","cache","compressedmemcachestore","filestore","memcachestore","memorystore","store","strategy","localcache","synchronizedmemorystore","callbacks","callback","callbackchain","classmethods","access","conversions","extractoptions","grouping","randomaccess","wrapper","encoding","conversions","behavior","calculations","classmethods","conversions","calculations","classmethods","conversions","atomic","rounding","time","classmethods","conversions","deepmerge","diff","except","keys","reversemerge","slice","evenodd","inflections","time","module","bytes","conversions","time","cleanwithin","blocklessstep","conversions","includerange","overlaps","behavior","conversions","filters","inflections","iterators","multibyte","startsendswith","behavior","calculations","classmethods","conversions","zones","classmethods","deprecatedobjectproxy","duration","gzip","stream","inflector","inflections","json","backends","jsongem","yajl","yaml","circularreferenceerror","variable","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","modelname","chars","codepoint","encodingerror","unicodedatabase","rescuable","classmethods","safebuffer","securerandom","stringinquirer","testcase","testing","assertions","declarative","performance","benchmarker","metrics","base","cputime","gcruns","gctime","memory","objects","processtime","time","walltime","performer","profiler","setupandteardown","forclassictestunit","forminitest","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","conversions","document","node","xmlmini_nokogirisax","hashbuilder","blankslate","builder","css","illegalblockerror","xmlbase","xmlevents","xmlmarkup","cookie","queryextension","commands","discover","info","install","list","plugin","remove","source","sources","unsource","update","continuum","entry","datetime","dir","dispatchservlet","erb","util","enumerable","fixnum","fixtures","gettext","poparser","fullsanitizer","linksanitizer","sanitizer","selector","whitelistsanitizer","hashwithindifferentaccess","i18n","argumenterror","backend","activerecord","implementation","missing","storeprocs","translation","base","cache","cascade","chain","cldr","fallbacks","flatten","gettext","podata","interpolationcompiler","compiler","keyvalue","implementation","memoize","metadata","pluralization","simple","implementation","transliterator","hashtransliterator","proctransliterator","config","gettext","helpers","invalidlocale","invalidpluralizationdata","locale","fallbacks","tag","parents","rfc4646","parser","simple","missinginterpolationargument","missingtranslationdata","reservedinterpolationkey","unknownfiletype","kernel","keyerror","libxml","conversions","document","node","logger","formatter","simpleformatter","memcache","memcacheerror","server","mime","type","module","object","pgresult","plugin","process","rexml","document","entity","racklintpatch","allowstringsubclass","rails","configuration","generator","abstractgemsource","base","commands","base","create","destroy","list","rewindbase","update","gemgeneratorsource","gempathsource","generatedattribute","generatorerror","lookup","classmethods","manifest","namedbase","options","classmethods","pathsource","scripts","base","source","spec","usageerror","initializer","secretkeygenerator","railsenvironment","railsfcgihandler","recursivehttpfetcher","repositories","repository","sourceannotationextractor","annotation","tzinfo","ambiguoustime","definitions","africa","algiers","cairo","casablanca","harare","johannesburg","monrovia","nairobi","america","argentina","buenos_aires","san_juan","bogota","caracas","chicago","chihuahua","denver","godthab","guatemala","halifax","indiana","indianapolis","juneau","la_paz","lima","los_angeles","mazatlan","mexico_city","monterrey","new_york","phoenix","regina","santiago","sao_paulo","st_johns","tijuana","asia","almaty","baghdad","baku","bangkok","chongqing","colombo","dhaka","hong_kong","irkutsk","jakarta","jerusalem","kabul","kamchatka","karachi","katmandu","kolkata","krasnoyarsk","kuala_lumpur","kuwait","magadan","muscat","novosibirsk","rangoon","riyadh","seoul","shanghai","singapore","taipei","tashkent","tbilisi","tehran","tokyo","ulaanbaatar","urumqi","vladivostok","yakutsk","yekaterinburg","yerevan","atlantic","azores","cape_verde","south_georgia","australia","adelaide","brisbane","darwin","hobart","melbourne","perth","sydney","etc","utc","europe","amsterdam","athens","belgrade","berlin","bratislava","brussels","bucharest","budapest","copenhagen","dublin","helsinki","istanbul","kiev","lisbon","ljubljana","london","madrid","minsk","moscow","paris","prague","riga","rome","sarajevo","skopje","sofia","stockholm","tallinn","vienna","vilnius","warsaw","zagreb","pacific","auckland","fiji","guam","honolulu","majuro","midway","noumea","pago_pago","port_moresby","tongatapu","invalidtimezoneidentifier","nooffsetsdefined","periodnotfound","timezone","timezoneperiod","unknowntimezone","test","unit","+()","+()","+()","+()","+()","-()","-()","<<()","<<()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","===()","=~()","=~()","=~()",">()",">>()","get()","post()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","_()","_()","_assigns()","_attr_value()","_call()","_css_block()","_css_line()","_dump()","_end_block()","_end_tag()","_end_tag()","_ensure_no_block()","_escape()","_escape_quote()","_indent()","_indent()","_insert_attributes()","_instance_variables()","_join_with_op!()","_load()","_nested_structures()","_nested_structures()","_newline()","_newline()","_reduce_none()","_special()","_start_container()","_start_tag()","_start_tag()","_text()","_text()","_unify_block()","_view()","abbreviation()","abstract_class?()","accepts()","accepts_nested_attributes_for()","accessible_paths()","action_methods()","action_methods()","action_options_for()","action_prefix()","active()","active?()","active?()","active?()","active?()","active?()","acts_like?()","acts_like_date?()","acts_like_string?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","adapter_name()","adapter_name()","add()","add()","add()","add()","add()","add()","add_association_callbacks()","add_autosave_association_callbacks()","add_column()","add_column()","add_column()","add_column_position!()","add_conditions!()","add_conditions_for()","add_counter_cache_callbacks()","add_extension!()","add_filter()","add_gem_load_paths()","add_general_options!()","add_group!()","add_index()","add_joins!()","add_layout_conditions()","add_limit!()","add_limit!()","add_limit_offset!()","add_limited_ids_condition!()","add_lock!()","add_lock!()","add_observer!()","add_on_blank()","add_on_empty()","add_options!()","add_order!()","add_order_by_for_association_limiting!()","add_plugin_load_paths()","add_preloaded_record_to_collection()","add_preloaded_records_to_collection()","add_silencer()","add_support_load_paths()","add_timestamps()","add_to_base()","add_to_base()","add_touch_callbacks()","advance()","advance()","advance()","advance()","after_create()","after_destroy()","after_filter()","after_generate()","after_initialize()","after_initialize()","after_initialize_blocks()","after_save()","after_update()","after_validation()","after_validation_on_create()","after_validation_on_update()","aggregate_mapping()","ago()","ago()","ago()","ago()","ago()","ago()","alert()","alias_attribute()","alias_attribute_with_dirty()","alias_method_chain()","alive?()","all()","all()","all()","all()","all_application_helpers()","all_attributes_exists?()","all_country_zone_identifiers()","all_country_zones()","all_data_zone_identifiers()","all_data_zones()","all_identifiers()","all_input_tags()","all_linked_zone_identifiers()","all_linked_zones()","allow_concurrency()","allow_concurrency=()","announce()","any?()","app()","append()","append_after_filter()","append_around_filter()","append_before_filter()","append_conditions()","append_features()","append_features()","append_features()","append_sources()","append_view_path()","append_view_path()","applicable?()","applicable?()","apply_ssl_options()","approximations()","arguments_for_call()","around_filter()","array_of_strings?()","array_or_string_for_javascript()","as_json()","as_json()","as_json()","as_json()","as_load_path()","assert_blank()","assert_difference()","assert_dom_equal()","assert_dom_not_equal()","assert_generates()","assert_no_difference()","assert_no_tag()","assert_present()","assert_recognizes()","assert_redirected_to()","assert_response()","assert_routing()","assert_select()","assert_select_email()","assert_select_encoded()","assert_select_rjs()","assert_tag()","assert_template()","assert_valid()","assert_valid_keys()","asset_file_path()","assign()","assign_attributes()","assign_default_content_type_and_charset!()","assign_multiparameter_attributes()","assign_names()","assign_names!()","assign_shortcuts()","assign_status()","assigns()","associated_records_to_validate_or_save()","association_accessor_methods()","association_constructor_method()","association_valid?()","assume_migrated_upto_version()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_month()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_week()","at_beginning_of_year()","at_beginning_of_year()","at_end_of_month()","at_end_of_month()","at_end_of_quarter()","at_end_of_quarter()","at_end_of_week()","at_end_of_week()","at_end_of_year()","at_end_of_year()","at_midnight()","at_midnight()","at_midnight()","atom_feed()","atomic_write()","attr_accessible()","attr_accessor_with_default()","attr_internal()","attr_internal_accessor()","attr_internal_ivar_name()","attr_internal_reader()","attr_internal_writer()","attr_protected()","attr_readonly()","attribute_change()","attribute_changed?()","attribute_condition()","attribute_for_inspect()","attribute_match()","attribute_method_suffix()","attribute_method_suffixes()","attribute_names()","attribute_present?()","attribute_was()","attribute_will_change!()","attributes()","attributes()","attributes=()","attributes_before_type_cast()","attributes_from_column_definition()","attributes_from_column_definition_with_lock()","attributes_protected_by_default()","attributes_with_quotes()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_with_http_basic()","authenticate_with_http_digest()","authentication_header()","authentication_request()","authentication_request()","authorization()","authorization()","authorization_header()","auto_discovery_link_tag()","auto_flush()","auto_flushing=()","auto_link()","auto_link_email_addresses()","auto_link_urls()","auto_linked?()","available_locales()","available_locales()","available_locales()","available_locales()","available_locales()","available_locales()","available_locales()","available_locales()","available_locales=()","average()","backend()","backend()","backend=()","backend=()","backend=()","backtrace_cleaner()","bang?()","banner()","banner()","banner()","banner()","base64()","base_class()","batch_order()","becomes()","before_create()","before_destroy()","before_filter()","before_save()","before_save_collection_association()","before_update()","before_validation()","before_validation_on_create()","before_validation_on_update()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_day()","beginning_of_month()","beginning_of_month()","beginning_of_quarter()","beginning_of_quarter()","beginning_of_week()","beginning_of_week()","beginning_of_year()","beginning_of_year()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","benchmark()","benchmark()","best_install_method()","between?()","binary_search()","binary_to_string()","blank?()","blank_slate_method_added()","blank_slate_method_added()","blankslate_original_append_features()","block_called_from_erb?()","block_called_from_erb?()","block_to_function()","body()","breakpoint()","breakpoint_server()","breakpoint_server=()","browser_generated?()","buffer()","build()","build()","build()","build_args()","build_callbacks()","build_mem_cache()","build_middleware_stack()","build_named_route_call()","build_observer()","build_request_headers()","build_request_uri()","builtin_directories()","button_to()","button_to_function()","button_to_remote()","byte()","bytes()","cache()","cache()","cache()","cache()","cache()","cache()","cache_asset_timestamps()","cache_asset_timestamps=()","cache_attribute?()","cache_attributes()","cache_configured?()","cache_configured?()","cache_decr()","cache_fixtures()","cache_for_connection()","cache_format()","cache_get()","cache_get_multi()","cache_incr()","cache_key()","cache_key()","cache_namespace()","cache_namespace=()","cache_page()","cache_page()","cache_sql()","cache_store()","cache_store=()","cache_store=()","cache_template_loading?()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","caching_allowed()","calculate()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","callback()","camelcase()","camelize()","camelize()","candidate_for_layout?()","capitalize()","capture()","cas()","case_sensitive_equality_operator()","case_sensitive_equality_operator()","catch_schema_changes()","cdata!()","cdata_block()","cdata_section()","center()","change()","change()","change()","change()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_default()","change_table()","changed()","changed?()","changed_attributes()","changed_for_autosave?()","changes()","characters()","chars()","charset()","charset()","charset=()","check_box()","check_box_tag()","check_for_name_collision()","check_for_unbuilt_gems()","check_gem_dependencies()","check_multithread_status!()","check_ruby_version()","checkin()","checkout()","checkout_and_verify()","checkout_existing_connection()","checkout_new_connection()","class!()","class_collisions()","class_collisions()","class_collisions()","class_eval()","class_eval()","class_file()","class_name()","class_name()","class_of_active_record_descendant()","classify()","classify()","clean()","clean_backtrace()","clean_backtrace()","clean_within()","cleanup_application()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear_active_connections!()","clear_all_connections!()","clear_buffer()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_stale_cached_connections!()","client_min_messages()","client_min_messages=()","clone()","clone()","clone_attribute_value()","clone_attributes()","close()","close()","close()","close()","close_connection()","collation()","collect_asset_files()","collection_accessor_methods()","collection_path()","collection_path()","collection_reader_method()","collection_select()","colorize_logging()","column()","column()","column_alias_for()","column_aliases()","column_for()","column_for()","column_for_attribute()","column_name_length()","column_names()","column_names()","columns()","columns()","columns()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","columns_with_query_cache()","comma_pair_list()","comment!()","comment!()","commit_db_transaction()","commit_db_transaction()","comparable_time()","compare_with_coercion()","compare_with_coercion()","compile()","compile()","compile()","compile()","compile_all_strings_in()","compile_if_an_interpolation()","compile_interpolation_token()","compiled_interpolation_body()","complete_request_uri()","complex_template()","complex_template()","complex_template()","complex_template()","compose()","compose_codepoints()","composed_of()","compress()","compute()","compute_asset_host()","compute_javascript_paths()","compute_public_path()","compute_stylesheet_paths()","compute_type()","concat()","condition_word()","conditions_tables()","config()","config=()","configuration()","configuration=()","configurations()","configure_connection()","configure_connection()","configure_dependency_for_belongs_to()","configure_dependency_for_has_many()","configure_dependency_for_has_one()","configure_http()","confirm_javascript_function()","connect()","connect()","connect()","connect_to()","connected?()","connected?()","connected?()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection_handler()","connection_pool()","connection_pools()","constantize()","constantize()","construct_attributes_from_arguments()","construct_count_options_from_args()","construct_finder_sql()","construct_finder_sql_for_association_limiting()","construct_finder_sql_with_included_associations()","construct_id_map()","consumes?()","contains_bad_protocols?()","content_columns()","content_for()","content_length()","content_tag()","content_tag_for()","content_tag_string()","content_type()","content_type()","content_type()","content_type=()","content_type_from_legacy_post_data_format_header()","controller_class()","controller_class=()","controller_class_name()","controller_class_name()","controller_name()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","controller_path()","controller_relative_to()","convert_boolean_attributes!()","convert_content_type!()","convert_cookies!()","convert_dates_from()","convert_dates_from()","convert_key()","convert_language!()","convert_number_column_value()","convert_options_to_javascript!()","convert_value()","cookies()","cookies()","count()","count()","count()","count_by_sql()","create()","create()","create()","create()","create()","create!()","create_belongs_to_reflection()","create_continuum_for()","create_database()","create_database()","create_env_table()","create_extension_modules()","create_fixtures()","create_fixtures()","create_has_and_belongs_to_many_reflection()","create_has_many_reflection()","create_has_one_reflection()","create_has_one_through_reflection()","create_mail()","create_or_update()","create_proxy_uri_from()","create_reflection()","create_savepoint()","create_savepoint()","create_savepoint()","create_site_uri_from()","create_table()","create_table!()","create_table!()","create_template()","create_time_zone_conversion_attribute?()","csrf_meta_tag()","css_select()","csv_file_path()","current()","current()","current()","current_cycle()","current_database()","current_database()","current_hash()","current_hash()","current_migration_number()","current_page?()","current_period()","current_period_and_time()","current_savepoint_name()","current_session_id()","current_session_id()","current_time_and_period()","current_time_from_proper_timezone()","custom_method_collection_url()","custom_method_element_url()","custom_method_new_element_url()","cycle()","daemon()","daemonize()","dasherize()","dasherize()","data()","data()","data()","data_column()","data_column_name()","data_column_size_limit()","database_configuration()","date_select()","datetime_format()","datetime_format=()","datetime_select()","day()","days()","days_in_month()","debug()","debug_rjs()","debugger()","declare!()","decode()","decode()","decode()","decode()","decode()","decode64()","decode_credentials()","decode_credentials()","decode_credentials_header()","decompose()","decompose_codepoints()","decompress()","decr()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt_and_verify()","deep_merge()","deep_merge!()","default()","default()","default()","default()","default=()","default_autoload_once_paths()","default_autoload_paths()","default_cache_classes()","default_cache_store()","default_controller_paths()","default_database_configuration_file()","default_dependency_loading()","default_eager_load_paths()","default_error_messages()","default_exception_handler()","default_frameworks()","default_gems()","default_header()","default_helper_module!()","default_i18n()","default_input_block()","default_locale()","default_locale=()","default_log_level()","default_log_path()","default_options()","default_options()","default_options()","default_plugin_loader()","default_plugin_locators()","default_plugin_paths()","default_plugins()","default_preload_frameworks()","default_primary_key_type()","default_routes_configuration_file()","default_scope()","default_select()","default_separator()","default_separator=()","default_sequence_name()","default_template()","default_template_format()","default_template_name()","default_timezone()","default_url_options()","default_view_path()","default_whiny_nils()","defaults()","defaults=()","define()","define_around_helper()","define_attr_method()","define_attribute_methods()","define_callbacks()","define_dispatcher_callbacks()","define_question_method()","define_read_method()","define_read_method_for_serialized_attribute()","define_read_method_for_time_zone_conversion()","define_read_methods()","define_write_method()","define_write_method_for_time_zone_conversion()","delay()","delegate()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete?()","delete_all()","delete_all_has_many_dependencies()","delete_existing_fixtures()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_sql()","delete_via_redirect()","deliver()","deliver!()","demodulize()","demodulize()","dependency()","dependency()","derive_class_name()","descends_from_active_record?()","destination_path()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_all()","destroyed?()","detect_type()","determine_default_controller_class()","determine_default_helper_class()","determine_install_method()","determine_source()","diff()","diff_cmd()","direct_key()","directory()","directory()","directory()","directory()","dirname()","dirties_query_cache()","disable_dependency_loading()","disable_referential_integrity()","discard()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","dispatch()","dispatch()","dispatch()","dispatch_cgi()","dispatch_cgi()","dispatcher_error()","dispatcher_log()","display()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","div_for()","dom_class()","dom_class()","dom_id()","dom_id()","domain()","downcase()","download()","draggable()","draggable_element()","drop_receiving()","drop_receiving_element()","drop_table()","drop_table()","drop_table!()","drop_table!()","dst?()","dst?()","dup()","dup()","dup()","duplicable?()","duration_of_variable_length?()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each_char()","each_error()","each_full()","each_full()","each_with_hack()","each_with_object()","element_path()","element_path()","empty?()","empty?()","empty_insert_statement()","empty_insert_statement()","emulate_booleans()","enable_warnings()","encode()","encode()","encode()","encode64()","encode64s()","encode_cookies()","encode_credentials()","encode_credentials()","encoding()","encrypt()","encrypt_and_sign()","end_document()","end_element()","end_of_day()","end_of_day()","end_of_day()","end_of_month()","end_of_month()","end_of_quarter()","end_of_quarter()","end_of_week()","end_of_week()","end_of_year()","end_of_year()","ends_with?()","ensure_cache_path()","ensure_proper_type()","ensure_secret_secure()","ensure_session_key()","entity_expansion_limit=()","entry()","entry_count_for()","enumerate()","env()","env_name()","environment()","environment()","environment=()","environment_path()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","erase()","erb_render()","erb_trim_mode()","error()","error_message_on()","error_messages_for()","errors()","errors()","escape_bytea()","escape_javascript()","escape_key_sym()","escape_once()","escape_plain_str()","establish_connection()","establish_connection()","etag()","etag=()","etag?()","etag_matches?()","evaluate_attribute_method()","evaluate_method()","evaluate_remote_response()","even?()","exabyte()","exabytes()","except()","except!()","exception_handler()","exception_handler=()","excerpt()","exclude?()","execute()","execute()","execute_callstack_for_multiparameter_attributes()","exempt_from_layout()","exempt_from_layout?()","exist()","exist?()","exist?()","exist?()","exist?()","exist?()","existing_migrations()","exists?()","exists?()","exists?()","exists?()","exists?()","exists?()","exit_handler()","exit_now_handler()","expand_attribute_names_for_aggregates()","expand_cache_key()","expand_hash_conditions_for_aggregates()","expand_id_conditions()","expand_javascript_sources()","expand_keys()","expand_stylesheet_sources()","expected_response()","expire_action()","expire_fragment()","expire_page()","expire_page()","expires_in()","expires_in()","expires_now()","extended()","extended()","extended()","extension()","extension()","externals()","externals=()","extra_tags_for_form()","extract_annotations_from()","extract_callstack_for_multiparameter_attributes()","extract_default()","extract_extension()","extract_header_and_body()","extract_limit()","extract_modules()","extract_options()","extract_options()","extract_options!()","extract_pg_identifier_from_name()","extract_precision()","extract_record()","extract_repository_uri()","extract_scale()","extract_scope()","extract_selected_and_disabled()","extract_session_id()","extract_session_id()","extract_string_default!()","extract_value()","extract_values_from_collection()","failsafe_logger()","failsafe_response()","failsafe_response_body()","fallback_string_to_date()","fallback_string_to_time()","fallbacks()","fallbacks=()","fast_string_to_date()","fast_string_to_time()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch_dir()","field_changed?()","field_set_tag()","field_type()","fields_for()","fifth()","file()","file()","file()","file()","file_field()","file_field_tag()","filename()","filename()","filter()","filter_chain()","filter_parameter_logging()","find()","find()","find()","find()","find()","find()","find()","find_all_tag()","find_associated_records()","find_by_session_id()","find_by_session_id()","find_by_session_id()","find_by_session_id()","find_by_sql()","find_cmd()","find_each()","find_every()","find_every()","find_first_string_default()","find_from_ids()","find_hidden_method()","find_hidden_method()","find_home()","find_in()","find_in_batches()","find_initial()","find_last()","find_one()","find_one()","find_or_create_resource_for()","find_or_create_resource_for_collection()","find_parameter_position()","find_plugin()","find_resource_in_modules()","find_session()","find_single()","find_some()","find_synonyms()","find_tag()","find_target()","find_tzinfo()","find_with_associations()","finder?()","first()","first()","fixture_file_upload()","fixture_is_cached?()","fixtures()","flash()","flatten_keys()","flatten_translations()","flush()","flush_all()","flush_cache()","flush_logger()","follow_redirect!()","for_class()","for_id()","force_file_collision?()","foreign_key()","foreign_key()","form()","form_authenticity_param()","form_authenticity_token()","form_data?()","form_for()","form_remote_for()","form_remote_tag()","form_tag()","form_tag_html()","form_tag_in_block()","format()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_and_extension()","format_currency()","format_date()","format_datetime()","format_datetime()","format_datetime()","format_decimal()","format_integer()","format_log_entry()","format_message()","format_message()","format_percent()","format_time()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_polymorphic_path()","formatted_polymorphic_url()","formatter()","formatter()","fortnight()","fortnights()","forty_two()","fourth()","fragment_cache_key()","fragment_exist?()","framework_paths()","framework_root_path()","freeze()","freeze()","freeze()","freeze_with_memoizable()","fresh?()","fresh_when()","friendly_identifier()","from()","from_array()","from_json()","from_json()","from_now()","from_now()","from_xml()","from_xml()","from_xml()","from_xml_data()","frozen?()","full_message()","full_messages()","full_messages()","full_options()","full_options()","full_test_name()","future?()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","gc_countdown()","gem()","generate()","generate_digest()","generate_full_message()","generate_message()","generate_message()","generate_optimisation_block()","generate_secret()","generate_sid()","generate_sid()","generated_methods?()","generation_code()","generation_code()","generation_code()","generator_full_paths()","generic_url_rewriter()","get()","get()","get()","get()","get()","get()","get()","get()","get?()","get_cycle()","get_multi()","get_period_and_ensure_valid_local_time()","get_proxies()","get_proxy()","get_server_for_key()","get_session()","get_session()","get_session()","get_session_model()","get_via_redirect()","get_zone()","getgm()","getlocal()","gets()","gettext()","getutc()","getutc()","gigabyte()","gigabytes()","git_url?()","gmt?()","gmt_offset()","gmtime()","gmtoff()","group!()","group_by()","grouped_collection_select()","grouped_options_for_select()","gsub_file()","guard_against_unlimitable_reflections()","guard_conditions()","guard_conditions()","guard_conditions()","guess_name()","h()","h()","ha1()","handle_conditional_get!()","handle_error()","handle_exception()","handle_interpolation_token()","handle_response()","handle_unverified_request()","handler_for_rescue()","has_and_belongs_to_many()","has_attribute?()","has_default?()","has_key?()","has_many()","has_one()","has_primary_key_column?()","has_session_id?()","hash()","hash()","hash()","hash()","hash()","hash()","hash_for()","head()","head()","head()","head()","head?()","headers()","headers()","headers_match?()","helper()","helper()","helper_attr()","helper_class()","helper_method()","helper_method()","helpers()","hex()","hidden_actions()","hidden_field()","hidden_field_tag()","hide()","hide()","hide_action()","highlight()","host()","host!()","host_with_port()","hour()","hours()","html?()","html_document()","html_escape()","html_escape()","html_options_for_form()","html_safe()","html_safe?()","html_safe?()","html_safe?()","html_safe_translation_keys()","http()","http()","http_format_header()","http_only=()","httpdate()","https!()","https?()","human()","human_attribute_name()","human_name()","human_name()","humanize()","humanize()","id()","id()","id!()","id=()","id=()","id_from_response()","identical?()","identifier()","identify()","if_modified_since()","if_none_match()","image_path()","image_submit_tag()","image_tag()","implementation()","implementation=()","in()","in()","in()","in_char_class?()","in_clause_length()","in_groups()","in_groups_of()","in_or_equals_for_ids()","in_time_zone()","in_time_zone()","include()","include?()","include_eager_conditions?()","include_eager_order?()","include_eager_select?()","include_helper_modules!()","include_with_range?()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included_in_classes()","incr()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","index()","index()","index()","index_by()","index_exists?()","index_name_length()","index_name_length()","indexes()","indexes_per_table()","inflect_names()","inflections()","inflections_with_route_reloading()","info()","inheritance_column()","inheritance_column_name()","inherited()","inherited_with_helper()","inherited_with_layout()","inherited_with_options()","init_translations()","initialize_cache()","initialize_current_url()","initialize_database()","initialize_database_middleware()","initialize_defaults()","initialize_dependency_mechanism()","initialize_encoding()","initialize_framework_caches()","initialize_framework_logging()","initialize_framework_settings()","initialize_framework_views()","initialize_i18n()","initialize_logger()","initialize_metal()","initialize_query()","initialize_routing()","initialize_schema_migrations_table()","initialize_template_class()","initialize_template_class()","initialize_time_zone()","initialize_whiny_nils()","initialize_with_stdinput()","initialize_without_template_tracking()","initialized=()","initialized?()","initialized?()","inject_persistent_session_id()","input()","insert()","insert()","insert()","insert()","insert_after()","insert_before()","insert_fixture()","insert_fixtures()","insert_html()","insert_sql()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","install()","install()","install_gem_spec_stubs()","install_signal_handler()","install_signal_handlers()","install_using_checkout()","install_using_export()","install_using_externals()","install_using_git()","install_using_http()","installed?()","instance()","instance()","instance()","instance()","instance_exec()","instance_method_already_implemented?()","instance_variable_defined?()","instance_variable_names()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_collection()","instantiate_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiate_record()","instantiate_time_object()","instantiator?()","instruct!()","interpolate()","interpolate()","interpolate()","interpolate_key()","interpolate_lambda?()","interpolate_or_raise_missing()","interpolate_sql()","interpolate_sql_for_preload()","interpolated_str?()","interpolates?()","interpolation_chunk()","interpret_uri()","invalid?()","invalid?()","invalid?()","invalidate_cache!()","invoke!()","invoke!()","irregular()","is_a?()","is_utf8?()","is_utf8?()","isdst()","iso8601()","j()","j()","javascript_include_tag()","javascript_object_for()","javascript_path()","javascript_src_tag()","javascript_tag()","join_asset_file_contents()","join_table_name()","join_type()","joined_tables()","joins_per_query()","json_escape()","json_escape()","keep()","key?()","key?()","kilobyte()","kilobytes()","kind_of?()","klass()","klass()","klass()","klass()","l()","l()","label()","label_tag()","last()","last()","last_modified()","last_modified=()","last_modified?()","layout()","length()","length()","length()","limited_update_conditions()","limited_update_conditions()","link_to()","link_to_function()","link_to_if()","link_to_remote()","link_to_unless()","link_to_unless_current()","links()","links()","literal()","ljust()","load()","load()","load!()","load!()","load!()","load!()","load!()","load!()","load_all_templates_from_dir()","load_application_classes()","load_application_initializers()","load_attributes_from_response()","load_environment()","load_file()","load_fixtures()","load_for_read!()","load_for_write!()","load_found()","load_gems()","load_index()","load_instances?()","load_migration()","load_observers()","load_once_paths()","load_once_paths=()","load_path()","load_path=()","load_paths()","load_paths=()","load_plugins()","load_po()","load_rb()","load_session()","load_session()","load_session_id!()","load_translations()","load_view_paths()","load_yml()","loaded?()","loaded?()","loaded?()","local()","local_after_start?()","local_before_end?()","local_cache()","local_constant_names()","local_constants()","local_end()","local_offset()","local_request?()","local_start()","local_time()","local_to_utc()","local_to_utc()","locale()","locale=()","localize()","localize()","localize()","localize()","localize()","localize()","localtime()","location()","location=()","lock!()","locking_column()","locking_enabled?()","log()","log()","log_error()","log_failsafe_exception()","log_info()","log_processing()","log_processing_for_parameters()","log_processing_for_request_id()","log_protected_attribute_removal()","logger()","logger()","logger()","logger()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup()","lookup_by_extension()","lookup_class()","lookup_currency()","lookup_format()","lookup_format_data()","lookup_missing_generator()","lookup_store()","loop_on_multiple_args()","ls()","lstrip()","macro()","mail_to()","mailer_name()","mailer_name()","mailer_name=()","make_cache_key()","make_test_case_available_to_view!()","mandatory_options()","mandatory_options()","manifest()","many?()","map()","map_associations()","map_collection_actions()","map_default_collection_actions()","map_default_singleton_actions()","map_has_many_associations()","map_member_actions()","map_new_actions()","map_resource()","map_resource_routes()","map_singleton_resource()","mark_dead()","mark_features!()","mark_for_destruction()","markdown()","marked_for_destruction?()","marshal()","marshal()","marshal()","marshal_data!()","marshal_dump()","marshal_load()","match()","match()","match()","match()","match_attribute_method?()","match_extraction()","mattr_accessor()","mattr_reader()","mattr_writer()","maximum()","mb_chars()","mb_chars()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure_mode()","media_type()","megabyte()","megabytes()","memoize()","memoize_all()","memoized_ivar_for()","memoized_lookup()","merge()","merge_conditions()","merge_includes()","merge_joins()","message()","metaclass()","method()","method_added()","method_added()","method_javascript_function()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_option_to_s()","method_segment()","microseconds()","middleware()","middleware()","midnight()","midnight()","midnight()","migrate()","migration()","migration_directory()","migration_exists?()","migration_template()","migration_template()","migration_template()","migrations_path()","mime_type()","mime_type()","mime_type()","minimum()","minus_with_coercion()","minute()","minutes()","missing_key()","model_class()","model_name()","model_name_from_record_or_class()","monday()","monday()","month()","month()","months()","months()","months_ago()","months_ago()","months_since()","months_since()","months_without_deprecation()","msg2str()","msg2str()","mtime()","multipart?()","multipart_body()","multipart_requestify()","multiple_of?()","mute()","n_()","name()","name()","name()","name_with_prefix()","named_host?()","named_scope()","names()","namespace()","namespace_lookup?()","native()","native()","native_database_types()","nested_records_changed_for_autosave?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_and_loaded()","new_cipher()","new_connection()","new_date()","new_http()","new_record?()","new_record?()","new_record?()","new_request!()","new_session()","new_time()","next_element()","next_migration_number()","next_migration_string()","next_month()","next_month()","next_selector()","next_week()","next_week()","next_year()","next_year()","ngettext()","nil?()","nil?()","nil_key()","nonce()","none?()","nonempty_ok_response?()","noreply()","normalize()","normalize()","normalize!()","normalize_argument_to_redirection()","normalize_conditions()","normalize_flat_keys()","normalize_flat_keys()","normalize_key()","normalize_keys()","normalize_parameters()","normalize_paths()","normalize_pluralization()","normalize_translation_keys()","normalize_translation_keys()","normalized_key_cache()","not_modified?()","now()","now()","now()","np_()","npgettext()","ns_()","nsgettext()","nth_child()","nullify_has_many_dependencies()","number?()","number_to_currency()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","object_from_yaml()","observe()","observe_field()","observe_form()","observed_class()","observed_classes()","observed_subclasses()","observers()","observers=()","odd?()","old_datetime_format()","old_datetime_format=()","old_format_datetime()","old_format_message()","old_formatter()","old_msg2str()","on()","on()","on_base()","on_base()","on_cdata_block()","on_characters()","on_end_document()","on_end_element()","on_start_document()","on_start_element()","only_child()","opaque()","open_session()","open_transactions()","option_groups_from_collection_for_select()","option_text_and_value()","option_value_selected?()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options()","options_for_ajax()","options_for_javascript()","options_for_select()","options_from_collection_for_select()","options_include_default?()","ord()","ord()","order_tables()","ordinalize()","ordinalize()","orig_delete()","original_filename()","output_filename()","output_filename()","output_filename()","outside_transaction?()","outside_transaction?()","overlaps?()","p_()","page()","page_cache_file()","page_cache_path()","parameterize()","parameterize()","parameterize()","parameters()","params()","parent()","parent()","parent_name()","parents()","parents()","parse()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse_extensions()","parse_formatted_parameters()","parse_sqlite_config!()","parse_yaml_string()","parser()","parser=()","partial_path()","partial_path()","password()","password=()","password=()","password_field()","password_field_tag()","past?()","past?()","past?()","past?()","path()","path()","path_for()","path_parameters()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_without_extension()","path_without_format_and_extension()","perform_action()","perform_caching?()","perform_delivery_sendmail()","perform_delivery_smtp()","perform_delivery_test()","performed?()","period()","period_for_local()","period_for_local()","period_for_utc()","period_for_utc()","periodically_call_remote()","periods_for_local()","persistent_session_id!()","petabyte()","petabytes()","pgettext()","plugin_loader()","plugins()","plugins=()","plural()","plural_class_name()","plural_keys()","pluralize()","pluralize()","pluralize()","pluralize()","pluralize()","pluralize()","pluralize_table_names()","pluralizer()","pluralizers()","polymorphic_path()","polymorphic_url()","pop_d()","popup_javascript_function()","port()","port_string()","possible_controllers()","post()","post()","post()","post()","post()","post?()","post_via_redirect()","postgresql_version()","prefetch_primary_key?()","prefix()","prefix=()","prefix_parameters()","prefix_source()","preload_associations()","preload_belongs_to_association()","preload_frameworks()","preload_has_and_belongs_to_many_association()","preload_has_many_association()","preload_has_one_association()","preload_one_association()","preload_through_records()","prepare!()","prepare!()","prepare!()","prepare_controller_class()","prepare_dispatcher()","prepend()","prepend_after_filter()","prepend_around_filter()","prepend_before_filter()","prepend_sources()","prepend_view_path()","prepend_view_path()","presence()","present?()","preserve_encoding()","prev_month()","prev_month()","prev_year()","prev_year()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key_name()","primary_key_prefix_type()","prime_cache()","process()","process()","process()","process!()","process!()","process_attributes_for()","process_cleanup()","process_each_request()","process_node()","process_node()","process_node()","process_node()","process_request()","process_view_paths()","profile()","protect_against_forgery?()","protect_against_forgery?()","protect_from_forgery()","protocol()","proxy()","proxy=()","proxy=()","proxy_found()","public_path()","public_path=()","push_d()","put()","put()","put()","put()","put()","put?()","put_via_redirect()","query_parameters()","query_string()","query_string()","quote()","quote()","quote_column_name()","quote_columns()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name()","quote_value()","quoted_column_names()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_comma_pair_list()","quoted_date()","quoted_false()","quoted_false()","quoted_locking_column()","quoted_table_name()","quoted_true()","quoted_true()","radio_button()","radio_button_tag()","rails_asset_id()","rails_env()","raise_class_collision()","raise_on_error_response!()","raise_on_session_data_overflow!()","raise_unspecified_currency!()","raise_unspecified_format_type!()","random_bytes()","random_number()","raw()","raw?()","raw_connection()","raw_host_with_port()","raw_post()","read()","read()","read()","read()","read()","read()","read()","read_csv_fixture_files()","read_fixture_files()","read_fragment()","read_multi()","read_multi()","read_yaml_fixture_files()","readable_inspect()","readable_inspect()","reader_method()","readme()","readme()","readme()","readonly!()","readonly?()","readonly?()","readonly_attributes()","real_file_path()","rebuild_attribute_method_regexp()","receive()","recognized_request_for()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record()","record()","record_entity_expansion!()","recycle!()","redirect()","redirect?()","redirect_to()","redirect_to()","redirect_to_full_url()","redirect_to_url()","reference?()","references()","references()","references_eager_loaded_tables?()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","reflect_on_included_associations()","reflections()","regexp_chunk()","register()","register_alias()","register_javascript_expansion()","register_javascript_include_default()","register_stylesheet_expansion()","register_template()","register_template_from_file()","regular_writer()","relative_path()","relative_path_for_template_file()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload()","reload()","reload!()","reload!()","reload!()","reload!()","reload!()","reload!()","reload!()","reload_application()","reload_handler()","reload_plugins?()","reload_with_autosave_associations()","remote_form_for()","remote_function()","remote_ip()","remove()","remove()","remove()","remove_attributes_protected_from_mass_assignment()","remove_belongs_to()","remove_column()","remove_columns()","remove_connection()","remove_connection()","remove_index()","remove_index()","remove_possible_method()","remove_readonly_attributes()","remove_references()","remove_silencers!()","remove_stale_cached_threads!()","remove_timestamps()","remove_timestamps()","rename()","rename_column()","rename_column()","rename_index()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render_file()","render_message()","render_optional_error_file()","render_template()","render_template()","render_template_part()","render_to_string()","reorder_characters()","replace()","replace()","replace_html()","replace_or_append!()","replay()","report()","report()","request()","request_http_basic_authentication()","request_http_digest_authentication()","request_method()","request_origin()","request_parameters()","request_setup()","request_uri()","request_via_redirect()","requestify()","requests()","requests()","require_fixture_classes()","require_frameworks()","require_library_or_gem()","requires_reloading?()","requires_reloading?()","requires_session_id?()","rescue_action()","rescue_action_in_public()","rescue_action_in_public!()","rescue_action_locally()","rescue_action_without_handler()","rescue_action_without_handler()","rescue_from()","rescue_with_handler()","rescues_path()","reserved_key()","reset()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_cache_if_stale!()","reset_column_information()","reset_counters()","reset_cycle()","reset_locking_column()","reset_memoizations!()","reset_sequence!()","reset_session()","reset_session()","reset_sources()","reset_target!()","reset_variables_added_to_assigns()","resolve()","resolve_link()","resource()","resources()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_without_attributes?()","response_code_for_rescue()","response_from_page_or_rjs()","response_from_page_or_rjs()","responses()","restart!()","restart_handler()","restore!()","retrieve_connection()","retrieve_connection_pool()","returning()","reveal()","reverse()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_sql_order()","reverse_update()","rewind()","rewrite_asset_path()","rfc2822()","rfc822()","rindex()","rjust()","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","root()","root()","round_with_precision()","route_resources()","route_resources()","route_resources()","routing_type()","rstrip()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_callbacks()","run_gc!()","run_in_transaction?()","run_install_hook()","run_prepare_callbacks()","run_profile()","run_test()","run_uninstall_hook()","run_warmup()","s_()","safe_to_array()","sample()","sanitize()","sanitize()","sanitize()","sanitize_css()","sanitize_css()","sanitize_limit()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","sanitize_to_id()","sanitizeable?()","sanitizeable?()","save()","save()","save()","save()","save!()","save_belongs_to_association()","save_collection_association()","save_has_one_association()","save_with_validation()","save_with_validation()","save_with_validation!()","say()","say_with_time()","schema_format()","schema_search_path()","schema_search_path=()","scope?()","scope_keys_by_partial()","scoped()","scopes()","scrape()","search_dir()","second()","second()","seconds()","seconds_since_midnight()","seconds_since_midnight()","seconds_since_unix_epoch()","secret_key()","secure=()","secure_compare()","secure_compare()","select()","select()","select()","select()","select()","select()","select_all()","select_all_rows()","select_all_with_query_cache()","select_date()","select_datetime()","select_day()","select_first()","select_hour()","select_limited_ids_list()","select_minute()","select_month()","select_one()","select_raw()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","selects_tables()","self_and_parents()","send_actions()","send_data()","send_file()","send_file_headers!()","send_response()","sending_file?()","serialize()","serialized_attributes()","server_port()","server_software()","servers=()","session()","session()","session()","session=()","session_enabled?()","session_id()","session_id_column()","session_options()","session_options()","session_options=()","session_store()","session_store=()","set()","set_association_collection_records()","set_association_single_records()","set_autoload_paths()","set_charset()","set_comment()","set_conditional_cache_control!()","set_content_length!()","set_cookie()","set_cycle()","set_default_backend()","set_fixture_class()","set_inheritance_column()","set_load_path()","set_locking_column()","set_primary_key()","set_root_path!()","set_sequence_name()","set_session()","set_session()","set_session()","set_standard_conforming_strings()","set_table_name()","setup_controller_request_and_response()","setup_fixture_accessors()","setup_fixtures()","setup_sessid_compatibility!()","setup_with_controller()","sgettext()","should_run_callback?()","show()","show_variable()","silence()","silence()","silence()","silence()","silence()","silence!()","silence_stream()","silence_warnings()","silencer()","silencer()","simple_format()","simple_selector()","simplified_type()","since()","since()","since()","since()","since()","since()","singleton_class()","singleton_class()","singular()","singular_class_name()","singularize()","singularize()","site()","site=()","site=()","size()","size()","size()","size()","skip_after_filter()","skip_before_filter()","skip_filter()","slice()","slice()","slice!()","slice!()","socket()","sort_parts()","sortable()","sortable_element()","source()","source_code()","source_path()","sources()","split()","split()","split()","split_args()","split_options()","split_options()","sql_query_length()","sqlite_version()","squish()","squish!()","ssl?()","ssl_options()","ssl_options=()","ssl_options=()","stale?()","stale?()","stale_session_check!()","standard_port()","start_document()","start_element()","starts_with?()","stats()","stats()","std_offset()","step_with_blockless()","step_with_blockless()","sti_name()","store()","store!()","store_default_translation()","store_default_translations()","store_link()","store_translations()","store_translations()","store_translations()","store_translations()","store_translations()","store_translations()","store_translations()","strftime()","strftime()","string_to_binary()","string_to_date()","string_to_dummy_time()","string_to_time()","stringify_keys()","stringify_keys!()","stringify_keys!()","strip()","strip_links()","strip_out_controller()","strip_tags()","strip_whitespace!()","structure_dump()","stylesheet_link_tag()","stylesheet_path()","stylesheet_tag()","subdomains()","submit_tag()","submit_to_remote()","subtags()","success?()","sum()","sum()","supports_add_column?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","supports_views?()","suppress()","suppress_messages()","svn_command()","svn_url?()","swap()","symbolize_keys()","symbolize_keys!()","symbolize_keys!()","symbolized_path_parameters()","synchronize()","t()","t()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_name()","table_name()","table_name_length()","table_name_prefix()","table_name_suffix()","table_structure()","tableize()","tableize()","tables()","tables_in_hash()","tables_in_string()","tag()","tag()","tag()","tag()","tag!()","tag_options()","tap()","target()","target!()","target!()","teardown_fixtures()","template()","template()","template()","template()","template()","template_files_from_dir()","template_format()","template_format()","template_part_mark()","template_path()","template_path_for_local_rescue()","template_path_includes_controller?()","template_root()","template_root()","template_root=()","template_root=()","templates_dir_from_path()","templates_in_path()","terabyte()","terabytes()","test()","tests()","tests()","text!()","text!()","text?()","text_area()","text_area_tag()","text_field()","text_field_tag()","textilize()","textilize_without_paragraph()","third()","thread_local_key()","threadsafe!()","tidy_bytes()","tidy_bytes()","time()","time_ago_in_words()","time_select()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","timeout()","timeout=()","timeout=()","timestamp_column_names()","timestamped_migrations()","timestamps()","timestamps()","titlecase()","titleize()","titleize()","to()","to_a()","to_a()","to_a()","to_date()","to_date()","to_date()","to_date()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_f()","to_f()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_i()","to_i()","to_json()","to_json()","to_json()","to_local()","to_options()","to_options!()","to_options!()","to_param()","to_param()","to_param()","to_param()","to_param()","to_prepare()","to_prepare()","to_query()","to_query()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_sql()","to_str()","to_str()","to_sym()","to_sym()","to_sym()","to_time()","to_time()","to_time()","to_time()","to_time()","to_utc()","to_utc_offset_s()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","today()","today?()","today?()","today?()","toggle()","toggle()","toggle!()","token_tag()","tokenize()","tokenize()","tokenize()","tomorrow()","tomorrow()","tomorrow()","touch()","transaction()","transaction()","transaction()","transaction_joinable=()","transfer_time_values_to_utc_constructor()","translate()","translate()","translate()","translate()","translate()","translate()","translate()","translate()","translate()","translate!()","translation_metadata()","translation_metadata=()","translations()","transliterate()","transliterate()","transliterate()","transliterate()","transliterate()","transliterate()","transliterate()","truncate()","try()","try_to_load_dependency()","tv_sec()","type_cast()","type_cast_attribute_value()","type_cast_calculated_value()","type_cast_code()","type_cast_using_column()","type_condition()","type_name_with_module()","type_to_sql()","type_to_sql()","typecast_xml_value()","u_unpack()","uncached()","uncached()","uncountable()","undecorated_table_name()","undef_my_compiled_methods!()","underscore()","underscore()","unescape()","unescape_bytea()","unescape_rjs()","uninstall()","unmarshal()","unmarshal()","unmarshal()","unmemoize_all()","unnormalized()","unpacked_cookie_data()","unregister_template()","unrename_keys()","until()","until()","unverifiable_types()","upcase()","update()","update()","update()","update()","update()","update()","update_all()","update_attribute()","update_attributes()","update_attributes!()","update_counters()","update_counters_with_lock()","update_page()","update_page_tag()","update_sql()","update_sql()","update_with_dirty()","updated()","url()","url_for()","url_for()","url_for()","url_for()","us_zone_identifiers()","us_zones()","us_zones()","usage()","usage_message()","usage_message()","usage_message()","use()","use()","use_application_sources!()","use_checkout?()","use_component_sources!()","use_controllers!()","use_externals?()","use_svn?()","use_zone()","usec()","user()","user=()","user=()","user_home()","user_name_and_password()","uses_transaction()","uses_transaction?()","using_limitable_reflections?()","utc()","utc()","utc?()","utc?()","utc_after_start?()","utc_before_end?()","utc_end()","utc_offset()","utc_offset()","utc_offset()","utc_offset()","utc_start()","utc_time()","utc_to_local()","utc_to_local()","utc_total_offset()","utc_total_offset_rational()","valid?()","valid?()","valid_alter_table_options()","valid_extension?()","valid_for_local?()","valid_for_utc?()","valid_locale?()","validate()","validate_calculation_options()","validate_collection_association()","validate_digest_response()","validate_nonce()","validate_on_create()","validate_on_update()","validate_render_arguments()","validate_single_association()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validation_method()","value()","value()","value=()","value_to_boolean()","value_to_decimal()","values_at()","verifiable_request_format?()","verification_timeout()","verification_timeout=()","verified_request?()","verifier()","verifier_for()","verify()","verify()","verify!()","verify_authenticity_token()","verify_request?()","version()","version()","view_paths()","view_paths()","view_paths=()","view_paths=()","view_paths=()","visual_effect()","visual_effect()","wants?()","warn()","week()","weeks()","with_backend()","with_backend()","with_connection()","with_controllers()","with_exclusive_scope()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_local_cache()","with_locale()","with_metadata()","with_options()","with_output_file()","with_routing()","with_scope()","with_server()","with_signal_handler()","with_socket_management()","with_template()","with_transaction_returning_status()","word_wrap()","wrap()","write()","write()","write()","write()","write()","write()","write()","write()","write()","write_asset_file_contents()","write_attribute_with_dirty()","write_fragment()","writer_method()","xchr()","xhr()","xhr()","xhr?()","xhtml_block?()","xml()","xml_column_fallback()","xml_http_request()","xml_http_request()","xml_http_request?()","xmlschema()","xmlschema()","xmlschema()","xss_safe?()","yaml_file_path()","yaml_fixtures_key()","year()","year()","years()","years()","years_ago()","years_ago()","years_since()","years_since()","years_without_deprecation()","yesterday()","yesterday()","yesterday()","zone()","zone()","zone=()","zone_identifier()","zones_map()","|()","changelog","readme","base.rb","changelog","readme","dom_assertions.rb","model_assertions.rb","response_assertions.rb","routing_assertions.rb","selector_assertions.rb","tag_assertions.rb","base.rb","benchmarking.rb","caching.rb","actions.rb","fragments.rb","pages.rb","sweeper.rb","sweeping.rb","cgi_ext.rb","cookie.rb","query_extension.rb","stdinput.rb","cgi_process.rb","cookies.rb","dispatcher.rb","failsafe.rb","filters.rb","flash.rb","headers.rb","helpers.rb","http_authentication.rb","integration.rb","layout.rb","middleware_stack.rb","middlewares.rb","mime_responds.rb","mime_type.rb","mime_types.rb","params_parser.rb","performance_test.rb","polymorphic_routes.rb","rack_lint_patch.rb","record_identifier.rb","reloader.rb","request.rb","request_forgery_protection.rb","rescue.rb","resources.rb","response.rb","routing.rb","builder.rb","optimisations.rb","recognition_optimisation.rb","route.rb","route_set.rb","routing_ext.rb","segments.rb","abstract_store.rb","cookie_store.rb","mem_cache_store.rb","session_management.rb","status_codes.rb","streaming.rb","string_coercion.rb","test_case.rb","test_process.rb","translation.rb","uploaded_file.rb","url_rewriter.rb","html-scanner.rb","document.rb","node.rb","sanitizer.rb","selector.rb","tokenizer.rb","version.rb","verification.rb","base.rb","helpers.rb","active_record_helper.rb","asset_tag_helper.rb","atom_feed_helper.rb","benchmark_helper.rb","cache_helper.rb","capture_helper.rb","csrf_helper.rb","date_helper.rb","debug_helper.rb","form_helper.rb","form_options_helper.rb","form_tag_helper.rb","javascript_helper.rb","number_helper.rb","prototype_helper.rb","raw_output_helper.rb","record_identification_helper.rb","record_tag_helper.rb","sanitize_helper.rb","scriptaculous_helper.rb","tag_helper.rb","text_helper.rb","translation_helper.rb","url_helper.rb","inline_template.rb","partials.rb","paths.rb","reloadable_template.rb","renderable.rb","renderable_partial.rb","template.rb","template_error.rb","template_handler.rb","template_handlers.rb","builder.rb","erb.rb","rjs.rb","test_case.rb","changelog","readme","aggregations.rb","association_preload.rb","associations.rb","association_collection.rb","association_proxy.rb","belongs_to_association.rb","belongs_to_polymorphic_association.rb","has_and_belongs_to_many_association.rb","has_many_association.rb","has_many_through_association.rb","has_one_association.rb","has_one_through_association.rb","attribute_methods.rb","autosave_association.rb","base.rb","batches.rb","calculations.rb","callbacks.rb","connection_pool.rb","connection_specification.rb","database_limits.rb","database_statements.rb","query_cache.rb","quoting.rb","schema_definitions.rb","schema_statements.rb","abstract_adapter.rb","mysql_adapter.rb","postgresql_adapter.rb","sqlite3_adapter.rb","sqlite_adapter.rb","dirty.rb","dynamic_finder_match.rb","dynamic_scope_match.rb","fixtures.rb","optimistic.rb","pessimistic.rb","migration.rb","named_scope.rb","nested_attributes.rb","observer.rb","query_cache.rb","reflection.rb","schema.rb","schema_dumper.rb","serialization.rb","json_serializer.rb","xml_serializer.rb","session_store.rb","test_case.rb","timestamp.rb","transactions.rb","validations.rb","version.rb","changelog","readme","active_resource.rb","base.rb","connection.rb","custom_methods.rb","exceptions.rb","formats.rb","json_format.rb","xml_format.rb","http_mock.rb","validations.rb","version.rb","changelog","readme","all.rb","backtrace_cleaner.rb","base64.rb","basic_object.rb","buffered_logger.rb","cache.rb","compressed_mem_cache_store.rb","drb_store.rb","file_store.rb","mem_cache_store.rb","memory_store.rb","local_cache.rb","synchronized_memory_store.rb","callbacks.rb","core_ext.rb","array.rb","access.rb","conversions.rb","extract_options.rb","grouping.rb","random_access.rb","wrapper.rb","base64.rb","encoding.rb","benchmark.rb","bigdecimal.rb","conversions.rb","blank.rb","cgi.rb","escape_skipping_slashes.rb","class.rb","attribute.rb","attribute_accessors.rb","delegating_attributes.rb","inheritable_attributes.rb","removal.rb","date.rb","behavior.rb","calculations.rb","conversions.rb","date_time.rb","calculations.rb","conversions.rb","duplicable.rb","enumerable.rb","exception.rb","file.rb","atomic.rb","float.rb","rounding.rb","time.rb","hash.rb","conversions.rb","deep_merge.rb","diff.rb","except.rb","indifferent_access.rb","keys.rb","reverse_merge.rb","slice.rb","integer.rb","even_odd.rb","inflections.rb","time.rb","kernel.rb","agnostics.rb","daemonizing.rb","debugger.rb","reporting.rb","requires.rb","singleton_class.rb","load_error.rb","logger.rb","module.rb","aliasing.rb","attr_accessor_with_default.rb","attr_internal.rb","attribute_accessors.rb","delegation.rb","inclusion.rb","introspection.rb","loading.rb","model_naming.rb","remove_method.rb","synchronization.rb","name_error.rb","numeric.rb","bytes.rb","conversions.rb","time.rb","object.rb","blank.rb","conversions.rb","extending.rb","instance_variables.rb","metaclass.rb","misc.rb","singleton_class.rb","pathname.rb","clean_within.rb","proc.rb","process.rb","daemon.rb","range.rb","blockless_step.rb","conversions.rb","include_range.rb","overlaps.rb","rexml.rb","string.rb","access.rb","behavior.rb","bytesize.rb","conversions.rb","filters.rb","inflections.rb","iterators.rb","multibyte.rb","output_safety.rb","starts_ends_with.rb","xchar.rb","symbol.rb","time.rb","behavior.rb","calculations.rb","conversions.rb","zones.rb","try.rb","uri.rb","dependencies.rb","deprecation.rb","duration.rb","gzip.rb","inflections.rb","inflector.rb","json.rb","jsongem.rb","yajl.rb","yaml.rb","decoding.rb","date.rb","date_time.rb","enumerable.rb","false_class.rb","hash.rb","nil_class.rb","numeric.rb","object.rb","regexp.rb","string.rb","symbol.rb","time.rb","true_class.rb","encoding.rb","variable.rb","memoizable.rb","message_encryptor.rb","message_verifier.rb","multibyte.rb","chars.rb","exceptions.rb","unicode_database.rb","utils.rb","option_merger.rb","ordered_hash.rb","ordered_options.rb","rescuable.rb","secure_random.rb","string_inquirer.rb","test_case.rb","assertions.rb","declarative.rb","default.rb","deprecation.rb","performance.rb","setup_and_teardown.rb","time_with_zone.rb","time_zone.rb","vendor.rb","blankslate.rb","builder.rb","blankslate.rb","css.rb","xchar.rb","xmlbase.rb","xmlevents.rb","xmlmarkup.rb","i18n.rb","backend.rb","active_record.rb","missing.rb","store_procs.rb","translation.rb","base.rb","cache.rb","cascade.rb","chain.rb","cldr.rb","fallbacks.rb","flatten.rb","gettext.rb","interpolation_compiler.rb","key_value.rb","memoize.rb","metadata.rb","pluralization.rb","simple.rb","transliterator.rb","config.rb","hash.rb","interpolate.rb","exceptions.rb","gettext.rb","helpers.rb","po_parser.rb","locale.rb","fallbacks.rb","tag.rb","parents.rb","rfc4646.rb","simple.rb","version.rb","memcache.rb","tzinfo.rb","data_timezone.rb","data_timezone_info.rb","algiers.rb","cairo.rb","casablanca.rb","harare.rb","johannesburg.rb","monrovia.rb","nairobi.rb","buenos_aires.rb","san_juan.rb","bogota.rb","caracas.rb","chicago.rb","chihuahua.rb","denver.rb","godthab.rb","guatemala.rb","halifax.rb","indianapolis.rb","juneau.rb","la_paz.rb","lima.rb","los_angeles.rb","mazatlan.rb","mexico_city.rb","monterrey.rb","new_york.rb","phoenix.rb","regina.rb","santiago.rb","sao_paulo.rb","st_johns.rb","tijuana.rb","almaty.rb","baghdad.rb","baku.rb","bangkok.rb","chongqing.rb","colombo.rb","dhaka.rb","hong_kong.rb","irkutsk.rb","jakarta.rb","jerusalem.rb","kabul.rb","kamchatka.rb","karachi.rb","katmandu.rb","kolkata.rb","krasnoyarsk.rb","kuala_lumpur.rb","kuwait.rb","magadan.rb","muscat.rb","novosibirsk.rb","rangoon.rb","riyadh.rb","seoul.rb","shanghai.rb","singapore.rb","taipei.rb","tashkent.rb","tbilisi.rb","tehran.rb","tokyo.rb","ulaanbaatar.rb","urumqi.rb","vladivostok.rb","yakutsk.rb","yekaterinburg.rb","yerevan.rb","azores.rb","cape_verde.rb","south_georgia.rb","adelaide.rb","brisbane.rb","darwin.rb","hobart.rb","melbourne.rb","perth.rb","sydney.rb","utc.rb","amsterdam.rb","athens.rb","belgrade.rb","berlin.rb","bratislava.rb","brussels.rb","bucharest.rb","budapest.rb","copenhagen.rb","dublin.rb","helsinki.rb","istanbul.rb","kiev.rb","lisbon.rb","ljubljana.rb","london.rb","madrid.rb","minsk.rb","moscow.rb","paris.rb","prague.rb","riga.rb","rome.rb","sarajevo.rb","skopje.rb","sofia.rb","stockholm.rb","tallinn.rb","vienna.rb","vilnius.rb","warsaw.rb","zagreb.rb","auckland.rb","fiji.rb","guam.rb","honolulu.rb","majuro.rb","midway.rb","noumea.rb","pago_pago.rb","port_moresby.rb","tongatapu.rb","info_timezone.rb","linked_timezone.rb","linked_timezone_info.rb","offset_rationals.rb","ruby_core_support.rb","time_or_datetime.rb","timezone.rb","timezone_definition.rb","timezone_info.rb","timezone_offset_info.rb","timezone_period.rb","timezone_transition_info.rb","version.rb","whiny_nil.rb","xml_mini.rb","jdom.rb","libxml.rb","libxmlsax.rb","nokogiri.rb","nokogirisax.rb","rexml.rb","changelog","mit-license","readme","code_statistics.rb","commands.rb","about.rb","console.rb","dbconsole.rb","destroy.rb","generate.rb","plugin.rb","runner.rb","server.rb","update.rb","console_app.rb","console_sandbox.rb","console_with_helpers.rb","dispatcher.rb","fcgi_handler.rb","initializer.rb","performance_test_help.rb","rails_generator.rb","base.rb","commands.rb","generated_attribute.rb","lookup.rb","manifest.rb","options.rb","scripts.rb","secret_key_generator.rb","simple_logger.rb","spec.rb","railties_path.rb","ruby_version_check.rb","rubyprof_ext.rb","source_annotation_extractor.rb","test_help.rb","webrick_server.rb"],"longSearchIndex":["actioncontroller","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller::assertions","actioncontroller","actioncontroller::benchmarking","actioncontroller","actioncontroller::cgihandler","actioncontroller","actioncontroller::caching","actioncontroller::caching::actions","actioncontroller::caching::actions","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching::pages","actioncontroller::caching","actioncontroller","actioncontroller::cgiext","actioncontroller","actioncontroller","actioncontroller","actioncontroller::filters","actioncontroller","actioncontroller::flash","actioncontroller::helpers","actioncontroller","actioncontroller::http","actioncontroller","actioncontroller::httpauthentication","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication","actioncontroller::httpauthentication::digest","actioncontroller::integration","actioncontroller::integration","actioncontroller::integration::session","actioncontroller","actioncontroller::layout","actioncontroller","actioncontroller::middlewarestack","actioncontroller::mimeresponds","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::reloader","actioncontroller","actioncontroller","actioncontroller::requestforgeryprotection","actioncontroller","actioncontroller::rescue","actioncontroller","actioncontroller","actioncontroller","actioncontroller::routing","actioncontroller::routing","actioncontroller::routing::optimisation","actioncontroller::routing::optimisation","actioncontroller::routing::optimisation","actioncontroller::routing","actioncontroller::routing::routeset","actioncontroller","actioncontroller::session","actioncontroller::session::abstractstore","actioncontroller::session::abstractstore","actioncontroller::session::abstractstore","actioncontroller::session","actioncontroller::session::cookiestore","actioncontroller::session","actioncontroller::sessionmanagement","actioncontroller","actioncontroller","actioncontroller::stringcoercion","actioncontroller","actioncontroller::testcase","actioncontroller::testcase","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::verification","actionmailer","actionview","actionview::base","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::atomfeedhelper","actionview::helpers::atomfeedhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::prototypehelper::javascriptgenerator","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview","actionview","actionview::reloadabletemplate","actionview::reloadabletemplate","actionview::reloadabletemplate","actionview","actionview::template","actionview::template","actionview","actionview::templatehandlers","actionview::templatehandlers","actionview::templatehandlers::compilable","actionview::templatehandlers","actionview::templatehandlers","actionview","actionview::testcase","activerecord","activerecord","activerecord","activerecord::aggregations","activerecord::associationpreload","activerecord","activerecord::associations","activerecord::associations::classmethods::innerjoindependency","activerecord::associations","activerecord","activerecord::attributemethods","activerecord","activerecord::autosaveassociation","activerecord","activerecord::batches","activerecord::calculations","activerecord","activerecord","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::column","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters","activerecord","activerecord","activerecord","activerecord","activerecord::dirty","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::locking","activerecord::locking::optimistic","activerecord::locking","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::namedscope","activerecord::namedscope","activerecord::nestedattributes","activerecord::nestedattributes","activerecord","activerecord::observing","activerecord","activerecord","activerecord::querycache","activerecord","activerecord","activerecord","activerecord","activerecord::reflection","activerecord::reflection","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::sessionstore","activerecord::sessionstore","activerecord","activerecord","activerecord","activerecord::testfixtures","activerecord","activerecord","activerecord::transactions","activerecord","activerecord","activerecord::validations","activeresource-2.3.14/lib/active_resource/version.rb","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource::custommethods","activeresource::custommethods","activeresource","activeresource","activeresource","activeresource::formats","activeresource::formats","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activesupport","activesupport","activesupport","activesupport::bufferedlogger","activesupport","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache::strategy","activesupport::cache","activesupport","activesupport::callbacks","activesupport::callbacks","activesupport::callbacks","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::array","activesupport::coreextensions::base64","activesupport::coreextensions::bigdecimal","activesupport::coreextensions::date","activesupport::coreextensions::date","activesupport::coreextensions::date::calculations","activesupport::coreextensions::date","activesupport::coreextensions::datetime","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::datetime","activesupport::coreextensions::file","activesupport::coreextensions::float","activesupport::coreextensions::float","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::hash","activesupport::coreextensions::integer","activesupport::coreextensions::integer","activesupport::coreextensions::integer","activesupport::coreextensions","activesupport::coreextensions::numeric","activesupport::coreextensions::numeric","activesupport::coreextensions::numeric","activesupport::coreextensions::pathname","activesupport::coreextensions::range","activesupport::coreextensions::range","activesupport::coreextensions::range","activesupport::coreextensions::range","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::string","activesupport::coreextensions::time","activesupport::coreextensions::time","activesupport::coreextensions::time::calculations","activesupport::coreextensions::time","activesupport::coreextensions::time","activesupport::coreextensions::time::zones","activesupport::deprecation","activesupport","activesupport","activesupport::gzip","activesupport","activesupport::inflector","activesupport","activesupport::json","activesupport::json::backends","activesupport::json::backends","activesupport::json::backends","activesupport::json::encoding","activesupport::json","activesupport","activesupport::memoizable","activesupport","activesupport::messageencryptor","activesupport","activesupport::messageverifier","activesupport","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport","activesupport::rescuable","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport","activesupport","activesupport","activesupport","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogiri","activesupport::xmlmini_nokogiri::conversions","activesupport::xmlmini_nokogiri::conversions","activesupport","activesupport::xmlmini_nokogirisax","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/blankslate.rb","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/builder/xmlmarkup.rb","builder","builder","builder","builder","builder","cgi","cgi","rails-2.3.14/lib/commands/plugin.rb","commands","commands","commands","commands","commands","commands","commands","commands","commands","commands","activesupport-2.3.14/lib/active_support/vendor/memcache-client-1.7.4/memcache.rb","continuum","activesupport-2.3.14/lib/active_support/json/encoders/date_time.rb","rails-2.3.14/lib/rails_generator/lookup.rb","rails-2.3.14/lib/webrick_server.rb","activesupport-2.3.14/lib/active_support/core_ext/string/output_safety.rb","erb","activesupport-2.3.14/lib/active_support/json/encoders/enumerable.rb","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/builder/xchar.rb","activerecord-2.3.14/lib/active_record/fixtures.rb","activesupport-2.3.14/lib/active_support/vendor/i18n-0.4.1/i18n/gettext/po_parser.rb","gettext","html","html","html","html","html","activesupport-2.3.14/lib/active_support/core_ext/hash/indifferent_access.rb","activesupport-2.3.14/lib/active_support/vendor.rb","i18n","i18n","i18n::backend","i18n::backend::activerecord","i18n::backend::activerecord","i18n::backend::activerecord","i18n::backend::activerecord","i18n::backend","i18n::backend","i18n::backend","i18n::backend","i18n::backend","i18n::backend","i18n::backend","i18n::backend","i18n::backend::gettext","i18n::backend","i18n::backend::interpolationcompiler","i18n::backend","i18n::backend::keyvalue","i18n::backend","i18n::backend","i18n::backend","i18n::backend","i18n::backend::simple","i18n::backend","i18n::backend::transliterator","i18n::backend::transliterator","i18n","i18n","i18n::gettext","i18n","i18n","i18n","i18n::locale","i18n::locale","i18n::locale::tag","i18n::locale::tag","i18n::locale::tag::rfc4646","i18n::locale::tag","i18n","i18n","i18n","i18n","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/blankslate.rb","activesupport-2.3.14/lib/active_support/vendor/i18n-0.4.1/i18n/exceptions.rb","activesupport-2.3.14/lib/active_support/xml_mini/libxml.rb","libxml","libxml::conversions","libxml::conversions","activesupport-2.3.14/lib/active_support/core_ext/logger.rb","logger","logger","activesupport-2.3.14/lib/active_support/vendor/memcache-client-1.7.4/memcache.rb","memcache","memcache","actionpack-2.3.14/lib/action_controller/mime_type.rb","mime","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/blankslate.rb","activesupport-2.3.14/lib/active_support/vendor/builder-2.1.2/blankslate.rb","activerecord-2.3.14/lib/active_record/connection_adapters/postgresql_adapter.rb","rails-2.3.14/lib/commands/plugin.rb","activesupport-2.3.14/lib/active_support/core_ext/process/daemon.rb","activesupport-2.3.14/lib/active_support/core_ext/rexml.rb","rexml","rexml","actionpack-2.3.14/lib/action_controller/rack_lint_patch.rb","racklintpatch","rails-2.3.14/lib/rails_generator/spec.rb","rails","rails","rails::generator","rails::generator","rails::generator","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator::commands","rails::generator","rails::generator","rails::generator","rails::generator","rails::generator","rails::generator::lookup","rails::generator","rails::generator","rails::generator","rails::generator::options","rails::generator","rails::generator","rails::generator::scripts","rails::generator","rails::generator","rails::generator","rails","rails","rails-2.3.14/lib/commands/plugin.rb","rails-2.3.14/lib/fcgi_handler.rb","rails-2.3.14/lib/commands/plugin.rb","rails-2.3.14/lib/commands/plugin.rb","rails-2.3.14/lib/commands/plugin.rb","rails-2.3.14/lib/source_annotation_extractor.rb","sourceannotationextractor","activesupport-2.3.14/lib/active_support/vendor/tzinfo-0.3.12/tzinfo/timezone_transition_info.rb","tzinfo","tzinfo","tzinfo::definitions","tzinfo::definitions::africa","tzinfo::definitions::africa","tzinfo::definitions::africa","tzinfo::definitions::africa","tzinfo::definitions::africa","tzinfo::definitions::africa","tzinfo::definitions::africa","tzinfo::definitions","tzinfo::definitions::america","tzinfo::definitions::america::argentina","tzinfo::definitions::america::argentina","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america::indiana","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions::america","tzinfo::definitions","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions::asia","tzinfo::definitions","tzinfo::definitions::atlantic","tzinfo::definitions::atlantic","tzinfo::definitions::atlantic","tzinfo::definitions","tzinfo::definitions::australia","tzinfo::definitions::australia","tzinfo::definitions::australia","tzinfo::definitions::australia","tzinfo::definitions::australia","tzinfo::definitions::australia","tzinfo::definitions::australia","tzinfo::definitions","tzinfo::definitions::etc","tzinfo::definitions","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions::europe","tzinfo::definitions","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo::definitions::pacific","tzinfo","tzinfo","tzinfo","tzinfo","tzinfo","tzinfo","activesupport-2.3.14/lib/active_support/testing/deprecation.rb","test","activesupport::duration","activesupport::multibyte::chars","activesupport::safebuffer","activesupport::timewithzone","builder::css","activesupport::duration","activesupport::timewithzone","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","builder::xmlbase","activerecord::connectionadapters::sqliteadapter::version","activesupport::multibyte::chars","activesupport::timewithzone","activesupport::timezone","tzinfo::timezone","actioncontroller::middlewarestack::middleware","actionview::template::path","activerecord::base","activerecord::reflection::macroreflection","activeresource::base","activeresource::request","activeresource::response","activesupport::callbacks::callback","activesupport::duration","mime::type","tzinfo::timezoneperiod","activerecord::base","activesupport::coreextensions::time::calculations::classmethods","activesupport::multibyte::unicodedatabase","mime::type","activesupport::multibyte::chars","activesupport::timezone","mime::type","builder::css","builder::css","actioncontroller::request","actioncontroller::request","actioncontroller::http::headers","actioncontroller::session::abstractstore::optionshash","actioncontroller::session::abstractstore::sessionhash","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::reloadabletemplate::reloadablepath","actionview::template::eagerpath","actionview::template::path","activerecord::base","activerecord::connectionadapters::tabledefinition","activerecord::errors","activeresource::errors","activeresource::formats","activeresource::response","activesupport::multibyte::chars","activesupport::testing::performance::metrics","activesupport::timezone","i18n::locale::fallbacks","memcache","actioncontroller::session::abstractstore::sessionhash","activerecord::base","activeresource::response","activesupport::multibyte::chars","hashwithindifferentaccess","memcache","gettext::poparser","i18n::gettext::helpers","actionview::testcase","builder::xmlmarkup","actioncontroller::dispatcher","builder::css","builder::css","tzinfo::timezone","builder::css","builder::xmlevents","builder::xmlmarkup","builder::xmlmarkup","builder::xmlbase","builder::xmlbase","builder::css","builder::xmlbase","builder::xmlmarkup","actionview::testcase","builder::css","tzinfo::timezone","builder::css","builder::xmlbase","builder::css","builder::xmlbase","gettext::poparser","builder::xmlmarkup","builder::css","builder::xmlevents","builder::xmlmarkup","builder::css","builder::xmlmarkup","builder::css","actionview::testcase","tzinfo::timezoneperiod","activerecord::base","actioncontroller::request","activerecord::nestedattributes::classmethods","actionview::template","actioncontroller::base","actioncontroller::base","actioncontroller::resources","actioncontroller::polymorphicroutes","actioncontroller::middlewarestack","actioncontroller::middlewarestack::middleware","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","memcache","object","activesupport::coreextensions::date::behavior","activesupport::coreextensions::string::behavior","activesupport::multibyte::chars","activesupport::coreextensions::time::behavior","activesupport::timewithzone","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::errors","activeresource::errors","activesupport::bufferedlogger","i18n::backend::transliterator::hashtransliterator","memcache","repositories","activerecord::associations::classmethods","activerecord::autosaveassociation::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activerecord::base","actioncontroller::resources","activerecord::associations::classmethods","actioncontroller::caching::actions::actioncachepath","activesupport::backtracecleaner","rails::initializer","rails::generator::options","activerecord::base","activerecord::connectionadapters::schemastatements","activerecord::base","actioncontroller::layout::classmethods","activerecord::base","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","activerecord::associations::classmethods","activerecord::base","activerecord::connectionadapters::databasestatements","activerecord::observer","activerecord::errors","activerecord::errors","rails::generator::options","activerecord::base","activerecord::connectionadapters::schemastatements","rails::initializer","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","activesupport::backtracecleaner","rails::initializer","activerecord::connectionadapters::schemastatements","activerecord::errors","activeresource::errors","activerecord::associations::classmethods","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","activerecord::callbacks","activerecord::callbacks","actioncontroller::filters::classmethods","rails::generator::base","rails::configuration","rails::initializer","rails::configuration","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::base","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::numeric::time","activesupport::coreextensions::time::calculations","activesupport::duration","activesupport::timewithzone","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::coreextensions::module","activerecord::dirty::classmethods","activesupport::coreextensions::module","memcache::server","activerecord::base","activesupport::timezone","repositories","tzinfo::timezone","actioncontroller::helpers::classmethods","activerecord::base","tzinfo::timezone","tzinfo::timezone","tzinfo::timezone","tzinfo::timezone","tzinfo::timezone","actionview::helpers::activerecordhelper","tzinfo::timezone","tzinfo::timezone","activerecord::base","activerecord::base","activerecord::migration","activerecord::namedscope::scope","object","memcache","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","activerecord::associationpreload::classmethods","activesupport::coreextensions::string::iterators","activesupport::coreextensions::string::startsendswith","module","rails::generator::lookup::classmethods","actioncontroller::base","actioncontroller::base","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optimisation::positionalargumentswithadditionalparams","activeresource::connection","i18n::backend::transliterator::hashtransliterator","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::filters::classmethods","activerecord::base","actionview::helpers::javascripthelper","activeresource::base","activesupport::timewithzone","datetime","object","module","activesupport::testing::assertions","activesupport::testing::assertions","actioncontroller::assertions::domassertions","actioncontroller::assertions::domassertions","actioncontroller::assertions::routingassertions","activesupport::testing::assertions","actioncontroller::assertions::tagassertions","activesupport::testing::assertions","actioncontroller::assertions::routingassertions","actioncontroller::assertions::responseassertions","actioncontroller::assertions::responseassertions","actioncontroller::assertions::routingassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::selectorassertions","actioncontroller::assertions::tagassertions","actioncontroller::assertions::responseassertions","actioncontroller::assertions::modelassertions","activesupport::coreextensions::hash::keys","actionview::helpers::assettaghelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::base","actioncontroller::response","activerecord::base","actioncontroller::base","rails::generator::namedbase","actioncontroller::base","dispatchservlet","actioncontroller::testprocess","activerecord::autosaveassociation","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::autosaveassociation","activerecord::connectionadapters::schemastatements","activesupport::timezone","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","actionview::helpers::atomfeedhelper","activesupport::coreextensions::file::atomic","activerecord::base","module","module","module","module","module","module","activerecord::base","activerecord::base","activerecord::dirty","activerecord::dirty","activerecord::base","activerecord::base","html::selector","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::base","activerecord::base","activerecord::dirty","activerecord::dirty","activerecord::base","rails::generator::namedbase","activerecord::base","activerecord::base","activerecord::base","activerecord::locking::optimistic","activerecord::base","activerecord::base","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","activeresource::connection","actionview::helpers::assettaghelper","activesupport::bufferedlogger","activesupport::bufferedlogger","actionview::helpers::texthelper","actionview::helpers::texthelper","actionview::helpers::texthelper","actionview::helpers::texthelper","i18n::backend::activerecord::implementation","i18n::backend::activerecord::translation","i18n::backend::base","i18n::backend::chain","i18n::backend::keyvalue::implementation","i18n::backend::memoize","i18n::backend::simple::implementation","i18n::config","i18n::config","activerecord::calculations::classmethods","activesupport::json","i18n::config","activesupport::json","activesupport::xmlmini","i18n::config","rails","activerecord::dynamicfindermatch","rails::generator::base","rails::generator::namedbase","rails::generator::options","rails::generator::scripts::base","activesupport::securerandom","activerecord::base","activerecord::batches::classmethods","activerecord::base","activerecord::callbacks","activerecord::callbacks","actioncontroller::filters::classmethods","activerecord::callbacks","activerecord::autosaveassociation","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::callbacks","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activerecord::associations::classmethods","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::reflection::macroreflection","actioncontroller::benchmarking::classmethods","actionview::helpers::benchmarkhelper","activerecord::base","activesupport::testing::performance::metrics::base","railsenvironment","activesupport::timewithzone","continuum","activerecord::connectionadapters::column","object","kernel","object","module","actionview::helpers::taghelper","actionview::helpers::taghelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::request","kernel","rails::configuration","rails::configuration","mime::type","activesupport::bufferedlogger","actioncontroller::middlewarestack","actioncontroller::middlewarestack::middleware","activesupport::callbacks::callbackchain","actioncontroller::middlewarestack::middleware","actionview::helpers::prototypehelper","activesupport::cache::memcachestore","actioncontroller::dispatcher","actioncontroller::polymorphicroutes","actionview::helpers::prototypehelper","activeresource::connection","actioncontroller::testprocess","rails::configuration","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::prototypehelper","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","actioncontroller::caching","actionview::helpers::cachehelper","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","rails","rails::generator::lookup::classmethods","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","actioncontroller::caching","actioncontroller::caching","memcache","fixtures","fixtures","actioncontroller::request","memcache","memcache","memcache","activerecord::base","i18n::backend::cache","i18n","i18n","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","activerecord::connectionadapters::querycache","i18n","actioncontroller::caching","i18n","actionview::base","activerecord::attributemethods::classmethods","fixtures","actioncontroller::caching::actions::classmethods","actioncontroller::caching::pages::classmethods","actioncontroller::caching::pages","activerecord::calculations::classmethods","actioncontroller::base","actioncontroller::dispatcher","actioncontroller::failsafe","actioncontroller::paramsparser","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","actioncontroller::stringcoercion","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::templatehandler","actionview::templatehandlers::compilable::classmethods","activerecord::connectionadapters::connectionmanagement","activerecord::querycache","activesupport::callbacks::callback","logger::formatter","logger::simpleformatter","activerecord::callbacks","activesupport::coreextensions::string::inflections","activesupport::coreextensions::string::inflections","activesupport::inflector","actionmailer::base","activesupport::multibyte::chars","actionview::helpers::capturehelper","memcache","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::sqliteadapter","builder::xmlmarkup","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::taghelper","activesupport::multibyte::chars","activerecord::connectionadapters::table","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activerecord::dirty","activerecord::dirty","activerecord::dirty","activerecord::autosaveassociation","activerecord::dirty","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::coreextensions::string::multibyte","actioncontroller::response","activerecord::connectionadapters::mysqladapter","actioncontroller::response","actionview::helpers::formhelper","actionview::helpers::formtaghelper","builder","rails::initializer","rails::initializer","memcache","rails::initializer","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","builder::css","rails::generator::commands::base","rails::generator::commands::create","rails::generator::commands::list","kernel","object","rails::generator::spec","activerecord::reflection::macroreflection","rails::generator::spec","activerecord::base","activesupport::coreextensions::string::inflections","activesupport::inflector","activesupport::backtracecleaner","actioncontroller::rescue","actioncontroller::testcase::assertions","activesupport::coreextensions::pathname::cleanwithin","actioncontroller::dispatcher","actioncontroller::session::abstractstore::sessionhash","activerecord::errors","activeresource::errors","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activesupport::inflector::inflections","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionhandler","activesupport::bufferedlogger","activerecord::connectionadapters::querycache","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::base","activeresource::base","activerecord::base","activerecord::base","actioncontroller::reloader::bodywrapper","activesupport::bufferedlogger","activesupport::gzip::stream","memcache::server","railsfcgihandler","activerecord::connectionadapters::mysqladapter","actionview::helpers::assettaghelper","activerecord::associations::classmethods","activeresource::base","activeresource::base","activerecord::associations::classmethods","actionview::helpers::formoptionshelper","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::calculations::classmethods","activerecord::associations::classmethods","activerecord::calculations::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::base","activerecord::connectionadapters::databaselimits","activerecord::base","fixtures","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::querycache","activerecord::base","builder::css","builder::xmlmarkup","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::timewithzone","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","actionview::templatehandlers::builder","actionview::templatehandlers::compilable","actionview::templatehandlers::erb","actionview::templatehandlers::rjs","i18n::backend::interpolationcompiler","i18n::backend::interpolationcompiler::compiler","i18n::backend::interpolationcompiler::compiler","i18n::backend::interpolationcompiler::compiler","actioncontroller::base","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::aggregations::classmethods","activesupport::gzip","i18n::locale::fallbacks","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","activerecord::base","actionview::helpers::texthelper","activerecord::associations::classmethods","activerecord::associations::classmethods","i18n","i18n","rails","rails","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::associations::classmethods","activeresource::connection","actionview::helpers::urlhelper","actioncontroller::routing::routeset::mapper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","memcache::server","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionpool","activerecord::base","activerecord::base","activerecord::connectionadapters::connectionpool","activerecord::migration","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activeresource::base","activeresource::base","activerecord::base","activerecord::base","activerecord::connectionadapters::connectionhandler","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::base","activerecord::calculations::classmethods","activerecord::base","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::associationpreload::classmethods","activesupport::multibyte::chars","html::whitelistsanitizer","activerecord::base","actionview::helpers::capturehelper","actioncontroller::request","actionview::helpers::taghelper","actionview::helpers::recordtaghelper","actionview::helpers::taghelper","actioncontroller::request","actioncontroller::response","actionview::template","actioncontroller::response","actioncontroller::paramsparser","actioncontroller::testcase","actioncontroller::testcase","actioncontroller::base","actioncontroller::base","actioncontroller::base","actioncontroller::base","actionmailer::base","actioncontroller::base","actioncontroller::base","actionmailer::base","actionview::testcase::testcontroller","actioncontroller::routing","actionview::helpers::urlhelper","actioncontroller::response","actioncontroller::response","activesupport::json::backends::jsongem","activesupport::json::backends::yajl","hashwithindifferentaccess","actioncontroller::response","activerecord::base","actionview::helpers::urlhelper","hashwithindifferentaccess","actioncontroller::cookies","actioncontroller::testprocess","activerecord::calculations::classmethods","activerecord::errors","activeresource::errors","activerecord::base","activerecord::base","activerecord::base","activeresource::base","activeresource::base","activesupport::timezone","activerecord::validations::classmethods","activerecord::associations::classmethods","memcache","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","dispatchservlet","activerecord::associations::classmethods","fixtures","object","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::associations::classmethods","actionmailer::base","activerecord::base","activeresource::base","activerecord::reflection::classmethods","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activeresource::base","activerecord::connectionadapters::schemastatements","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","actionview::template::eagerpath","activerecord::attributemethods::classmethods","actionview::helpers::csrfhelper","actioncontroller::assertions::selectorassertions","fixtures","activesupport::coreextensions::date::calculations::classmethods","activesupport::coreextensions::datetime::calculations::classmethods","activesupport::coreextensions::time::zones::classmethods","actionview::helpers::texthelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","rails::generator::commands::base","actionview::helpers::urlhelper","tzinfo::timezone","tzinfo::timezone","activerecord::connectionadapters::abstractadapter","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","tzinfo::timezone","activerecord::timestamp","activeresource::custommethods::classmethods","activeresource::custommethods::instancemethods","activeresource::custommethods::instancemethods","actionview::helpers::texthelper","process","kernel","activesupport::coreextensions::string::inflections","activesupport::inflector","actioncontroller::session::abstractstore::sessionhash","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::session","activerecord::sessionstore::session","rails::configuration","actionview::helpers::datehelper","logger","logger","actionview::helpers::datehelper","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::time::calculations::classmethods","actionview::helpers::debughelper","actionview::base","kernel","builder::xmlmarkup","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json::backends::jsongem","activesupport::json::backends::yajl","activesupport::json::backends::yaml","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::gzip","memcache","activerecord::base","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activerecord::base","activerecord::base","activerecord::connectionadapters::abstractadapter","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::coreextensions::hash::deepmerge","activesupport::coreextensions::hash::deepmerge","hashwithindifferentaccess","i18n::backend::base","rails::generator::generatedattribute","railsenvironment","railsenvironment","rails::configuration","rails::configuration","rails::configuration","rails::configuration","rails::configuration","rails::configuration","rails::configuration","rails::configuration","activerecord::errors","i18n","rails::configuration","rails::configuration","activeresource::connection","actioncontroller::helpers::classmethods","rails::configuration","actionview::helpers::activerecordhelper","i18n::config","i18n::config","rails::configuration","rails::configuration","activerecord::error","rails::generator::options","rails::generator::options::classmethods","rails::configuration","rails::configuration","rails::configuration","rails::configuration","rails::configuration","activerecord::connectionadapters::sqliteadapter","rails::configuration","activerecord::base","activerecord::base","i18n::config","i18n::config","activerecord::connectionadapters::databasestatements","actioncontroller::base","actionmailer::base","actioncontroller::base","activerecord::base","actioncontroller::base","rails::configuration","rails::configuration","repositories","i18n::locale::fallbacks","activerecord::schema","logger","activerecord::base","activerecord::attributemethods::classmethods","activesupport::callbacks::classmethods","actioncontroller::dispatcher","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::attributemethods::classmethods","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","module","actioncontroller::integration::session","actioncontroller::session::abstractstore::sessionhash","actioncontroller::testprocess","activerecord::base","activerecord::base","activerecord::connectionadapters::databasestatements","activeresource::base","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activesupport::callbacks::callbackchain","hashwithindifferentaccess","memcache","actioncontroller::request","activerecord::base","activerecord::associations::classmethods","fixtures","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::synchronizedmemorystore","activerecord::connectionadapters::databasestatements","actioncontroller::integration::session","actionmailer::base","actionmailer::base","activesupport::coreextensions::string::inflections","activesupport::inflector","rails::generator::commands::base","rails::generator::commands::list","activerecord::reflection::macroreflection","activerecord::base","rails::generator::base","actioncontroller::session::abstractstore","actioncontroller::session::abstractstore::sessionhash","actioncontroller::session::cookiestore","actioncontroller::session::memcachestore","activerecord::base","activerecord::base","activerecord::sessionstore","activerecord::sessionstore::sqlbypass","activeresource::base","activerecord::base","activerecord::base","i18n::backend::cldr","actioncontroller::testcase","actionview::testcase","commands::install","actionview::helpers::assettaghelper","activesupport::coreextensions::hash::diff","rails::generator::commands::base","i18n::backend::interpolationcompiler::compiler","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","activesupport::multibyte::unicodedatabase","activerecord::connectionadapters::querycache","rails::initializer","activerecord::connectionadapters::abstractadapter","actioncontroller::flash::flashhash","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::dispatcher","actioncontroller::dispatcher","dispatchservlet","actioncontroller::cgihandler","actioncontroller::dispatcher","railsfcgihandler","railsfcgihandler","sourceannotationextractor","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::schemastatements","actionview::helpers::recordtaghelper","actioncontroller::recordidentifier","actionview::helpers::recordidentificationhelper","actioncontroller::recordidentifier","actionview::helpers::recordidentificationhelper","actioncontroller::request","activesupport::multibyte::chars","recursivehttpfetcher","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::schemastatements","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::timewithzone","tzinfo::timezoneperiod","activeresource::base","activesupport::callbacks::callback","hashwithindifferentaccess","object","activesupport::timewithzone","actioncontroller::cgihandler::properstream","actioncontroller::response","actioncontroller::stringcoercion::uglybody","activerecord::errors","activeresource::errors","rails::generator::gemgeneratorsource","rails::generator::gempathsource","rails::generator::pathsource","rails::generator::source","repositories","repositories","repository","activesupport::coreextensions::string::iterators","activerecord::errors","activerecord::errors","activeresource::errors","racklintpatch::allowstringsubclass","enumerable","activeresource::base","activeresource::base","activerecord::errors","activerecord::namedscope::scope","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::mysqladapter","kernel","activeresource::base","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::base64","activesupport::coreextensions::base64::encoding","actioncontroller::integration::session","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","activerecord::connectionadapters::postgresqladapter","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::string::startsendswith","activesupport::cache::filestore","activerecord::base","actioncontroller::session::cookiestore","actioncontroller::session::cookiestore","rexml::document","actionview::helpers::atomfeedhelper::atomfeedbuilder","memcache","sourceannotationextractor","rails","actioncontroller::http::headers","activesupport::testing::performance::benchmarker","rails::configuration","commands::plugin","rails::configuration","actionview::template::path","activerecord::base","activeresource::base","activesupport::callbacks::callback","activesupport::timewithzone","tzinfo::timezone","tzinfo::timezoneperiod","rails::generator::manifest","fixtures","actionview::templatehandlers::erb","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::activerecordhelper","actionview::helpers::activerecordhelper","activerecord::validations","activeresource::validations","activerecord::connectionadapters::postgresqladapter","actionview::helpers::javascripthelper","i18n::backend::interpolationcompiler::compiler","actionview::helpers::taghelper","i18n::backend::interpolationcompiler::compiler","activerecord::base","activerecord::connectionadapters::connectionhandler","actioncontroller::response","actioncontroller::response","actioncontroller::response","actioncontroller::request","activerecord::attributemethods::classmethods","activesupport::callbacks::callback","actionview::helpers::prototypehelper","activesupport::coreextensions::integer::evenodd","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::hash::except","activesupport::coreextensions::hash::except","i18n::config","i18n::config","actionview::helpers::texthelper","enumerable","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::base","actionview::template","actionview::template","activesupport::cache::strategy::localcache","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::synchronizedmemorystore","repositories","rails::generator::commands::base","actioncontroller::session::abstractstore","actioncontroller::session::abstractstore::sessionhash","actioncontroller::session::cookiestore","activerecord::base","activeresource::base","activeresource::base","railsfcgihandler","railsfcgihandler","activerecord::base","activesupport::cache","activerecord::base","activerecord::base","actionview::helpers::assettaghelper","i18n::backend::activerecord::implementation","actionview::helpers::assettaghelper","actioncontroller::httpauthentication::digest","actioncontroller::caching::actions","actioncontroller::caching::fragments","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","actioncontroller::base","activesupport::cache::store","actioncontroller::base","actioncontroller::uploadedfile","activerecord::dirty::classmethods","activerecord::locking::optimistic::classmethods","activeresource::formats::jsonformat","activeresource::formats::xmlformat","railsenvironment","railsenvironment","actionview::helpers::formtaghelper","sourceannotationextractor","activerecord::base","activerecord::connectionadapters::column","actioncontroller::caching::actions::actioncachepath","dispatchservlet","activerecord::connectionadapters::column","rails::generator::namedbase","activesupport::callbacks::callbackchain","activesupport::callbacks::callbackchain","activesupport::coreextensions::array::extractoptions","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::column","actioncontroller::polymorphicroutes","commands::discover","activerecord::connectionadapters::column","i18n::gettext","actionview::helpers::formoptionshelper","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","i18n::backend::fallbacks","actioncontroller::routing::optionalformatsegment","actionview::helpers::formoptionshelper","actioncontroller::failsafe","actioncontroller::failsafe","actioncontroller::failsafe","activerecord::connectionadapters::column","activerecord::connectionadapters::column","i18n","i18n","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activesupport::cache::store","activesupport::cache::synchronizedmemorystore","hashwithindifferentaccess","i18n::backend::cache","memcache","recursivehttpfetcher","recursivehttpfetcher","activerecord::dirty","actionview::helpers::formtaghelper","rails::generator::generatedattribute","actionview::helpers::formhelper","activesupport::coreextensions::array::access","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::template","activesupport::multibyte::unicodedatabase","activesupport::backtracecleaner","actioncontroller::filters::classmethods","actioncontroller::base","activerecord::associations::hasonethroughassociation","activerecord::base","activeresource::base","activesupport::callbacks::callbackchain","plugin","railsenvironment","sourceannotationextractor","actioncontroller::testprocess","activerecord::associationpreload::classmethods","activerecord::sessionstore::session","activerecord::sessionstore::session","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::base","object","activerecord::batches::classmethods","activerecord::base","activeresource::base","i18n::backend::fallbacks","activerecord::base","blankslate","object","repositories","sourceannotationextractor","activerecord::batches::classmethods","activerecord::base","activerecord::base","activerecord::base","activeresource::base","activeresource::base","activeresource::base","activerecord::base","repositories","activeresource::base","activerecord::sessionstore","activeresource::base","activerecord::base","rails::generator::commands::create","actioncontroller::testprocess","activerecord::associations::hasonethroughassociation","activesupport::timezone","activerecord::associations::classmethods","activerecord::dynamicfindermatch","activerecord::base","activerecord::namedscope::scope","actioncontroller::testprocess","fixtures","activerecord::testfixtures::classmethods","actioncontroller::testprocess","i18n::backend::flatten","i18n::backend::flatten","activesupport::bufferedlogger","memcache","activesupport::memoizable::instancemethods","actioncontroller::dispatcher","actioncontroller::integration::session","html::selector","html::selector","rails::generator::commands::base","activesupport::coreextensions::string::inflections","activesupport::inflector","actionview::helpers::activerecordhelper","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection","actioncontroller::request","actionview::helpers::formhelper","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actioncontroller::request","activeresource::base","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::time","actioncontroller::request","activeresource::base","actionview::template","i18n::backend::cldr","i18n::backend::cldr","i18n::backend::cldr","logger","logger::formatter","i18n::backend::cldr","i18n::backend::cldr","activerecord::connectionadapters::abstractadapter","logger","logger","i18n::backend::cldr","i18n::backend::cldr","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","activesupport::timezone","actioncontroller::polymorphicroutes","actioncontroller::polymorphicroutes","i18n::backend::cldr","logger","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::array::access","activesupport::coreextensions::array::access","actioncontroller::caching::fragments","actioncontroller::caching::fragments","rails::configuration","rails::configuration","actionview::reloadabletemplate::unfreezable","activerecord::base","activesupport::timewithzone","activesupport::memoizable::instancemethods","actioncontroller::request","actioncontroller::base","tzinfo::timezone","activesupport::coreextensions::array::access","activeresource::errors","activerecord::serialization","activeresource::errors","activesupport::coreextensions::numeric::time","activesupport::duration","activerecord::serialization","activeresource::errors","activesupport::coreextensions::hash::classmethods","activeresource::formats::xmlformat","activerecord::base","activerecord::error","activerecord::errors","activeresource::errors","rails::generator::options","rails::generator::options::classmethods","activesupport::testing::performance","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::multibyte::chars","railsfcgihandler","rails::configuration","activesupport::messageverifier","activesupport::messageverifier","activerecord::error","activerecord::error","activerecord::errors","actioncontroller::routing::optimisation","rails::secretkeygenerator","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","activerecord::attributemethods::classmethods","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optimisation::positionalarguments","actioncontroller::routing::optimisation::positionalargumentswithadditionalparams","rails::generator::gempathsource","actioncontroller::integration::session","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","i18n::backend::transliterator","memcache","tzinfo::timezone","actioncontroller::request","actionview::helpers::texthelper","memcache","activesupport::timewithzone","tzinfo::timezone","tzinfo::timezone","memcache","actioncontroller::session::abstractstore","actioncontroller::session::memcachestore","activerecord::sessionstore","activerecord::sessionstore","actioncontroller::integration::session","activesupport::coreextensions::time::zones::classmethods","activesupport::timewithzone","activesupport::timewithzone","memcache","i18n::gettext::helpers","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","plugin","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","builder::css","enumerable","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","rails::generator::commands::base","activerecord::associations::classmethods","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optimisation::positionalarguments","actioncontroller::routing::optimisation::positionalargumentswithadditionalparams","plugin","erb::util","erb::util","actioncontroller::httpauthentication::digest","actioncontroller::response","memcache","i18n","i18n::backend::interpolationcompiler::compiler","activeresource::connection","actioncontroller::requestforgeryprotection","activesupport::rescuable","activerecord::associations::classmethods","activerecord::base","activerecord::connectionadapters::column","actioncontroller::session::abstractstore::sessionhash","activerecord::associations::classmethods","activerecord::associations::classmethods","fixtures","actioncontroller::session::abstractstore::optionshash","activerecord::base","activeresource::base","activesupport::callbacks::callback","activesupport::timewithzone","tzinfo::timezone","tzinfo::timezoneperiod","memcache","actioncontroller::base","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","actioncontroller::request","actioncontroller::request","activeresource::base","activeresource::request","actioncontroller::helpers::classmethods","object","actioncontroller::helpers::classmethods","actionview::testcase","actioncontroller::helpers::classmethods","actionview::testcase","actioncontroller::helpers::classmethods","activesupport::securerandom","actioncontroller::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","blankslate","actioncontroller::base","actionview::helpers::texthelper","actioncontroller::request","actioncontroller::integration::session","actioncontroller::request","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","mime::type","actioncontroller::testprocess","erb::util","erb::util","actionview::helpers::formtaghelper","activesupport::safebuffer","activesupport::safebuffer","fixnum","object","actionview::helpers::translationhelper","activeresource::connection","activeresource::connection","activeresource::connection","cgi::cookie","activesupport::timewithzone","actioncontroller::integration::session","actioncontroller::integration::session","activesupport::inflector::inflections","activerecord::base","activerecord::base","activerecord::connectionadapters::column","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::base","activeresource::base","builder::css","activerecord::base","activeresource::base","activeresource::base","rails::generator::commands::create","tzinfo::timezone","fixtures","actioncontroller::request","actioncontroller::request","actionview::helpers::assettaghelper","actionview::helpers::formtaghelper","actionview::helpers::assettaghelper","i18n::locale::tag","i18n::locale::tag","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::multibyte::chars","activerecord::connectionadapters::databaselimits","activesupport::coreextensions::array::grouping","activesupport::coreextensions::array::grouping","activerecord::associationpreload::classmethods","activesupport::coreextensions::time::zones","activesupport::timewithzone","actionview::base::proxymodule","activesupport::multibyte::chars","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::associations::classmethods","actionview::testcase","activesupport::coreextensions::range::includerange","actioncontroller::cgiext::stdinput","actioncontroller::cookies","actioncontroller::flash","actioncontroller::requestforgeryprotection","actioncontroller::testcase::raiseactionexceptions","actioncontroller::testprocess","actioncontroller::uploadedfile","actionview::templatehandlers::compilable","activerecord::autosaveassociation","activerecord::connectionadapters::querycache","activerecord::dirty","activerecord::namedscope","activerecord::serialization","activerecord::testfixtures","activerecord::transactions","activeresource::custommethods","activesupport::callbacks","activesupport::memoizable::instancemethods","activesupport::testing::performance","activesupport::testing::setupandteardown","i18n::backend::metadata","racklintpatch::allowstringsubclass","rails::generator::commands","rails::generator::lookup","rails::generator::options","module","memcache","activerecord::base","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","activerecord::base","activerecord::base","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::table","activesupport::multibyte::chars","repository","enumerable","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databaselimits","rails::generator::namedbase","activesupport::inflector","actioncontroller::routing","plugin","activerecord::base","fixtures","activerecord::observing::classmethods","actioncontroller::helpers::classmethods","actioncontroller::layout::classmethods","rails::generator::options::classmethods","i18n::backend::simple::implementation","rails::initializer","actioncontroller::base","rails::initializer","rails::initializer","actionmailer::base","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","rails::initializer","cgi::queryextension","rails::initializer","activerecord::connectionadapters::schemastatements","actioncontroller::base","actionmailer::base","rails::initializer","rails::initializer","actioncontroller::cgiext::stdinput","actionview::base","rails","i18n::backend::simple::implementation","rails","actioncontroller::session::cookiestore","actionview::helpers::activerecordhelper","actioncontroller::middlewarestack","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::multibyte::chars","actioncontroller::middlewarestack","actioncontroller::middlewarestack","activerecord::connectionadapters::databasestatements","fixtures","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::databasestatements","actioncontroller::middlewarestack::middleware","actioncontroller::session::abstractstore::sessionhash","activerecord::base","activerecord::base","activesupport::timewithzone","continuum::entry","memcache","memcache::server","tzinfo::timezone","tzinfo::timezoneperiod","plugin","railsenvironment","rails::initializer","railsfcgihandler","railsfcgihandler","plugin","plugin","plugin","plugin","plugin","plugin","rails::generator::commands","rails::generator::lookup","rails::generator::lookup::classmethods","repositories","object","activerecord::attributemethods::classmethods","object","object","activerecord::base","fixtures","activeresource::base","activerecord::testfixtures","fixtures","activerecord::observing::classmethods","activeresource::base","activerecord::base","activerecord::dynamicfindermatch","builder::xmlmarkup","i18n::backend::base","i18n::backend::interpolationcompiler","i18n::backend::metadata","i18n::backend::interpolationcompiler::compiler","i18n::backend::base","i18n::backend::interpolationcompiler::compiler","activerecord::base","activerecord::associationpreload::classmethods","i18n::backend::interpolationcompiler::compiler","i18n::backend::activerecord::translation","actioncontroller::routing::optionalformatsegment","actioncontroller::integration::session","activerecord::errors","activerecord::validations","activeresource::errors","rails::generator::lookup::classmethods","rails::generator::commands::base","rails::generator::commands::rewindbase","activesupport::inflector::inflections","activesupport::timewithzone","activesupport::coreextensions::string::multibyte","activesupport::coreextensions::string::multibyte","activesupport::timewithzone","activesupport::timewithzone","erb::util","erb::util","actionview::helpers::assettaghelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::javascripthelper","actionview::helpers::assettaghelper","activerecord::associations::classmethods","activerecord::associations::classmethods::innerjoindependency::innerjoinassociation","activerecord::associations::classmethods","activerecord::connectionadapters::databaselimits","erb::util","erb::util","actioncontroller::flash::flashhash","actioncontroller::request","hashwithindifferentaccess","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::timewithzone","actioncontroller::middlewarestack::middleware","activerecord::connectionadapters::column","activerecord::reflection::macroreflection","rails::generator::spec","actioncontroller::translation","actionview::helpers::translationhelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activerecord::base","activerecord::namedscope::scope","actioncontroller::response","actioncontroller::response","actioncontroller::response","actioncontroller::layout::classmethods","activerecord::errors","activeresource::errors","activesupport::multibyte::chars","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::urlhelper","actionview::helpers::prototypehelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","i18n::backend::flatten","recursivehttpfetcher","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::multibyte::chars","activeresource::base","activesupport::multibyte::unicodedatabase","actioncontroller::session::abstractstore::sessionhash","actionview::reloadabletemplate::reloadablepath","actionview::template","actionview::template::eagerpath","actionview::template::path","repositories","actionview::reloadabletemplate::reloadablepath","rails::initializer","rails::initializer","activeresource::base","rails::initializer","i18n::backend::base","activerecord::testfixtures","actioncontroller::session::abstractstore::sessionhash","actioncontroller::session::abstractstore::sessionhash","activerecord::namedscope::scope","rails::initializer","tzinfo::timezone","activerecord::testfixtures","activerecord::migrationproxy","rails::initializer","rails::configuration","rails::configuration","i18n::config","i18n::config","rails::configuration","rails::configuration","rails::initializer","i18n::backend::gettext","i18n::backend::base","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","actioncontroller::session::abstractstore::optionshash","i18n::backend::base","rails::initializer","i18n::backend::base","actioncontroller::session::abstractstore::sessionhash","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::timezone","tzinfo::timezoneperiod","tzinfo::timezoneperiod","activesupport::cache::strategy::localcache","activesupport::coreextensions::module","activesupport::coreextensions::module","tzinfo::timezoneperiod","activesupport::coreextensions::datetime::calculations::classmethods","actioncontroller::rescue","tzinfo::timezoneperiod","activesupport::coreextensions::time::calculations::classmethods","activesupport::timezone","tzinfo::timezone","i18n::config","i18n::config","actioncontroller::translation","actionview::helpers::translationhelper","i18n","i18n::backend::base","i18n::backend::chain","i18n::backend::cldr","activesupport::timewithzone","actioncontroller::response","actioncontroller::response","activerecord::locking::pessimistic","activerecord::locking::optimistic::classmethods","activerecord::locking::optimistic::classmethods","activerecord::connectionadapters::abstractadapter","activesupport::cache::store","actioncontroller::rescue","actioncontroller::failsafe","activerecord::connectionadapters::abstractadapter","actioncontroller::base","actioncontroller::base","actioncontroller::base","activerecord::base","actioncontroller::paramsparser","activeresource::base","rails","railsfcgihandler","activesupport::timezone","i18n::backend::activerecord::implementation","i18n::backend::base","i18n::backend::cascade","i18n::backend::keyvalue::implementation","i18n::backend::memoize","i18n::backend::simple::implementation","mime::type","rails::generator::lookup::classmethods","mime::type","rails::generator::spec","i18n::backend::cldr","i18n::backend::cldr","i18n::backend::cldr","object","activesupport::cache","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","recursivehttpfetcher","activesupport::multibyte::chars","activerecord::reflection::macroreflection","actionview::helpers::urlhelper","actionmailer::base","actionmailer::base","actionmailer::base","memcache","actionview::testcase","rails::generator::options","rails::generator::options::classmethods","rails::generator::base","enumerable","i18n::locale::fallbacks","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","actioncontroller::resources","memcache::server","railsfcgihandler","activerecord::autosaveassociation","actionview::helpers::texthelper","activerecord::autosaveassociation","actioncontroller::session::cookiestore","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::session","activesupport::timewithzone","activesupport::timewithzone","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","html::selector","i18n::locale::tag::rfc4646::parser","activerecord::attributemethods::classmethods","actioncontroller::routing::optionalformatsegment","module","module","module","activerecord::calculations::classmethods","activesupport::coreextensions::string::multibyte","activesupport::coreextensions::string::multibyte","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::processtime","activesupport::testing::performance::metrics::time","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::base","actioncontroller::request","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::memoizable","activesupport::memoizable::instancemethods","activesupport::memoizable","i18n::backend::memoize","hashwithindifferentaccess","activerecord::base","activerecord::base","activerecord::base","activerecord::error","object","actioncontroller::request","kernel","object","actionview::helpers::urlhelper","actioncontroller::integration::runner","actioncontroller::reloader::bodywrapper","actioncontroller::stringcoercion::uglybody","actioncontroller::testprocess","actionview::helpers::atomfeedhelper::atombuilder","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::testcase","activerecord::base","activerecord::connectionadapters::tabledefinition","activerecord::migration","activerecord::namedscope::scope","activesupport::multibyte::chars","activesupport::stringinquirer","activesupport::timewithzone","builder::css","builder::xmlbase","mime::type","rails::generator::manifest","actionview::helpers::prototypehelper","actionview::template","activerecord::connectionadapters::column","activesupport::cache::strategy::localcache","rails::configuration","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activerecord::migration","activerecord::migrationproxy","rails::generator::commands::base","rails::generator::commands::base","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","activerecord::schema","actionview::template","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activerecord::calculations::classmethods","activesupport::coreextensions::time::calculations","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","i18n::backend::interpolationcompiler::compiler","fixtures","activesupport::coreextensions::module","actioncontroller::recordidentifier","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::float::time","logger","logger::formatter","actionview::reloadabletemplate","actionview::template","actioncontroller::integration::session","actioncontroller::integration::session","activesupport::coreextensions::integer::evenodd","activesupport::cache::store","i18n::gettext::helpers","activerecord::reflection::macroreflection","activesupport::testing::performance::metrics::base","tzinfo::timezone","actioncontroller::integration::session","actioncontroller::request","activerecord::namedscope::classmethods","rails::generator::source","actioncontroller::routing::routeset::mapper","i18n::backend::chain","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::connectionadapters::schemastatements","activerecord::autosaveassociation","actioncontroller::assertions::selectorassertions","actioncontroller::caching::actions::actioncachepath","actioncontroller::dispatcher","actioncontroller::failsafe","actioncontroller::http::headers","actioncontroller::integration::runner","actioncontroller::integration::session","actioncontroller::middlewarestack","actioncontroller::middlewarestack::middleware","actioncontroller::middlewarestack::middleware","actioncontroller::paramsparser","actioncontroller::reloader::bodywrapper","actioncontroller::response","actioncontroller::routing::optimisation::optimiser","actioncontroller::routing::optionalformatsegment","actioncontroller::session::abstractstore","actioncontroller::session::abstractstore::optionshash","actioncontroller::session::abstractstore::sessionhash","actioncontroller::session::cookiestore","actioncontroller::session::memcachestore","actioncontroller::stringcoercion","actioncontroller::stringcoercion::uglybody","actioncontroller::testcase","actioncontroller::testuploadedfile","actionview::base","actionview::base::proxymodule","actionview::helpers::atomfeedhelper::atombuilder","actionview::helpers::atomfeedhelper::atomfeedbuilder","actionview::reloadabletemplate","actionview::reloadabletemplate::reloadablepath","actionview::template","actionview::template::eagerpath","actionview::template::path","actionview::templatehandler","actionview::testcase::testcontroller","activerecord::attributeassignmenterror","activerecord::base","activerecord::connectionadapters::column","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::connectionmanagement","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter::version","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","activerecord::error","activerecord::multiparameterassignmenterrors","activerecord::namedscope::scope","activerecord::observer","activerecord::querycache","activerecord::recordinvalid","activerecord::reflection::macroreflection","activerecord::sessionstore::sqlbypass","activeresource::base","activeresource::connection","activeresource::request","activeresource::response","activeresource::sslerror","activeresource::sslerror","activeresource::timeouterror","activeresource::timeouterror","activesupport::backtracecleaner","activesupport::bufferedlogger","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::synchronizedmemorystore","activesupport::callbacks::callback","activesupport::deprecation::deprecatedobjectproxy","activesupport::inflector::inflections","activesupport::messageencryptor","activesupport::messageverifier","activesupport::modelname","activesupport::multibyte::chars","activesupport::multibyte::unicodedatabase","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","builder::css","builder::xmlbase","builder::xmlmarkup","cgi::cookie","commands::discover","commands::info","commands::install","commands::list","commands::plugin","commands::remove","commands::source","commands::sources","commands::unsource","commands::update","continuum::entry","fixtures","html::selector","hashwithindifferentaccess","i18n::backend::chain","i18n::backend::keyvalue::implementation","i18n::backend::transliterator::hashtransliterator","i18n::backend::transliterator::proctransliterator","i18n::invalidlocale","i18n::invalidpluralizationdata","i18n::locale::fallbacks","i18n::locale::tag::simple","i18n::missinginterpolationargument","i18n::missingtranslationdata","i18n::reservedinterpolationkey","i18n::unknownfiletype","keyerror","keyerror","logger::formatter","memcache","memcache::server","mime::type","plugin","rails::configuration","rails::generator::abstractgemsource","rails::generator::base","rails::generator::generatedattribute","rails::generator::manifest","rails::generator::namedbase","rails::generator::pathsource","rails::generator::source","rails::generator::spec","rails::initializer","rails::secretkeygenerator","railsenvironment","railsfcgihandler","recursivehttpfetcher","repositories","repository","sourceannotationextractor","tzinfo::timezone","tzinfo::timezoneperiod","activeresource::base","actionview::template::path","activesupport::messageencryptor","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::column","activeresource::connection","activerecord::base","activerecord::sessionstore::sqlbypass","activeresource::base","actionview::reloadabletemplate::reloadablepath","object","activerecord::connectionadapters::column","html::selector","rails::generator::commands::base","rails::generator::commands::base","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","html::selector","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","i18n::gettext::helpers","builder::css","builder::xmlbase","i18n::backend::interpolationcompiler::compiler","actioncontroller::httpauthentication::digest","enumerable","actioncontroller::response","memcache","activesupport::multibyte::chars","i18n::backend::gettext","actioncontroller::caching::actions::actioncachepath","actioncontroller::assertions::responseassertions","actioncontroller::layout::classmethods","i18n::backend::flatten","i18n::backend::flatten","i18n","i18n","actioncontroller::request","actioncontroller::routing","i18n::backend::gettext","i18n","i18n","i18n","actioncontroller::request","actioncontroller::flash::flashhash","activesupport::timezone","tzinfo::timezone","i18n::gettext::helpers","i18n::gettext::helpers","i18n::gettext::helpers","i18n::gettext::helpers","html::selector","activerecord::associations::classmethods","activerecord::connectionadapters::column","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","activerecord::base","activerecord::observer","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","activerecord::observer","activerecord::observer","activerecord::observer","activerecord::observing::classmethods","activerecord::observing::classmethods","activesupport::coreextensions::integer::evenodd","logger","logger","logger","logger","logger","logger","activerecord::errors","activeresource::errors","activerecord::errors","activeresource::errors","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","html::selector","actioncontroller::httpauthentication::digest","actioncontroller::integration::runner","activerecord::connectionadapters::abstractadapter","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activerecord::reflection::macroreflection","commands::discover","commands::info","commands::install","commands::list","commands::plugin","commands::remove","commands::source","commands::sources","commands::unsource","commands::update","rails::generator::options","actionview::helpers::prototypehelper","actionview::helpers::javascripthelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activerecord::connectionadapters::schemastatements","activesupport::coreextensions::string::conversions","activesupport::multibyte::chars","activerecord::associations::classmethods","activesupport::coreextensions::integer::inflections","activesupport::inflector","activeresource::custommethods","actioncontroller::uploadedfile","activesupport::testing::performance::benchmarker","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activesupport::coreextensions::range::overlaps","i18n::gettext::helpers","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::caching::pages::classmethods","actioncontroller::caching::pages::classmethods","actioncontroller::assertions::responseassertions","activesupport::coreextensions::string::inflections","activesupport::inflector","actioncontroller::request","actioncontroller::request","activesupport::coreextensions::module","i18n::locale::tag::parents","activesupport::coreextensions::module","activesupport::coreextensions::module","i18n::locale::tag::parents","activesupport::timezone","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogirisax","cgi::cookie","i18n::backend::gettext","mime::type","commands::discover","commands::info","commands::install","commands::list","commands::plugin","commands::plugin","commands::remove","commands::source","commands::sources","commands::unsource","commands::update","rails::generator::options","actionview::template","actioncontroller::paramsparser","activerecord::base","fixtures","i18n::locale::tag::rfc4646","i18n::locale::tag::rfc4646","actioncontroller::recordidentifier","actionview::helpers::recordidentificationhelper","activeresource::base","activeresource::base","activeresource::connection","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","actioncontroller::request","actionview::template","actioncontroller::caching::actions::actioncachepath","actioncontroller::request","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::template","actionview::template","actioncontroller::base","i18n","actionmailer::base","actionmailer::base","actionmailer::base","actioncontroller::base","activesupport::timewithzone","activesupport::timezone","tzinfo::timezone","activesupport::timezone","tzinfo::timezone","actionview::helpers::prototypehelper","tzinfo::timezone","actioncontroller::session::cookiestore","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","i18n::gettext::helpers","rails::initializer","repository","rails::configuration","activesupport::inflector::inflections","actioncontroller::recordidentifier","i18n::gettext","actionview::helpers::texthelper","activesupport::coreextensions::string::inflections","activesupport::inflector","i18n::backend::base","i18n::backend::metadata","i18n::backend::pluralization","activerecord::base","i18n::backend::pluralization","i18n::backend::pluralization","actioncontroller::polymorphicroutes","actioncontroller::polymorphicroutes","recursivehttpfetcher","actionview::helpers::urlhelper","actioncontroller::request","actioncontroller::request","actioncontroller::routing","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actioncontroller::request","actioncontroller::integration::session","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activeresource::base","activeresource::base","activeresource::base","activeresource::base","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","rails::initializer","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","actioncontroller::response","actioncontroller::session::abstractstore","actioncontroller::session::cookiestore","actioncontroller::testcase","rails::initializer","memcache","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","rails::generator::lookup::classmethods","actioncontroller::base","actioncontroller::base","object","object","i18n::backend::base","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::tabledefinition","fixtures","activerecord::base","activesupport::memoizable::instancemethods","actioncontroller::integration::session","actioncontroller::testprocess","rails::initializer","railsfcgihandler","railsfcgihandler","html::whitelistsanitizer","actioncontroller::base","railsfcgihandler","html::fullsanitizer","html::linksanitizer","html::sanitizer","html::whitelistsanitizer","railsfcgihandler","actionview::base","activesupport::testing::performance::metrics::base","actioncontroller::requestforgeryprotection","actionview::testcase","actioncontroller::requestforgeryprotection::classmethods","actioncontroller::request","activeresource::base","activeresource::base","activeresource::connection","activerecord::namedscope::scope","rails","rails","recursivehttpfetcher","actioncontroller::integration::session","actioncontroller::testprocess","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actioncontroller::request","actioncontroller::integration::session","actioncontroller::request","actioncontroller::request","activeresource::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","activerecord::connectionadapters::quoting","activerecord::base","activerecord::connectionadapters::quoting","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::quoting","activerecord::base","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::quoting","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","activerecord::locking::optimistic::classmethods","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::quoting","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::assettaghelper","plugin","rails::generator::commands::create","memcache","activerecord::sessionstore::session","i18n::backend::cldr","i18n::backend::cldr","activesupport::securerandom","activesupport::securerandom","actionview::helpers::rawoutputhelper","activesupport::cache::memcachestore","activerecord::connectionadapters::abstractadapter","actioncontroller::request","actioncontroller::request","actioncontroller::cgihandler::properstream","activesupport::cache::compressedmemcachestore","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","fixtures","fixtures","actioncontroller::caching::fragments","activesupport::cache::memcachestore","activesupport::cache::memorystore","fixtures","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activerecord::aggregations::classmethods","rails::generator::commands::base","rails::generator::commands::create","rails::generator::commands::list","activerecord::base","activerecord::base","memcache","activerecord::base","activesupport::cache::filestore","activerecord::attributemethods::classmethods","actionmailer::base","actioncontroller::assertions::routingassertions","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","rails::generator::base","rexml::document","actioncontroller::testresponse","actioncontroller::response","actioncontroller::integration::session","actioncontroller::base","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actioncontroller::base","actioncontroller::testprocess","rails::generator::generatedattribute","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activerecord::associations::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::associations::classmethods","activerecord::reflection::classmethods","actioncontroller::routing::optionalformatsegment","mime::type","mime::type","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::reloadabletemplate::reloadablepath","actionview::reloadabletemplate::reloadablepath","hashwithindifferentaccess","actionview::template","actionview::template::path","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::base","activerecord::namedscope::scope","activeresource::base","i18n","i18n::backend::base","i18n::backend::chain","i18n::backend::memoize","i18n::backend::simple::implementation","object","railsfcgihandler","actioncontroller::dispatcher","railsfcgihandler","rails::configuration","activerecord::autosaveassociation","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","actioncontroller::request","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::table","repositories","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::connectionadapters::connectionhandler","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","module","activerecord::base","activerecord::connectionadapters::table","activesupport::backtracecleaner","activerecord::connectionadapters::connectionpool","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::table","activerecord::connectionadapters::table","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::schemastatements","actioncontroller::base","actionmailer::base","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::templatehandler","actionview::testcase","rails::generator::commands::create","actionmailer::base","actioncontroller::rescue","actioncontroller::failsafe","actionview::template","rails::generator::commands::base","actioncontroller::base","activesupport::multibyte::chars","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","memcache","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activesupport::callbacks::callbackchain","rails::generator::manifest","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activeresource::connection","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::request","actioncontroller::base","actioncontroller::request","memcache","actioncontroller::request","actioncontroller::integration::session","actioncontroller::integration::session","activeresource::connection","activeresource::httpmock","activerecord::testfixtures::classmethods","rails::initializer","kernel","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::session::cookiestore","actioncontroller::rescue","actioncontroller::rescue","actioncontroller::testcase","actioncontroller::rescue","actioncontroller::rescue","actioncontroller::testcase::raiseactionexceptions","activesupport::rescuable::classmethods","activesupport::rescuable","actioncontroller::rescue","i18n::backend::interpolationcompiler::compiler","memcache","actioncontroller::integration::runner","actioncontroller::integration::session","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activeresource::httpmock","fixtures","actionview::reloadabletemplate","activerecord::base","activerecord::base","actionview::helpers::texthelper","activerecord::locking::optimistic::classmethods","i18n::backend::memoize","activerecord::connectionadapters::databasestatements","actioncontroller::base","actioncontroller::request","rails::generator::lookup::classmethods","activerecord::associations::hasonethroughassociation","actioncontroller::base","i18n::backend::base","i18n::backend::flatten","actioncontroller::resources","actioncontroller::resources","actioncontroller::mimeresponds::instancemethods","activeresource::httpmock","actioncontroller::reloader::bodywrapper","activerecord::base","activerecord::namedscope::scope","activeresource::base","activesupport::multibyte::chars","activesupport::timewithzone","cgi::cookie","activeresource::base","actioncontroller::rescue","actioncontroller::assertions::selectorassertions","actionview::testcase","activeresource::httpmock","railsfcgihandler","railsfcgihandler","railsfcgihandler","activerecord::base","activerecord::connectionadapters::connectionhandler","object","blankslate","activesupport::multibyte::chars","activesupport::coreextensions::hash::reversemerge","hashwithindifferentaccess","activesupport::coreextensions::hash::reversemerge","activerecord::base","activesupport::coreextensions::hash::reversemerge","rails::generator::manifest","actionview::helpers::assettaghelper","activesupport::timewithzone","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::transactions","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","actioncontroller::routing::routeset::mapper","rails","activesupport::coreextensions::float::rounding","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","actioncontroller::polymorphicroutes","activesupport::multibyte::chars","actioncontroller::reloader","activesupport::callbacks::callbackchain","activesupport::testing::performance","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","activesupport::testing::setupandteardown::forclassictestunit","activesupport::testing::setupandteardown::forminitest","rails::generator::scripts::base","rails::initializer","activesupport::callbacks","railsfcgihandler","activerecord::testfixtures","plugin","actioncontroller::dispatcher","activesupport::testing::performance","activesupport::testing::performance","plugin","activesupport::testing::performance","i18n::gettext::helpers","activerecord::base","activesupport::coreextensions::array::randomaccess","actionview::helpers::sanitizehelper","html::fullsanitizer","html::sanitizer","actionview::helpers::sanitizehelper","html::whitelistsanitizer","activerecord::connectionadapters::databasestatements","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","actionview::helpers::formtaghelper","html::linksanitizer","html::sanitizer","activerecord::base","activerecord::sessionstore::sqlbypass","activeresource::base","repositories","activerecord::base","activerecord::autosaveassociation","activerecord::autosaveassociation","activerecord::autosaveassociation","activerecord::validations","activeresource::validations","activerecord::validations","activerecord::migration","activerecord::migration","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::dynamicscopematch","actionview::helpers::translationhelper","activerecord::namedscope::classmethods","activerecord::namedscope::classmethods","commands::discover","activesupport::cache::filestore","activesupport::coreextensions::array::access","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::datetime::conversions","actioncontroller::httpauthentication::digest","cgi::cookie","activesupport::messageverifier","activesupport::messageverifier","actionview::helpers::formoptionshelper","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","html::selector","activerecord::connectionadapters::databasestatements","activerecord::associations::classmethods","activerecord::connectionadapters::querycache","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","html::selector","actionview::helpers::datehelper","activerecord::associations::classmethods","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actionview::helpers::datehelper","actionview::helpers::formtaghelper","actionview::helpers::datehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::databasestatements","actionview::helpers::datehelper","activerecord::associations::classmethods","i18n::locale::tag::parents","rails::generator::manifest","actioncontroller::streaming","actioncontroller::streaming","actioncontroller::streaming","actioncontroller::base","actioncontroller::response","activerecord::base","activerecord::base","actioncontroller::request","actioncontroller::request","memcache","actioncontroller::request","actioncontroller::sessionmanagement::classmethods","actioncontroller::testprocess","actioncontroller::sessionmanagement::classmethods","actioncontroller::base","actioncontroller::session::abstractstore::sessionhash","activerecord::sessionstore::sqlbypass","actioncontroller::request","actioncontroller::sessionmanagement::classmethods","actioncontroller::request","actioncontroller::sessionmanagement::classmethods","actioncontroller::sessionmanagement::classmethods","memcache","activerecord::associationpreload::classmethods","activerecord::associationpreload::classmethods","rails::initializer","dispatchservlet","i18n::backend::gettext::podata","actioncontroller::response","actioncontroller::response","actioncontroller::response","actionview::helpers::texthelper","activesupport::json","activerecord::testfixtures::classmethods","activerecord::base","rails::initializer","activerecord::locking::optimistic::classmethods","activerecord::base","rails::configuration","activerecord::base","actioncontroller::session::abstractstore","actioncontroller::session::memcachestore","activerecord::sessionstore","activerecord::connectionadapters::postgresqladapter","activerecord::base","actioncontroller::testcase","activerecord::testfixtures::classmethods","activerecord::testfixtures","activerecord::sessionstore::session","actionview::testcase","i18n::gettext::helpers","activesupport::callbacks::callback","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::connectionadapters::mysqladapter","actioncontroller::benchmarking::classmethods","activerecord::base","activesupport::backtracecleaner","activesupport::bufferedlogger","logger","activesupport::cache::store","kernel","kernel","activesupport::bufferedlogger","logger","actionview::helpers::texthelper","html::selector","activerecord::connectionadapters::column","activesupport::coreextensions::date::calculations","activesupport::coreextensions::datetime::calculations","activesupport::coreextensions::numeric::time","activesupport::coreextensions::time::calculations","activesupport::duration","activesupport::timewithzone","kernel","object","activesupport::inflector::inflections","actioncontroller::recordidentifier","activesupport::coreextensions::string::inflections","activesupport::inflector","activeresource::base","activeresource::base","activeresource::connection","activerecord::errors","activerecord::namedscope::scope","activeresource::errors","activesupport::multibyte::chars","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","actioncontroller::filters::classmethods","activesupport::coreextensions::hash::slice","activesupport::multibyte::chars","activesupport::coreextensions::hash::slice","activesupport::multibyte::chars","memcache::server","actionmailer::base","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","actionview::template","actioncontroller::routing::optimisation::optimiser","rails::generator::base","rails::generator::lookup::classmethods","actionview::template","activesupport::coreextensions::array::grouping","activesupport::multibyte::chars","commands::plugin","activeresource::base","activeresource::base","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::sqliteadapter","activesupport::coreextensions::string::filters","activesupport::coreextensions::string::filters","actioncontroller::request","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::base","actionview::reloadabletemplate","actioncontroller::session::abstractstore::sessionutils","actioncontroller::request","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::coreextensions::string::startsendswith","activesupport::cache::memcachestore","memcache","tzinfo::timezoneperiod","activesupport::coreextensions::range::blocklessstep","activesupport::coreextensions::range::blocklessstep","activerecord::base","actioncontroller::flash::flashhash","builder::css","i18n::backend::activerecord::missing","i18n::backend::activerecord::missing","i18n::backend::flatten","i18n::backend::activerecord::implementation","i18n::backend::base","i18n::backend::chain","i18n::backend::interpolationcompiler","i18n::backend::keyvalue::implementation","i18n::backend::memoize","i18n::backend::simple::implementation","activesupport::timewithzone","tzinfo::timezone","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activerecord::connectionadapters::column","activesupport::coreextensions::hash::keys","activesupport::coreextensions::hash::keys","hashwithindifferentaccess","activesupport::multibyte::chars","actionview::helpers::sanitizehelper","actioncontroller::base","actionview::helpers::sanitizehelper","actioncontroller::assertions::domassertions","activerecord::connectionadapters::schemastatements","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actioncontroller::request","actionview::helpers::formtaghelper","actionview::helpers::prototypehelper","i18n::locale::tag::simple","activeresource::response","activerecord::calculations::classmethods","enumerable","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::abstractadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::mysqladapter","kernel","activerecord::migration","plugin","plugin","actioncontroller::middlewarestack","activesupport::coreextensions::hash::keys","activesupport::coreextensions::hash::keys","hashwithindifferentaccess","actioncontroller::request","module","actioncontroller::translation","actionview::helpers::translationhelper","activerecord::connectionadapters::schemastatements","activerecord::connectionadapters::databaselimits","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::connectionadapters::schemastatements","activerecord::base","activerecord::sessionstore::sqlbypass","activerecord::connectionadapters::databaselimits","activerecord::base","activerecord::base","activerecord::connectionadapters::sqliteadapter","activesupport::coreextensions::string::inflections","activesupport::inflector","activerecord::connectionadapters::postgresqladapter","activerecord::associations::classmethods","activerecord::associations::classmethods","actionview::helpers::taghelper","i18n::locale::tag","i18n::locale::tag::rfc4646","i18n::locale::tag::simple","builder::xmlbase","actionview::helpers::taghelper","object","activesupport::deprecation::deprecatedobjectproxy","builder::css","builder::xmlmarkup","activerecord::testfixtures","actionview::base","rails::generator::commands::create","rails::generator::commands::destroy","rails::generator::commands::list","rails::generator::commands::update","actionview::reloadabletemplate::reloadablepath","actioncontroller::request","actionview::base","rails::generator::commands::base","actionmailer::base","actioncontroller::rescue","actioncontroller::base","actionmailer::base","actionmailer::base","actionmailer::base","actionmailer::base","actionview::reloadabletemplate::reloadablepath","actionview::template::eagerpath","activesupport::coreextensions::numeric::bytes","activesupport::coreextensions::numeric::bytes","activesupport::testing::declarative","actioncontroller::testcase","actionview::testcase","builder::xmlbase","builder::xmlevents","activerecord::connectionadapters::column","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::texthelper","actionview::helpers::texthelper","activesupport::coreextensions::array::access","activesupport::cache::strategy::localcache","rails::configuration","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::timewithzone","actionview::helpers::datehelper","actionview::helpers::datehelper","activesupport::coreextensions::time::calculations::classmethods","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activeresource::base","activeresource::base","activeresource::connection","fixtures","activerecord::base","activerecord::connectionadapters::table","activerecord::connectionadapters::tabledefinition","activesupport::coreextensions::string::inflections","activesupport::coreextensions::string::inflections","activesupport::inflector","activesupport::coreextensions::array::access","activesupport::timewithzone","i18n::locale::tag::rfc4646","i18n::locale::tag::simple","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::string::conversions","activesupport::coreextensions::time::conversions","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::string::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","activesupport::coreextensions::datetime::conversions","activesupport::timewithzone","activesupport::coreextensions::array::conversions","activesupport::coreextensions::bigdecimal::conversions","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::range::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","actioncontroller::session::abstractstore::sessionhash","activesupport::xmlmini_nokogiri::conversions::document","activesupport::xmlmini_nokogiri::conversions::node","hashwithindifferentaccess","libxml::conversions::document","libxml::conversions::node","activesupport::coreextensions::datetime::conversions","activesupport::timewithzone","activerecord::serialization","activesupport::json::variable","object","tzinfo::timezoneperiod","activesupport::coreextensions::hash::keys","activesupport::coreextensions::hash::keys","hashwithindifferentaccess","activerecord::base","activeresource::base","activesupport::coreextensions::array::conversions","object","object","actioncontroller::dispatcher","rails::configuration","activesupport::coreextensions::array::conversions","object","actioncontroller::routing::optionalformatsegment","actionview::template::path","activerecord::error","activeresource::request","activeresource::sslerror","activeresource::sslerror","activeresource::timeouterror","activeresource::timeouterror","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","cgi::cookie","i18n::locale::tag::rfc4646","i18n::locale::tag::simple","mime::type","plugin","sourceannotationextractor::annotation","tzinfo::timezone","activesupport::coreextensions::array::conversions","activerecord::connectionadapters::tabledefinition","actionview::template::path","mime::type","i18n::locale::tag::rfc4646","i18n::locale::tag::simple","mime::type","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::coreextensions::string::conversions","activesupport::coreextensions::time::conversions","activesupport::timewithzone","tzinfo::timezoneperiod","activesupport::coreextensions::numeric::conversions","activerecord::errors","activerecord::serialization","activeresource::base","activesupport::coreextensions::array::conversions","activesupport::coreextensions::bigdecimal::conversions","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::timewithzone","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","activerecord::base","activerecord::base","actionview::helpers::formtaghelper","html::sanitizer","html::whitelistsanitizer","i18n::backend::interpolationcompiler::compiler","activesupport::coreextensions::date::calculations","activesupport::coreextensions::date::calculations::classmethods","activesupport::coreextensions::time::calculations","activerecord::timestamp","activerecord::connectionadapters::databasestatements","activerecord::transactions","activerecord::transactions::classmethods","activerecord::connectionadapters::abstractadapter","activesupport::timewithzone","actioncontroller::translation","actionview::helpers::translationhelper","i18n","i18n::backend::activerecord::missing","i18n::backend::base","i18n::backend::cache","i18n::backend::chain","i18n::backend::fallbacks","i18n::backend::metadata","i18n","i18n::backend::metadata","i18n::backend::metadata","i18n::backend::simple::implementation","activesupport::inflector","activesupport::inflector","activesupport::inflector","i18n","i18n::backend::transliterator","i18n::backend::transliterator::hashtransliterator","i18n::backend::transliterator::proctransliterator","actionview::helpers::texthelper","object","activerecord::testfixtures::classmethods","activesupport::timewithzone","activerecord::connectionadapters::column","activerecord::base","activerecord::calculations::classmethods","activerecord::connectionadapters::column","activerecord::calculations::classmethods","activerecord::base","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::coreextensions::hash::classmethods","activesupport::multibyte::chars","activerecord::connectionadapters::querycache","activerecord::querycache::classmethods","activesupport::inflector::inflections","activerecord::base","actionview::reloadabletemplate","activesupport::coreextensions::string::inflections","activesupport::inflector","object","activerecord::connectionadapters::postgresqladapter","actioncontroller::assertions::selectorassertions","plugin","actioncontroller::session::cookiestore","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::memoizable::instancemethods","rexml::entity","actioncontroller::session::cookiestore","actionview::reloadabletemplate::reloadablepath","activesupport::coreextensions::hash::classmethods","activesupport::coreextensions::numeric::time","activesupport::duration","mime::type","activesupport::multibyte::chars","actioncontroller::session::abstractstore::sessionhash","activerecord::base","activerecord::base","activerecord::connectionadapters::databasestatements","activeresource::base","hashwithindifferentaccess","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::locking::optimistic::classmethods","actionview::helpers::prototypehelper","actionview::helpers::prototypehelper","activerecord::connectionadapters::databasestatements","activerecord::connectionadapters::postgresqladapter","activerecord::dirty","actionview::helpers::atomfeedhelper::atomfeedbuilder","actioncontroller::request","actioncontroller::base","actioncontroller::integration::session","actioncontroller::urlwriter","actionview::helpers::urlhelper","tzinfo::timezone","activesupport::timezone","tzinfo::timezone","rails::generator::options","rails::generator::base","rails::generator::options","rails::generator::scripts::base","actioncontroller::flash::flashhash","actioncontroller::middlewarestack","rails::generator::lookup::classmethods","railsenvironment","rails::generator::lookup::classmethods","actioncontroller::routing","railsenvironment","railsenvironment","activesupport::coreextensions::time::zones::classmethods","activesupport::timewithzone","activeresource::base","activeresource::base","activeresource::connection","dir","actioncontroller::httpauthentication::basic","activerecord::testfixtures::classmethods","activerecord::testfixtures::classmethods","activerecord::associations::classmethods","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","tzinfo::timezoneperiod","tzinfo::timezoneperiod","tzinfo::timezoneperiod","activesupport::coreextensions::datetime::calculations","activesupport::timewithzone","activesupport::timezone","tzinfo::timezoneperiod","tzinfo::timezoneperiod","activesupport::coreextensions::time::calculations::classmethods","activesupport::timezone","tzinfo::timezone","tzinfo::timezoneperiod","tzinfo::timezoneperiod","activerecord::validations","activeresource::validations","activerecord::connectionadapters::sqliteadapter","actionview::template","tzinfo::timezoneperiod","tzinfo::timezoneperiod","actionview::template","activerecord::validations","activerecord::calculations::classmethods","activerecord::autosaveassociation","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activerecord::validations","activerecord::validations","actioncontroller::base","activerecord::autosaveassociation","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::validations::classmethods","activerecord::error","i18n::backend::activerecord::translation","i18n::backend::activerecord::storeprocs","activerecord::connectionadapters::column","activerecord::connectionadapters::column","hashwithindifferentaccess","actioncontroller::requestforgeryprotection","activerecord::base","activerecord::base","actioncontroller::requestforgeryprotection","activesupport::messageencryptor","actioncontroller::session::cookiestore","actioncontroller::verification::classmethods","activesupport::messageverifier","activerecord::connectionadapters::abstractadapter","actioncontroller::requestforgeryprotection","mime::type","activerecord::connectionadapters::mysqladapter","rails","actioncontroller::base","actioncontroller::base","actioncontroller::base","actioncontroller::base","actionview::base","actionview::helpers::prototypehelper::javascriptgenerator::generatormethods","actionview::helpers::scriptaculoushelper","activesupport::multibyte::chars","activesupport::deprecation::deprecatedobjectproxy","activesupport::coreextensions::numeric::time","activesupport::coreextensions::numeric::time","activesupport::json","activesupport::xmlmini","activerecord::connectionadapters::connectionpool","actioncontroller::routing","activerecord::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::cache::strategy::localcache","i18n","i18n::backend::metadata","object","activesupport::testing::performance::benchmarker","actioncontroller::testprocess","activerecord::base","memcache","railsfcgihandler","memcache","actionview::base","activerecord::transactions","actionview::helpers::texthelper","activesupport::coreextensions::array::wrapper","actioncontroller::response","activerecord::migration","activesupport::cache::compressedmemcachestore","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache","activesupport::cache::synchronizedmemorystore","actionview::helpers::assettaghelper","activerecord::dirty","actioncontroller::caching::fragments","activerecord::aggregations::classmethods","fixnum","actioncontroller::integration::session","actioncontroller::testprocess","actioncontroller::request","actionview::helpers::atomfeedhelper::atombuilder","activerecord::connectionadapters::tabledefinition","activerecord::connectionadapters::tabledefinition","actioncontroller::integration::session","actioncontroller::testprocess","actioncontroller::request","activesupport::coreextensions::date::conversions","activesupport::coreextensions::datetime::conversions","activesupport::timewithzone","actionview::base","fixtures","fixtures","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::float::time","activesupport::coreextensions::integer::time","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::date::calculations","activesupport::coreextensions::time::calculations","activesupport::coreextensions::float::time","activesupport::coreextensions::date::calculations","activesupport::coreextensions::date::calculations::classmethods","activesupport::coreextensions::time::calculations","activesupport::coreextensions::time::zones::classmethods","activesupport::timewithzone","activesupport::coreextensions::time::zones::classmethods","tzinfo::timezoneperiod","activesupport::timezone","builder::css","files/actionmailer-2_3_14/changelog.html","files/actionmailer-2_3_14/readme.html","files/actionmailer-2_3_14/lib/action_mailer/base_rb.html","files/actionpack-2_3_14/changelog.html","files/actionpack-2_3_14/readme.html","files/actionpack-2_3_14/lib/action_controller/assertions/dom_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/model_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/response_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/routing_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/selector_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/assertions/tag_assertions_rb.html","files/actionpack-2_3_14/lib/action_controller/base_rb.html","files/actionpack-2_3_14/lib/action_controller/benchmarking_rb.html","files/actionpack-2_3_14/lib/action_controller/caching_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/actions_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/fragments_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/pages_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/sweeper_rb.html","files/actionpack-2_3_14/lib/action_controller/caching/sweeping_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext/cookie_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext/query_extension_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_ext/stdinput_rb.html","files/actionpack-2_3_14/lib/action_controller/cgi_process_rb.html","files/actionpack-2_3_14/lib/action_controller/cookies_rb.html","files/actionpack-2_3_14/lib/action_controller/dispatcher_rb.html","files/actionpack-2_3_14/lib/action_controller/failsafe_rb.html","files/actionpack-2_3_14/lib/action_controller/filters_rb.html","files/actionpack-2_3_14/lib/action_controller/flash_rb.html","files/actionpack-2_3_14/lib/action_controller/headers_rb.html","files/actionpack-2_3_14/lib/action_controller/helpers_rb.html","files/actionpack-2_3_14/lib/action_controller/http_authentication_rb.html","files/actionpack-2_3_14/lib/action_controller/integration_rb.html","files/actionpack-2_3_14/lib/action_controller/layout_rb.html","files/actionpack-2_3_14/lib/action_controller/middleware_stack_rb.html","files/actionpack-2_3_14/lib/action_controller/middlewares_rb.html","files/actionpack-2_3_14/lib/action_controller/mime_responds_rb.html","files/actionpack-2_3_14/lib/action_controller/mime_type_rb.html","files/actionpack-2_3_14/lib/action_controller/mime_types_rb.html","files/actionpack-2_3_14/lib/action_controller/params_parser_rb.html","files/actionpack-2_3_14/lib/action_controller/performance_test_rb.html","files/actionpack-2_3_14/lib/action_controller/polymorphic_routes_rb.html","files/actionpack-2_3_14/lib/action_controller/rack_lint_patch_rb.html","files/actionpack-2_3_14/lib/action_controller/record_identifier_rb.html","files/actionpack-2_3_14/lib/action_controller/reloader_rb.html","files/actionpack-2_3_14/lib/action_controller/request_rb.html","files/actionpack-2_3_14/lib/action_controller/request_forgery_protection_rb.html","files/actionpack-2_3_14/lib/action_controller/rescue_rb.html","files/actionpack-2_3_14/lib/action_controller/resources_rb.html","files/actionpack-2_3_14/lib/action_controller/response_rb.html","files/actionpack-2_3_14/lib/action_controller/routing_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/builder_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/optimisations_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/recognition_optimisation_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/route_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/route_set_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/routing_ext_rb.html","files/actionpack-2_3_14/lib/action_controller/routing/segments_rb.html","files/actionpack-2_3_14/lib/action_controller/session/abstract_store_rb.html","files/actionpack-2_3_14/lib/action_controller/session/cookie_store_rb.html","files/actionpack-2_3_14/lib/action_controller/session/mem_cache_store_rb.html","files/actionpack-2_3_14/lib/action_controller/session_management_rb.html","files/actionpack-2_3_14/lib/action_controller/status_codes_rb.html","files/actionpack-2_3_14/lib/action_controller/streaming_rb.html","files/actionpack-2_3_14/lib/action_controller/string_coercion_rb.html","files/actionpack-2_3_14/lib/action_controller/test_case_rb.html","files/actionpack-2_3_14/lib/action_controller/test_process_rb.html","files/actionpack-2_3_14/lib/action_controller/translation_rb.html","files/actionpack-2_3_14/lib/action_controller/uploaded_file_rb.html","files/actionpack-2_3_14/lib/action_controller/url_rewriter_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/document_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/node_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/sanitizer_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/selector_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/tokenizer_rb.html","files/actionpack-2_3_14/lib/action_controller/vendor/html-scanner/html/version_rb.html","files/actionpack-2_3_14/lib/action_controller/verification_rb.html","files/actionpack-2_3_14/lib/action_view/base_rb.html","files/actionpack-2_3_14/lib/action_view/helpers_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/active_record_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/asset_tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/atom_feed_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/benchmark_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/cache_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/capture_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/csrf_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/date_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/debug_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/form_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/form_options_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/form_tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/javascript_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/number_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/prototype_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/raw_output_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/record_identification_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/record_tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/sanitize_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/scriptaculous_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/tag_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/text_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/translation_helper_rb.html","files/actionpack-2_3_14/lib/action_view/helpers/url_helper_rb.html","files/actionpack-2_3_14/lib/action_view/inline_template_rb.html","files/actionpack-2_3_14/lib/action_view/partials_rb.html","files/actionpack-2_3_14/lib/action_view/paths_rb.html","files/actionpack-2_3_14/lib/action_view/reloadable_template_rb.html","files/actionpack-2_3_14/lib/action_view/renderable_rb.html","files/actionpack-2_3_14/lib/action_view/renderable_partial_rb.html","files/actionpack-2_3_14/lib/action_view/template_rb.html","files/actionpack-2_3_14/lib/action_view/template_error_rb.html","files/actionpack-2_3_14/lib/action_view/template_handler_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers/builder_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers/erb_rb.html","files/actionpack-2_3_14/lib/action_view/template_handlers/rjs_rb.html","files/actionpack-2_3_14/lib/action_view/test_case_rb.html","files/activerecord-2_3_14/changelog.html","files/activerecord-2_3_14/readme.html","files/activerecord-2_3_14/lib/active_record/aggregations_rb.html","files/activerecord-2_3_14/lib/active_record/association_preload_rb.html","files/activerecord-2_3_14/lib/active_record/associations_rb.html","files/activerecord-2_3_14/lib/active_record/associations/association_collection_rb.html","files/activerecord-2_3_14/lib/active_record/associations/association_proxy_rb.html","files/activerecord-2_3_14/lib/active_record/associations/belongs_to_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/belongs_to_polymorphic_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_and_belongs_to_many_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_many_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_many_through_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_one_association_rb.html","files/activerecord-2_3_14/lib/active_record/associations/has_one_through_association_rb.html","files/activerecord-2_3_14/lib/active_record/attribute_methods_rb.html","files/activerecord-2_3_14/lib/active_record/autosave_association_rb.html","files/activerecord-2_3_14/lib/active_record/base_rb.html","files/activerecord-2_3_14/lib/active_record/batches_rb.html","files/activerecord-2_3_14/lib/active_record/calculations_rb.html","files/activerecord-2_3_14/lib/active_record/callbacks_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/connection_pool_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/connection_specification_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/database_limits_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/database_statements_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/query_cache_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/quoting_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/schema_definitions_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract/schema_statements_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/abstract_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/mysql_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/postgresql_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/sqlite3_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/connection_adapters/sqlite_adapter_rb.html","files/activerecord-2_3_14/lib/active_record/dirty_rb.html","files/activerecord-2_3_14/lib/active_record/dynamic_finder_match_rb.html","files/activerecord-2_3_14/lib/active_record/dynamic_scope_match_rb.html","files/activerecord-2_3_14/lib/active_record/fixtures_rb.html","files/activerecord-2_3_14/lib/active_record/locking/optimistic_rb.html","files/activerecord-2_3_14/lib/active_record/locking/pessimistic_rb.html","files/activerecord-2_3_14/lib/active_record/migration_rb.html","files/activerecord-2_3_14/lib/active_record/named_scope_rb.html","files/activerecord-2_3_14/lib/active_record/nested_attributes_rb.html","files/activerecord-2_3_14/lib/active_record/observer_rb.html","files/activerecord-2_3_14/lib/active_record/query_cache_rb.html","files/activerecord-2_3_14/lib/active_record/reflection_rb.html","files/activerecord-2_3_14/lib/active_record/schema_rb.html","files/activerecord-2_3_14/lib/active_record/schema_dumper_rb.html","files/activerecord-2_3_14/lib/active_record/serialization_rb.html","files/activerecord-2_3_14/lib/active_record/serializers/json_serializer_rb.html","files/activerecord-2_3_14/lib/active_record/serializers/xml_serializer_rb.html","files/activerecord-2_3_14/lib/active_record/session_store_rb.html","files/activerecord-2_3_14/lib/active_record/test_case_rb.html","files/activerecord-2_3_14/lib/active_record/timestamp_rb.html","files/activerecord-2_3_14/lib/active_record/transactions_rb.html","files/activerecord-2_3_14/lib/active_record/validations_rb.html","files/activerecord-2_3_14/lib/active_record/version_rb.html","files/activeresource-2_3_14/changelog.html","files/activeresource-2_3_14/readme.html","files/activeresource-2_3_14/lib/active_resource_rb.html","files/activeresource-2_3_14/lib/active_resource/base_rb.html","files/activeresource-2_3_14/lib/active_resource/connection_rb.html","files/activeresource-2_3_14/lib/active_resource/custom_methods_rb.html","files/activeresource-2_3_14/lib/active_resource/exceptions_rb.html","files/activeresource-2_3_14/lib/active_resource/formats_rb.html","files/activeresource-2_3_14/lib/active_resource/formats/json_format_rb.html","files/activeresource-2_3_14/lib/active_resource/formats/xml_format_rb.html","files/activeresource-2_3_14/lib/active_resource/http_mock_rb.html","files/activeresource-2_3_14/lib/active_resource/validations_rb.html","files/activeresource-2_3_14/lib/active_resource/version_rb.html","files/activesupport-2_3_14/changelog.html","files/activesupport-2_3_14/readme.html","files/activesupport-2_3_14/lib/active_support/all_rb.html","files/activesupport-2_3_14/lib/active_support/backtrace_cleaner_rb.html","files/activesupport-2_3_14/lib/active_support/base64_rb.html","files/activesupport-2_3_14/lib/active_support/basic_object_rb.html","files/activesupport-2_3_14/lib/active_support/buffered_logger_rb.html","files/activesupport-2_3_14/lib/active_support/cache_rb.html","files/activesupport-2_3_14/lib/active_support/cache/compressed_mem_cache_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/drb_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/file_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/mem_cache_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/memory_store_rb.html","files/activesupport-2_3_14/lib/active_support/cache/strategy/local_cache_rb.html","files/activesupport-2_3_14/lib/active_support/cache/synchronized_memory_store_rb.html","files/activesupport-2_3_14/lib/active_support/callbacks_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/extract_options_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/grouping_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/random_access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/array/wrapper_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/base64_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/base64/encoding_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/benchmark_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/bigdecimal_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/bigdecimal/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/blank_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/cgi_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/cgi/escape_skipping_slashes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/attribute_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/attribute_accessors_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/delegating_attributes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/inheritable_attributes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/class/removal_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date/behavior_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date/calculations_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_time/calculations_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/date_time/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/duplicable_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/enumerable_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/exception_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/file_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/file/atomic_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/float_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/float/rounding_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/float/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/deep_merge_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/diff_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/except_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/indifferent_access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/keys_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/reverse_merge_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/hash/slice_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer/even_odd_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer/inflections_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/integer/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/agnostics_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/daemonizing_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/debugger_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/reporting_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/requires_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/kernel/singleton_class_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/load_error_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/logger_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/aliasing_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/attr_accessor_with_default_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/attr_internal_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/attribute_accessors_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/delegation_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/inclusion_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/introspection_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/loading_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/model_naming_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/remove_method_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/module/synchronization_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/name_error_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/bytes_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/numeric/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/blank_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/extending_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/instance_variables_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/metaclass_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/misc_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/object/singleton_class_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/pathname_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/pathname/clean_within_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/proc_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/process_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/process/daemon_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/blockless_step_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/include_range_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/range/overlaps_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/rexml_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/access_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/behavior_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/bytesize_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/filters_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/inflections_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/iterators_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/multibyte_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/output_safety_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/starts_ends_with_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/string/xchar_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/symbol_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/behavior_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/calculations_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/conversions_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/time/zones_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/try_rb.html","files/activesupport-2_3_14/lib/active_support/core_ext/uri_rb.html","files/activesupport-2_3_14/lib/active_support/dependencies_rb.html","files/activesupport-2_3_14/lib/active_support/deprecation_rb.html","files/activesupport-2_3_14/lib/active_support/duration_rb.html","files/activesupport-2_3_14/lib/active_support/gzip_rb.html","files/activesupport-2_3_14/lib/active_support/inflections_rb.html","files/activesupport-2_3_14/lib/active_support/inflector_rb.html","files/activesupport-2_3_14/lib/active_support/json_rb.html","files/activesupport-2_3_14/lib/active_support/json/backends/jsongem_rb.html","files/activesupport-2_3_14/lib/active_support/json/backends/yajl_rb.html","files/activesupport-2_3_14/lib/active_support/json/backends/yaml_rb.html","files/activesupport-2_3_14/lib/active_support/json/decoding_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/date_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/date_time_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/enumerable_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/false_class_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/hash_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/nil_class_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/numeric_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/object_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/regexp_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/string_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/symbol_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/time_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoders/true_class_rb.html","files/activesupport-2_3_14/lib/active_support/json/encoding_rb.html","files/activesupport-2_3_14/lib/active_support/json/variable_rb.html","files/activesupport-2_3_14/lib/active_support/memoizable_rb.html","files/activesupport-2_3_14/lib/active_support/message_encryptor_rb.html","files/activesupport-2_3_14/lib/active_support/message_verifier_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/chars_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/exceptions_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/unicode_database_rb.html","files/activesupport-2_3_14/lib/active_support/multibyte/utils_rb.html","files/activesupport-2_3_14/lib/active_support/option_merger_rb.html","files/activesupport-2_3_14/lib/active_support/ordered_hash_rb.html","files/activesupport-2_3_14/lib/active_support/ordered_options_rb.html","files/activesupport-2_3_14/lib/active_support/rescuable_rb.html","files/activesupport-2_3_14/lib/active_support/secure_random_rb.html","files/activesupport-2_3_14/lib/active_support/string_inquirer_rb.html","files/activesupport-2_3_14/lib/active_support/test_case_rb.html","files/activesupport-2_3_14/lib/active_support/testing/assertions_rb.html","files/activesupport-2_3_14/lib/active_support/testing/declarative_rb.html","files/activesupport-2_3_14/lib/active_support/testing/default_rb.html","files/activesupport-2_3_14/lib/active_support/testing/deprecation_rb.html","files/activesupport-2_3_14/lib/active_support/testing/performance_rb.html","files/activesupport-2_3_14/lib/active_support/testing/setup_and_teardown_rb.html","files/activesupport-2_3_14/lib/active_support/time_with_zone_rb.html","files/activesupport-2_3_14/lib/active_support/values/time_zone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/blankslate_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/blankslate_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/css_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xchar_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlbase_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlevents_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/builder-2_1_2/builder/xmlmarkup_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/missing_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/store_procs_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/active_record/translation_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/base_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cache_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cascade_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/chain_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/cldr_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/fallbacks_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/flatten_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/gettext_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/interpolation_compiler_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/key_value_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/memoize_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/metadata_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/pluralization_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/simple_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/backend/transliterator_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/config_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/core_ext/hash_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/core_ext/string/interpolate_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/exceptions_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext/helpers_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/gettext/po_parser_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/fallbacks_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/parents_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/rfc4646_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/locale/tag/simple_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/i18n-0_4_1/i18n/version_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/memcache-client-1_7_4/memcache_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/data_timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/data_timezone_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/algiers_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/cairo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/casablanca_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/harare_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/johannesburg_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/monrovia_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/africa/nairobi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/argentina/buenos_aires_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/argentina/san_juan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/bogota_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/caracas_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/chicago_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/chihuahua_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/denver_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/godthab_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/guatemala_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/halifax_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/indiana/indianapolis_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/juneau_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/la_paz_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/lima_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/los_angeles_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/mazatlan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/mexico_city_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/monterrey_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/new_york_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/phoenix_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/regina_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/santiago_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/sao_paulo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/st_johns_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/america/tijuana_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/almaty_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/baghdad_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/baku_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/bangkok_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/chongqing_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/colombo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/dhaka_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/hong_kong_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/irkutsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/jakarta_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/jerusalem_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/kabul_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/kamchatka_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/karachi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/katmandu_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/kolkata_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/krasnoyarsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/kuala_lumpur_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/kuwait_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/magadan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/muscat_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/novosibirsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/rangoon_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/riyadh_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/seoul_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/shanghai_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/singapore_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/taipei_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/tashkent_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/tbilisi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/tehran_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/tokyo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/ulaanbaatar_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/urumqi_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/vladivostok_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/yakutsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/yekaterinburg_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/asia/yerevan_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/atlantic/azores_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/atlantic/cape_verde_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/atlantic/south_georgia_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/adelaide_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/brisbane_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/darwin_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/hobart_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/melbourne_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/perth_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/australia/sydney_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/etc/utc_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/amsterdam_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/athens_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/belgrade_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/berlin_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/bratislava_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/brussels_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/bucharest_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/budapest_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/copenhagen_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/dublin_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/helsinki_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/istanbul_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/kiev_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/lisbon_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/ljubljana_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/london_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/madrid_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/minsk_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/moscow_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/paris_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/prague_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/riga_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/rome_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/sarajevo_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/skopje_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/sofia_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/stockholm_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/tallinn_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/vienna_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/vilnius_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/warsaw_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/europe/zagreb_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/auckland_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/fiji_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/guam_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/honolulu_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/majuro_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/midway_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/noumea_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/pago_pago_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/port_moresby_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/definitions/pacific/tongatapu_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/info_timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/linked_timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/linked_timezone_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/offset_rationals_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/ruby_core_support_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/time_or_datetime_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_definition_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_offset_info_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_period_rb.html","files/activesupport-2_3_14/lib/active_support/vendor/tzinfo-0_3_12/tzinfo/timezone_transition_info_rb.html","files/activesupport-2_3_14/lib/active_support/version_rb.html","files/activesupport-2_3_14/lib/active_support/whiny_nil_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/jdom_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/libxml_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/libxmlsax_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/nokogiri_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/nokogirisax_rb.html","files/activesupport-2_3_14/lib/active_support/xml_mini/rexml_rb.html","files/rails-2_3_14/changelog.html","files/rails-2_3_14/mit-license.html","files/rails-2_3_14/readme.html","files/rails-2_3_14/lib/code_statistics_rb.html","files/rails-2_3_14/lib/commands_rb.html","files/rails-2_3_14/lib/commands/about_rb.html","files/rails-2_3_14/lib/commands/console_rb.html","files/rails-2_3_14/lib/commands/dbconsole_rb.html","files/rails-2_3_14/lib/commands/destroy_rb.html","files/rails-2_3_14/lib/commands/generate_rb.html","files/rails-2_3_14/lib/commands/plugin_rb.html","files/rails-2_3_14/lib/commands/runner_rb.html","files/rails-2_3_14/lib/commands/server_rb.html","files/rails-2_3_14/lib/commands/update_rb.html","files/rails-2_3_14/lib/console_app_rb.html","files/rails-2_3_14/lib/console_sandbox_rb.html","files/rails-2_3_14/lib/console_with_helpers_rb.html","files/rails-2_3_14/lib/dispatcher_rb.html","files/rails-2_3_14/lib/fcgi_handler_rb.html","files/rails-2_3_14/lib/initializer_rb.html","files/rails-2_3_14/lib/performance_test_help_rb.html","files/rails-2_3_14/lib/rails_generator_rb.html","files/rails-2_3_14/lib/rails_generator/base_rb.html","files/rails-2_3_14/lib/rails_generator/commands_rb.html","files/rails-2_3_14/lib/rails_generator/generated_attribute_rb.html","files/rails-2_3_14/lib/rails_generator/lookup_rb.html","files/rails-2_3_14/lib/rails_generator/manifest_rb.html","files/rails-2_3_14/lib/rails_generator/options_rb.html","files/rails-2_3_14/lib/rails_generator/scripts_rb.html","files/rails-2_3_14/lib/rails_generator/secret_key_generator_rb.html","files/rails-2_3_14/lib/rails_generator/simple_logger_rb.html","files/rails-2_3_14/lib/rails_generator/spec_rb.html","files/rails-2_3_14/lib/railties_path_rb.html","files/rails-2_3_14/lib/ruby_version_check_rb.html","files/rails-2_3_14/lib/rubyprof_ext_rb.html","files/rails-2_3_14/lib/source_annotation_extractor_rb.html","files/rails-2_3_14/lib/test_help_rb.html","files/rails-2_3_14/lib/webrick_server_rb.html"]}}