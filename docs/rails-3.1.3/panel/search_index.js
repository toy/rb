var search_data = {"index":{"info":[["Base","ActionController","classes/ActionController/Base.html"," < Metal","Action Controllers are the core of a web request in \\Rails. They are made up of one or more actions that",1],["Caching","ActionController","classes/ActionController/Caching.html"," < ","\\Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings,",1],["Actions","ActionController::Caching","classes/ActionController/Caching/Actions.html"," < ","Action caching is similar to page caching by the fact that the entire output of the response is cached,",1],["ActionCachePath","ActionController::Caching::Actions","classes/ActionController/Caching/Actions/ActionCachePath.html"," < Object","",1],["ClassMethods","ActionController::Caching::Actions","classes/ActionController/Caching/Actions/ClassMethods.html"," < ","",1],["ConfigMethods","ActionController::Caching","classes/ActionController/Caching/ConfigMethods.html"," < ","",1],["Fragments","ActionController::Caching","classes/ActionController/Caching/Fragments.html"," < ","Fragment caching is used for caching various blocks within  views without caching the entire action as",1],["Pages","ActionController::Caching","classes/ActionController/Caching/Pages.html"," < ","Page caching is an approach to caching where the entire action output of is stored as a HTML file that",1],["ClassMethods","ActionController::Caching::Pages","classes/ActionController/Caching/Pages/ClassMethods.html"," < ","",1],["Sweeping","ActionController::Caching","classes/ActionController/Caching/Sweeping.html"," < ","Sweepers are the terminators of the caching world and responsible for expiring caches when model objects",1],["Compatibility","ActionController","classes/ActionController/Compatibility.html"," < ","",1],["ConditionalGet","ActionController","classes/ActionController/ConditionalGet.html"," < ","",1],["Cookies","ActionController","classes/ActionController/Cookies.html"," < ","",1],["DataStreaming","ActionController","classes/ActionController/DataStreaming.html"," < ","Methods for sending arbitrary data and for streaming files to the browser, instead of rendering. ",1],["Flash","ActionController","classes/ActionController/Flash.html"," < ","",1],["ForceSSL","ActionController","classes/ActionController/ForceSSL.html"," < ","This module provides a method which will redirects browser to use HTTPS protocol. This will ensure that",1],["ClassMethods","ActionController::ForceSSL","classes/ActionController/ForceSSL/ClassMethods.html"," < ","",1],["Head","ActionController","classes/ActionController/Head.html"," < ","",1],["Helpers","ActionController","classes/ActionController/Helpers.html"," < ","The \\Rails framework provides a large number of helpers for working with assets, dates, forms, numbers",1],["ClassMethods","ActionController::Helpers","classes/ActionController/Helpers/ClassMethods.html"," < ","",1],["HideActions","ActionController","classes/ActionController/HideActions.html"," < ","Adds the ability to prevent public methods on a controller to be called as actions. ",1],["ClassMethods","ActionController::HideActions","classes/ActionController/HideActions/ClassMethods.html"," < ","",1],["HttpAuthentication","ActionController","classes/ActionController/HttpAuthentication.html"," < ","",1],["Basic","ActionController::HttpAuthentication","classes/ActionController/HttpAuthentication/Basic.html"," < ","Makes it dead easy to do HTTP \\Basic and \\Digest authentication. === Simple \\Basic example class PostsController",1],["ControllerMethods","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html"," < ","",1],["ClassMethods","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html"," < ","",1],["Digest","ActionController::HttpAuthentication","classes/ActionController/HttpAuthentication/Digest.html"," < ","",1],["ControllerMethods","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html"," < ","",1],["Token","ActionController::HttpAuthentication","classes/ActionController/HttpAuthentication/Token.html"," < ","Makes it dead easy to do HTTP Token authentication. Simple Token example: class PostsController < ApplicationController",1],["ControllerMethods","ActionController::HttpAuthentication::Token","classes/ActionController/HttpAuthentication/Token/ControllerMethods.html"," < ","",1],["ImplicitRender","ActionController","classes/ActionController/ImplicitRender.html"," < ","",1],["Instrumentation","ActionController","classes/ActionController/Instrumentation.html"," < ","Adds instrumentation to several ends in ActionController::Base. It also provides some hooks related with",1],["ClassMethods","ActionController::Instrumentation","classes/ActionController/Instrumentation/ClassMethods.html"," < ","",1],["LogSubscriber","ActionController","classes/ActionController/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Metal","ActionController","classes/ActionController/Metal.html"," < AbstractController::Base","<tt>ActionController::Metal</tt> is the simplest possible controller, providing a valid Rack interface",1],["Middleware","ActionController","classes/ActionController/Middleware.html"," < Metal","",1],["ActionMiddleware","ActionController::Middleware","classes/ActionController/Middleware/ActionMiddleware.html"," < Object","",1],["MimeResponds","ActionController","classes/ActionController/MimeResponds.html"," < ","",1],["ClassMethods","ActionController::MimeResponds","classes/ActionController/MimeResponds/ClassMethods.html"," < ","",1],["ParamsWrapper","ActionController","classes/ActionController/ParamsWrapper.html"," < ","Wraps the parameters hash into a nested hash. This will allow clients to submit POST requests without",1],["ClassMethods","ActionController::ParamsWrapper","classes/ActionController/ParamsWrapper/ClassMethods.html"," < ","",1],["RackDelegation","ActionController","classes/ActionController/RackDelegation.html"," < ","",1],["Railtie","ActionController","classes/ActionController/Railtie.html"," < Rails::Railtie","",1],["Railties","ActionController","classes/ActionController/Railties.html"," < ","",1],["Paths","ActionController::Railties","classes/ActionController/Railties/Paths.html"," < ","",1],["RecordIdentifier","ActionController","classes/ActionController/RecordIdentifier.html"," < ","The record identifier encapsulates a number of naming conventions for dealing with records, like Active",1],["Redirecting","ActionController","classes/ActionController/Redirecting.html"," < ","",1],["Renderers","ActionController","classes/ActionController/Renderers.html"," < ","",1],["All","ActionController::Renderers","classes/ActionController/Renderers/All.html"," < ","",1],["ClassMethods","ActionController::Renderers","classes/ActionController/Renderers/ClassMethods.html"," < ","",1],["Rendering","ActionController","classes/ActionController/Rendering.html"," < ","",1],["RequestForgeryProtection","ActionController","classes/ActionController/RequestForgeryProtection.html"," < ","Controller actions are protected from Cross-Site Request Forgery (CSRF) attacks by including a token",1],["ClassMethods","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection/ClassMethods.html"," < ","",1],["Rescue","ActionController","classes/ActionController/Rescue.html"," < ","",1],["Responder","ActionController","classes/ActionController/Responder.html"," < Object","Responsible for exposing a resource to different mime requests, usually depending on the HTTP verb. The",1],["ClassMethods","ActionController::SessionManagement","classes/ActionController/SessionManagement/ClassMethods.html"," < ","",1],["Streaming","ActionController","classes/ActionController/Streaming.html"," < ","Allows views to be streamed back to the client as they are rendered. The default way Rails renders views",1],["ClassMethods","ActionController::Streaming","classes/ActionController/Streaming/ClassMethods.html"," < ","",1],["TemplateAssertions","ActionController","classes/ActionController/TemplateAssertions.html"," < ","",1],["TestCase","ActionController","classes/ActionController/TestCase.html"," < ActiveSupport::TestCase","Superclass for ActionController functional tests. Functional tests allow you to test a single controller",1],["Behavior","ActionController::TestCase","classes/ActionController/TestCase/Behavior.html"," < ","",1],["ClassMethods","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior/ClassMethods.html"," < ","",1],["RaiseActionExceptions","ActionController::TestCase","classes/ActionController/TestCase/RaiseActionExceptions.html"," < ","When the request.remote_addr remains the default for testing, which is 0.0.0.0, the exception is simply",1],["TestResponse","ActionController","classes/ActionController/TestResponse.html"," < ActionDispatch::TestResponse","",1],["Testing","ActionController","classes/ActionController/Testing.html"," < ","",1],["ClassMethods","ActionController::Testing","classes/ActionController/Testing/ClassMethods.html"," < ","",1],["UrlFor","ActionController","classes/ActionController/UrlFor.html"," < ","",1],["Base","ActionMailer","classes/ActionMailer/Base.html"," < AbstractController::Base","Action Mailer allows you to send email from your application using a mailer model and views. = Mailer",1],["Base","ActionView","classes/ActionView/Base.html"," < Object","= Action View Base Action View templates can be written in several ways. If the template file has a <tt>.erb</tt>",1],["Context","ActionView","classes/ActionView/Context.html"," < ","= Action View Context Action View contexts are supplied to Action Controller to render template. The",1],["FileSystemResolver","ActionView","classes/ActionView/FileSystemResolver.html"," < PathResolver","A resolver that loads files from the filesystem. It allows to set your own resolving pattern. Such pattern",1],["FixtureResolver","ActionView","classes/ActionView/FixtureResolver.html"," < PathResolver","Use FixtureResolver in your tests to simulate the presence of files on the file system. This is used",1],["ActiveModelHelper","ActionView::Helpers","classes/ActionView/Helpers/ActiveModelHelper.html"," < ","",1],["ActiveModelInstanceTag","ActionView::Helpers","classes/ActionView/Helpers/ActiveModelInstanceTag.html"," < ","",1],["AssetTagHelper","ActionView::Helpers","classes/ActionView/Helpers/AssetTagHelper.html"," < ","This module provides methods for generating HTML that links views to assets such as images, javascripts,",1],["AssetIncludeTag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html"," < Object","",1],["JavascriptIncludeTag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html"," < AssetIncludeTag","",1],["JavascriptTagHelpers","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html"," < ","",1],["ClassMethods","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers/ClassMethods.html"," < ","",1],["StylesheetIncludeTag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html"," < AssetIncludeTag","",1],["StylesheetTagHelpers","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html"," < ","",1],["ClassMethods","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers/ClassMethods.html"," < ","",1],["AtomFeedHelper","ActionView::Helpers","classes/ActionView/Helpers/AtomFeedHelper.html"," < ","",1],["AtomBuilder","ActionView::Helpers::AtomFeedHelper","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html"," < Object","",1],["AtomFeedBuilder","ActionView::Helpers::AtomFeedHelper","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html"," < AtomBuilder","",1],["CacheHelper","ActionView::Helpers","classes/ActionView/Helpers/CacheHelper.html"," < ","",1],["CaptureHelper","ActionView::Helpers","classes/ActionView/Helpers/CaptureHelper.html"," < ","CaptureHelper exposes methods to let you extract generated markup which can be used in other parts of",1],["CsrfHelper","ActionView::Helpers","classes/ActionView/Helpers/CsrfHelper.html"," < ","",1],["DateHelper","ActionView::Helpers","classes/ActionView/Helpers/DateHelper.html"," < ","= Action View Date Helpers The Date Helper primarily creates select/option tags for different kinds of",1],["DebugHelper","ActionView::Helpers","classes/ActionView/Helpers/DebugHelper.html"," < ","",1],["FormBuilder","ActionView::Helpers","classes/ActionView/Helpers/FormBuilder.html"," < Object","",1],["FormHelper","ActionView::Helpers","classes/ActionView/Helpers/FormHelper.html"," < ","Form helpers are designed to make working with resources much easier compared to using vanilla HTML.",1],["FormOptionsHelper","ActionView::Helpers","classes/ActionView/Helpers/FormOptionsHelper.html"," < ","Provides a number of methods for turning different kinds of containers into a set of option tags. ==",1],["FormTagHelper","ActionView::Helpers","classes/ActionView/Helpers/FormTagHelper.html"," < ","Provides a number of methods for creating form tags that doesn't rely on an Active Record object assigned",1],["JavaScriptHelper","ActionView::Helpers","classes/ActionView/Helpers/JavaScriptHelper.html"," < ","",1],["NumberHelper","ActionView::Helpers","classes/ActionView/Helpers/NumberHelper.html"," < ","Provides methods for converting numbers into formatted strings. Methods are provided for phone numbers,",1],["InvalidNumberError","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html"," < StandardError","Raised when argument +number+ param given to the helpers is invalid and the option :raise is set to ",1],["OutputSafetyHelper","ActionView::Helpers","classes/ActionView/Helpers/OutputSafetyHelper.html"," < ","",1],["RecordTagHelper","ActionView::Helpers","classes/ActionView/Helpers/RecordTagHelper.html"," < ","",1],["RenderingHelper","ActionView::Helpers","classes/ActionView/Helpers/RenderingHelper.html"," < ","= Action View Rendering Implements methods that allow rendering from a view context. In order to use",1],["SanitizeHelper","ActionView::Helpers","classes/ActionView/Helpers/SanitizeHelper.html"," < ","The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements. These",1],["TagHelper","ActionView::Helpers","classes/ActionView/Helpers/TagHelper.html"," < ","Provides methods to generate HTML tags programmatically when you can't use a Builder. By default, they",1],["TextHelper","ActionView::Helpers","classes/ActionView/Helpers/TextHelper.html"," < ","The TextHelper module provides a set of methods for filtering, formatting and transforming strings, which",1],["TranslationHelper","ActionView::Helpers","classes/ActionView/Helpers/TranslationHelper.html"," < ","",1],["UrlHelper","ActionView::Helpers","classes/ActionView/Helpers/UrlHelper.html"," < ","Provides a set of methods for making links and getting URLs that depend on the routing subsystem (see",1],["LogSubscriber","ActionView","classes/ActionView/LogSubscriber.html"," < ActiveSupport::LogSubscriber","= Action View Log Subscriber Provides functionality so that Rails can output logs from Action View. ",1],["Details","ActionView::LookupContext","classes/ActionView/LookupContext/Details.html"," < ","",1],["ViewPaths","ActionView::LookupContext","classes/ActionView/LookupContext/ViewPaths.html"," < ","",1],["NullResolver","ActionView","classes/ActionView/NullResolver.html"," < PathResolver","",1],["Railtie","ActionView","classes/ActionView/Railtie.html"," < Rails::Railtie","= Action View Railtie ",1],["Renderer","ActionView","classes/ActionView/Renderer.html"," < Object","This is the main entry point for rendering. It basically delegates to other objects like TemplateRenderer",1],["Resolver","ActionView","classes/ActionView/Resolver.html"," < Object","= Action View Resolver ",1],["Path","ActionView::Resolver","classes/ActionView/Resolver/Path.html"," < String","Keeps all information about view path and builds virtual path. ",1],["Template","ActionView","classes/ActionView/Template.html"," < Object","= Action View Template ",1],["Handler","ActionView::Template","classes/ActionView/Template/Handler.html"," < Object","",1],["Builder","ActionView::Template::Handlers","classes/ActionView/Template/Handlers/Builder.html"," < Object","",1],["Compilable","ActionView::Template::Handlers","classes/ActionView/Template/Handlers/Compilable.html"," < ","",1],["ClassMethods","ActionView::Template::Handlers::Compilable","classes/ActionView/Template/Handlers/Compilable/ClassMethods.html"," < ","",1],["ERB","ActionView::Template::Handlers","classes/ActionView/Template/Handlers/ERB.html"," < Object","",1],["Erubis","ActionView::Template::Handlers","classes/ActionView/Template/Handlers/Erubis.html"," < ::Erubis::Eruby","",1],["TestCase","ActionView","classes/ActionView/TestCase.html"," < ActiveSupport::TestCase","= Action View Test Case ",1],["Behavior","ActionView::TestCase","classes/ActionView/TestCase/Behavior.html"," < ","",1],["ClassMethods","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior/ClassMethods.html"," < ","",1],["Locals","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior/Locals.html"," < ","",1],["TestController","ActionView::TestCase","classes/ActionView/TestCase/TestController.html"," < ActionController::Base","",1],["AttributeMethods","ActiveModel","classes/ActiveModel/AttributeMethods.html"," < ","== Active Model Attribute Methods <tt>ActiveModel::AttributeMethods</tt> provides a way to add prefixes",1],["ClassMethods","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html"," < ","",1],["AttributeMethodMatcher","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html"," < Object","",1],["BlockValidator","ActiveModel","classes/ActiveModel/BlockValidator.html"," < EachValidator","+BlockValidator+ is a special +EachValidator+ which receives a block on initialization and call this",1],["Callbacks","ActiveModel","classes/ActiveModel/Callbacks.html"," < ","== Active Model Callbacks Provides an interface for any class to have Active Record like callbacks. Like",1],["Conversion","ActiveModel","classes/ActiveModel/Conversion.html"," < ","== Active Model Conversions Handles default conversions: to_model, to_key and to_param. Let's take for",1],["Dirty","ActiveModel","classes/ActiveModel/Dirty.html"," < ","== Active Model Dirty Provides a way to track changes in your object in the same way as Active Record",1],["EachValidator","ActiveModel","classes/ActiveModel/EachValidator.html"," < Validator","+EachValidator+ is a validator which iterates through the attributes given in the options hash invoking",1],["Errors","ActiveModel","classes/ActiveModel/Errors.html"," < Object","== Active Model Errors Provides a modified +OrderedHash+ that you can include in your object for handling",1],["Lint","ActiveModel","classes/ActiveModel/Lint.html"," < ","",1],["Tests","ActiveModel::Lint","classes/ActiveModel/Lint/Tests.html"," < ","== Active Model Lint Tests You can test whether an object is compliant with the Active Model API by including",1],["MassAssignmentSecurity","ActiveModel","classes/ActiveModel/MassAssignmentSecurity.html"," < ","= Active Model Mass-Assignment Security ",1],["BlackList","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity/BlackList.html"," < PermissionSet","",1],["ClassMethods","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html"," < ","Mass assignment security provides an interface for protecting attributes from end-user assignment. For",1],["PermissionSet","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html"," < Set","",1],["Sanitizer","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html"," < ","",1],["WhiteList","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity/WhiteList.html"," < PermissionSet","",1],["MissingAttributeError","ActiveModel","classes/ActiveModel/MissingAttributeError.html"," < NoMethodError","",1],["Name","ActiveModel","classes/ActiveModel/Name.html"," < String","",1],["Naming","ActiveModel","classes/ActiveModel/Naming.html"," < ","== Active Model Naming Creates a +model_name+ method on your object. To implement, just extend ActiveModel::Naming",1],["Observer","ActiveModel","classes/ActiveModel/Observer.html"," < Object","== Active Model Observers Observer classes respond to life cycle callbacks to implement trigger-like",1],["ObserverArray","ActiveModel","classes/ActiveModel/ObserverArray.html"," < Array","Stores the enabled/disabled state of individual observers for a particular model class. ",1],["Observing","ActiveModel","classes/ActiveModel/Observing.html"," < ","",1],["ClassMethods","ActiveModel::Observing","classes/ActiveModel/Observing/ClassMethods.html"," < ","",1],["SecurePassword","ActiveModel","classes/ActiveModel/SecurePassword.html"," < ","",1],["ClassMethods","ActiveModel::SecurePassword","classes/ActiveModel/SecurePassword/ClassMethods.html"," < ","",1],["InstanceMethodsOnActivation","ActiveModel::SecurePassword","classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html"," < ","",1],["Serialization","ActiveModel","classes/ActiveModel/Serialization.html"," < ","== Active Model Serialization Provides a basic serialization to a serializable_hash for your object.",1],["Serializers","ActiveModel","classes/ActiveModel/Serializers.html"," < ","== Active Model JSON Serializer --- == Active Model XML Serializer ",1],["JSON","ActiveModel::Serializers","classes/ActiveModel/Serializers/JSON.html"," < ","",1],["Xml","ActiveModel::Serializers","classes/ActiveModel/Serializers/Xml.html"," < ","",1],["Translation","ActiveModel","classes/ActiveModel/Translation.html"," < ","== Active Model Translation Provides integration between your object and the Rails internationalization",1],["Validations","ActiveModel","classes/ActiveModel/Validations.html"," < ","== Active Model Acceptance Validator --- == Active Model Confirmation Validator --- == Active Model Exclusion",1],["AcceptanceValidator","ActiveModel::Validations","classes/ActiveModel/Validations/AcceptanceValidator.html"," < EachValidator","",1],["Callbacks","ActiveModel::Validations","classes/ActiveModel/Validations/Callbacks.html"," < ","",1],["ClassMethods","ActiveModel::Validations::Callbacks","classes/ActiveModel/Validations/Callbacks/ClassMethods.html"," < ","",1],["ClassMethods","ActiveModel::Validations","classes/ActiveModel/Validations/ClassMethods.html"," < ","",1],["ConfirmationValidator","ActiveModel::Validations","classes/ActiveModel/Validations/ConfirmationValidator.html"," < EachValidator","",1],["ExclusionValidator","ActiveModel::Validations","classes/ActiveModel/Validations/ExclusionValidator.html"," < EachValidator","",1],["FormatValidator","ActiveModel::Validations","classes/ActiveModel/Validations/FormatValidator.html"," < EachValidator","",1],["HelperMethods","ActiveModel::Validations","classes/ActiveModel/Validations/HelperMethods.html"," < ","",1],["InclusionValidator","ActiveModel::Validations","classes/ActiveModel/Validations/InclusionValidator.html"," < EachValidator","",1],["LengthValidator","ActiveModel::Validations","classes/ActiveModel/Validations/LengthValidator.html"," < EachValidator","",1],["NumericalityValidator","ActiveModel::Validations","classes/ActiveModel/Validations/NumericalityValidator.html"," < EachValidator","",1],["PresenceValidator","ActiveModel::Validations","classes/ActiveModel/Validations/PresenceValidator.html"," < EachValidator","",1],["WithValidator","ActiveModel::Validations","classes/ActiveModel/Validations/WithValidator.html"," < EachValidator","",1],["Validator","ActiveModel","classes/ActiveModel/Validator.html"," < Object","== Active Model Validator A simple base class that can be used along with ActiveModel::Validations::ClassMethods.validates_with",1],["ActiveRecordError","ActiveRecord","classes/ActiveRecord/ActiveRecordError.html"," < StandardError","= Active Record Errors Generic Active Record exception class. ",1],["AdapterNotFound","ActiveRecord","classes/ActiveRecord/AdapterNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find database adapter specified in <tt>config/database.yml</tt> or programmatically.",1],["AdapterNotSpecified","ActiveRecord","classes/ActiveRecord/AdapterNotSpecified.html"," < ActiveRecordError","Raised when adapter not specified on connection (or configuration file <tt>config/database.yml</tt> misses",1],["ClassMethods","ActiveRecord::Aggregations","classes/ActiveRecord/Aggregations/ClassMethods.html"," < ","Active Record implements aggregation through a macro-like class method called +composed_of+ for representing",1],["AssociationTypeMismatch","ActiveRecord","classes/ActiveRecord/AssociationTypeMismatch.html"," < ActiveRecordError","Raised when an object assigned to an association has an incorrect type. class Ticket < ActiveRecord::Base",1],["ClassMethods","ActiveRecord::Associations","classes/ActiveRecord/Associations/ClassMethods.html"," < ","Associations are a set of macro-like class methods for tying objects together through foreign keys. They",1],["AttributeAssignmentError","ActiveRecord","classes/ActiveRecord/AttributeAssignmentError.html"," < ActiveRecordError","Raised when an error occurred while doing a mass assignment to an attribute through the <tt>attributes=</tt>",1],["BeforeTypeCast","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html"," < ","",1],["Dirty","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/Dirty.html"," < ","",1],["PrimaryKey","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/PrimaryKey.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::PrimaryKey","classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html"," < ","",1],["Query","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/Query.html"," < ","",1],["Read","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/Read.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::Read","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html"," < ","",1],["TimeZoneConversion","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/TimeZoneConversion.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::TimeZoneConversion","classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html"," < ","",1],["Write","ActiveRecord::AttributeMethods","classes/ActiveRecord/AttributeMethods/Write.html"," < ","",1],["ClassMethods","ActiveRecord::AttributeMethods::Write","classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html"," < ","",1],["AutosaveAssociation","ActiveRecord","classes/ActiveRecord/AutosaveAssociation.html"," < ","= Active Record Autosave Association +AutosaveAssociation+ is a module that takes care of automatically",1],["ClassMethods","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation/ClassMethods.html"," < ","",1],["Base","ActiveRecord","classes/ActiveRecord/Base.html"," < Object","= Active Record Active Record objects don't specify their attributes directly, but rather infer them",1],["Batches","ActiveRecord","classes/ActiveRecord/Batches.html"," < ","",1],["Calculations","ActiveRecord","classes/ActiveRecord/Calculations.html"," < ","",1],["Callbacks","ActiveRecord","classes/ActiveRecord/Callbacks.html"," < ","= Active Record Callbacks Callbacks are hooks into the life cycle of an Active Record object that allow",1],["ConfigurationError","ActiveRecord","classes/ActiveRecord/ConfigurationError.html"," < ActiveRecordError","Raised when association is being configured improperly or user tries to use offset and limit together",1],["MysqlAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html"," < AbstractAdapter","The MySQL adapter will work with both Ruby/MySQL, which is a Ruby-based MySQL adapter that comes bundled",1],["StatementPool","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html"," < ConnectionAdapters::StatementPool","",1],["PostgreSQLAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html"," < AbstractAdapter","The PostgreSQL adapter works both with the native C (http://ruby.scripting.ca/postgres/) and the pure",1],["StatementPool","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html"," < ConnectionAdapters::StatementPool","",1],["TableDefinition","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html"," < ActiveRecord::ConnectionAdapters::TableDefinition","",1],["PostgreSQLColumn","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html"," < Column","PostgreSQL-specific extensions to column definitions in a table. ",1],["SQLiteAdapter","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html"," < AbstractAdapter","The SQLite adapter works with both the 2.x and 3.x series of SQLite with the sqlite-ruby drivers (available",1],["StatementPool","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html"," < ConnectionAdapters::StatementPool","",1],["Version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html"," < Object","",1],["StatementPool","ActiveRecord::ConnectionAdapters","classes/ActiveRecord/ConnectionAdapters/StatementPool.html"," < Object","",1],["ConnectionNotEstablished","ActiveRecord","classes/ActiveRecord/ConnectionNotEstablished.html"," < ActiveRecordError","Raised when connection to the database could not been established (for example when <tt>connection=</tt>",1],["CounterCache","ActiveRecord","classes/ActiveRecord/CounterCache.html"," < ","= Active Record Counter Cache ",1],["DangerousAttributeError","ActiveRecord","classes/ActiveRecord/DangerousAttributeError.html"," < ActiveRecordError","Raised when attribute has a name reserved by Active Record (when attribute has name of one of Active",1],["DynamicFinderMatch","ActiveRecord","classes/ActiveRecord/DynamicFinderMatch.html"," < Object","= Active Record Dynamic Finder Match Refer to ActiveRecord::Base documentation for Dynamic attribute-based",1],["DynamicScopeMatch","ActiveRecord","classes/ActiveRecord/DynamicScopeMatch.html"," < Object","= Active Record Dynamic Scope Match Provides dynamic attribute-based scopes such as <tt>scoped_by_price(4.99)</tt>",1],["FinderMethods","ActiveRecord","classes/ActiveRecord/FinderMethods.html"," < ","",1],["Fixtures","ActiveRecord","classes/ActiveRecord/Fixtures.html"," < Object","\\Fixtures are a way of organizing data that you want to test against; in short, sample data. They are",1],["HasManyThroughNestedAssociationsAreReadonly","ActiveRecord","classes/ActiveRecord/HasManyThroughNestedAssociationsAreReadonly.html"," < ActiveRecordError","",1],["IdentityMap","ActiveRecord","classes/ActiveRecord/IdentityMap.html"," < ","= Active Record Identity Map Ensures that each object gets loaded only once by keeping every loaded object",1],["Middleware","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap/Middleware.html"," < Object","",1],["InvalidForeignKey","ActiveRecord","classes/ActiveRecord/InvalidForeignKey.html"," < WrappedDatabaseException","Raised when a record cannot be inserted or updated because it references a non-existent record. ",1],["IrreversibleMigration","ActiveRecord","classes/ActiveRecord/IrreversibleMigration.html"," < ActiveRecordError","Exception that can be raised to stop migrations from going backwards. ",1],["Locking","ActiveRecord","classes/ActiveRecord/Locking.html"," < ","",1],["Optimistic","ActiveRecord::Locking","classes/ActiveRecord/Locking/Optimistic.html"," < ","== What is Optimistic Locking Optimistic locking allows multiple users to access the same record for",1],["ClassMethods","ActiveRecord::Locking::Optimistic","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html"," < ","",1],["Pessimistic","ActiveRecord::Locking","classes/ActiveRecord/Locking/Pessimistic.html"," < ","Locking::Pessimistic provides support for row-level locking using SELECT ... FOR UPDATE and other lock",1],["LogSubscriber","ActiveRecord","classes/ActiveRecord/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["Migration","ActiveRecord","classes/ActiveRecord/Migration.html"," < Object","= Active Record Migrations Migrations can manage the evolution of a schema used by several physical databases.",1],["CommandRecorder","ActiveRecord::Migration","classes/ActiveRecord/Migration/CommandRecorder.html"," < Object","ActiveRecord::Migration::CommandRecorder records commands done during a migration and knows how to reverse",1],["MigrationProxy","ActiveRecord","classes/ActiveRecord/MigrationProxy.html"," < Struct.new(:name, :version, :filename)","MigrationProxy is used to defer loading of the actual migration classes until they are needed ",1],["MultiparameterAssignmentErrors","ActiveRecord","classes/ActiveRecord/MultiparameterAssignmentErrors.html"," < ActiveRecordError","Raised when there are multiple errors while doing a mass assignment through the +attributes+ method.",1],["Mysql2Adapter","ActiveRecord","classes/ActiveRecord/Mysql2Adapter.html"," < AbstractAdapter","",1],["NamedScope","ActiveRecord","classes/ActiveRecord/NamedScope.html"," < ","= Active Record Named \\Scopes ",1],["ClassMethods","ActiveRecord::NamedScope","classes/ActiveRecord/NamedScope/ClassMethods.html"," < ","",1],["ClassMethods","ActiveRecord::NestedAttributes","classes/ActiveRecord/NestedAttributes/ClassMethods.html"," < ","= Active Record Nested Attributes Nested attributes allow you to save attributes on associated records",1],["TooManyRecords","ActiveRecord::NestedAttributes","classes/ActiveRecord/NestedAttributes/TooManyRecords.html"," < ActiveRecordError","",1],["Observer","ActiveRecord","classes/ActiveRecord/Observer.html"," < ActiveModel::Observer","= Active Record Observer Observer classes respond to life cycle callbacks to implement trigger-like behavior",1],["Persistence","ActiveRecord","classes/ActiveRecord/Persistence.html"," < ","= Active Record Persistence ",1],["PreparedStatementInvalid","ActiveRecord","classes/ActiveRecord/PreparedStatementInvalid.html"," < ActiveRecordError","Raised when number of bind variables in statement given to <tt>:condition</tt> key (for example, when",1],["QueryCache","ActiveRecord","classes/ActiveRecord/QueryCache.html"," < Object","= Active Record Query Cache ",1],["ClassMethods","ActiveRecord::QueryCache","classes/ActiveRecord/QueryCache/ClassMethods.html"," < ","",1],["QueryMethods","ActiveRecord","classes/ActiveRecord/QueryMethods.html"," < ","",1],["Railtie","ActiveRecord","classes/ActiveRecord/Railtie.html"," < Rails::Railtie","= Active Record Railtie ",1],["Railties","ActiveRecord","classes/ActiveRecord/Railties.html"," < ","",1],["ClassMethods","ActiveRecord::Railties::ControllerRuntime","classes/ActiveRecord/Railties/ControllerRuntime/ClassMethods.html"," < ","",1],["ReadOnlyRecord","ActiveRecord","classes/ActiveRecord/ReadOnlyRecord.html"," < ActiveRecordError","Raised on attempt to update record that is instantiated as read only. ",1],["RecordInvalid","ActiveRecord","classes/ActiveRecord/RecordInvalid.html"," < ActiveRecordError","= Active Record RecordInvalid Raised by <tt>save!</tt> and <tt>create!</tt> when the record is invalid.",1],["RecordNotFound","ActiveRecord","classes/ActiveRecord/RecordNotFound.html"," < ActiveRecordError","Raised when Active Record cannot find record by given id or set of ids. ",1],["RecordNotSaved","ActiveRecord","classes/ActiveRecord/RecordNotSaved.html"," < ActiveRecordError","Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods when record cannot be saved",1],["RecordNotUnique","ActiveRecord","classes/ActiveRecord/RecordNotUnique.html"," < WrappedDatabaseException","Raised when a record cannot be inserted because it would violate a uniqueness constraint. ",1],["ClassMethods","ActiveRecord::Reflection","classes/ActiveRecord/Reflection/ClassMethods.html"," < ","Reflection enables to interrogate Active Record classes and objects about their associations and aggregations.",1],["MacroReflection","ActiveRecord::Reflection","classes/ActiveRecord/Reflection/MacroReflection.html"," < Object","Abstract base class for AggregateReflection and AssociationReflection. Objects of AggregateReflection",1],["Relation","ActiveRecord","classes/ActiveRecord/Relation.html"," < Object","= Active Record Relation ",1],["Result","ActiveRecord","classes/ActiveRecord/Result.html"," < Object","This class encapsulates a Result returned from calling +exec_query+ on any database connection adapter.",1],["Rollback","ActiveRecord","classes/ActiveRecord/Rollback.html"," < ActiveRecordError","ActiveRecord::Transactions::ClassMethods.transaction uses this exception to distinguish a deliberate",1],["Schema","ActiveRecord","classes/ActiveRecord/Schema.html"," < Migration","= Active Record Schema Allows programmers to programmatically define a schema in a portable DSL. This",1],["Serialization","ActiveRecord","classes/ActiveRecord/Serialization.html"," < ","= Active Record Serialization ",1],["SerializationTypeMismatch","ActiveRecord","classes/ActiveRecord/SerializationTypeMismatch.html"," < ActiveRecordError","Raised when unserialized object's type mismatches one specified for serializable field. ",1],["SessionStore","ActiveRecord","classes/ActiveRecord/SessionStore.html"," < ActionDispatch::Session::AbstractStore","= Active Record Session Store A session store backed by an Active Record class.  A default class is provided,",1],["Session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore/Session.html"," < ActiveRecord::Base","The default Active Record class. ",1],["SqlBypass","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore/SqlBypass.html"," < Object","A barebones session store which duck-types with the default session store but bypasses Active Record",1],["SpawnMethods","ActiveRecord","classes/ActiveRecord/SpawnMethods.html"," < ","",1],["StaleObjectError","ActiveRecord","classes/ActiveRecord/StaleObjectError.html"," < ActiveRecordError","Raised on attempt to save stale record. Record is stale when it's being saved in another query after",1],["StatementInvalid","ActiveRecord","classes/ActiveRecord/StatementInvalid.html"," < ActiveRecordError","Raised when SQL statement cannot be executed by the database (for example, it's often the case for MySQL",1],["TestFixtures","ActiveRecord","classes/ActiveRecord/TestFixtures.html"," < ","",1],["ClassMethods","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures/ClassMethods.html"," < ","",1],["ThrowResult","ActiveRecord","classes/ActiveRecord/ThrowResult.html"," < ActiveRecordError","Raised when SQL statement is invalid and the application gets a blank result. ",1],["Timestamp","ActiveRecord","classes/ActiveRecord/Timestamp.html"," < ","= Active Record Timestamp Active Record automatically timestamps create and update operations if the",1],["Transactions","ActiveRecord","classes/ActiveRecord/Transactions.html"," < ","See ActiveRecord::Transactions::ClassMethods for documentation. ",1],["ClassMethods","ActiveRecord::Transactions","classes/ActiveRecord/Transactions/ClassMethods.html"," < ","= Active Record Transactions Transactions are protective blocks where SQL statements are only permanent",1],["UnknownAttributeError","ActiveRecord","classes/ActiveRecord/UnknownAttributeError.html"," < NoMethodError","Raised when unknown attributes are supplied via mass assignment. ",1],["UnknownPrimaryKey","ActiveRecord","classes/ActiveRecord/UnknownPrimaryKey.html"," < ActiveRecordError","Raised when a primary key is needed, but there is not one specified in the schema or model. ",1],["Validations","ActiveRecord","classes/ActiveRecord/Validations.html"," < ","= Active Record Validations Active Record includes the majority of its validations from <tt>ActiveModel::Validations</tt>",1],["AssociatedValidator","ActiveRecord::Validations","classes/ActiveRecord/Validations/AssociatedValidator.html"," < ActiveModel::EachValidator","",1],["ClassMethods","ActiveRecord::Validations","classes/ActiveRecord/Validations/ClassMethods.html"," < ","",1],["UniquenessValidator","ActiveRecord::Validations","classes/ActiveRecord/Validations/UniquenessValidator.html"," < ActiveModel::EachValidator","",1],["WrappedDatabaseException","ActiveRecord","classes/ActiveRecord/WrappedDatabaseException.html"," < StatementInvalid","Parent class for all specific exceptions which wrap database driver exceptions provides access to the",1],["BadRequest","ActiveResource","classes/ActiveResource/BadRequest.html"," < ClientError","400 Bad Request ",1],["Base","ActiveResource","classes/ActiveResource/Base.html"," < Object","ActiveResource::Base is the main class for mapping RESTful resources as models in a Rails application.",1],["ClientError","ActiveResource","classes/ActiveResource/ClientError.html"," < ConnectionError","4xx Client Error ",1],["Connection","ActiveResource","classes/ActiveResource/Connection.html"," < Object","Class to handle connections to remote web services. This class is used by ActiveResource::Base to interface",1],["CustomMethods","ActiveResource","classes/ActiveResource/CustomMethods.html"," < ","A module to support custom REST methods and sub-resources, allowing you to break out of the \"default\"",1],["ClassMethods","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods/ClassMethods.html"," < ","",1],["InstanceMethods","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html"," < ","",1],["Errors","ActiveResource","classes/ActiveResource/Errors.html"," < ActiveModel::Errors","Active Resource validation is reported to and from this object, which is used by Base#save to determine",1],["ForbiddenAccess","ActiveResource","classes/ActiveResource/ForbiddenAccess.html"," < ClientError","403 Forbidden ",1],["Formats","ActiveResource","classes/ActiveResource/Formats.html"," < ","",1],["JsonFormat","ActiveResource::Formats","classes/ActiveResource/Formats/JsonFormat.html"," < ","",1],["XmlFormat","ActiveResource::Formats","classes/ActiveResource/Formats/XmlFormat.html"," < ","",1],["HttpMock","ActiveResource","classes/ActiveResource/HttpMock.html"," < Object","One thing that has always been a pain with remote web services is testing.  The HttpMock class makes",1],["InvalidRequestError","ActiveResource","classes/ActiveResource/InvalidRequestError.html"," < StandardError","",1],["LogSubscriber","ActiveResource","classes/ActiveResource/LogSubscriber.html"," < ActiveSupport::LogSubscriber","",1],["MissingPrefixParam","ActiveResource","classes/ActiveResource/MissingPrefixParam.html"," < ArgumentError","Raised when ... ",1],["Observing","ActiveResource","classes/ActiveResource/Observing.html"," < ","",1],["Railtie","ActiveResource","classes/ActiveResource/Railtie.html"," < Rails::Railtie","",1],["Request","ActiveResource","classes/ActiveResource/Request.html"," < Object","",1],["ResourceConflict","ActiveResource","classes/ActiveResource/ResourceConflict.html"," < ClientError","409 Conflict ",1],["ResourceGone","ActiveResource","classes/ActiveResource/ResourceGone.html"," < ClientError","410 Gone ",1],["ResourceNotFound","ActiveResource","classes/ActiveResource/ResourceNotFound.html"," < ClientError","404 Not Found ",1],["Response","ActiveResource","classes/ActiveResource/Response.html"," < Object","",1],["SSLError","ActiveResource","classes/ActiveResource/SSLError.html"," < ConnectionError","Raised when a OpenSSL::SSL::SSLError occurs. ",1],["ServerError","ActiveResource","classes/ActiveResource/ServerError.html"," < ConnectionError","5xx Server Error ",1],["TimeoutError","ActiveResource","classes/ActiveResource/TimeoutError.html"," < ConnectionError","Raised when a Timeout::Error occurs. ",1],["UnauthorizedAccess","ActiveResource","classes/ActiveResource/UnauthorizedAccess.html"," < ClientError","401 Unauthorized ",1],["Validations","ActiveResource","classes/ActiveResource/Validations.html"," < ","Module to support validation and errors with Active Resource objects. The module overrides Base#save",1],["Autoload","ActiveSupport","classes/ActiveSupport/Autoload.html"," < ","",1],["BacktraceCleaner","ActiveSupport","classes/ActiveSupport/BacktraceCleaner.html"," < Object","Backtraces often include many lines that are not relevant for the context under review. This makes it",1],["Base64","ActiveSupport","classes/ActiveSupport/Base64.html"," < ","Base64 provides utility methods for encoding and de-coding binary data using a base 64 representation.",1],["Benchmarkable","ActiveSupport","classes/ActiveSupport/Benchmarkable.html"," < ","",1],["BufferedLogger","ActiveSupport","classes/ActiveSupport/BufferedLogger.html"," < Object","Inspired by the buffered logger idea by Ezra ",1],["Severity","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger/Severity.html"," < ","",1],["Cache","ActiveSupport","classes/ActiveSupport/Cache.html"," < ","See ActiveSupport::Cache::Store for documentation. ",1],["CompressedMemCacheStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/CompressedMemCacheStore.html"," < MemCacheStore","",1],["Entry","ActiveSupport::Cache","classes/ActiveSupport/Cache/Entry.html"," < Object","Entry that is put into caches. It supports expiration time on entries and can compress values to save",1],["FileStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/FileStore.html"," < Store","A cache store implementation which stores everything on the filesystem. FileStore implements the Strategy::LocalCache",1],["MemCacheStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/MemCacheStore.html"," < Store","A cache store implementation which stores data in Memcached: http://www.danga.com/memcached/ This is",1],["MemoryStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/MemoryStore.html"," < Store","A cache store implementation which stores everything into memory in the same process. If you're running",1],["Store","ActiveSupport::Cache","classes/ActiveSupport/Cache/Store.html"," < Object","An abstract cache store class. There are multiple cache store implementations, each having its own additional",1],["Strategy","ActiveSupport::Cache","classes/ActiveSupport/Cache/Strategy.html"," < ","",1],["LocalCache","ActiveSupport::Cache::Strategy","classes/ActiveSupport/Cache/Strategy/LocalCache.html"," < ","Caches that implement LocalCache will be backed by an in memory cache for the duration of a block. Repeated",1],["LocalStore","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html"," < Store","Simple memory backed cache. This cache is not thread safe and is intended only for serving as a temporary",1],["SynchronizedMemoryStore","ActiveSupport::Cache","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html"," < MemoryStore","Like MemoryStore, but thread-safe. ",1],["Callbacks","ActiveSupport","classes/ActiveSupport/Callbacks.html"," < ","\\Callbacks are code hooks that are run at key points in an object's lifecycle. The typical use case is",1],["ClassMethods","ActiveSupport","classes/ActiveSupport/ClassMethods.html"," < ","",1],["Concern","ActiveSupport","classes/ActiveSupport/Concern.html"," < ","A typical module looks like this: module M def self.included(base) base.extend ClassMethods base.send(:include,",1],["Configurable","ActiveSupport","classes/ActiveSupport/Configurable.html"," < ","Configurable provides a <tt>config</tt> method to store and retrieve configuration options as an <tt>OrderedHash</tt>.",1],["ClassMethods","ActiveSupport::Configurable","classes/ActiveSupport/Configurable/ClassMethods.html"," < ","",1],["Configuration","ActiveSupport::Configurable","classes/ActiveSupport/Configurable/Configuration.html"," < ActiveSupport::InheritableOptions","",1],["ClassCache","ActiveSupport::Dependencies","classes/ActiveSupport/Dependencies/ClassCache.html"," < Object","",1],["WatchStack","ActiveSupport::Dependencies","classes/ActiveSupport/Dependencies/WatchStack.html"," < Hash","The WatchStack keeps a stack of the modules being watched as files are loaded. If a file in the process",1],["Deprecation","ActiveSupport","classes/ActiveSupport/Deprecation.html"," < ","",1],["DescendantsTracker","ActiveSupport","classes/ActiveSupport/DescendantsTracker.html"," < ","This module provides an internal implementation to track descendants which is faster than iterating through",1],["Duration","ActiveSupport","classes/ActiveSupport/Duration.html"," < BasicObject","Provides accurate date and time measurements using Date#advance and Time#advance, respectively. It mainly",1],["FileUpdateChecker","ActiveSupport","classes/ActiveSupport/FileUpdateChecker.html"," < Object","This class is responsible to track files and invoke the given block whenever one of these files are changed.",1],["FileWatcher","ActiveSupport","classes/ActiveSupport/FileWatcher.html"," < Object","",1],["Backend","ActiveSupport::FileWatcher","classes/ActiveSupport/FileWatcher/Backend.html"," < Object","",1],["Gzip","ActiveSupport","classes/ActiveSupport/Gzip.html"," < ","A convenient wrapper for the zlib standard library that allows compression/decompression of strings with",1],["Stream","ActiveSupport::Gzip","classes/ActiveSupport/Gzip/Stream.html"," < StringIO","",1],["HashWithIndifferentAccess","ActiveSupport","classes/ActiveSupport/HashWithIndifferentAccess.html"," < Hash","",1],["Inflector","ActiveSupport","classes/ActiveSupport/Inflector.html"," < ","The Inflector transforms words from singular to plural, class names to table names, modularized class",1],["Inflections","ActiveSupport::Inflector","classes/ActiveSupport/Inflector/Inflections.html"," < Object","A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify",1],["InheritableOptions","ActiveSupport","classes/ActiveSupport/InheritableOptions.html"," < OrderedOptions","",1],["JSON","ActiveSupport","classes/ActiveSupport/JSON.html"," < ","",1],["CircularReferenceError","ActiveSupport::JSON::Encoding","classes/ActiveSupport/JSON/Encoding/CircularReferenceError.html"," < StandardError","",1],["Encoder","ActiveSupport::JSON::Encoding","classes/ActiveSupport/JSON/Encoding/Encoder.html"," < Object","",1],["Variable","ActiveSupport::JSON","classes/ActiveSupport/JSON/Variable.html"," < String","A string that returns itself as its JSON-encoded form. ",1],["LogSubscriber","ActiveSupport","classes/ActiveSupport/LogSubscriber.html"," < Object","ActiveSupport::LogSubscriber is an object set to consume ActiveSupport::Notifications with the sole purpose",1],["TestHelper","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber/TestHelper.html"," < ","Provides some helpers to deal with testing log subscribers by setting up notifications. Take for instance",1],["MockLogger","ActiveSupport::LogSubscriber::TestHelper","classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html"," < Object","",1],["Memoizable","ActiveSupport","classes/ActiveSupport/Memoizable.html"," < ","",1],["InstanceMethods","ActiveSupport::Memoizable","classes/ActiveSupport/Memoizable/InstanceMethods.html"," < ","",1],["MessageEncryptor","ActiveSupport","classes/ActiveSupport/MessageEncryptor.html"," < Object","MessageEncryptor is a simple way to encrypt values which get stored somewhere you don't trust. The cipher",1],["InvalidMessage","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor/InvalidMessage.html"," < StandardError","",1],["MessageVerifier","ActiveSupport","classes/ActiveSupport/MessageVerifier.html"," < Object","+MessageVerifier+ makes it easy to generate and verify messages which are signed to prevent tampering.",1],["InvalidSignature","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier/InvalidSignature.html"," < StandardError","",1],["Chars","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/Chars.html"," < Object","Chars enables you to work transparently with UTF-8 encoding in the Ruby String class without having extensive",1],["EncodingError","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/EncodingError.html"," < StandardError","Raised when a problem with the encoding was found. ",1],["Unicode","ActiveSupport::Multibyte","classes/ActiveSupport/Multibyte/Unicode.html"," < ","",1],["Codepoint","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode/Codepoint.html"," < Object","Holds data about a codepoint in the Unicode database ",1],["UnicodeDatabase","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html"," < Object","Holds static data from the Unicode database ",1],["Notifications","ActiveSupport","classes/ActiveSupport/Notifications.html"," < ","Notifications provides an instrumentation API for Ruby. To instrument an action in Ruby you just need",1],["Event","ActiveSupport::Notifications","classes/ActiveSupport/Notifications/Event.html"," < Object","",1],["Fanout","ActiveSupport::Notifications","classes/ActiveSupport/Notifications/Fanout.html"," < Object","This is a default queue implementation that ships with Notifications. It just pushes events to all registered",1],["Instrumenter","ActiveSupport::Notifications","classes/ActiveSupport/Notifications/Instrumenter.html"," < Object","",1],["OrderedOptions","ActiveSupport","classes/ActiveSupport/OrderedOptions.html"," < OrderedHash","",1],["Railtie","ActiveSupport","classes/ActiveSupport/Railtie.html"," < Rails::Railtie","",1],["Rescuable","ActiveSupport","classes/ActiveSupport/Rescuable.html"," < ","Rescuable module adds support for easier exception handling. ",1],["ClassMethods","ActiveSupport::Rescuable","classes/ActiveSupport/Rescuable/ClassMethods.html"," < ","",1],["SafeBuffer","ActiveSupport","classes/ActiveSupport/SafeBuffer.html"," < String","",1],["SafeConcatError","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer/SafeConcatError.html"," < StandardError","",1],["StringInquirer","ActiveSupport","classes/ActiveSupport/StringInquirer.html"," < String","Wrapping a string in this class gives you a prettier way to test for equality. The value returned by",1],["TestCase","ActiveSupport","classes/ActiveSupport/TestCase.html"," < ::Test::Unit::TestCase","",1],["Testing","ActiveSupport","classes/ActiveSupport/Testing.html"," < ","",1],["Assertions","ActiveSupport::Testing","classes/ActiveSupport/Testing/Assertions.html"," < ","",1],["Declarative","ActiveSupport::Testing","classes/ActiveSupport/Testing/Declarative.html"," < ","",1],["Isolation","ActiveSupport::Testing","classes/ActiveSupport/Testing/Isolation.html"," < ","",1],["Forking","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation/Forking.html"," < ","",1],["MiniTest","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation/MiniTest.html"," < ","",1],["Subprocess","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation/Subprocess.html"," < ","",1],["TestUnit","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation/TestUnit.html"," < ","",1],["Pending","ActiveSupport::Testing","classes/ActiveSupport/Testing/Pending.html"," < ","",1],["Performance","ActiveSupport::Testing","classes/ActiveSupport/Testing/Performance.html"," < ","",1],["Benchmarker","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Benchmarker.html"," < Performer","",1],["ForClassicTestUnit","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/ForMiniTest.html"," < ","",1],["Metrics","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Metrics.html"," < ","",1],["Amount","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Amount.html"," < Base","",1],["Base","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Base.html"," < Object","",1],["CpuTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html"," < Time","",1],["DigitalInformationUnit","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/DigitalInformationUnit.html"," < Base","",1],["GcRuns","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html"," < Amount","",1],["GcTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html"," < Time","",1],["Memory","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html"," < DigitalInformationUnit","",1],["Objects","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html"," < Amount","",1],["ProcessTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/ProcessTime.html"," < Time","",1],["Time","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/Time.html"," < Base","",1],["UserTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/UserTime.html"," < Time","",1],["WallTime","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html"," < Time","",1],["Performer","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Performer.html"," < Object","",1],["Profiler","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance/Profiler.html"," < Performer","overridden by each implementation ",1],["ProxyTestResult","ActiveSupport::Testing","classes/ActiveSupport/Testing/ProxyTestResult.html"," < Object","",1],["RemoteError","ActiveSupport::Testing","classes/ActiveSupport/Testing/RemoteError.html"," < StandardError","",1],["SetupAndTeardown","ActiveSupport::Testing","classes/ActiveSupport/Testing/SetupAndTeardown.html"," < ","",1],["ClassMethods","ActiveSupport::Testing::SetupAndTeardown","classes/ActiveSupport/Testing/SetupAndTeardown/ClassMethods.html"," < ","",1],["ForClassicTestUnit","ActiveSupport::Testing::SetupAndTeardown","classes/ActiveSupport/Testing/SetupAndTeardown/ForClassicTestUnit.html"," < ","",1],["ForMiniTest","ActiveSupport::Testing::SetupAndTeardown","classes/ActiveSupport/Testing/SetupAndTeardown/ForMiniTest.html"," < ","",1],["TimeWithZone","ActiveSupport","classes/ActiveSupport/TimeWithZone.html"," < Object","A Time-like class that can represent a time in any time zone. Necessary because standard Ruby Time instances",1],["TimeZone","ActiveSupport","classes/ActiveSupport/TimeZone.html"," < Object","",1],["XmlMini","ActiveSupport","classes/ActiveSupport/XmlMini.html"," < ","= XmlMini To use the much faster libxml parser: gem 'libxml-ruby', '=0.9.7' XmlMini.backend = 'LibXML'",1],["XmlMini_LibXMLSAX","ActiveSupport","classes/ActiveSupport/XmlMini_LibXMLSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_LibXMLSAX","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html"," < Object","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["XmlMini_NokogiriSAX","ActiveSupport","classes/ActiveSupport/XmlMini_NokogiriSAX.html"," < ","",1],["HashBuilder","ActiveSupport::XmlMini_NokogiriSAX","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html"," < Nokogiri::XML::SAX::Document","Class that will build the hash while the XML document is being parsed using SAX events. ",1],["ArJdbcMySQL","activerecord-3.1.3/lib/active_record/railties/jdbcmysql_error.rb","classes/ArJdbcMySQL.html"," < ","FIXME Remove if ArJdbcMysql will give. ",1],["Error","ArJdbcMySQL","classes/ArJdbcMySQL/Error.html"," < StandardError","",1],["Array","activesupport-3.1.3/lib/active_support/core_ext/array/access.rb","classes/Array.html"," < Object","",1],["BigDecimal","activesupport-3.1.3/lib/active_support/core_ext/big_decimal/conversions.rb","classes/BigDecimal.html"," < Object","",1],["DateTime","activesupport-3.1.3/lib/active_support/core_ext/date_time/acts_like.rb","classes/DateTime.html"," < Object","",1],["ERB","activesupport-3.1.3/lib/active_support/core_ext/string/output_safety.rb","classes/ERB.html"," < Object","",1],["Util","ERB","classes/ERB/Util.html"," < ","",1],["Enumerable","activesupport-3.1.3/lib/active_support/core_ext/enumerable.rb","classes/Enumerable.html"," < ","",1],["FalseClass","activesupport-3.1.3/lib/active_support/core_ext/object/blank.rb","classes/FalseClass.html"," < Object","",1],["File","activesupport-3.1.3/lib/active_support/core_ext/file/path.rb","classes/File.html"," < Object","",1],["FixturesFileNotFound","activerecord-3.1.3/lib/active_record/fixtures.rb","classes/FixturesFileNotFound.html"," < StandardError","",1],["Float","activesupport-3.1.3/lib/active_support/core_ext/float/rounding.rb","classes/Float.html"," < Object","",1],["FullSanitizer","HTML","classes/HTML/FullSanitizer.html"," < Sanitizer","",1],["LinkSanitizer","HTML","classes/HTML/LinkSanitizer.html"," < FullSanitizer","",1],["Sanitizer","HTML","classes/HTML/Sanitizer.html"," < Object","",1],["Selector","HTML","classes/HTML/Selector.html"," < Object","Selects HTML elements using CSS 2 selectors. The +Selector+ class uses CSS selector expressions to match",1],["WhiteListSanitizer","HTML","classes/HTML/WhiteListSanitizer.html"," < Sanitizer","",1],["Hash","activesupport-3.1.3/lib/active_support/core_ext/array/extract_options.rb","classes/Hash.html"," < Object","",1],["I18n","actionpack-3.1.3/lib/action_view/helpers/translation_helper.rb","classes/I18n.html"," < ","",1],["ExceptionHandler","I18n","classes/I18n/ExceptionHandler.html"," < Object","",1],["Railtie","I18n","classes/I18n/Railtie.html"," < Rails::Railtie","",1],["Integer","activesupport-3.1.3/lib/active_support/core_ext/integer/multiple.rb","classes/Integer.html"," < Object","",1],["Kernel","activesupport-3.1.3/lib/active_support/core_ext/kernel/debugger.rb","classes/Kernel.html"," < ","",1],["LoadError","activesupport-3.1.3/lib/active_support/core_ext/load_error.rb","classes/LoadError.html"," < Object","",1],["SimpleFormatter","Logger","classes/Logger/SimpleFormatter.html"," < Logger::Formatter","Simple formatter which only displays the message. ",1],["Module","activesupport-3.1.3/lib/active_support/core_ext/module/aliasing.rb","classes/Module.html"," < Object","",1],["Mysql","activerecord-3.1.3/lib/active_record/connection_adapters/mysql_adapter.rb","classes/Mysql.html"," < Object","",1],["Result","Mysql","classes/Mysql/Result.html"," < Object","",1],["Stmt","Mysql","classes/Mysql/Stmt.html"," < Object","",1],["Time","Mysql","classes/Mysql/Time.html"," < Object","",1],["NameError","activesupport-3.1.3/lib/active_support/core_ext/name_error.rb","classes/NameError.html"," < Object","",1],["NilClass","activesupport-3.1.3/lib/active_support/core_ext/object/blank.rb","classes/NilClass.html"," < Object","Extensions to +nil+ which allow for more helpful error messages for people who are new to Rails. Ruby",1],["Object","activesupport-3.1.3/lib/active_support/core_ext/kernel/agnostics.rb","classes/Object.html"," < Object"," ",1],["Process","activesupport-3.1.3/lib/active_support/core_ext/process/daemon.rb","classes/Process.html"," < ","",1],["Rails","railties-3.1.3/lib/rails.rb","classes/Rails.html"," < ","",1],["String","activesupport-3.1.3/lib/active_support/core_ext/object/blank.rb","classes/String.html"," < Object","String inflections define new methods on the String class to transform names for different purposes.",1],["Struct","activesupport-3.1.3/lib/active_support/json/encoding.rb","classes/Struct.html"," < Object","",1],["Symbol","activesupport-3.1.3/lib/active_support/core_ext/object/duplicable.rb","classes/Symbol.html"," < Object","",1],["Test","activesupport-3.1.3/lib/active_support/testing/deprecation.rb","classes/Test.html"," < ","",1],["Unit","Test","classes/Test/Unit.html"," < ","",1],["Collector","Test::Unit","classes/Test/Unit/Collector.html"," < ","",1],["ObjectSpace","Test::Unit::Collector","classes/Test/Unit/Collector/ObjectSpace.html"," < Object","",1],["Time","activesupport-3.1.3/lib/active_support/core_ext/time/acts_like.rb","classes/Time.html"," < Object","",1],["TrueClass","activesupport-3.1.3/lib/active_support/core_ext/object/blank.rb","classes/TrueClass.html"," < Object","",1],["URI","activesupport-3.1.3/lib/active_support/core_ext/uri.rb","classes/URI.html"," < ","",1],["+","ActiveModel::MassAssignmentSecurity::PermissionSet","classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#M000713","(values)","",2],["+","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002547","(other)","Adds another Duration or a Numeric to this Duration. Numeric values are treated as seconds. ",2],["+","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002700","(other)","Returns a new Chars object containing the _other_ object concatenated to the string. Example: ('Café'.mb_chars",2],["+","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002420","(other)","",2],["+","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002925","(other)","",2],["-","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002548","(other)","Subtracts another Duration or a Numeric from this Duration. Numeric values are treated as seconds. ",2],["-","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002926","(other)","",2],["-","Time","classes/Time.html#M002498","(other)","Alias for #minus_with_coercion",2],["<<","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002419","(value)","Alias for #concat",2],["<=>","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001029","(other_object)","Allows sort on objects ",2],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#M001305","(version_string)","",2],["<=>","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002698","(other)","Returns -1, 0, or 1, depending on whether the Chars object is to be sorted before, equal or after the",2],["<=>","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002919","(other)","Use the time in UTC for comparisons. ",2],["<=>","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002947","(zone)","Compare this time zone to the parameter. The two are compared first on their offsets, and then by name.",2],["<=>","DateTime","classes/DateTime.html#M002214","(other)","Layers additional behavior on DateTime#<=> so that Time and ActiveSupport::TimeWithZone instances can",2],["<=>","Time","classes/Time.html#M002502","(other)","Alias for #compare_with_coercion",2],["==","ActionView::FileSystemResolver","classes/ActionView/FileSystemResolver.html#M000599","(resolver)","Alias for #eql?",2],["==","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001024","(comparison_object)","Returns true if +comparison_object+ is the same exact object, or +comparison_object+ is of the same type",2],["==","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001599","(other_aggregation)","Returns +true+ if +self+ and +other_aggregation+ have the same +name+ attribute, +active_record+ attribute,",2],["==","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001707","(other)","",2],["==","ActiveResource::Base","classes/ActiveResource/Base.html#M001899","(other)","Test for equality.  Resource are equal if and only if +other+ is the same object or is an instance of",2],["==","ActiveResource::Request","classes/ActiveResource/Request.html#M001941","(req)","",2],["==","ActiveResource::Response","classes/ActiveResource/Response.html#M001950","(other)","Returns true if the other is a Response with an equal body, equal message and equal headers. Otherwise",2],["==","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002551","(other)","Returns true if <tt>other</tt> is also a Duration instance with the same <tt>value</tt>, or if <tt>other",2],["===","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000965","(object)","Overwrite the default class equality method to provide support for association proxies. ",2],["===","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#M002748","(other)","",2],["===","Time","classes/Time.html#M002430","(other)","Overriding case equality method so that it returns true for ActiveSupport::TimeWithZone instances ",2],["=~","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002701","(other)","Like <tt>String#=~</tt> only it returns the character offset (in codepoints) instead of the byte offset.",2],["=~","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002714","(other)","",2],["=~","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002948","(re)","Compare #name and TZInfo identifier to a supplied regexp, returning true if a match is found. ",2],["[]","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000676","(attribute)","When passed a symbol or a name of a method, returns an array of errors for the method. p.errors[:name]",2],["[]","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001124","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001242","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001311","(key)","",2],["[]","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001415","(key)","",2],["[]","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001468","(x)","",2],["[]","ActiveResource::Formats","classes/ActiveResource/Formats.html#M001902","(mime_type_reference)","Lookup the format class from a mime type reference symbol. Example: ActiveResource::Formats[:xml]  #",2],["[]","ActiveResource::Response","classes/ActiveResource/Response.html#M001948","(key)","",2],["[]","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002535","(key)","",2],["[]","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002724","(*args)","Alias for #slice",2],["[]","ActiveSupport::OrderedOptions","classes/ActiveSupport/OrderedOptions.html#M002771","(key)","",2],["[]","ActiveSupport::Testing::Performance::Metrics","classes/ActiveSupport/Testing/Performance/Metrics.html#M002874","(name)","",2],["[]","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002970","(arg)","Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of",2],["[]=","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000682","(attribute, error)","Adds to the supplied attribute the supplied error message. p.errors[:name] = \"must be set\" p.errors[:name]",2],["[]=","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001128","(sql, key)","",2],["[]=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001245","(sql, key)","",2],["[]=","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001313","(sql, key)","",2],["[]=","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001417","(sql, key)","",2],["[]=","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001469","(k,v)","",2],["[]=","ActiveResource::Response","classes/ActiveResource/Response.html#M001949","(key, value)","",2],["[]=","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002534","(key, value)","",2],["[]=","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002578","(key, value)","Assigns a new value to the hash: hash = HashWithIndifferentAccess.new hash[:key] = \"value\" ",2],["[]=","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002716","(*args)","Like <tt>String#[]=</tt>, except instead of byte offsets you specify character offsets. Example: s =",2],["[]=","ActiveSupport::OrderedOptions","classes/ActiveSupport/OrderedOptions.html#M002770","(key, value)","",2],["__replay__","ActiveSupport::Testing::ProxyTestResult","classes/ActiveSupport/Testing/ProxyTestResult.html#M002792","(result)","",2],["_assigns","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000634","()","",2],["_compile_filter","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks.html#M002060","(filter)","Filters support: Arrays::  Used in conditions. This is used to specify multiple conditions. Used internally",2],["_compile_options","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks.html#M002057","(options)","Options support the same options as filters themselves (and support symbols, string, procs, and objects),",2],["_compute_redirect_to_location","ActionController::Redirecting","classes/ActionController/Redirecting.html#M000151","(options)","",2],["_dasherize","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M003000","(key)","",2],["_dump","Time","classes/Time.html#M002456","(*args)","",2],["_dump","Time","classes/Time.html#M002466","(*args)","",2],["_dump_without_utc_flag","Time","classes/Time.html#M002457","(*args)","Alias for #_dump",2],["_dump_without_zone","Time","classes/Time.html#M002465","(*args)","Alias for #_dump",2],["_extract_redirect_to_status","ActionController::Redirecting","classes/ActionController/Redirecting.html#M000150","(options, response_status)","",2],["_get","ActiveSupport::OrderedOptions","classes/ActiveSupport/OrderedOptions.html#M002772","(key)","Alias for #[]",2],["_handle_method_missing","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000060","()","",2],["_handle_render_options","ActionController::Renderers","classes/ActionController/Renderers.html#M000149","(options)","",2],["_layout_for","ActionView::Context","classes/ActionView/Context.html#M000289","(name=nil)","Encapsulates the interaction with the view flow so it returns the correct buffer on yield. This is usually",2],["_layout_for","ActionView::Helpers::RenderingHelper","classes/ActionView/Helpers/RenderingHelper.html#M000486","(*args, &block)","Overwrites _layout_for in the context object so it supports the case a block is passed to a partial.",2],["_load","Time","classes/Time.html#M002449","(marshaled_time)","",2],["_load","Time","classes/Time.html#M002463","(marshaled_time)","",2],["_load_without_utc_flag","Time","classes/Time.html#M002450","(marshaled_time)","Alias for #_load",2],["_load_without_zone","Time","classes/Time.html#M002464","(marshaled_time)","Alias for #_load",2],["_merge_attributes","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000823","(attr_names)","",2],["_normalize_legacy_filter","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks.html#M002065","(kind, filter)","",2],["_normalize_options","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000058","(options)","",2],["_original_to_s","BigDecimal","classes/BigDecimal.html#M002130","(format = DEFAULT_STRING_FORMAT)","Alias for #to_s",2],["_parse_file","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M003002","(file, entity)","",2],["_prepare_context","ActionView::Context","classes/ActionView/Context.html#M000288","()","Prepares the context by setting the appropriate instance variables. :api: plugin ",2],["_read_attribute","ActiveRecord::AttributeMethods::Read","classes/ActiveRecord/AttributeMethods/Read.html#M000881","(attr_name)","",2],["_routes","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000635","()","",2],["_routes_context","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000518","()","",2],["_run_class_setup","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation.html#M002796","()","",2],["_save_fragment","ActionController::Caching::Actions","classes/ActionController/Caching/Actions.html#M000026","(name, options)","",2],["_set_detail","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000559","(key, value)","",2],["_set_wrapper_defaults","ActionController::ParamsWrapper::ClassMethods","classes/ActionController/ParamsWrapper/ClassMethods.html#M000136","(options, model=nil)","",2],["_singularize","ActiveModel::Name","classes/ActiveModel/Name.html#M000724","(string, replacement='_')","",2],["_user_defined_ivars","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000631","()","",2],["_validates_default_keys","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000828","()","When creating custom validators, it might be useful to be able to specify additional default keys. This",2],["_view","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000630","()","Alias for #view",2],["_wrap_parameters","ActionController::ParamsWrapper","classes/ActionController/ParamsWrapper.html#M000143","(parameters)","Returns the list of parameters which will be selected for wrapped. ",2],["_wrapper_enabled?","ActionController::ParamsWrapper","classes/ActionController/ParamsWrapper.html#M000144","()","Checks if we should perform parameters wrapping. ",2],["_wrapper_formats","ActionController::ParamsWrapper","classes/ActionController/ParamsWrapper.html#M000142","()","Returns the list of enabled formats. ",2],["_wrapper_key","ActionController::ParamsWrapper","classes/ActionController/ParamsWrapper.html#M000141","()","Returns the wrapper key which will use to stored wrapped parameters. ",2],["abstract_class?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000969","()","Returns whether this class is an abstract class or not. ",2],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","classes/ActiveRecord/NestedAttributes/ClassMethods.html#M001549","(*attr_names)","Defines an attributes writer for the specified association(s). If you are using <tt>attr_protected</tt>",2],["accessible_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000731","(role = :default)","",2],["accessible_attributes_configs","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000740","()","",2],["action","ActionController::Metal","classes/ActionController/Metal.html#M000225","(name, klass = ActionDispatch::Request)","Return a rack endpoint for the given action. Memoize the endpoint, so multiple calls into MyController.action",2],["action_methods","ActionController::HideActions::ClassMethods","classes/ActionController/HideActions/ClassMethods.html#M000083","()","Overrides AbstractController::Base#action_methods to remove any methods that are listed as hidden methods.",2],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001157","()","CONNECTION MANAGEMENT ==================================== ",2],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001258","()","Is this connection alive and ready for queries? ",2],["active?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001079","()","CONNECTION MANAGEMENT ==================================== ",2],["active_authorizer","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000733","()","Alias for #active_authorizers",2],["active_authorizers","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000732","()","",2],["acts_like?","Object","classes/Object.html#M002337","(duck)","A duck-type assistant method. For example, Active Support extends Date to define an acts_like_date? method,",2],["acts_like_date?","DateTime","classes/DateTime.html#M002180","()","Duck-types as a Date-like class. See Object#acts_like?. ",2],["acts_like_string?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002696","()","Enable more predictable duck-typing on String-like classes. See Object#acts_like?. ",2],["acts_like_string?","String","classes/String.html#M002369","()","Enable more predictable duck-typing on String-like classes. See <tt>Object#acts_like?</tt>. ",2],["acts_like_time?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002942","()","So that +self+ <tt>acts_like?(:time)</tt>. ",2],["acts_like_time?","DateTime","classes/DateTime.html#M002181","()","Duck-types as a Time-like class. See Object#acts_like?. ",2],["acts_like_time?","Time","classes/Time.html#M002429","()","Duck-types as a Time-like class. See Object#acts_like?. ",2],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001236","()","Returns 'PostgreSQL' as adapter name for identification purposes. ",2],["adapter_name","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001066","()","",2],["add","ActionController::Renderers","classes/ActionController/Renderers.html#M000152","(key, &block)","Adds a new renderer to call within controller actions. A renderer is invoked by passing its name as an",2],["add","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000696","(attribute, message = nil, options = {})","Adds +message+ to the error messages on +attribute+, which will be returned on a call to <tt>on(attribute)</tt>",2],["add","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001446","(record)","",2],["add","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001978","(severity, message = nil, progname = nil, &block)","",2],["add_application_js","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#M000337","(expanded_sources, sources)","",2],["add_autosave_association_callbacks","ActiveRecord::AutosaveAssociation::ClassMethods","classes/ActiveRecord/AutosaveAssociation/ClassMethods.html#M000903","(reflection)","Adds validation and save callbacks for the association as specified by the +reflection+. For performance",2],["add_column","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001204","(table_name, column_name, type, options = {})","",2],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001354","(table_name, column_name, type, options = {})","Adds a new column to the named table. See TableDefinition#column for details of the options you can use.",2],["add_column","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001117","(table_name, column_name, type, options = {})","",2],["add_column_position!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001211","(sql, options)","",2],["add_column_position!","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001140","(sql, options)","",2],["add_column_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001224","(table_name, column_name, type, options = {})","",2],["add_error","ActiveSupport::Testing::ProxyTestResult","classes/ActiveSupport/Testing/ProxyTestResult.html#M002791","(e)","",2],["add_expr_escaped","ActionView::Template::Handlers::Erubis","classes/ActionView/Template/Handlers/Erubis.html#M000577","(src, code)","",2],["add_expr_literal","ActionView::Template::Handlers::Erubis","classes/ActionView/Template/Handlers/Erubis.html#M000576","(src, code)","",2],["add_filter","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001961","(&block)","Adds a filter from the block provided. Each line in the backtrace will be mapped against this filter.",2],["add_index_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001229","(table_name, column_name, options = {})","",2],["add_limit_offset!","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001099","(sql, options)","",2],["add_method_to_attributes!","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000546","(html_options, method)","",2],["add_observer","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000750","(observer)","Add a new observer to the pool. The new observer needs to respond to 'update', otherwise it raises an",2],["add_observer!","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001557","(klass)","",2],["add_on_blank","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000698","(attributes, options = {})","Will add an error message to each of the attributes in +attributes+ that is blank (using Object#blank?).",2],["add_on_empty","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000697","(attributes, options = {})","Will add an error message to each of the attributes in +attributes+ that is empty. ",2],["add_postamble","ActionView::Template::Handlers::Erubis","classes/ActionView/Template/Handlers/Erubis.html#M000578","(src)","",2],["add_preamble","ActionView::Template::Handlers::Erubis","classes/ActionView/Template/Handlers/Erubis.html#M000574","(src)","",2],["add_silencer","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001962","(&block)","Adds a silencer from the block provided. If the silencer returns true for a given line, it will be excluded",2],["add_text","ActionView::Template::Handlers::Erubis","classes/ActionView/Template/Handlers/Erubis.html#M000575","(src, text)","",2],["add_timestamps_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001233","(table_name)","",2],["add_to_transaction","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001766","()","Add the record to the current transaction so that the :after_rollback and :after_commit callbacks can",2],["add_whiner","NilClass","classes/NilClass.html#M002975","(klass)","",2],["advance","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002929","(options)","",2],["advance","DateTime","classes/DateTime.html#M002188","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["advance","Time","classes/Time.html#M002448","(options)","Uses Date to provide precise Time calculations for years, months, and days. The +options+ parameter takes",2],["after_commit","ActiveRecord::Transactions::ClassMethods","classes/ActiveRecord/Transactions/ClassMethods.html#M001757","(*args, &block)","",2],["after_rollback","ActiveRecord::Transactions::ClassMethods","classes/ActiveRecord/Transactions/ClassMethods.html#M001758","(*args, &block)","",2],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","classes/ActiveModel/Validations/Callbacks/ClassMethods.html#M000790","(*args, &block)","",2],["aggregate_column","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001609","(column_name)","",2],["aggregate_mapping","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000999","(reflection)","",2],["ago","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002557","(time = ::Time.current)","Calculates a new Time or Date that is as far in the past as this Duration represents. ",2],["ago","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002928","(other)","",2],["ago","DateTime","classes/DateTime.html#M002189","(seconds)","Returns a new DateTime representing the time a number of seconds ago Do not use this method in combination",2],["ago","Time","classes/Time.html#M002451","(seconds)","Returns a new Time representing the time a number of seconds ago, this is basically a wrapper around",2],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000646","(new_name, old_name)","",2],["alias_attribute","Module","classes/Module.html#M002279","(new_name, old_name)","Allows you to make aliases for attributes, which includes getter, setter, and query methods. Example:",2],["alias_method_chain","Module","classes/Module.html#M002278","(target, feature)","Encapsulates the common pattern of: alias_method :foo_without_feature, :foo alias_method :foo, :foo_with_feature",2],["all","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001624","(*args)","A convenience wrapper for <tt>find(:all, *args)</tt>. You can pass in all the same arguments to this",2],["all","ActiveResource::Base","classes/ActiveResource/Base.html#M001868","(*args)","This is an alias for find(:all).  You can pass in all the same arguments to this method as you can to",2],["all","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002968","()","Return an array of all TimeZone objects. There are multiple TimeZone objects per time zone, in many cases,",2],["all_application_helpers","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M000078","()","Extract helper names from files in <tt>app/helpers/**/*_helper.rb</tt> ",2],["all_attributes_exists?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000985","(attribute_names)","",2],["all_helpers_from_path","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M000077","(path)","",2],["all_timestamp_attributes_in_model","ActiveRecord::Timestamp","classes/ActiveRecord/Timestamp.html#M001749","()","",2],["announce","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001540","(message)","",2],["anonymous?","Module","classes/Module.html#M002280","()","A module may or may not have a name. module M; end M.name # => \"M\" m = Module.new m.name # => \"\" A module",2],["any?","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001689","()","",2],["api_behavior","ActionController::Responder","classes/ActionController/Responder.html#M000175","(error)","This is the common behavior for formats associated with APIs, such as :xml and :json. ",2],["api_location","ActionController::Responder","classes/ActionController/Responder.html#M000179","()","Alias for #resource_location",2],["append_features","ActiveSupport::Concern","classes/ActiveSupport/Concern.html#M002095","(base)","",2],["application","Rails","classes/Rails.html#M003003","()","",2],["application=","Rails","classes/Rails.html#M003004","(application)","",2],["apply_finder_options","ActiveRecord::SpawnMethods","classes/ActiveRecord/SpawnMethods.html#M001672","(options)","",2],["apply_join_dependency","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001630","(relation, join_dependency)","",2],["apply_modules","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001667","(modules)","",2],["apply_ssl_options","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001804","(http)","",2],["arel","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001656","()","",2],["arel_attributes_values","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001043","(include_primary_key = true, include_readonly_attributes = true, attribute_names = @attributes.keys)","Returns a copy of the attributes hash where all the values have been safely quoted for use in an Arel",2],["arel_engine","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000973","()","",2],["arel_table","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000972","()","",2],["array_of_strings?","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001669","(o)","",2],["array_or_string_for_javascript","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000551","(option)","",2],["as_json","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000694","(options=nil)","Returns an ActiveSupport::OrderedHash that can be used as the JSON representation for this object. ",2],["as_json","ActiveModel::Serializers::JSON","classes/ActiveModel/Serializers/JSON.html#M000779","(options = nil)","Returns a JSON string representing the model. Some configuration can be passed through +options+. The",2],["as_json","ActiveSupport::JSON::Encoding::Encoder","classes/ActiveSupport/JSON/Encoding/Encoder.html#M002637","(value)","like encode, but only calls as_json, without encoding to string ",2],["as_json","ActiveSupport::JSON::Variable","classes/ActiveSupport/JSON/Variable.html#M002634","(options = nil)","",2],["as_json","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002910","(options = nil)","Coerces time to a string for JSON encoding. The default format is ISO 8601. You can get %Y/%m/%d %H:%M:%S",2],["as_json","BigDecimal","classes/BigDecimal.html#M002649","(options = nil)","A BigDecimal would be naturally represented as a JSON number. Most libraries, however, parse non-integer",2],["as_json","FalseClass","classes/FalseClass.html#M002644","(options = nil)","",2],["as_json","NilClass","classes/NilClass.html#M002645","(options = nil)","",2],["as_json","String","classes/String.html#M002646","(options = nil)","",2],["as_json","Symbol","classes/Symbol.html#M002648","(options = nil)","",2],["as_json","TrueClass","classes/TrueClass.html#M002643","(options = nil)","",2],["assert_blank","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M002784","(object, message=nil)","Test if an expression is blank. Passes if object.blank? is true. assert_blank [] # => true ",2],["assert_boolean","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000712","(result, name)","",2],["assert_difference","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M002782","(expression, difference = 1, message = nil, &block)","Test numeric difference between the return value of an expression as a result of what is evaluated in",2],["assert_no_difference","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M002783","(expression, message = nil, &block)","Assertion that the numeric result of evaluating an expression is not changed before and after invoking",2],["assert_present","ActiveSupport::Testing::Assertions","classes/ActiveSupport/Testing/Assertions.html#M002785","(object, message=nil)","Test if an expression is not blank. Passes if object.present? is true. assert_present {:data => 'x' }",2],["assert_template","ActionController::TemplateAssertions","classes/ActionController/TemplateAssertions.html#M000234","(options = {}, message = nil)","Asserts that the request was rendered with the appropriate template file or partials. ==== Examples #",2],["assert_valid_keys","Hash","classes/Hash.html#M002247","(*valid_keys)","Validate all keys in a hash match *valid keys, raising ArgumentError on a mismatch. Note that keys are",2],["asset_file_path!","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000314","(absolute_path, error_if_file_is_uri = false)","",2],["asset_name","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000298","()","",2],["asset_name","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#M000330","()","",2],["asset_name","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#M000327","()","",2],["asset_paths","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000326","()","",2],["asset_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000301","(source, options)","",2],["asset_tag","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#M000332","(source, options)","",2],["asset_tag","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#M000329","(source, options)","",2],["assign_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001019","(new_attributes, options = {})","Allows you to set all the attributes for a particular mass-assignment security role by passing in a hash",2],["assign_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001045","(pairs)","Instantiates objects for all attribute classes that needs more than one constructor parameter. This is",2],["assign_shortcuts","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000057","(*)","",2],["associated_records_to_validate_or_save","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000908","(association, new_record, autosave)","Returns the record for an association collection that should be validated or saved. If +autosave+ is",2],["association_valid?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000912","(reflection, record)","Returns whether or not the association is valid and applies any errors to the parent, <tt>self</tt>,",2],["at","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002954","(secs)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from number of seconds",2],["at","String","classes/String.html#M002367","(position)","Returns the character at the +position+ treating the string as an array (where 0 is the first character).",2],["at","String","classes/String.html#M002373","(position)","",2],["at_beginning_of_day","DateTime","classes/DateTime.html#M002196","()","Alias for #beginning_of_day",2],["at_beginning_of_day","Time","classes/Time.html#M002479","()","Alias for #beginning_of_day",2],["at_beginning_of_month","Time","classes/Time.html#M002482","()","Alias for #beginning_of_month",2],["at_beginning_of_quarter","Time","classes/Time.html#M002486","()","Alias for #beginning_of_quarter",2],["at_beginning_of_week","Time","classes/Time.html#M002471","()","Alias for #beginning_of_week",2],["at_beginning_of_year","Time","classes/Time.html#M002490","()","Alias for #beginning_of_year",2],["at_end_of_month","Time","classes/Time.html#M002484","()","Alias for #end_of_month",2],["at_end_of_quarter","Time","classes/Time.html#M002488","()","Alias for #end_of_quarter",2],["at_end_of_week","Time","classes/Time.html#M002473","()","Alias for #end_of_week",2],["at_end_of_year","Time","classes/Time.html#M002492","()","Alias for #end_of_year",2],["at_midnight","DateTime","classes/DateTime.html#M002195","()","Alias for #beginning_of_day",2],["at_midnight","Time","classes/Time.html#M002478","()","Alias for #beginning_of_day",2],["atom_feed","ActionView::Helpers::AtomFeedHelper","classes/ActionView/Helpers/AtomFeedHelper.html#M000347","(options = {}, &block)","Adds easy defaults to writing Atom feeds with the Builder template engine (this does not work on ERB",2],["atomic_write","File","classes/File.html#M002226","(file_name, temp_dir = Dir.tmpdir)","Write to a file atomically.  Useful for situations where you don't want other processes or threads to",2],["attach_to","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002666","(namespace, log_subscriber=new, notifier=ActiveSupport::Notifications)","",2],["attachments","ActionMailer::Base","classes/ActionMailer/Base.html#M000016","()","Allows you to add attachments to an email, like so: mail.attachments['filename.jpg'] = File.read('/path/to/filename.jpg')",2],["attr_accessible","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000726","(*args)","Specifies a white list of model attributes that can be set via mass-assignment. Like +attr_protected+,",2],["attr_accessor_with_default","Module","classes/Module.html#M002281","(sym, default = Proc.new)","Declare an attribute accessor with an initial default return value. To give attribute <tt>:age</tt> the",2],["attr_internal","Module","classes/Module.html#M002285","(*attrs)","Alias for #attr_internal_accessor",2],["attr_internal_accessor","Module","classes/Module.html#M002284","(*attrs)","Declares an attribute reader and writer backed by an internally-named instance variable. ",2],["attr_internal_define","Module","classes/Module.html#M002287","(attr_name, type)","",2],["attr_internal_ivar_name","Module","classes/Module.html#M002286","(attr)","",2],["attr_internal_reader","Module","classes/Module.html#M002282","(*attrs)","Declares an attribute reader backed by an internally-named instance variable. ",2],["attr_internal_writer","Module","classes/Module.html#M002283","(*attrs)","Declares an attribute writer backed by an internally-named instance variable. ",2],["attr_protected","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000723","(*args)","Attributes named in this macro are protected from mass-assignment whenever attributes are sanitized before",2],["attr_readonly","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000934","(*attributes)","Attributes listed as readonly will be used to create a new record but update operations will ignore these",2],["attribute","ActiveRecord::AttributeMethods::Read","classes/ActiveRecord/AttributeMethods/Read.html#M000884","(attribute_name)","",2],["attribute=","ActiveRecord::AttributeMethods::Write","classes/ActiveRecord/AttributeMethods/Write.html#M000891","(attribute_name, value)","Handle *= for method_missing. ",2],["attribute?","ActiveRecord::AttributeMethods::Query","classes/ActiveRecord/AttributeMethods/Query.html#M000872","(attribute_name)","Handle *? for method_missing. ",2],["attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#M000855","(attribute_name)","Handle *_before_type_cast for method_missing. ",2],["attribute_change","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000680","(attr)","Handle <tt>*_change</tt> for +method_missing+. ",2],["attribute_changed?","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000679","(attr)","Handle <tt>*_changed?</tt> for +method_missing+. ",2],["attribute_for_inspect","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001021","(attr_name)","Returns an <tt>#inspect</tt>-like string for the value of the attribute +attr_name+. String attributes",2],["attribute_match","HTML::Selector","classes/HTML/Selector.html#M000277","(equality, value)","Create a regular expression to match an attribute value based on the equality operator (=, ^=, |=, etc).",2],["attribute_method?","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000661","(attr_name)","",2],["attribute_method?","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000841","(attribute)","Check if method is an attribute method or not. ",2],["attribute_method?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000956","(attribute)","",2],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000644","(*affixes)","Declares a method available for all attributes with the given prefix and suffix. Uses +method_missing+",2],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000641","(*prefixes)","Declares a method available for all attributes with the given prefix. Uses +method_missing+ and <tt>respond_to?</tt>",2],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000642","(*suffixes)","Declares a method available for all attributes with the given suffix. Uses +method_missing+ and <tt>respond_to?</tt>",2],["attribute_methods_generated?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000894","()","",2],["attribute_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001017","()","Returns an array of names for the attributes available on this object. ",2],["attribute_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000957","()","Returns an array of column names as strings if it's not an abstract class and table exists. Otherwise",2],["attribute_present?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001022","(attribute)","Returns true if the specified +attribute+ has been set by the user or by a database load and is neither",2],["attribute_was","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000681","(attr)","Handle <tt>*_was</tt> for +method_missing+. ",2],["attribute_will_change!","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000684","(attr)","Handle <tt>*_will_change!</tt> for +method_missing+. ",2],["attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001020","()","Returns a hash of all the attributes with their names as keys and the values of the attributes as values.",2],["attributes=","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001018","(new_attributes, guard_protected_attributes = nil)","Allows you to set all the attributes at once by passing in a hash with keys matching the attribute names",2],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#M000854","()","Returns a hash of attributes before typecasting and deserialization. ",2],["attributes_from_column_definition","ActiveRecord::Locking::Optimistic","classes/ActiveRecord/Locking/Optimistic.html#M001465","()","",2],["attributes_from_column_definition","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001584","()","Initializes the attributes array with keys matching the columns from the linked table and the values",2],["attributes_protected_by_default","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000734","()","",2],["attributes_protected_by_default","ActiveModel::SecurePassword::ClassMethods","classes/ActiveModel/SecurePassword/ClassMethods.html#M000775","()","",2],["attributes_protected_by_default","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001042","()","The primary key and inheritance column can never be set by mass-assignment for security reasons. ",2],["audio_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000320","(source)","Computes the path to an audio asset in the public audios directory. Full paths from the document root",2],["audio_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000325","(source, options = {})","Returns an html audio tag for the +source+. The +source+ can be full path or file that exists in your",2],["auth_attributes_for","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001813","(uri, request_digest, params)","",2],["auth_type","ActiveResource::Base","classes/ActiveResource/Base.html#M001829","()","",2],["auth_type=","ActiveResource::Base","classes/ActiveResource/Base.html#M001830","(auth_type)","",2],["auth_type=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001791","(auth_type)","Sets the auth type for remote service. ",2],["authenticate","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M000091","(request, &login_procedure)","",2],["authenticate","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000100","(request, realm, &password_procedure)","Returns false on a valid response, true otherwise ",2],["authenticate","ActionController::HttpAuthentication::Token","classes/ActionController/HttpAuthentication/Token.html#M000124","(controller, &login_procedure)","If token Authorization header is present, call the login procedure with the present token and options.",2],["authenticate","ActiveModel::SecurePassword::InstanceMethodsOnActivation","classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#M000776","(unencrypted_password)","Returns self if the password is correct, otherwise false. ",2],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#M000088","(realm = \"Application\", &login_procedure)","",2],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#M000097","(realm = \"Application\", &password_procedure)","",2],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#M000120","(realm = \"Application\", &login_procedure)","",2],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#M000089","(&login_procedure)","",2],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#M000098","(realm = \"Application\", &password_procedure)","Authenticate with HTTP Digest, returns true or false ",2],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#M000121","(&login_procedure)","",2],["authentication_header","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000114","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M000095","(controller, realm)","",2],["authentication_request","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000115","(controller, realm, message = nil)","",2],["authentication_request","ActionController::HttpAuthentication::Token","classes/ActionController/HttpAuthentication/Token.html#M000128","(controller, realm)","Sets a WWW-Authenticate to let the client know a token is desired. controller - ActionController::Base",2],["authorization_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001809","(http_method, uri)","",2],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000313","(type = :rss, url_options = {}, tag_options = {})","Returns a link tag that browsers and news readers can use to auto-detect an RSS or ATOM feed. The +type+",2],["auto_flush","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001982","()","",2],["auto_flushing=","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001979","(period)","Set the auto-flush period. Set to true to flush after every log message, to an integer to flush every",2],["autoload","ActiveSupport::Autoload","classes/ActiveSupport/Autoload.html#M002512","(const_name, path = @@at_path)","",2],["autoload_at","ActiveSupport::Autoload","classes/ActiveSupport/Autoload.html#M002514","(path)","",2],["autoload_under","ActiveSupport::Autoload","classes/ActiveSupport/Autoload.html#M002513","(path)","",2],["autoloads","ActiveSupport::Autoload","classes/ActiveSupport/Autoload.html#M002517","()","",2],["average","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001603","(column_name, options = {})","Calculates the average value on a given column. Returns +nil+ if there's no row. See +calculate+ for",2],["backend=","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M002996","(name)","",2],["backtrace_cleaner","Rails","classes/Rails.html#M003011","()","",2],["bang?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001430","()","",2],["base_class","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000968","()","Returns the base AR subclass that this class descends from. If A extends AR::Base, A.base_class will",2],["basename","ActiveRecord::MigrationProxy","classes/ActiveRecord/MigrationProxy.html#M001550","()","",2],["batch_order","ActiveRecord::Batches","classes/ActiveRecord/Batches.html#M001595","()","",2],["becomes","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001563","(klass)","Returns an instance of the specified +klass+ with the attributes of the current record. This is mostly",2],["before_filters","ActionController::Testing::ClassMethods","classes/ActionController/Testing/ClassMethods.html#M000196","()","",2],["before_save_collection_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000913","()","Is used as a before_save callback to check while saving a collection association whether or not the parent",2],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","classes/ActiveModel/Validations/Callbacks/ClassMethods.html#M000789","(*args, &block)","",2],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001294","()","Begins a transaction. ",2],["begin_db_transaction","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001093","()","",2],["beginning_of_day","DateTime","classes/DateTime.html#M002193","()","Returns a new DateTime representing the start of the day (0:00) ",2],["beginning_of_day","Time","classes/Time.html#M002476","()","Returns a new Time representing the start of the day (0:00) ",2],["beginning_of_month","Time","classes/Time.html#M002481","()","Returns a new Time representing the start of the month (1st of the month, 0:00) ",2],["beginning_of_quarter","Time","classes/Time.html#M002485","()","Returns  a new Time representing the start of the quarter (1st of january, april, july, october, 0:00)",2],["beginning_of_week","Time","classes/Time.html#M002469","()","Returns a new Time representing the \"start\" of this week (Monday, 0:00) ",2],["beginning_of_year","Time","classes/Time.html#M002489","()","Returns  a new Time representing the start of the year (1st of january, 0:00) ",2],["behavior","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002518","()","Returns the set behavior or if one isn't set, defaults to +:stderr+ ",2],["behavior=","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002519","(behavior)","Sets the behavior to the specified value. Can be a single value or an array. Examples ActiveSupport::Deprecation.behavior",2],["belongs_to","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000899","(name, options = {})","Specifies a one-to-one association with another class. This method should only be used if this class",2],["benchmark","ActiveSupport::Benchmarkable","classes/ActiveSupport/Benchmarkable.html#M001971","(message = \"Benchmarking\", options = {})","Allows you to measure the execution time of a block in a template and records the result to the log.",2],["benchmark","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002878","()","",2],["between?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002920","(min, max)","",2],["bind","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001643","(value)","",2],["blank?","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000692","()","Alias for #empty?",2],["blank?","FalseClass","classes/FalseClass.html#M002342","()","+false+ is blank: false.blank? # => true ",2],["blank?","NilClass","classes/NilClass.html#M002341","()","+nil+ is blank: nil.blank? # => true ",2],["blank?","Object","classes/Object.html#M002338","()","An object is blank if it's false, empty, or a whitespace string. For example, \"\", \"   \", +nil+, [], and",2],["blank?","String","classes/String.html#M002344","()","A string is blank if it's empty or contains whitespaces only: \"\".blank?                 # => true \" ",2],["blank?","TrueClass","classes/TrueClass.html#M002343","()","+true+ is not blank: true.blank? # => false ",2],["breakpoint","Kernel","classes/Kernel.html#M002262","()","",2],["buffer","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001983","()","",2],["build","ActionController::Middleware","classes/ActionController/Middleware.html#M000201","(app)","Alias for #new",2],["build","ActionView::Resolver::Path","classes/ActionView/Resolver/Path.html#M000584","(name, prefix, partial)","",2],["build","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001680","(*args, &block)","Alias for #new",2],["build","ActiveResource::Base","classes/ActiveResource/Base.html#M001859","(attributes = {})","Builds a new, unsaved record using the default values from the remote server so that it can be used with",2],["build_arel","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001659","()","",2],["build_count_subquery","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001618","(relation, column_name, distinct)","",2],["build_joins","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001664","(manager, joins)","",2],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M001991","(*addresses)","",2],["build_path","ActionView::Resolver","classes/ActionView/Resolver.html#M000590","(name, prefix, partial)","Helpers that builds a path. Useful for building virtual paths. ",2],["build_request_headers","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001806","(headers, http_method, uri)","Builds headers for request to remote service. ",2],["build_request_uri","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000252","(action, parameters)","",2],["build_select","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001666","(arel, selects)","",2],["build_where","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001663","(opts, other = [])","",2],["button_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000458","(content_or_options = nil, options = nil, &block)","Creates a button element that defines a <tt>submit</tt> button, <tt>reset</tt>button or a generic button",2],["button_to","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000522","(name, options = {}, html_options = {})","Generates a form containing a single button that submits to the URL created by the set of +options+.",2],["button_to_function","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M000455","(name, function=nil, html_options={})","Returns a button whose +onclick+ handler triggers the passed JavaScript. The helper receives a name,",2],["bypass_local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002043","()","",2],["cache","ActionController::Caching","classes/ActionController/Caching.html#M000048","(key, options = {}, &block)","Convenience accessor ",2],["cache","ActionView::Helpers::CacheHelper","classes/ActionView/Helpers/CacheHelper.html#M000345","(name = {}, options = nil, &block)","This helper exposes a method for caching fragments of a view  rather than an entire action or page. This",2],["cache","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001130","()","",2],["cache","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001248","()","",2],["cache","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001317","()","",2],["cache","ActiveRecord::QueryCache::ClassMethods","classes/ActiveRecord/QueryCache/ClassMethods.html#M001568","(&block)","Enable the query cache within the block if Active Record is configured. ",2],["cache","Rails","classes/Rails.html#M003015","()","",2],["cache_attribute?","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000875","(attr_name)","Returns +true+ if the provided attribute is being cached. ",2],["cache_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000873","(*attribute_names)","+cache_attributes+ allows you to declare which converted attribute values should be cached. Usually caching",2],["cache_configured?","ActionController::Caching::ConfigMethods","classes/ActionController/Caching/ConfigMethods.html#M000046","()","",2],["cache_fixtures","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001458","(connection, fixtures_map)","",2],["cache_for_connection","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001455","(connection)","",2],["cache_key","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001014","()","Returns a cache key that can be used to identify this record. ==== Examples Product.new.cache_key   ",2],["cache_page","ActionController::Caching::Pages","classes/ActionController/Caching/Pages.html#M000043","(content = nil, options = nil)","Manually cache the +content+ in the key determined by +options+. If no content is provided, the contents",2],["cache_page","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M000037","(content, path, extension = nil)","Manually cache the +content+ in the key determined by +path+. Example: cache_page \"I'm the cached content\",",2],["cache_store","ActionController::Caching::ConfigMethods","classes/ActionController/Caching/ConfigMethods.html#M000044","()","",2],["cache_store=","ActionController::Caching::ConfigMethods","classes/ActionController/Caching/ConfigMethods.html#M000045","(store)","",2],["cache_template_loading","ActionView::Base","classes/ActionView/Base.html#M000281","()","",2],["cache_template_loading=","ActionView::Base","classes/ActionView/Base.html#M000282","(value)","",2],["cacheable_column?","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000877","(column)","",2],["cached_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000874","()","Returns the attributes which are cached. By default time related columns with datatype <tt>:datetime,",2],["cached_fixtures","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001457","(connection, keys_to_fetch = nil)","",2],["caches_action","ActionController::Caching::Actions::ClassMethods","classes/ActionController/Caching/Actions/ClassMethods.html#M000025","(*actions)","Declares that +actions+ should be cached. See ActionController::Caching::Actions for details. ",2],["caches_page","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M000038","(*actions)","Caches the +actions+ using the page-caching approach that'll store the cache in a path within the page_cache_directory",2],["caching_allowed?","ActionController::Caching","classes/ActionController/Caching.html#M000047","()","",2],["calculate","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001607","(operation, column_name, options = {})","This calculates aggregate values in the given column.  Methods for count, sum, average, minimum, and",2],["call","ActionController::Metal","classes/ActionController/Metal.html#M000224","(env)","Makes the controller a rack endpoint that points to the action in the given env's action_dispatch.request.path_parameters",2],["call","ActionController::Middleware::ActionMiddleware","classes/ActionController/Middleware/ActionMiddleware.html#M000199","(env)","",2],["call","ActionController::Responder","classes/ActionController/Responder.html#M000169","(*args)","Initializes a new responder an invoke the proper format. If the format is not defined, call to_format.",2],["call","ActionView::Template::Handler","classes/ActionView/Template/Handler.html#M000572","(template)","",2],["call","ActionView::Template::Handlers::Builder","classes/ActionView/Template/Handlers/Builder.html#M000567","(template)","",2],["call","ActionView::Template::Handlers::Compilable::ClassMethods","classes/ActionView/Template/Handlers/Compilable/ClassMethods.html#M000569","(template)","",2],["call","ActionView::Template::Handlers::ERB","classes/ActionView/Template/Handlers/ERB.html#M000582","(template)","",2],["call","ActionView::Template::Handlers::ERB","classes/ActionView/Template/Handlers/ERB.html#M000579","(template)","",2],["call","ActiveRecord::IdentityMap::Middleware","classes/ActiveRecord/IdentityMap/Middleware.html#M001452","(env)","",2],["call","ActiveRecord::QueryCache","classes/ActiveRecord/QueryCache.html#M001576","(env)","",2],["call","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002670","(message, *args)","",2],["call","I18n::ExceptionHandler","classes/I18n/ExceptionHandler.html#M000498","(exception, locale, key, options)","",2],["call","Logger::SimpleFormatter","classes/Logger/SimpleFormatter.html#M002277","(severity, timestamp, progname, msg)","This method is invoked when a log event occurs ",2],["camelcase","String","classes/String.html#M002393","(first_letter = :upper)","Alias for #camelize",2],["camelize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002607","(lower_case_and_underscored_word, first_letter_in_uppercase = true)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to +camelize+ is set to <tt>:lower</tt>",2],["camelize","String","classes/String.html#M002392","(first_letter = :upper)","By default, +camelize+ converts strings to UpperCamelCase. If the argument to camelize is set to <tt>:lower</tt>",2],["capitalize","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002730","()","Converts the first character to uppercase and the remainder to lowercase. Example: 'über'.mb_chars.capitalize.to_s",2],["capture","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000354","(*args)","The capture method allows you to extract part of a template into a variable. You can then use this variable",2],["capture","Kernel","classes/Kernel.html#M002269","(stream)","Captures the given stream and returns it: stream = capture(:stdout) { puts \"Cool\" } stream # => \"Cool\\n\"",2],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001219","()","",2],["case_sensitive_equality_operator","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001147","()","",2],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001220","(node)","",2],["case_sensitive_modifier","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001153","(node)","",2],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002994","(string)","Alias for #characters",2],["cdata_section","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000494","(content)","Returns a CDATA section with the given +content+.  CDATA sections are used to escape blocks of text containing",2],["center","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002713","(integer, padstr=' ')","Works just like <tt>String#center</tt>, only integer specifies characters instead of bytes. Example:",2],["change","DateTime","classes/DateTime.html#M002187","(options)","Returns a new DateTime where one or more of the elements have been changed according to the +options+",2],["change","Time","classes/Time.html#M002447","(options)","Returns a new Time where one or more of the elements have been changed according to the +options+ parameter.",2],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001355","(table_name, column_name, type, options = {})","Changes the column of a table. ",2],["change_column","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001120","(table_name, column_name, type, options = {})","",2],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001361","(table_name, column_name, default)","Changes the default value of a table column. ",2],["change_column_default","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001118","(table_name, column_name, default)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001206","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001362","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001395","(table_name, column_name, null, default = nil)","",2],["change_column_null","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001119","(table_name, column_name, null, default = nil)","",2],["change_column_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001227","(table_name, column_name, type, options = {})","",2],["changed","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000670","()","List of attributes with unsaved changes. person.changed # => [] person.name = 'bob' person.changed #",2],["changed?","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000669","()","Returns true if any attribute have unsaved changes, false otherwise. person.changed? # => false person.name",2],["changed_attributes","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000678","()","Map of change <tt>attr => original value</tt>. ",2],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000907","()","Returns whether or not this record has been changed in any way (including whether any of its nested autosave",2],["changes","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000671","()","Map of changed attrs => [original value, new value]. person.changes # => {} person.name = 'bob' person.changes",2],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002993","(string)","",2],["charset","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001194","()","Returns the database character set. ",2],["charset","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001107","()","Returns the database character set. ",2],["check_box","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000410","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","",2],["check_box","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000389","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","Returns a checkbox tag tailored for accessing a specified attribute (identified by +method+) on an object",2],["check_box_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000450","(name, value = \"1\", checked = false, options = {})","Creates a check box form input tag. ==== Options * <tt>:disabled</tt> - If set to true, the user will",2],["check_for_circular_references","ActiveSupport::JSON::Encoding::Encoder","classes/ActiveSupport/JSON/Encoding/Encoder.html#M002640","(value)","",2],["check_options_validity","ActiveModel::Validations::FormatValidator","classes/ActiveModel/Validations/FormatValidator.html#M000804","(options, name)","",2],["check_prefix_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001871","(prefix_options)","",2],["check_validity!","ActiveModel::EachValidator","classes/ActiveModel/EachValidator.html#M000843","()","Hook method that gets called by the initializer allowing verification that the arguments supplied are",2],["check_validity!","ActiveModel::Validations::ExclusionValidator","classes/ActiveModel/Validations/ExclusionValidator.html#M000795","()","",2],["check_validity!","ActiveModel::Validations::FormatValidator","classes/ActiveModel/Validations/FormatValidator.html#M000801","()","",2],["check_validity!","ActiveModel::Validations::InclusionValidator","classes/ActiveModel/Validations/InclusionValidator.html#M000805","()","",2],["check_validity!","ActiveModel::Validations::LengthValidator","classes/ActiveModel/Validations/LengthValidator.html#M000811","()","",2],["check_validity!","ActiveModel::Validations::NumericalityValidator","classes/ActiveModel/Validations/NumericalityValidator.html#M000812","()","",2],["civil_from_format","DateTime","classes/DateTime.html#M002209","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0)","",2],["class_eval","Kernel","classes/Kernel.html#M002274","(*args, &block)","class_eval on an object acts like singleton_class.class_eval. ",2],["class_name","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001598","()","Returns the class name for the macro. <tt>composed_of :balance, :class_name => 'Money'</tt> returns <tt>'Money'</tt>",2],["class_of_active_record_descendant","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000996","(klass)","Returns the class descending directly from ActiveRecord::Base or an abstract class, if any, in the inheritance",2],["classify","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002623","(table_name)","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["classify","String","classes/String.html#M002401","()","Create a class name from a plural table name like Rails does for table names to models. Note that this",2],["clean","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001960","(backtrace, kind = :silent)","Returns the backtrace after all filters and silencers have been run against it. Filters run first, then",2],["cleanup","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001988","(options = nil)","",2],["cleanup","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002015","(options = nil)","",2],["cleanup","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002064","(options = nil)","Cleanup the cache by removing expired entries. Options are passed to the underlying cache implementation.",2],["clear","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000672","()","Clear the messages ",2],["clear","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001129","()","",2],["clear","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001246","()","",2],["clear","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001316","()","",2],["clear","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001418","()","",2],["clear","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001449","()","",2],["clear","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001987","(options = nil)","",2],["clear","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002002","(options = nil)","Clear the entire cache on all memcached servers. This method should be used with care when shared cache",2],["clear","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002014","(options = nil)","",2],["clear","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002067","(options = nil)","Clear the entire cache. Be careful with this method since it could affect other processes if shared cache",2],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#M002018","(options = nil)","",2],["clear","ActiveSupport::DescendantsTracker","classes/ActiveSupport/DescendantsTracker.html#M002542","()","",2],["clear","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002609","(scope = :all)","Clears the loaded inflections within a given scope (default is <tt>:all</tt>). Give the scope as a symbol",2],["clear!","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002539","()","",2],["clear_buffer","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001984","()","",2],["clear_cache","ActionView::Resolver","classes/ActionView/Resolver.html#M000587","()","",2],["clear_cache!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001164","()","Clears the prepared statements cache. ",2],["clear_cache!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001257","()","Clears the prepared statements cache. ",2],["clear_cache!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001333","()","Clears the prepared statements cache. ",2],["clear_respond_to","ActionController::MimeResponds::ClassMethods","classes/ActionController/MimeResponds/ClassMethods.html#M000126","()","Clear all mime types in <tt>respond_to</tt>. ",2],["clear_timestamp_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001061","()","Clear attributes and changed_attributes ",2],["clear_transaction_record_state","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001769","()","Clear the new record state and id of a record. ",2],["client_encoding","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001170","()","Get the client encoding for this database ",2],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001337","()","Returns the current client message level. ",2],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001338","(level)","Set the client message level. ",2],["client_nonce","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001811","()","",2],["clone","ActiveResource::Base","classes/ActiveResource/Base.html#M001893","()","Returns a \\clone of the resource that hasn't been assigned an +id+ yet and is treated as a \\new resource.",2],["clone_attribute_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001036","(reader_method, attribute_name)","",2],["clone_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001035","(reader_method = :read_attribute, attributes = {})","",2],["clone_with_time_zone_conversion_attribute?","ActiveRecord::AttributeMethods::Dirty","classes/ActiveRecord/AttributeMethods/Dirty.html#M000862","(attr, old)","",2],["close","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001981","()","",2],["close","ActiveSupport::Gzip::Stream","classes/ActiveSupport/Gzip/Stream.html#M002570","()","",2],["collapse_wheres","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001662","(arel, wheres)","",2],["collation","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001195","()","Returns the database collation strategy. ",2],["collation","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001108","()","Returns the database collation strategy. ",2],["collect_asset_files","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000309","(*path)","",2],["collection_name","ActiveResource::Base","classes/ActiveResource/Base.html#M001851","()","",2],["collection_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001858","(prefix_options = {}, query_options = nil)","Gets the collection path for the REST resources.  If the +query_options+ parameter is omitted, Rails",2],["collection_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001925","(options = nil)","",2],["collection_select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000441","(method, collection, value_method, text_method, options = {}, html_options = {})","",2],["collection_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000415","(object, method, collection, value_method, text_method, options = {}, html_options = {})","Returns <tt><select></tt> and <tt><option></tt> tags for the collection of existing return values of",2],["color","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002671","(text, color, bold=false)","Set color by using a string or one of the defined constants. If a third option is set to true, it also",2],["column_alias_for","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001613","(*keys)","Converts the given keys to the value that the database adapter returns as a usable column name: column_alias_for(\"users.id\")",2],["column_defaults","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000950","()","Returns a hash where the keys are column names and the values are default values when instantiating the",2],["column_for","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001614","(field)","",2],["column_for","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001259","(table_name, column_name)","",2],["column_for","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001175","(table_name, column_name)","",2],["column_for_attribute","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001023","(name)","Returns the column object for the named attribute. ",2],["column_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000951","()","Returns an array of column names as strings. ",2],["column_names","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001484","()","",2],["columns","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000948","()","Returns an array of column objects for the table associated with this class. ",2],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001325","(table_name, name = nil)","Returns the list of all column definitions for a table. ",2],["columns","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001113","(table_name, name = nil)","Returns an array of +Mysql2Column+ objects for the table specified by +table_name+. ",2],["columns_hash","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000949","()","Returns a hash of column objects for the table associated with this class. ",2],["comma_pair_list","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001056","(hash)","Returns a comma-separated pair list, like \"key1 = val1, key2 = val2\". ",2],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001295","()","Commits a transaction. ",2],["commit_db_transaction","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001094","()","",2],["comparable_time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002890","()","Alias for #utc",2],["compare_with_coercion","Time","classes/Time.html#M002501","(other)","Layers additional behavior on Time#<=> so that DateTime and ActiveSupport::TimeWithZone instances can",2],["compare_without_coercion","Time","classes/Time.html#M002503","(other)","Alias for #<=>",2],["compile","ActionView::Template::Handlers::Compilable","classes/ActionView/Template/Handlers/Compilable.html#M000570","(template)","",2],["compile_methods!","ActiveSupport::Configurable::Configuration","classes/ActiveSupport/Configurable/Configuration.html#M002097","()","",2],["compile_methods!","ActiveSupport::Configurable::Configuration","classes/ActiveSupport/Configurable/Configuration.html#M002098","(keys)","compiles reader methods so we don't have to go through method_missing ",2],["compose","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002736","()","Performs composition on all the characters. Example: 'é'.length                       # => 3 'é'.mb_chars.compose.to_s.length",2],["compose_codepoints","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002733","(codepoints)","Compose decomposed characters to the composed form. ",2],["composed_of","ActiveRecord::Aggregations::ClassMethods","classes/ActiveRecord/Aggregations/ClassMethods.html#M000850","(part_id, options = {})","Adds reader and writer methods for manipulating a value object: <tt>composed_of :address</tt> adds <tt>address</tt>",2],["compress","ActiveSupport::Gzip","classes/ActiveSupport/Gzip.html#M002572","(source)","Compresses a string using gzip. ",2],["compressed?","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002085","()","",2],["compute_paths","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000305","(*args)","",2],["compute_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000982","()","Computes and returns a table name according to default conventions. ",2],["compute_type","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000995","(type_name)","Returns the class type of the record using the current module as a prefix. So descendants of MyApp::Business::Account",2],["concat","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000499","(string)","The preferred method of outputting text in your views is to use the <%= \"text\" %> eRuby syntax. The regular",2],["concat","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002417","(value)","",2],["config","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000619","()","",2],["config","ActiveSupport::Configurable","classes/ActiveSupport/Configurable.html#M002102","()","Reads and writes attributes from a configuration <tt>OrderedHash</tt>. require 'active_support/configurable'",2],["config","ActiveSupport::Configurable::ClassMethods","classes/ActiveSupport/Configurable/ClassMethods.html#M002099","()","",2],["config_accessor","ActiveSupport::Configurable::ClassMethods","classes/ActiveSupport/Configurable/ClassMethods.html#M002101","(*names)","Allows you to add shortcut so that you don't have to refer to attribute through config. Also look at",2],["configuration","Rails","classes/Rails.html#M003005","()","The Configuration instance used to configure the Rails environment ",2],["configurations","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000923","","Contains the database configuration - as is typically stored in config/database.yml - as a Hash. For",2],["configure","ActiveSupport::Configurable::ClassMethods","classes/ActiveSupport/Configurable/ClassMethods.html#M002100","()","",2],["configure_connection","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001249","()","",2],["configure_connection","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001394","()","Configures the encoding, verbosity, schema search path, and time zone of the connection. This is called",2],["configure_connection","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001166","()","",2],["configure_http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001803","(http)","",2],["connect","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001238","()","",2],["connect","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001392","()","Connects to a PostgreSQL server and sets up the adapter depending on the connected server's characteristics.",2],["connect","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001165","()","",2],["connection","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001544","()","",2],["connection","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001731","()","",2],["connection","ActiveResource::Base","classes/ActiveResource/Base.html#M001844","(refresh = false)","An instance of ActiveResource::Connection that is the base \\connection to the remote service. The +refresh+",2],["connection","ActiveResource::Base","classes/ActiveResource/Base.html#M001918","(refresh = false)","",2],["connection_active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001251","()","",2],["connection_pool","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001732","()","",2],["constantize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002616","(camel_cased_word)","Tries to find a constant with the name specified in the argument string: \"Module\".constantize     # =>",2],["constantize","String","classes/String.html#M002390","()","+constantize+ tries to find a declared constant with the name specified in the string. It raises a NameError",2],["construct_finder_arel","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000979","(options = {}, scope = nil)","",2],["construct_join_dependency_for_association_find","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001627","()","",2],["construct_limited_ids_condition","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001632","(relation)","",2],["construct_relation_for_association_calculations","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001628","()","",2],["construct_relation_for_association_find","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001629","(join_dependency)","",2],["consumes?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002697","(string)","Returns +true+ when the proxy class can handle the string. Returns +false+ otherwise. ",2],["contains_bad_protocols?","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M000267","(attr_name, value)","",2],["content_columns","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000952","()","Returns an array of column objects where the primary id, all columns ending in \"_id\" or \"_count\", and",2],["content_for","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000355","(name, content = nil, &block)","Calling content_for stores a block of markup in an identifier for later use. You can make subsequent",2],["content_for?","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000357","(name)","content_for? simply checks whether any content has been captured yet using content_for Useful to render",2],["content_tag","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000493","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","Returns an HTML block tag of type +name+ surrounding the +content+. Add HTML attributes by passing an",2],["content_tag_for","ActionView::Helpers::RecordTagHelper","classes/ActionView/Helpers/RecordTagHelper.html#M000483","(tag_name, record, prefix = nil, options = nil, &block)","content_tag_for creates an HTML element with id and class parameters that relate to the specified Active",2],["content_tag_string","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000496","(name, content, options, escape = true)","",2],["content_type","ActionController::Metal","classes/ActionController/Metal.html#M000212","()","",2],["content_type=","ActionController::Metal","classes/ActionController/Metal.html#M000211","(type)","Basic implementations for content_type=, location=, and headers are provided to reduce the dependency",2],["controller_class","ActionController::TestCase::Behavior::ClassMethods","classes/ActionController/TestCase/Behavior/ClassMethods.html#M000238","()","",2],["controller_class=","ActionController::TestCase::Behavior::ClassMethods","classes/ActionController/TestCase/Behavior/ClassMethods.html#M000237","(new_class)","",2],["controller_name","ActionController::Metal","classes/ActionController/Metal.html#M000207","()","Delegates to the class' <tt>controller_name</tt> ",2],["controller_name","ActionController::Metal","classes/ActionController/Metal.html#M000206","()","Returns the last part of the controller's name, underscored, without the ending <tt>Controller</tt>.",2],["controller_path","ActionMailer::Base","classes/ActionMailer/Base.html#M000014","()","Alias for #mailer_name",2],["controller_path=","ActionView::TestCase::TestController","classes/ActionView/TestCase/TestController.html#M000608","(path)","",2],["convert_boolean_attributes!","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000556","(html_options, bool_attrs)","Processes the +html_options+ hash, converting the boolean attributes from true/false form into the form",2],["convert_dates_from","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002631","(data)","",2],["convert_key","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002594","(key)","",2],["convert_number_column_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001059","(value)","",2],["convert_options_to_data_attributes","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000542","(options, html_options)","",2],["convert_to_model","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000426","(object)","",2],["convert_to_model","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000369","(object)","Converts the given object to an ActiveModel compliant one. ",2],["convert_to_model","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000738","(object)","",2],["convert_value","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002596","(value)","",2],["cookies","ActionController::Cookies","classes/ActionController/Cookies.html#M000064","()","",2],["copy","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001546","(destination, sources, options = {})","",2],["count","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000690","()","Returns the number of error messages. p.errors.add(:name, \"can't be blank\") p.errors.count # => 1 p.errors.add(:name,",2],["count","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001602","(column_name = nil, options = {})","Count operates using three different approaches. * Count all: By not passing any parameters to count,",2],["count_by_sql","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000933","(sql)","Returns the result of an SQL statement that should only include a COUNT(*) in the SELECT part. The use",2],["count_observers","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000755","()","Total number of observers. ",2],["create","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000932","(attributes = nil, options = {}, &block)","Creates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["create","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001087","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Alias for #insert_sql",2],["create","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001583","()","Creates a record with values matching those of the instance attributes and returns its id. ",2],["create","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001681","(*args, &block)","",2],["create","ActiveResource::Base","classes/ActiveResource/Base.html#M001920","()","Create (i.e., \\save to the remote service) the \\new resource. ",2],["create","ActiveResource::Base","classes/ActiveResource/Base.html#M001864","(attributes = {})","Creates a new resource instance and makes a request to the remote service that it be saved, making it",2],["create","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002080","(raw_value, created_at, options = {})","Create an entry with internal attributes set. This method is intended to be used by implementations that",2],["create","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002967","(name)","Alias for #new",2],["create!","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001682","(*args, &block)","",2],["create!","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001780","(attributes = nil, options = {}, &block)","Creates an object just like Base.create but calls <tt>save!</tt> instead of +save+ so an exception is",2],["create_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001191","(name, options = {})","Create a new MySQL database with optional <tt>:charset</tt> and <tt>:collation</tt>. Charset defaults",2],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001302","(name, options = {})","Create a new PostgreSQL database.  Options include <tt>:owner</tt>, <tt>:template</tt>, <tt>:encoding</tt>,",2],["create_database","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001104","(name, options = {})","Create a new MySQL database with optional <tt>:charset</tt> and <tt>:collation</tt>. Charset defaults",2],["create_fixtures","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001461","(fixtures_directory, table_names, class_names = {})","",2],["create_or_update","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001581","()","",2],["create_path_and_open_file","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002815","(printer_name)","",2],["create_proxy_uri_from","ActiveResource::Base","classes/ActiveResource/Base.html#M001882","(proxy)","Accepts a URI and creates the proxy URI from that. ",2],["create_reflection","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001587","(macro, name, options, active_record)","",2],["create_resource_for","ActiveResource::Base","classes/ActiveResource/Base.html#M001932","(resource_name)","Create and return a class definition for a resource inside the current resource ",2],["create_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001184","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001298","()","",2],["create_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001365","()","",2],["create_savepoint","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001096","()","",2],["create_site_uri_from","ActiveResource::Base","classes/ActiveResource/Base.html#M001881","(site)","Accepts a URI and creates the site URI from that. ",2],["create_table","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001114","(table_name, options = {})","",2],["create_time_zone_conversion_attribute?","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#M000887","(name, column)","",2],["create_with","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001651","(value)","",2],["creator?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001428","()","",2],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","classes/ActionView/Helpers/CsrfHelper.html#M000361","()","Alias for #csrf_meta_tags",2],["csrf_meta_tags","ActionView::Helpers::CsrfHelper","classes/ActionView/Helpers/CsrfHelper.html#M000360","()","Returns meta tags \"csrf-param\" and \"csrf-token\" with the name of the cross-site request forgery protection",2],["csv_file_path","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001489","()","",2],["current","DateTime","classes/DateTime.html#M002183","()","Returns <tt>Time.zone.now.to_datetime</tt> when <tt>Time.zone</tt> or <tt>config.time_zone</tt> are set,",2],["current","Time","classes/Time.html#M002440","()","Returns <tt>Time.zone.now</tt> when <tt>Time.zone</tt> or <tt>config.time_zone</tt> are set, otherwise",2],["current_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000514","(name = \"default\")","Returns the current cycle string after a cycle has been started. Useful for complex table highlighting",2],["current_database","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001193","()","",2],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001326","()","Returns the current database name. ",2],["current_database","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001106","()","",2],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002979","()","",2],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002987","()","",2],["current_page?","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000536","(options)","True if the current request URI was generated by the given +options+. ==== Examples Let's say we're in",2],["custom_dir","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000300","()","",2],["custom_dir","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#M000333","()","",2],["custom_dir","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#M000335","()","",2],["custom_join_ast","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001661","(table, joins)","",2],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","classes/ActiveResource/CustomMethods/ClassMethods.html#M001838","(method_name, options = {})","",2],["custom_method_element_url","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001847","(method_name, options = {})","",2],["custom_method_new_element_url","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001848","(method_name, options = {})","",2],["cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000513","(first_value, *values)","Creates a Cycle object whose _to_s_ method cycles through elements of an array every time it is called.",2],["daemon","Process","classes/Process.html#M002366","(nochdir = nil, noclose = nil)","",2],["dasherize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002611","(underscored_word)","Replaces underscores with dashes in the string. Example: \"puni_puni\" # => \"puni-puni\" ",2],["dasherize","String","classes/String.html#M002397","()","Replaces underscores with dashes in the string. \"puni_puni\" # => \"puni-puni\" ",2],["data","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001724","()","Lazy-unmarshal session state. ",2],["data","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001735","()","Lazy-unmarshal session state. ",2],["data_column","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001730","","The data field defaults to 'data'. ",2],["data_column_name","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001716","","Customizable data column name.  Defaults to 'data'. ",2],["data_column_size_limit","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001717","()","",2],["database","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002752","()","",2],["date_select","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000366","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, and day) pre-selected for accessing a specified date-based",2],["date_select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000401","(method, options = {}, html_options = {})","",2],["datetime_select","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000368","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for year, month, day, hour, and minute) pre-selected for accessing",2],["datetime_select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000403","(method, options = {}, html_options = {})","",2],["days_in_month","Time","classes/Time.html#M002431","(month, year = now.year)","Return the number of days in the given month. If no year is specified, it will use the current year.",2],["dealloc","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001250","(key)","",2],["dealloc","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001318","(stmt)","",2],["debug","ActionView::Helpers::DebugHelper","classes/ActionView/Helpers/DebugHelper.html#M000362","(object)","Returns a YAML representation of +object+ wrapped with <pre> and </pre>. If the object cannot be converted",2],["debug_protected_attribute_removal","ActiveModel::MassAssignmentSecurity::Sanitizer","classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#M000719","(attributes, sanitized_attributes)","",2],["debugger","Kernel","classes/Kernel.html#M002261","()","Starts a debugging session if ruby-debug has been loaded (call rails server --debugger to do load it).",2],["decode","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001876","(json)","",2],["decode","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001892","(xml)","",2],["decode","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002626","(json, options ={})","",2],["decode64","ActiveSupport::Base64","classes/ActiveSupport/Base64.html#M001969","(data)","Decodes a base 64 encoded string to its original representation. ActiveSupport::Base64.decode64(\"T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==\")",2],["decode_credentials","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M000093","(request)","",2],["decode_credentials","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000113","(header)","",2],["decode_credentials_header","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000112","(request)","",2],["decompose","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002735","()","Performs canonical decomposition on all the characters. Example: 'é'.length                         #",2],["decompose_codepoints","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002729","(type, codepoints)","Decompose composed characters to the decomposed form. ",2],["decompress","ActiveSupport::Gzip","classes/ActiveSupport/Gzip.html#M002571","(source)","Decompresses a gzipped string. ",2],["decrement","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001573","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and subtracts the value passed as +by+ (default is 1). The decrement",2],["decrement","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001990","(name, amount = 1, options = nil)","",2],["decrement","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002026","(name, amount = 1, options = nil)","Decrement an integer value in the cache. ",2],["decrement","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002063","(name, amount = 1, options = nil)","Increment an integer value in the cache. Options are passed to the underlying cache implementation. All",2],["decrement!","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001574","(attribute, by = 1)","Wrapper around +decrement+ that saves the record. This method differs from its non-bang version in that",2],["decrement_counter","ActiveRecord::CounterCache","classes/ActiveRecord/CounterCache.html#M001432","(counter_name, id)","Decrement a number field by one, usually representing a count. This works the same as increment_counter",2],["decrypt","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002682","(encrypted_message)","",2],["decrypt_and_verify","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002684","(value)","",2],["deep_dup","Hash","classes/Hash.html#M002229","()","Returns a deep copy of hash. ",2],["deep_merge","Hash","classes/Hash.html#M002233","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. ",2],["deep_merge!","Hash","classes/Hash.html#M002234","(other_hash)","Returns a new hash with +self+ and +other_hash+ merged recursively. Modifies the receiver in place. ",2],["default","ActionMailer::Base","classes/ActionMailer/Base.html#M000005","(value = nil)","",2],["default","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002576","(key = nil)","",2],["default_action","ActionController::Responder","classes/ActionController/Responder.html#M000184","()","By default, render the <code>:edit</code> action for HTML requests with failure, unless the verb is POST.",2],["default_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001805","()","",2],["default_inspect","DateTime","classes/DateTime.html#M002204","()","Alias for #inspect",2],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001421","()","",2],["default_render","ActionController::ImplicitRender","classes/ActionController/ImplicitRender.html#M000085","(*args)","",2],["default_render","ActionController::Responder","classes/ActionController/Responder.html#M000180","()","If a given response block was given, use it, otherwise call render on controller. ",2],["default_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000990","(scope = {})","Use this macro in your model to set a default scope for all operations on the model. class Article <",2],["default_timezone","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000928","","Determines whether to use Time.local (using :local) or Time.utc (using :utc) when pulling dates and times",2],["define","ActiveRecord::Schema","classes/ActiveRecord/Schema.html#M001694","(info={}, &block)","Eval the given block. All methods available to the current connection adapter are available within the",2],["define_attr_method","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000640","(name, value=nil, &block)","Defines an \"attribute\" method (like +inheritance_column+ or +table_name+). A new (class) method will",2],["define_attribute_method","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000651","(attr_name)","",2],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000650","(attr_names)","Declares the attributes that should be prefixed and suffixed by ActiveModel::AttributeMethods. To use,",2],["define_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000893","()","Generates all the attribute related methods for columns in the database accessors, mutators and query",2],["define_callbacks","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001558","(klass)","",2],["define_callbacks","ActiveSupport::ClassMethods","classes/ActiveSupport/ClassMethods.html#M002093","(*callbacks)","Define sets of events in the object lifecycle that support callbacks. define_callbacks :validate define_callbacks",2],["define_method_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000876","(attr_name)","",2],["define_method_attribute","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#M000885","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["define_method_attribute=","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#M000886","(attr_name)","Defined for all +datetime+ and +timestamp+ attributes when +time_zone_aware_attributes+ are enabled.",2],["define_method_attribute=","ActiveRecord::AttributeMethods::Write::ClassMethods","classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html#M000888","(attr_name)","",2],["define_model_callbacks","ActiveModel::Callbacks","classes/ActiveModel/Callbacks.html#M000645","(*callbacks)","define_model_callbacks accepts the same options define_callbacks does, in case you want to overwrite",2],["define_non_cyclic_method","ActiveRecord::AutosaveAssociation::ClassMethods","classes/ActiveRecord/AutosaveAssociation/ClassMethods.html#M000902","(name, reflection, &block)","",2],["define_read_method","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000879","(method_name, attr_name, column)","Define an attribute reader method.  Cope with nil column. method_name is the same as attr_name except",2],["define_read_method_for_serialized_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#M000878","(attr_name)","Define read method for serialized attribute. ",2],["defined_activerecord_methods","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000898","()","",2],["delegate","Module","classes/Module.html#M002292","(*methods)","Provides a delegate class method to easily expose contained objects' methods as your own. Pass one or",2],["delete","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000244","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating DELETE HTTP method and set/volley the response ",2],["delete","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001127","(key)","",2],["delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001247","(sql_key)","",2],["delete","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001419","(key)","",2],["delete","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001561","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["delete","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001699","(id_or_array)","Deletes the row with a primary key matching the +id+ argument, using a SQL +DELETE+ statement, and returns",2],["delete","ActiveResource::Base","classes/ActiveResource/Base.html#M001869","(id, options = {})","Deletes the resources with the ID in the +id+ parameter. ==== Options All options specify \\prefix and",2],["delete","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001795","(path, headers = {})","Executes a DELETE request (see HTTP protocol documentation if unfamiliar). Used to delete resources.",2],["delete","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001833","(custom_method_name, options = {})","",2],["delete","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001846","(method_name, options = {})","",2],["delete","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002058","(name, options = nil)","Deletes an entry in the cache. Returns +true+ if an entry is deleted. Options are passed to the underlying",2],["delete","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002588","(key)","Removes a specified key from the hash. ",2],["delete_all","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001698","(conditions = nil)","Deletes the records matching +conditions+ without instantiating the records first, and hence not calling",2],["delete_empty_directories","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002006","(dir)","Delete empty directories in the cache. ",2],["delete_entry","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001997","(key, options)","",2],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#M002022","(key, options)","",2],["delete_matched","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001992","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002030","(matcher, options = nil)","",2],["delete_matched","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002061","(matcher, options = nil)","Delete all entries with keys matching the pattern. Options are passed to the underlying cache implementation.",2],["delete_responses_to_replace","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001936","(new_responses)","",2],["demodulize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002614","(class_name_in_module)","Removes the module part from the expression in the string. Examples: \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["demodulize","String","classes/String.html#M002398","()","Removes the module part from the constant expression in the string. \"ActiveRecord::CoreExtensions::String::Inflections\".demodulize",2],["deny?","ActiveModel::MassAssignmentSecurity::BlackList","classes/ActiveModel/MassAssignmentSecurity/BlackList.html#M000717","(key)","",2],["deny?","ActiveModel::MassAssignmentSecurity::WhiteList","classes/ActiveModel/MassAssignmentSecurity/WhiteList.html#M000716","(key)","",2],["deprecate","Module","classes/Module.html#M002291","(*method_names)","Declare that a method has been deprecated. deprecate :foo deprecate :bar => 'message' deprecate :foo,",2],["deprecated_method_warning","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002527","(method_name, message = nil)","",2],["deprecation_caller_message","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002529","(callstack)","",2],["deprecation_message","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002528","(callstack, message = nil)","",2],["derive_class_name","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001601","()","",2],["descendants","ActiveSupport::DescendantsTracker","classes/ActiveSupport/DescendantsTracker.html#M002545","()","",2],["descendants","ActiveSupport::DescendantsTracker","classes/ActiveSupport/DescendantsTracker.html#M002541","(klass)","",2],["descends_from_active_record?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000960","()","True if this isn't a concrete subclass needing a STI type condition. ",2],["describe","ActiveSupport::Testing::Declarative","classes/ActiveSupport/Testing/Declarative.html#M002787","(text)","",2],["deserialize_entry","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002012","(raw_value)","",2],["destroy","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001562","()","Deletes the record in the database and freezes this instance to reflect that no changes should be made",2],["destroy","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001697","(id)","Destroy an object (or multiple objects) that has the given id, the object is instantiated first, therefore",2],["destroy","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001738","()","",2],["destroy","ActiveResource::Base","classes/ActiveResource/Base.html#M001907","()","Deletes the resource from the remote service. ==== Examples my_id = 3 my_person = Person.find(my_id)",2],["destroy_all","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001696","(conditions = nil)","Destroys the records matching +conditions+ by instantiating each record and calling its +destroy+ method.",2],["destroy_associations","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001580","()","A hook to be overridden by association modules. ",2],["destroy_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001741","(env, session_id, options)","",2],["destroyed?","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001554","()","Returns true if this object has been destroyed, otherwise returns false. ",2],["determine_default_controller_class","ActionController::TestCase::Behavior::ClassMethods","classes/ActionController/TestCase/Behavior/ClassMethods.html#M000239","(name)","",2],["determine_default_helper_class","ActionView::TestCase::Behavior::ClassMethods","classes/ActionView/TestCase/Behavior/ClassMethods.html#M000611","(name)","",2],["determine_source","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000310","(source, collection)","",2],["diff","Hash","classes/Hash.html#M002236","(h2)","Returns a hash that represents the difference between two hashes. Examples: {1 => 2}.diff(1 => 2)   ",2],["digest_auth_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001810","(http_method, uri)","",2],["direct_descendants","ActiveSupport::DescendantsTracker","classes/ActiveSupport/DescendantsTracker.html#M002540","(klass)","",2],["direct_descendants","ActiveSupport::DescendantsTracker","classes/ActiveSupport/DescendantsTracker.html#M002544","()","",2],["dirname","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#M002749","()","Returns the directory in which the data files are stored ",2],["dirty?","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002426","()","",2],["disable","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000746","(*observers, &block)","Disables one or more observers.  This supports multiple forms: ORM.observers.disable :user_observer #",2],["disable_cache","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000549","()","Temporary skip passing the details_key forward. ",2],["disabled_for?","ActiveModel::Observer","classes/ActiveModel/Observer.html#M000773","(object)","",2],["disabled_for?","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000744","(observer)","Returns true if the given observer is disabled for the model class. ",2],["disabled_observer_stack","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000758","()","",2],["disabled_observers","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000752","()","",2],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001160","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001262","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001332","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["disconnect!","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001082","()","Disconnects from the database if already connected. Otherwise, this method does nothing. ",2],["dispatch","ActionController::RackDelegation","classes/ActionController/RackDelegation.html#M000138","(action, request, response = ActionDispatch::Response.new)","",2],["display","ActionController::Responder","classes/ActionController/Responder.html#M000181","(resource, given_options={})","Display is just a shortcut to render a resource with the current format. display @user, :status => :ok",2],["display_errors","ActionController::Responder","classes/ActionController/Responder.html#M000182","()","",2],["distance_of_time_in_words","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000363","(from_time, to_time = 0, include_seconds = false, options = {})","Reports the approximate distance in time between two Time, Date or DateTime objects or integers as seconds.",2],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000365","(from_time, include_seconds = false)","Alias for #time_ago_in_words",2],["div_for","ActionView::Helpers::RecordTagHelper","classes/ActionView/Helpers/RecordTagHelper.html#M000481","(record, *args, &block)","Produces a wrapper DIV element with id and class parameters that relate to the specified Active Record",2],["dom_class","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M000227","(record_or_class, prefix = nil)","The DOM class convention is to use the singular form of an object or class. Examples: dom_class(post)",2],["dom_id","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M000228","(record, prefix = nil)","The DOM id convention is to use the singular form of an object or class with the id following an underscore.",2],["down","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001537","()","",2],["downcase","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002728","()","Convert characters in the string to lowercase. Example: 'VĚDA A VÝZKUM'.mb_chars.downcase.to_s # => \"věda",2],["drop_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001198","(table_name, options = {})","",2],["drop_table","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001111","(table_name, options = {})","",2],["dst?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002898","()","",2],["dup","ActiveResource::Base","classes/ActiveResource/Base.html#M001904","()","Duplicates the current resource without saving it. ==== Examples my_invoice = Invoice.create(:customer",2],["dup","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002584","()","Returns an exact copy of the hash. ",2],["duplicable?","FalseClass","classes/FalseClass.html#M002347","()","+false+ is not duplicable: false.duplicable? # => false false.dup         # => TypeError: can't dup FalseClass",2],["duplicable?","Module","classes/Module.html#M002351","()","Modules are not duplicable: m = Module.new # => #<Module:0x10328b6e0> m.dup          # => #<Module:0x10328b6e0>",2],["duplicable?","NilClass","classes/NilClass.html#M002346","()","+nil+ is not duplicable: nil.duplicable? # => false nil.dup         # => TypeError: can't dup NilClass",2],["duplicable?","Object","classes/Object.html#M002345","()","Can you safely dup this object? False for +nil+, +false+, +true+, symbols, numbers, class and module",2],["duplicable?","Symbol","classes/Symbol.html#M002349","()","Symbols are not duplicable: :my_symbol.duplicable? # => false :my_symbol.dup         # => TypeError:",2],["duplicable?","TrueClass","classes/TrueClass.html#M002348","()","+true+ is not duplicable: true.duplicable? # => false true.dup         # => TypeError: can't dup TrueClass",2],["duration_of_variable_length?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002958","(obj)","",2],["each","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000683","()","Iterates through each error key, value pair in the error messages hash. Yields the attribute and the",2],["each","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001122","(&block)","",2],["each","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001240","(&block)","",2],["each","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001309","(&block)","",2],["each","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001413","()","",2],["each","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001470","(&block)","",2],["each","ActiveRecord::Result","classes/ActiveRecord/Result.html#M001676","()","",2],["each_subclass_array","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000763","()","",2],["each_with_object","Enumerable","classes/Enumerable.html#M002222","(memo, &block)","Iterates over a collection, passing the current element *and* the +memo+ to the block. Handy for building",2],["eager_autoload","ActiveSupport::Autoload","classes/ActiveSupport/Autoload.html#M002515","()","",2],["eager_autoload!","ActiveSupport::Autoload","classes/ActiveSupport/Autoload.html#M002516","()","",2],["eager_load","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001633","(*args)","",2],["eager_loading?","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001705","()","",2],["element_name","ActiveResource::Base","classes/ActiveResource/Base.html#M001850","()","",2],["element_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001856","(id, prefix_options = {}, query_options = nil)","Gets the element path for the given ID in +id+.  If the +query_options+ parameter is omitted, Rails will",2],["element_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001923","(options = nil)","",2],["email_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000395","(object_name, method, options = {})","Returns a text_field of type \"email\". email_field(\"user\", \"address\") # => <input id=\"user_address\" size=\"30\"",2],["email_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000465","(name, value = nil, options = {})","Creates a text field of type \"email\". ==== Options * Accepts the same options as text_field_tag. ",2],["emitted_hidden_id?","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000417","()","",2],["empty?","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000691","()","Returns true if no errors are found, false otherwise. ",2],["empty?","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001688","()","Returns true if there are no records. ",2],["empty?","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002532","()","",2],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001402","()","",2],["empty_json_resource","ActionController::Responder","classes/ActionController/Responder.html#M000187","()","Return a valid empty JSON resource ",2],["empty_resource","ActionController::Responder","classes/ActionController/Responder.html#M000186","()","Delegate to proper empty resource method ",2],["emulate_booleans","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001116","","By default, the MysqlAdapter will consider all columns of type <tt>tinyint(1)</tt> as boolean. If you",2],["enable","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000751","(*observers, &block)","Enables one or more observers.  This supports multiple forms: ORM.observers.enable :user_observer # =>",2],["enable_warnings","Kernel","classes/Kernel.html#M002264","()","Sets $VERBOSE to true for the duration of the block and back to its original value afterwards. ",2],["enabled","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001441","()","",2],["enabled=","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001440","(flag)","",2],["encode","ActiveResource::Base","classes/ActiveResource/Base.html#M001909","(options={})","Returns the serialized string representation of the resource in the configured serialization format specified",2],["encode","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001875","(hash, options = nil)","",2],["encode","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001891","(hash, options={})","",2],["encode","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002632","(value, options = nil)","Dumps object in JSON (JavaScript Object Notation). See www.json.org for more info. ",2],["encode","ActiveSupport::JSON::Encoding::Encoder","classes/ActiveSupport/JSON/Encoding/Encoder.html#M002636","(value, use_options = true)","",2],["encode64","ActiveSupport::Base64","classes/ActiveSupport/Base64.html#M001968","(data)","Encodes a string to its base 64 representation. Each 60 characters of output is separated by a newline",2],["encode64s","ActiveSupport::Base64","classes/ActiveSupport/Base64.html#M001970","(value)","Encodes the value as base64 without the newline breaks. This makes the base64 encoding readily usable",2],["encode_credentials","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M000094","(user_name, password)","",2],["encode_credentials","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000111","(http_method, credentials, password, password_is_ha1)","",2],["encode_credentials","ActionController::HttpAuthentication::Token","classes/ActionController/HttpAuthentication/Token.html#M000127","(token, options = {})","Encodes the given token and options into an Authorization header value. token   - String token. options",2],["encode_json","ActiveSupport::JSON::Variable","classes/ActiveSupport/JSON/Variable.html#M002635","(encoder)","",2],["encode_json","Hash","classes/Hash.html#M002654","(encoder)","",2],["encode_json","String","classes/String.html#M002647","(encoder)","",2],["encode_with","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001011","(coder)","Populate +coder+ with attributes about this record that should be serialized. The structure of +coder+",2],["encode_with","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002424","(coder)","",2],["encode_with","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002911","(coder)","",2],["encode_with","BigDecimal","classes/BigDecimal.html#M002126","(coder)","",2],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001327","()","Returns the current database encoding format. ",2],["encoding_aware?","String","classes/String.html#M002381","()","",2],["encoding_aware?","String","classes/String.html#M002380","()","",2],["encrypt","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002681","(value)","",2],["encrypt_and_sign","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002683","(value)","",2],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002989","()","",2],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002992","(name)","",2],["end_of_day","DateTime","classes/DateTime.html#M002197","()","Returns a new DateTime representing the end of the day (23:59:59) ",2],["end_of_day","Time","classes/Time.html#M002480","()","Returns a new Time representing the end of the day, 23:59:59.999999 (.999999999 in ruby1.9) ",2],["end_of_month","Time","classes/Time.html#M002483","()","Returns a new Time representing the end of the month (end of the last day of the month) ",2],["end_of_quarter","Time","classes/Time.html#M002487","()","Returns a new Time representing the end of the quarter (end of the last day of march, june, september,",2],["end_of_week","Time","classes/Time.html#M002472","()","Returns a new Time representing the end of this week, (end of Sunday) ",2],["end_of_year","Time","classes/Time.html#M002491","()","Returns a new Time representing the end of the year (end of the 31st of december) ",2],["end_transaction","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000759","()","",2],["engine","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002627","()","",2],["engine=","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002628","(name)","",2],["ensure_cache_path","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002008","(path)","Make sure a file path's directories exist. ",2],["ensure_proper_type","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001041","()","Sets the attribute used for single table inheritance to this class name if this is not the ActiveRecord::Base",2],["ensure_sources!","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000308","(sources)","",2],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#M000353","(record, options = {})","Creates an entry tag for a specific record and prefills the id using class and id. Options: * <tt>:published</tt>:",2],["env","ActionController::Metal","classes/ActionController/Metal.html#M000205","()","",2],["env","Rails","classes/Rails.html#M003013","()","",2],["env=","Rails","classes/Rails.html#M003014","(environment)","",2],["environment","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M002868","()","",2],["eql?","ActionView::FileSystemResolver","classes/ActionView/FileSystemResolver.html#M000598","(resolver)","",2],["eql?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001025","(comparison_object)","Alias for #==",2],["eql?","ActiveResource::Base","classes/ActiveResource/Base.html#M001900","(other)","Tests for equality (delegates to ==). ",2],["eql?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002924","(other)","",2],["erb_render","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001493","(fixture_content)","",2],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002990","(error_message)","",2],["error_message","ActionView::Helpers::ActiveModelInstanceTag","classes/ActionView/Helpers/ActiveModelInstanceTag.html#M000293","()","",2],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","classes/ActionView/Helpers/ActiveModelInstanceTag.html#M000292","(html_tag)","",2],["errors","ActiveModel::Validations","classes/ActiveModel/Validations.html#M000846","()","Returns the +Errors+ object that holds all information about attribute error messages. ",2],["errors","ActiveResource::Validations","classes/ActiveResource/Validations.html#M001958","()","Returns the Errors object that holds all information about attribute error messages. ",2],["escape","ActiveSupport::JSON::Encoding::Encoder","classes/ActiveSupport/JSON/Encoding/Encoder.html#M002639","(string)","",2],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001271","(value)","Escapes binary strings for bytea input to the database. ",2],["escape_javascript","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M000449","(javascript)","Escape carrier returns and single and double quotes for JavaScript segments. Also available through the",2],["escape_key","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002011","(key)","Memcache keys are binaries. So we need to force their encoding to binary before applying the regular",2],["escape_once","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000495","(html)","Returns an escaped version of +html+ without affecting existing escaped entities. ==== Examples escape_once(\"1",2],["evaluate_default_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000994","()","The ignore_default_scope flag is used to prevent an infinite recursion situation where a default scope",2],["except","ActiveRecord::SpawnMethods","classes/ActiveRecord/SpawnMethods.html#M001670","(*skips)","Removes from the query the condition(s) specified in +skips+. Example: Post.order('id asc').except(:order)",2],["except","Hash","classes/Hash.html#M002237","(*keys)","Return a hash that includes everything but the given keys. This is useful for limiting a set of parameters",2],["except!","Hash","classes/Hash.html#M002238","(*keys)","Replaces the hash without the given keys. ",2],["excerpt","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000509","(text, phrase, *args)","Extracts an excerpt from +text+ that matches the first instance of +phrase+. The <tt>:radius</tt> option",2],["exclude?","Enumerable","classes/Enumerable.html#M002225","(object)","The negative of the Enumerable#include?. Returns true if the collection does not include the object.",2],["exclude?","String","classes/String.html#M002384","(string)","The inverse of <tt>String#include?</tt>. Returns true if the string does not include the other string.",2],["exec_cache","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001385","(sql, binds)","",2],["exec_delete","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001179","(sql, name, binds)","",2],["exec_delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001290","(sql, name = 'SQL', binds = [])","",2],["exec_delete","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001353","(sql, name = 'SQL', binds = [])","",2],["exec_delete","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001089","(sql, name, binds)","",2],["exec_insert","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001088","(sql, name, binds)","",2],["exec_no_cache","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001384","(sql, binds)","",2],["exec_query","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001171","(sql, name = 'SQL', binds = [])","",2],["exec_query","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001289","(sql, name = 'SQL', binds = [])","",2],["exec_query","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001350","(sql, name = nil, binds = [])","DATABASE STATEMENTS ====================================== ",2],["exec_query","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001168","(sql, name = 'SQL', binds = [])","",2],["exec_stmt","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001235","(sql, name, binds)","",2],["exec_update","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001180","(sql, name, binds)","Alias for #exec_delete",2],["exec_update","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001291","(sql, name = 'SQL', binds = [])","Alias for #exec_delete",2],["exec_update","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001356","(sql, name = 'SQL', binds = [])","Alias for #exec_delete",2],["exec_update","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001090","(sql, name, binds)","Alias for #exec_delete",2],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001287","(sql, name = nil)","Executes an SQL statement, returning a PGresult object on success or raising a PGError exception otherwise.",2],["execute","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001085","(sql, name = nil)","Executes the SQL statement in the context of this connection. ",2],["execute_callstack_for_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001047","(callstack)","",2],["execute_if_updated","ActiveSupport::FileUpdateChecker","classes/ActiveSupport/FileUpdateChecker.html#M002559","()","",2],["exist?","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002059","(name, options = nil)","Return true if the cache contains an entry for the given key. Options are passed to the underlying cache",2],["exists?","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000537","(name, prefixes = [], partial = false, keys = [])","",2],["exists?","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001625","(id = false)","Returns true if a record exists in the table that matches the +id+ or conditions given, or false otherwise.",2],["exists?","ActiveResource::Base","classes/ActiveResource/Base.html#M001908","()","Evaluates to <tt>true</tt> if this resource is not <tt>new?</tt> and is found on the remote service.",2],["exists?","ActiveResource::Base","classes/ActiveResource/Base.html#M001870","(id, options = {})","Asserts the existence of a resource, returning <tt>true</tt> if the resource is found. ==== Examples",2],["expand_attribute_names_for_aggregates","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000984","(attribute_names)","Similar in purpose to +expand_hash_conditions_for_aggregates+. ",2],["expand_cache_key","ActiveSupport::Cache","classes/ActiveSupport/Cache.html#M002046","(key, namespace = nil)","",2],["expand_hash_conditions_for_aggregates","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001000","(attrs)","Accepts a hash of SQL conditions and replaces those attributes that correspond to a +composed_of+ relationship",2],["expand_sources","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000306","(sources, recursive)","",2],["expand_sources","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#M000334","(sources, recursive = false)","",2],["expected_response","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000108","(http_method, uri, credentials, password, password_is_ha1=true)","Returns the expected response for a request of +http_method+ to +uri+ with the decoded +credentials+",2],["expire_action","ActionController::Caching::Actions","classes/ActionController/Caching/Actions.html#M000027","(options = {})","",2],["expire_fragment","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M000034","(key, options = nil)","Removes fragments from the cache. +key+ can take one of three forms: * String - This would normally take",2],["expire_page","ActionController::Caching::Pages","classes/ActionController/Caching/Pages.html#M000042","(options = {})","Expires the page that was cached with the +options+ as a key. Example: expire_page :controller => \"lists\",",2],["expire_page","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M000036","(path)","Expires the page that was cached with the +path+ as a key. Example: expire_page \"/lists/show\" ",2],["expired?","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002086","()","Check if the entry is expired. The +expires_in+ parameter can override the value set when the entry was",2],["expires_at","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002088","()","Seconds since the epoch when the entry will expire. ",2],["expires_at=","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002087","(time)","Set a new time when the entry will expire. ",2],["expires_in","ActionController::ConditionalGet","classes/ActionController/ConditionalGet.html#M000066","(seconds, options = {})","Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a <tt>private</tt> instruction, so that intermediate",2],["expires_now","ActionController::ConditionalGet","classes/ActionController/ConditionalGet.html#M000067","()","Sets a HTTP 1.1 Cache-Control header of <tt>no-cache</tt> so no caching should occur by the browser or",2],["extended","ActiveModel::Callbacks","classes/ActiveModel/Callbacks.html#M000643","(base)","",2],["extended","ActiveSupport::Concern","classes/ActiveSupport/Concern.html#M002094","(base)","",2],["extended","ActiveSupport::Testing::Declarative","classes/ActiveSupport/Testing/Declarative.html#M002786","(klass)","",2],["extending","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001654","(*modules)","",2],["extension","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000299","()","",2],["extension","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#M000331","()","",2],["extension","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#M000328","()","",2],["extension","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001873","()","",2],["extension","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001889","()","",2],["extra_tags_for_form","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000469","(html_options)","",2],["extract!","Hash","classes/Hash.html#M002253","(*keys)","Removes and returns the key/value pairs matching the given keys. {:a => 1, :b => 2, :c => 3, :d => 4}.extract!(:a,",2],["extract_callstack","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002530","(callstack)","",2],["extract_callstack_for_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001053","(pairs)","",2],["extract_limit","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#M001215","(sql_type)","",2],["extract_max_param_for_multiparameter_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001052","(values_hash_from_param, upper_cap = 100)","",2],["extract_options!","Array","classes/Array.html#M002113","()","Extracts options from a set of arguments. Removes and returns the last element in the array if it's a",2],["extract_params_from_response","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001812","()","",2],["extract_pg_identifier_from_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001406","(name)","",2],["extract_precision","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#M001217","(sql_type)","Extracts the precision from PostgreSQL-specific data types. ",2],["extract_scale","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#M001216","(sql_type)","Extracts the scale from PostgreSQL-specific data types. ",2],["extract_schema_and_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001314","(name)","Extracts the table and schema name from +name+ ",2],["extract_selected_and_disabled","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000435","(selected)","",2],["extract_value_from_default","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#M001225","(default)","Extracts the value from a PostgreSQL column default definition. ",2],["extract_values_from_collection","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000436","(collection, value_method, selected)","",2],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002573","()","Always returns true, so that <tt>Array#extract_options!</tt> finds members of this class. ",2],["extractable_options?","Hash","classes/Hash.html#M002112","()","By default, only instances of Hash itself are extractable. Subclasses of Hash may implement this method",2],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000315","(source='/favicon.ico', options={})","Web browsers cache favicons. If you just throw a <tt>favicon.ico</tt> into the document root of your",2],["fetch","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002053","(name, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["fetch","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002582","(key, *extras)","Fetches the value for the specified key, same as doing hash[key] ",2],["field_changed?","ActiveRecord::AttributeMethods::Dirty","classes/ActiveRecord/AttributeMethods/Dirty.html#M000861","(attr, old, value)","",2],["field_set_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000460","(legend = nil, options = nil, &block)","Creates a field set for grouping HTML form elements. <tt>legend</tt> will become the fieldset's title",2],["fields_for","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000408","(record_name, record_object = nil, fields_options = {}, &block)","",2],["fields_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000382","(record_name, record_object = nil, options = {}, &block)","Creates a scope around a specific model object like form_for, but doesn't create the form tags themselves.",2],["fields_for_nested_model","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000423","(name, object, options, block)","",2],["fields_for_with_nested_attributes","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000421","(association_name, association, options, block)","",2],["fifth","Array","classes/Array.html#M002108","()","Equal to <tt>self[4]</tt>. ",2],["file_field","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000414","(method, options = {})","",2],["file_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000387","(object_name, method, options = {})","Returns a file upload input tag tailored for accessing a specified attribute (identified by +method+)",2],["file_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000446","(name, options = {})","Creates a file upload field.  If you are using file uploads then you will also need to set the multipart",2],["file_path_key","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002005","(path)","Translate a file path into a key. ",2],["filename","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#M002750","()","Returns the filename for the data file for this version ",2],["filter","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001965","(backtrace)","",2],["filtered_options","ActiveModel::Validations::NumericalityValidator","classes/ActiveModel/Validations/NumericalityValidator.html#M000819","(value)","",2],["find","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000533","(name, prefixes = [], partial = false, keys = [])","",2],["find","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001619","(*args)","Find operates with four different retrieval approaches: * Find by id - This can either be a specific",2],["find","ActiveResource::Base","classes/ActiveResource/Base.html#M001865","(*arguments)","Core method for finding resources.  Used similarly to Active Record's +find+ method. ==== Arguments The",2],["find_all","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000535","(name, prefixes = [], partial = false, keys = [])","",2],["find_all","ActionView::Resolver","classes/ActionView/Resolver.html#M000588","(name, prefix=nil, partial=false, details={}, key=nil, locals=[])","Normalizes the arguments and passes it on to find_template. ",2],["find_by_attributes","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001635","(match, attributes, *args)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001718","(session_id)","Hook to set up sessid compatibility. ",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001722","(session_id)","",2],["find_by_session_id","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001721","(*args)","",2],["find_by_session_id","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001733","(session_id)","Look up a session by id and unmarshal its data if found. ",2],["find_by_sql","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000931","(sql, binds = [])","Executes a custom SQL query against your database and returns all the results. The results will be returned",2],["find_each","ActiveRecord::Batches","classes/ActiveRecord/Batches.html#M001588","(options = {})","Yields each record that was found by the find +options+. The find is performed by find_in_batches with",2],["find_every","ActiveResource::Base","classes/ActiveResource/Base.html#M001872","(options)","Find every resource ",2],["find_first","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001657","()","",2],["find_in_batches","ActiveRecord::Batches","classes/ActiveRecord/Batches.html#M001589","(options = {})","Yields each batch of records that was found by the find +options+ as an array. The size of each batch",2],["find_last","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001658","()","",2],["find_one","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001645","(id)","",2],["find_one","ActiveResource::Base","classes/ActiveResource/Base.html#M001877","(options)","Find a single resource from a one-off URL ",2],["find_or_create_resource_for","ActiveResource::Base","classes/ActiveResource/Base.html#M001931","(name)","Tries to find a resource for a given name; if it fails, then the resource is created ",2],["find_or_create_resource_for_collection","ActiveResource::Base","classes/ActiveResource/Base.html#M001927","(name)","Tries to find a resource for a given collection name; if it fails, then the resource is created ",2],["find_or_create_resource_in_modules","ActiveResource::Base","classes/ActiveResource/Base.html#M001928","(resource_name, module_names)","Tries to find a resource in a non empty list of nested modules if it fails, then the resource is created",2],["find_or_instantiator_by_attributes","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001636","(match, attributes, *args)","",2],["find_parameter_position","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001055","(multiparameter_name)","",2],["find_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001743","(id)","",2],["find_single","ActiveResource::Base","classes/ActiveResource/Base.html#M001878","(scope, options)","Find a single resource from the default URL ",2],["find_some","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001652","(ids)","",2],["find_sti_class","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000978","(type_name)","",2],["find_template","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000534","(name, prefixes = [], partial = false, keys = [])","Alias for #find",2],["find_templates","ActionView::Resolver","classes/ActionView/Resolver.html#M000589","(name, prefix, partial, details)","This is what child classes implement. No defaults are needed because Resolver guarantees that the arguments",2],["find_tzinfo","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002965","(name)","TODO: Preload instead of lazy load for thread safety ",2],["find_with_associations","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001626","()","",2],["find_with_ids","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001640","(*ids)","",2],["find_zone","Time","classes/Time.html#M002509","(time_zone)","",2],["find_zone!","Time","classes/Time.html#M002507","(time_zone)","Returns a TimeZone instance or nil, or raises an ArgumentError for invalid timezones. ",2],["finder?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001426","()","",2],["first","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001620","(*args)","A convenience wrapper for <tt>find(:first, *args)</tt>. You can pass in all the same arguments to this",2],["first","ActiveResource::Base","classes/ActiveResource/Base.html#M001866","(*args)","A convenience wrapper for <tt>find(:first, *args)</tt>. You can pass in all the same arguments to this",2],["first","String","classes/String.html#M002376","(limit = 1)","",2],["first","String","classes/String.html#M002371","(limit = 1)","Returns the first character of the string or the first +limit+ characters. Examples: \"hello\".first  ",2],["first!","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001621","()","Same as +first+ but raises <tt>ActiveRecord::RecordNotFound</tt> if no record is found. Note that <tt>first!</tt>",2],["fixture_is_cached?","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001456","(connection, table_name)","",2],["fixtures","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001495","(*fixture_names)","",2],["flush","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001980","()","",2],["flush","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#M002662","()","",2],["flush_all!","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002669","()","Flush all log_subscribers' logger. ",2],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M002678","(*syms)","",2],["flushable_loggers","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002668","()","",2],["for_class","HTML::Selector","classes/HTML/Selector.html#M000268","(cls)","Creates a new selector for the given class name. ",2],["for_id","HTML::Selector","classes/HTML/Selector.html#M000269","(id)","Creates a new selector for the given id. ",2],["for_tag","ActiveSupport::TestCase","classes/ActiveSupport/TestCase.html#M002781","(tag)","",2],["force_ssl","ActionController::ForceSSL::ClassMethods","classes/ActionController/ForceSSL/ClassMethods.html#M000072","(options = {})","Force the request to this particular controller or specified actions to be under HTTPS protocol. Note",2],["foreign_key","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002615","(class_name, separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["foreign_key","String","classes/String.html#M002403","(separate_class_name_and_id_with_underscore = true)","Creates a foreign key name from a class name. +separate_class_name_and_id_with_underscore+ sets whether",2],["forking_env?","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation.html#M002794","()","",2],["form_authenticity_param","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M000164","()","The form's authenticity parameter. Override to provide your own. ",2],["form_authenticity_token","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M000163","()","Sets the token value for the current session. ",2],["form_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000376","(record, options = {}, &proc)","Creates a form and a scope around a specific model object that is used as a base for questioning about",2],["form_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000437","(url_for_options = {}, options = {}, &block)","Starts a form tag that points the action to an url configured with <tt>url_for_options</tt> just like",2],["form_tag_html","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000470","(html_options)","",2],["form_tag_in_block","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000471","(html_options, &block)","",2],["format","ActiveResource::Base","classes/ActiveResource/Base.html#M001836","()","Returns the current format, default is ActiveResource::Formats::JsonFormat. ",2],["format","ActiveSupport::Testing::Performance::Metrics::Amount","classes/ActiveSupport/Testing/Performance/Metrics/Amount.html#M002883","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::DigitalInformationUnit","classes/ActiveSupport/Testing/Performance/Metrics/DigitalInformationUnit.html#M002884","(measurement)","",2],["format","ActiveSupport::Testing::Performance::Metrics::Time","classes/ActiveSupport/Testing/Performance/Metrics/Time.html#M002882","(measurement)","",2],["format=","ActiveResource::Base","classes/ActiveResource/Base.html#M001835","(mime_type_reference_or_format)","Sets the format that attributes are sent and received in from a mime type reference: Person.format =",2],["formats=","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000552","(values)","Overload formats= to expand [\"*/*\"] values and automatically add :html as fallback to :js. ",2],["formatted_offset","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002905","(colon = true, alternate_utc_string = nil)","",2],["formatted_offset","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002938","(colon=true, alternate_utc_string = nil)","Returns the offset of this time zone as a formatted string, of the format \"+HH:MM\". ",2],["formatted_offset","DateTime","classes/DateTime.html#M002201","(colon = true, alternate_utc_string = nil)","Returns the +utc_offset+ as an +HH:MM formatted string. Examples: datetime = DateTime.civil(2000, 1,",2],["formatted_offset","Time","classes/Time.html#M002436","(colon = true, alternate_utc_string = nil)","Returns the UTC offset as an +HH:MM formatted string. Time.local(2000).formatted_offset         # =>",2],["forty_two","Array","classes/Array.html#M002109","()","Equal to <tt>self[41]</tt>. Also known as accessing \"the reddit\". ",2],["fourth","Array","classes/Array.html#M002107","()","Equal to <tt>self[3]</tt>. ",2],["fragment_cache_key","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M000030","(key)","Given a key (as described in <tt>expire_fragment</tt>), returns a key suitable for use in reading, writing,",2],["fragment_exist?","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M000033","(key, options = nil)","Check if a cached fragment from the location signified by  <tt>key</tt> exists (see <tt>expire_fragment</tt>",2],["freeze","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001027","()","Freeze the attributes hash such that associations are still accessible, even on destroyed records. ",2],["freeze","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002945","()","",2],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M002674","()","",2],["fresh_when","ActionController::ConditionalGet","classes/ActionController/ConditionalGet.html#M000063","(options)","Sets the etag, last_modified, or both on the response and renders a <tt>304 Not Modified</tt> response",2],["from","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001653","(value)","",2],["from","Array","classes/Array.html#M002103","(position)","Returns the tail of the array from +position+. %w( a b c d ).from(0)  # => %w( a b c d ) %w( a b c d",2],["from","String","classes/String.html#M002368","(position)","Returns the remaining of the string from the +position+ treating the string as an array (where 0 is the",2],["from","String","classes/String.html#M002374","(position)","",2],["from_array","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001952","(messages, save_cache = false)","Grabs errors from an array of messages (like ActiveRecord::Validations). The second parameter directs",2],["from_json","ActiveModel::Serializers::JSON","classes/ActiveModel/Serializers/JSON.html#M000780","(json)","",2],["from_json","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001953","(json, save_cache = false)","Grabs errors from a json response. ",2],["from_now","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002556","(time = ::Time.current)","Alias for #since",2],["from_rails_root","ActionView::LogSubscriber","classes/ActionView/LogSubscriber.html#M000527","(string)","",2],["from_xml","ActiveModel::Serializers::Xml","classes/ActiveModel/Serializers/Xml.html#M000784","(xml)","",2],["from_xml","ActiveResource::Errors","classes/ActiveResource/Errors.html#M001954","(xml, save_cache = false)","Grabs errors from an XML response. ",2],["from_xml","Hash","classes/Hash.html#M002231","(xml)","",2],["frozen?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001028","()","Returns +true+ if the attributes hash has been frozen. ",2],["full_messages","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000699","()","Returns all the full error messages in an array. class Company validates_presence_of :name, :address,",2],["full_profile_options","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002843","()","",2],["full_test_name","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002844","()","",2],["future?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002923","()","",2],["future?","DateTime","classes/DateTime.html#M002185","()","Tells whether the DateTime object's datetime lies in the future ",2],["future?","Time","classes/Time.html#M002445","()","Tells whether the Time object's time lies in the future ",2],["g_length","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002737","()","Returns the number of grapheme clusters in the string. Example: 'क्षि'.mb_chars.length   # => 4 'क्षि'.mb_chars.g_length",2],["g_pack","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002723","(unpacked)","Reverse operation of g_unpack. Example: Unicode.g_pack(Unicode.g_unpack('क्षि')) # => 'क्षि' ",2],["g_unpack","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002721","(string)","Unpack the string at grapheme boundaries. Returns a list of character lists. Example: Unicode.g_unpack('क्षि')",2],["generate","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M002689","(value)","",2],["generate_digest","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M002691","(data)","",2],["generate_message","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000705","(attribute, type = :invalid, options = {})","Translates an error message in its default scope (<tt>activemodel.errors.messages</tt>). Error messages",2],["get","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000241","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating GET HTTP method and set/volley the response ",2],["get","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000674","(key)","Get messages for +key+ ",2],["get","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001445","(klass, primary_key)","",2],["get","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001794","(path, headers = {})","Executes a GET request. Used to get (find) resources. ",2],["get","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001827","(custom_method_name, options = {})","Invokes a GET to a given custom REST method. For example: Person.get(:active)  # GET /people/active.json",2],["get","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001839","(method_name, options = {})","",2],["get","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002536","(key)","Alias for #[]",2],["get_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000516","(name)","The cycle helpers need to store the cycles in a place that is guaranteed to be reset every time a page",2],["get_period_and_ensure_valid_local_time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002955","()","",2],["get_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001739","(env, sid)","",2],["get_session_model","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001742","(env, sid)","",2],["getgm","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002891","()","Alias for #utc",2],["getlocal","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002897","()","Alias for #localtime",2],["getutc","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002892","()","Alias for #utc",2],["getutc","DateTime","classes/DateTime.html#M002211","()","Alias for #utc",2],["gmt?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002901","()","Alias for #utc?",2],["gmt_offset","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002903","()","Alias for #utc_offset",2],["gmtime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002893","()","Alias for #utc",2],["gmtoff","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002904","()","Alias for #utc_offset",2],["group","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001638","(*args)","",2],["group_by","Enumerable","classes/Enumerable.html#M002220","()","Collect an enumerable into sets, grouped by the result of a block. Useful, for example, for grouping",2],["grouped_collection_select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000443","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","",2],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000422","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","Returns <tt><select></tt>, <tt><optgroup></tt> and <tt><option></tt> tags for the collection of existing",2],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000430","(grouped_options, selected_key = nil, prompt = nil)","Returns a string of <tt><option></tt> tags, like <tt>options_for_select</tt>, but wraps them with <tt><optgroup></tt>",2],["groups","Rails","classes/Rails.html#M003016","(*groups)","Returns all rails groups for loading based on: * The Rails environment; * The environment variable RAILS_GROUPS;",2],["guard_private_attribute_method!","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000665","(method_name, args)","prevent method_missing from calling private methods with #send ",2],["h","ERB::Util","classes/ERB/Util.html#M002405","(s)","Alias for #html_escape",2],["h","ERB::Util","classes/ERB/Util.html#M002405","(s)","Alias for #html_escape",2],["ha1","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000110","(credentials, password)","",2],["handle_response","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001800","(response)","Handles response and error codes from the remote service. ",2],["handle_unverified_request","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M000161","()","This is the method that defines the application behavior when a request is found to be unverified. By",2],["handler_for_rescue","ActiveSupport::Rescuable","classes/ActiveSupport/Rescuable.html#M002779","(exception)","",2],["handles_encoding?","ActionView::Template::Handlers::ERB","classes/ActionView/Template/Handlers/ERB.html#M000581","()","",2],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000900","(name, options = {}, &extension)","Specifies a many-to-many relationship with another class. This associates two classes via an intermediate",2],["has_attribute?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001016","(attr_name)","Returns true if the given attribute is in the attributes hash ",2],["has_empty_resource_definition?","ActionController::Responder","classes/ActionController/Responder.html#M000185","()","Check whether resource needs a specific definition of empty resource to be valid ",2],["has_errors?","ActionController::Responder","classes/ActionController/Responder.html#M000183","()","Check whether the resource has errors. ",2],["has_many","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000892","(name, options = {}, &extension)","Specifies a one-to-many association. The following methods for retrieval and query of collections of",2],["has_one","ActiveRecord::Associations::ClassMethods","classes/ActiveRecord/Associations/ClassMethods.html#M000897","(name, options = {})","Specifies a one-to-one association with another class. This method should only be used if the other class",2],["has_primary_key_column?","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001481","()","",2],["has_secure_password","ActiveModel::SecurePassword::ClassMethods","classes/ActiveModel/SecurePassword/ClassMethods.html#M000774","()","Adds methods to set and authenticate against a BCrypt password. This mechanism requires you to have a",2],["hash","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001026","()","Delegates to id in order to allow two records of the same type and id to work with something like: [",2],["hash","ActiveResource::Base","classes/ActiveResource/Base.html#M001901","()","Delegates to id in order to allow two resources of the same type and \\id to work with something like:",2],["hash","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002936","()","Alias for #to_i",2],["hash_rows","ActiveRecord::Result","classes/ActiveRecord/Result.html#M001683","()","",2],["having","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001646","(opts, *rest)","",2],["head","ActionController::Head","classes/ActionController/Head.html#M000073","(status, options = {})","Return a response that has no content (merely headers). The options argument is interpreted to be a hash",2],["head","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000245","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating HEAD HTTP method and set/volley the response ",2],["head","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001798","(path, headers = {})","Executes a HEAD request. Used to obtain meta-information about resources, such as whether they exist",2],["headers","ActionMailer::Base","classes/ActionMailer/Base.html#M000015","(args=nil)","Allows you to pass random and unusual headers to the new +Mail::Message+ object which will add them to",2],["headers","ActiveResource::Base","classes/ActiveResource/Base.html#M001849","()","",2],["headers=","ActionController::Testing","classes/ActionController/Testing.html#M000195","(new_headers)","TODO : Rewrite tests using controller.headers= to use Rack env ",2],["headers_match?","ActiveResource::Request","classes/ActiveResource/Request.html#M001943","(req)","",2],["helper_attr","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M000074","(*attrs)","Declares helper accessors for controller attributes. For example, the following adds new +name+ and <tt>name=</tt>",2],["helper_class","ActionView::TestCase::Behavior::ClassMethods","classes/ActionView/TestCase/Behavior/ClassMethods.html#M000613","()","",2],["helper_method","ActionView::TestCase::Behavior::ClassMethods","classes/ActionView/TestCase/Behavior/ClassMethods.html#M000612","(*methods)","",2],["helpers","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M000075","()","Provides a proxy to access helpers methods from outside the view. ",2],["hidden_field","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000413","(method, options = {})","",2],["hidden_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000386","(object_name, method, options = {})","Returns a hidden input tag tailored for accessing a specified attribute (identified by +method+) on an",2],["hidden_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000445","(name, value = nil, options = {})","Creates a hidden form input field used to transmit data that would be lost due to HTTP's statelessness",2],["hide_action","ActionController::HideActions::ClassMethods","classes/ActionController/HideActions/ClassMethods.html#M000080","(*args)","Sets all of the actions passed in as hidden actions. ==== Parameters * <tt>args</tt> - A list of actions",2],["highlight","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000505","(text, phrases, *args)","Highlights one or more +phrases+ everywhere in +text+ by inserting it into a <tt>:highlighter</tt> string.",2],["html_escape","ERB::Util","classes/ERB/Util.html#M002404","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h</tt>. In your",2],["html_escape","ERB::Util","classes/ERB/Util.html#M002404","(s)","A utility method for escaping HTML tag characters. This method is also aliased as <tt>h</tt>. In your",2],["html_options_for_form","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000468","(url_for_options, options)","",2],["html_safe","String","classes/String.html#M002427","()","",2],["html_safe?","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002421","()","",2],["html_safe?","Object","classes/Object.html#M002412","()","",2],["html_safe_translation_key?","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M000508","(key)","",2],["http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001951","()","",2],["http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001801","()","Creates new Net::HTTP instance for communication with the remote service and resources. ",2],["http_basic_authenticate_with","ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#M000087","(options = {})","",2],["http_format_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001814","(http_method)","",2],["httpdate","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002913","()","",2],["human","ActiveModel::Name","classes/ActiveModel/Name.html#M000722","(options={})","Transform the model name into a more humane format, using I18n. By default, it will underscore then humanize",2],["human","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002608","(rule, replacement)","Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using",2],["human_attribute_name","ActiveModel::Translation","classes/ActiveModel/Translation.html#M000785","(attribute, options = {})","Transforms attribute names into a more human format, such as \"First name\" instead of \"first_name\". Person.human_attribute_name(\"first_name\")",2],["humanize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002619","(lower_case_and_underscored_word)","Capitalizes the first word and turns underscores into spaces and strips a trailing \"_id\", if any. Like",2],["humanize","String","classes/String.html#M002402","()","Capitalizes the first word, turns underscores into spaces, and strips '_id'. Like +titleize+, this is",2],["i18n_scope","ActiveModel::Translation","classes/ActiveModel/Translation.html#M000781","()","Returns the +i18n_scope+ for the class. Overwrite if you want custom lookup. ",2],["id","ActiveResource::Base","classes/ActiveResource/Base.html#M001897","()","Gets the <tt>\\id</tt> attribute of the resource. ",2],["id","NilClass","classes/NilClass.html#M002976","()","Raises a RuntimeError when you attempt to call +id+ on +nil+. ",2],["id=","ActiveResource::Base","classes/ActiveResource/Base.html#M001898","(id)","Sets the <tt>\\id</tt> attribute of the resource. ",2],["id_from_response","ActiveResource::Base","classes/ActiveResource/Base.html#M001922","(response)","Takes a response from a typical create post and pulls the ID out ",2],["identify","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001463","(label)","Returns a consistent, platform-independent identifier for +label+. Identifiers are positive integers",2],["identity","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001504","(event)","",2],["image_alt","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000323","(src)","",2],["image_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000316","(source)","Computes the path to an image asset in the public images directory. Full paths from the document root",2],["image_submit_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000459","(source, options = {})","Displays an image which when clicked will submit the form. <tt>source</tt> is passed to AssetTagHelper#path_to_image",2],["image_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000322","(source, options = {})","Returns an html image tag for the +source+. The +source+ can be a full path or a file that exists in",2],["in","DateTime","classes/DateTime.html#M002192","(seconds)","Alias for #since",2],["in","Time","classes/Time.html#M002453","(seconds)","Alias for #since",2],["in?","Object","classes/Object.html#M002350","(another_object)","Returns true if this object is included in the argument. Argument must be any object which responds to",2],["in_char_class?","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002720","(codepoint, classes)","Detect whether the codepoint is in a certain character class. Returns +true+ when it's in the specified",2],["in_groups","Array","classes/Array.html#M002118","(number, fill_with = nil)","Splits or iterates over the array in +number+ of groups, padding any remaining slots with +fill_with+",2],["in_groups_of","Array","classes/Array.html#M002117","(number, fill_with = nil)","Splits or iterates over the array in groups of size +number+, padding any remaining slots with +fill_with+",2],["in_time_zone","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002895","(new_zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone</tt>, or the specified zone. ",2],["in_time_zone","DateTime","classes/DateTime.html#M002219","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone</tt>. Time.zone = 'Hawaii'             # => 'Hawaii' DateTime.new(2000).in_time_zone",2],["in_time_zone","Time","classes/Time.html#M002511","(zone = ::Time.zone)","Returns the simultaneous time in <tt>Time.zone</tt>. Time.zone = 'Hawaii'         # => 'Hawaii' Time.utc(2000).in_time_zone",2],["include?","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000673","(error)","Do the error messages include an error with key +error+? ",2],["include?","ActiveModel::MassAssignmentSecurity::PermissionSet","classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#M000714","(key)","",2],["include?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002703","(other)","Returns +true+ if contained string contains _other_. Returns +false+ otherwise. Example: 'Café'.mb_chars.include?('é')",2],["include?","Test::Unit::Collector::ObjectSpace","classes/Test/Unit/Collector/ObjectSpace.html#M002802","(test)","",2],["include_fallbacks_module","I18n::Railtie","classes/I18n/Railtie.html#M002598","()","",2],["include_helper_modules!","ActionView::TestCase::Behavior::ClassMethods","classes/ActionView/TestCase/Behavior/ClassMethods.html#M000615","()","",2],["include_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000302","(*sources)","",2],["included","ActionController::TestCase::RaiseActionExceptions","classes/ActionController/TestCase/RaiseActionExceptions.html#M000253","(base)","",2],["included","ActionView::Template::Handlers::Compilable","classes/ActionView/Template/Handlers/Compilable.html#M000568","(base)","",2],["included","ActiveSupport::Concern","classes/ActiveSupport/Concern.html#M002096","(base = nil, &block)","",2],["included","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M002673","(base)","",2],["included","ActiveSupport::Testing::Isolation","classes/ActiveSupport/Testing/Isolation.html#M002795","(base)","",2],["includes","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001631","(*args)","",2],["inclusion_method","ActiveModel::Validations::ExclusionValidator","classes/ActiveModel/Validations/ExclusionValidator.html#M000797","(enumerable)","In Ruby 1.9 <tt>Range#include?</tt> on non-numeric ranges checks all possible values in the range for",2],["inclusion_method","ActiveModel::Validations::InclusionValidator","classes/ActiveModel/Validations/InclusionValidator.html#M000807","(enumerable)","In Ruby 1.9 <tt>Range#include?</tt> on non-numeric ranges checks all possible values in the range for",2],["increment","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001570","(attribute, by = 1)","Initializes +attribute+ to zero if +nil+ and adds the value passed as +by+ (default is 1). The increment",2],["increment","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001989","(name, amount = 1, options = nil)","",2],["increment","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002025","(name, amount = 1, options = nil)","Increment an integer value in the cache. ",2],["increment","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002062","(name, amount = 1, options = nil)","Increment an integer value in the cache. Options are passed to the underlying cache implementation. All",2],["increment!","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001571","(attribute, by = 1)","Wrapper around +increment+ that saves the record. This method differs from its non-bang version in that",2],["increment_counter","ActiveRecord::CounterCache","classes/ActiveRecord/CounterCache.html#M001431","(counter_name, id)","Increment a number field by one, usually representing a count. This is used for caching aggregate values,",2],["increment_lock","ActiveRecord::Locking::Optimistic","classes/ActiveRecord/Locking/Optimistic.html#M001464","()","",2],["index","ActionController::Middleware","classes/ActionController/Middleware.html#M000204","()","",2],["index","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002704","(needle, offset=0)","Returns the position _needle_ in the string, counting in codepoints. Returns +nil+ if _needle_ isn't",2],["index_by","Enumerable","classes/Enumerable.html#M002223","()","Convert an enumerable to a hash. Examples: people.index_by(&:login) => { \"nextangle\" => <Person ...>,",2],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001370","()","",2],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001315","(table_name, name = nil)","Returns an array of indexes for the given table. ",2],["indexes","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001112","(table_name, name = nil)","Returns an array of indexes for the given table. ",2],["inflections","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002612","()","Yields a singleton instance of Inflector::Inflections so you can specify additional inflector rules.",2],["inheritable_copy","ActiveSupport::InheritableOptions","classes/ActiveSupport/InheritableOptions.html#M002776","()","",2],["inheritance_column","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000941","()","Defines the column name for use with single table inheritance. Use <tt>set_inheritance_column</tt> to",2],["inheritance_column_name","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001483","()","",2],["inherited","ActionController::HideActions::ClassMethods","classes/ActionController/HideActions/ClassMethods.html#M000081","(klass)","",2],["inherited","ActionController::ParamsWrapper::ClassMethods","classes/ActionController/ParamsWrapper/ClassMethods.html#M000134","(klass)","Sets the default wrapper key or model which will be used to determine wrapper key and attribute names.",2],["inherited","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000296","(base)","",2],["inherited","ActionView::Template::Handler","classes/ActionView/Template/Handler.html#M000571","(base)","",2],["inherited","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000760","(subclass)","Notify observers when the observed class is subclassed. ",2],["inherited","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000842","(base)","Copy validators on inheritance. ",2],["inherited","ActiveSupport::DescendantsTracker","classes/ActiveSupport/DescendantsTracker.html#M002543","(base)","",2],["init_fallbacks","I18n::Railtie","classes/I18n/Railtie.html#M002599","(fallbacks)","",2],["init_with","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001012","(coder)","Initialize an empty model object from +coder+. +coder+ must contain the attributes necessary for initializing",2],["initialize!","Rails","classes/Rails.html#M003006","()","",2],["initialize_copy","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001679","(other)","",2],["initialize_copy","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002416","(other)","",2],["initialize_dup","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001031","(other)","Duped objects have no id assigned and are treated as new records. Note that this is a \"shallow\" copy",2],["initialize_i18n","I18n::Railtie","classes/I18n/Railtie.html#M002597","(app)","Setup i18n configuration ",2],["initialize_template_class","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000055","(*)","For old tests ",2],["initialized=","Rails","classes/Rails.html#M003008","(initialized)","",2],["initialized?","Rails","classes/Rails.html#M003007","()","",2],["inquiry","String","classes/String.html#M002391","()","Wraps the current string in the <tt>ActiveSupport::StringInquirer</tt> class, which gives you a prettier",2],["insert","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001674","(values)","",2],["insert","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002702","(offset, fragment)","Inserts the passed string at specified codepoint offsets. Example: 'Café'.mb_chars.insert(4, ' périferôl').to_s",2],["insert_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001284","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","Executes an INSERT query and returns the new record's ID ",2],["insert_sql","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001086","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",2],["inspect","ActionView::Template","classes/ActionView/Template.html#M000605","()","",2],["inspect","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000962","()","Returns a string like 'Post(id:integer, title:string, body:text)' ",2],["inspect","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001034","()","Returns the contents of the record as a nicely formatted string. ",2],["inspect","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001708","()","",2],["inspect","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002907","()","",2],["inspect","DateTime","classes/DateTime.html#M002203","()","Alias for #readable_inspect",2],["instance","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002601","()","",2],["instance_method_already_implemented?","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000654","(method_name)","",2],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000896","(method_name)","Checks whether the method is defined in the model or any of its subclasses that also derive from Active",2],["instance_method_names","Module","classes/Module.html#M002297","(*args)","",2],["instance_variable_names","Object","classes/Object.html#M002353","()","",2],["instantiate","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000976","(record)","Finder methods must instantiate through this method to work with the single-table inheritance model that",2],["instantiate_all_loaded_fixtures","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001460","(object, load_instances = true)","",2],["instantiate_builder","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000398","(record_name, record_object, options, &block)","",2],["instantiate_collection","ActiveResource::Base","classes/ActiveResource/Base.html#M001879","(collection, prefix_options = {})","",2],["instantiate_fixtures","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001459","(object, fixture_name, fixtures, load_instances = true)","",2],["instantiate_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001513","()","",2],["instantiate_observers","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000749","()","Instantiate the global observers. ",2],["instantiate_record","ActiveResource::Base","classes/ActiveResource/Base.html#M001880","(record, prefix_options = {})","",2],["instantiate_time_object","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001046","(name, values)","",2],["instantiator?","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001427","()","",2],["instrument","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002076","(operation, key, options = nil)","",2],["instrument","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002051","()","",2],["instrument","ActiveSupport::Notifications","classes/ActiveSupport/Notifications.html#M002764","(name, payload = {})","",2],["instrument","ActiveSupport::Notifications::Instrumenter","classes/ActiveSupport/Notifications/Instrumenter.html#M002761","(name, payload={})","Instrument the given block by measuring the time taken to execute it and publish it. Notice that events",2],["instrument=","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002050","(boolean)","Set to true if cache stores should be instrumented. Default is false. ",2],["instrument_fragment_cache","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M000035","(name, key)","",2],["instrument_page_cache","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M000041","(name, path)","",2],["instrumenter","ActiveSupport::Notifications","classes/ActiveSupport/Notifications.html#M002769","()","",2],["invalid?","ActiveModel::Validations","classes/ActiveModel/Validations.html#M000848","(context = nil)","Performs the opposite of <tt>valid?</tt>. Returns true if errors were added, false otherwise. ",2],["inverse","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001517","()","Returns a list that represents commands that are the inverse of the commands stored in +commands+.  For",2],["invert_add_column","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001521","(args)","",2],["invert_add_index","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001524","(args)","",2],["invert_add_timestamps","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001526","(args)","",2],["invert_create_table","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001519","(args)","",2],["invert_remove_timestamps","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001525","(args)","",2],["invert_rename_column","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001523","(args)","",2],["invert_rename_index","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001522","(args)","",2],["invert_rename_table","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001520","(args)","",2],["irregular","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002605","(singular, plural)","Specifies a new irregular that applies to both pluralization and singularization at the same time. This",2],["is_a?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002943","(klass)","Say we're a Time to thwart type checking. ",2],["is_missing?","LoadError","classes/LoadError.html#M002276","(location)","",2],["is_utf8?","String","classes/String.html#M002411","()","Returns true if the string has UTF-8 semantics (a String used for purely byte resources is unlikely to",2],["is_utf8?","String","classes/String.html#M002407","()","",2],["isdst","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002899","()","Alias for #dst?",2],["iso8601","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002909","(fraction_digits = 0)","Alias for #xmlschema",2],["j","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M000451","(javascript)","Alias for #escape_javascript",2],["j","ERB::Util","classes/ERB/Util.html#M002410","(s)","Alias for #json_escape",2],["j","ERB::Util","classes/ERB/Util.html#M002410","(s)","Alias for #json_escape",2],["javascript_include_tag","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#M000344","(*sources)","Returns an HTML script tag for each of the +sources+ provided. Sources may be paths to JavaScript files.",2],["javascript_path","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#M000341","(source)","Computes the path to a javascript asset in the public javascripts directory. If the +source+ filename",2],["javascript_tag","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M000452","(content_or_options_with_block = nil, html_options = {}, &block)","Returns a JavaScript tag with the +content+ inside. Example: javascript_tag \"alert('All is good')\" Returns:",2],["join_asset_file_contents","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000311","(paths)","",2],["joined_includes_values","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001706","()","Joins that are also marked for preloading. In which case we should just eager load them. Note that this",2],["joins","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001642","(*args)","",2],["json_escape","ERB::Util","classes/ERB/Util.html#M002409","(s)","A utility method for escaping HTML entities in JSON strings using \\uXXXX JavaScript escape sequences",2],["json_escape","ERB::Util","classes/ERB/Util.html#M002409","(s)","A utility method for escaping HTML entities in JSON strings using \\uXXXX JavaScript escape sequences",2],["key?","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001123","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001241","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001310","(key)","",2],["key?","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001414","(key)","",2],["key?","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002533","(key)","",2],["key?","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002581","(key)","Checks the hash for a key matching the argument passed in: hash = HashWithIndifferentAccess.new hash[\"key\"]",2],["key_file_path","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002001","(key)","Translate a key into a file path. ",2],["key_matcher","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002068","(pattern, options)","Add the namespace defined in the options to a pattern designed to match keys. Implementations that support",2],["keys","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000688","()","Returns all message keys ",2],["kind","ActiveModel::Validator","classes/ActiveModel/Validator.html#M000831","()","Returns the kind of the validator. Examples: PresenceValidator.kind   # => :presence UniquenessValidator.kind",2],["kind","ActiveModel::Validator","classes/ActiveModel/Validator.html#M000833","()","Return the kind for this validator. ",2],["kind_of?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002944","(klass)","Alias for #is_a?",2],["klass","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001597","()","Returns the class for the macro. <tt>composed_of :balance, :class_name => 'Money'</tt> returns the Money",2],["known_attributes","ActiveResource::Base","classes/ActiveResource/Base.html#M001887","()","This is a list of known attributes for this resource. Either gathered from the provided <tt>schema</tt>,",2],["known_attributes","ActiveResource::Base","classes/ActiveResource/Base.html#M001819","()","Returns the list of known attributes for this resource, gathered from the provided <tt>schema</tt> Attributes",2],["l","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M000506","(*args)","Alias for #localize",2],["label","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000409","(method, text = nil, options = {}, &block)","",2],["label","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000383","(object_name, method, content_or_options = nil, options = nil, &block)","Returns a label tag tailored for labelling an input field for a specified attribute (identified by +method+)",2],["label_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000442","(name = nil, content_or_options = nil, options = nil, &block)","Creates a label element. Accepts a block. ==== Options * Creates standard HTML attributes for the tag.",2],["last","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001622","(*args)","A convenience wrapper for <tt>find(:last, *args)</tt>. You can pass in all the same arguments to this",2],["last","ActiveResource::Base","classes/ActiveResource/Base.html#M001867","(*args)","A convenience wrapper for <tt>find(:last, *args)</tt>. You can pass in all the same arguments to this",2],["last","String","classes/String.html#M002372","(limit = 1)","Returns the last character of the string or the last +limit+ characters. Examples: \"hello\".last     #",2],["last","String","classes/String.html#M002377","(limit = 1)","",2],["last!","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001623","()","Same as +last+ but raises <tt>ActiveRecord::RecordNotFound</tt> if no record is found. Note that <tt>last!</tt>",2],["last_inserted_id","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001172","(result)","",2],["last_inserted_id","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001357","(result)","",2],["last_inserted_id","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001091","(result)","",2],["lazy_zones_map","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002974","()","",2],["legitimize_auth_type","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001816","(auth_type)","",2],["length","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001125","()","",2],["length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001243","()","",2],["length","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001312","()","",2],["length","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001416","()","",2],["limit","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001647","(value)","",2],["limit","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002725","(limit)","Limit the byte size of the string to a number of bytes without breaking characters. Usable when the storage",2],["limited_update_conditions","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001221","(where_sql, quoted_table_name, quoted_primary_key)","",2],["limited_update_conditions","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001154","(where_sql, quoted_table_name, quoted_primary_key)","",2],["link_to","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000521","(*args, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+. See the valid options",2],["link_to_function","ActionView::Helpers::JavaScriptHelper","classes/ActionView/Helpers/JavaScriptHelper.html#M000457","(name, function, html_options={})","Returns a link whose +onclick+ handler triggers the passed JavaScript. The helper receives a name, JavaScript",2],["link_to_if","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000530","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ if +condition+ is",2],["link_to_remote_options?","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000545","(options)","",2],["link_to_unless","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000529","(condition, name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless +condition+",2],["link_to_unless_current","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000528","(name, options = {}, html_options = {}, &block)","Creates a link tag of the given +name+ using a URL created by the set of +options+ unless the current",2],["listeners_for","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002757","(name)","",2],["listening?","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002758","(name)","",2],["ljust","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002712","(integer, padstr=' ')","Works just like <tt>String#ljust</tt>, only integer specifies characters instead of bytes. Example: \"¾",2],["load","ActiveResource::Base","classes/ActiveResource/Base.html#M001911","(attributes, remove_root = false)","A method to manually load attributes from a \\hash. Recursively loads collections of resources.  This",2],["load","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#M002747","()","Loads the Unicode database and returns all the internal objects of UnicodeDatabase. ",2],["load_attributes_from_response","ActiveResource::Base","classes/ActiveResource/Base.html#M001921","(response)","",2],["load_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001512","()","",2],["load_instances?","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001516","()","",2],["load_migration","ActiveRecord::MigrationProxy","classes/ActiveRecord/MigrationProxy.html#M001552","()","",2],["loaded?","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001725","()","Has the session been loaded yet? ",2],["loaded?","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001736","()","",2],["local","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002953","(*args)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from given values.",2],["local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002042","()","",2],["local_constant_names","Module","classes/Module.html#M002300","()","Returns the names of the constants defined locally rather than the constants themselves. See <tt>local_constants</tt>.",2],["local_constants","Module","classes/Module.html#M002296","()","Returns the constants that have been defined locally by this object and not in an ancestor. This method",2],["local_offset","DateTime","classes/DateTime.html#M002182","()","DateTimes aren't aware of DST rules, so use a consistent non-DST offset when creating a DateTime with",2],["local_time","Time","classes/Time.html#M002439","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:local</tt>. ",2],["local_to_utc","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002962","(time, dst=true)","Adjust the given time to the simultaneous time in UTC. Returns a Time.utc() instance. ",2],["locale","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000554","()","Overload locale to return a symbol instead of array. ",2],["locale=","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000555","(value)","Overload locale= to also set the I18n.locale. If the current I18n.config object responds to original_config,",2],["localize","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M000504","(*args)","Delegates to <tt>I18n.localize</tt> with no additional functionality. ",2],["locals","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000621","()","",2],["localtime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002896","()","Returns a <tt>Time.local()</tt> instance of the simultaneous time in your system's <tt>ENV['TZ']</tt>",2],["location","ActionController::Metal","classes/ActionController/Metal.html#M000213","()","",2],["location=","ActionController::Metal","classes/ActionController/Metal.html#M000214","(url)","",2],["lock","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001649","(locks = true)","",2],["lock!","ActiveRecord::Locking::Pessimistic","classes/ActiveRecord/Locking/Pessimistic.html#M001491","(lock = true)","Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking",2],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001476","()","The version column used for optimistic locking. Defaults to +lock_version+. ",2],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001474","()","Returns true if the +lock_optimistically+ flag is set to true (which it is, by default) and the table",2],["log","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002079","(operation, key, options = nil)","",2],["log_process_action","ActiveRecord::Railties::ControllerRuntime::ClassMethods","classes/ActiveRecord/Railties/ControllerRuntime/ClassMethods.html#M001585","(payload)","",2],["log_subscribers","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002667","()","",2],["logged","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#M002661","(level)","",2],["logger","ActionController::LogSubscriber","classes/ActionController/LogSubscriber.html#M000056","()","",2],["logger","ActionView::LogSubscriber","classes/ActionView/LogSubscriber.html#M000526","()","TODO: Ideally, ActionView should have its own logger so it does not depend on AC.logger ",2],["logger","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000922","","Accepts a logger conforming to the interface of Log4r or the default Ruby 1.8+ Logger class, which is",2],["logger","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001506","()","",2],["logger","ActiveResource::Base","classes/ActiveResource/Base.html#M001815","","The logger for diagnosing and tracing Active Resource calls. ",2],["logger","ActiveResource::LogSubscriber","classes/ActiveResource/LogSubscriber.html#M001946","()","",2],["logger","ActiveSupport::LogSubscriber","classes/ActiveSupport/LogSubscriber.html#M002665","()","",2],["logger","Rails","classes/Rails.html#M003009","()","",2],["logger=","Rails","classes/Rails.html#M003010","(logger)","",2],["lookup","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002973","(name)","",2],["lookup_ancestors","ActiveModel::Translation","classes/ActiveModel/Translation.html#M000782","()","When localizing a string, it goes through the lookup returned by this method, which is used in ActiveModel::Name#human,",2],["lookup_store","ActiveSupport::Cache","classes/ActiveSupport/Cache.html#M002045","(*store_option)","Creates a new CacheStore object according to the given options. If no arguments are passed to this method,",2],["lstrip","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002708","()","Strips entire range of Unicode whitespace from the left of the string. ",2],["mail","ActionMailer::Base","classes/ActionMailer/Base.html#M000017","(headers={}, &block)","The main method that creates the message and renders the email templates. There are two ways to call",2],["mail_to","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000531","(email_address, name = nil, html_options = {})","Creates a mailto link tag to the specified +email_address+, which is also used as the name of the link",2],["mailer_name","ActionMailer::Base","classes/ActionMailer/Base.html#M000004","()","",2],["mailer_name","ActionMailer::Base","classes/ActionMailer/Base.html#M000013","()","",2],["make_test_case_available_to_view!","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000627","()","",2],["many?","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001690","()","",2],["many?","Enumerable","classes/Enumerable.html#M002224","(&block)","Returns true if the collection has more than 1 element. Functionally equivalent to collection.size >",2],["mark_for_destruction","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000905","()","Marks this record to be destroyed as part of the parents save transaction. This does _not_ actually destroy",2],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000906","()","Returns whether or not this record will be destroyed as part of the parents save transaction. Only useful",2],["marshal_data!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001726","()","",2],["marshal_dump","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002946","()","",2],["marshal_load","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002949","(variables)","",2],["mass_assignment_authorizer","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity.html#M000742","(role = :default)","",2],["mass_assignment_options","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001037","()","",2],["mass_assignment_role","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001038","()","",2],["match","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#M000656","(method_name)","",2],["match","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001424","(method)","",2],["match","ActiveRecord::DynamicScopeMatch","classes/ActiveRecord/DynamicScopeMatch.html#M001433","(method)","",2],["match","HTML::Selector","classes/HTML/Selector.html#M000271","(element, first_only = false)","Matches an element against the selector. For a simple selector this method returns an array with the",2],["match_attribute_method?","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000662","(method_name)","Returns a struct representing the matching attribute method. The struct's attributes are prefix, base",2],["mattr_accessor","Module","classes/Module.html#M002290","(*syms)","Extends the module object with module and instance accessors for class attributes, just like the native",2],["mattr_reader","Module","classes/Module.html#M002288","(*syms)","",2],["mattr_writer","Module","classes/Module.html#M002289","(*syms)","",2],["maximum","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001605","(column_name, options = {})","Calculates the maximum value on a given column. The value is returned with the same data type of the",2],["mb_chars","String","classes/String.html#M002408","()","",2],["mb_chars","String","classes/String.html#M002406","()","== Multibyte proxy +mb_chars+ is a multibyte safe proxy for string methods. In Ruby 1.8 and older it",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#M002816","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#M002853","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M002836","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M002831","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M002826","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#M002822","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M002827","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M002832","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M002837","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#M002823","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M002834","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M002824","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M002818","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#M002829","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M002825","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M002830","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#M002835","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::ProcessTime","classes/ActiveSupport/Testing/Performance/Metrics/ProcessTime.html#M002850","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::Time","classes/ActiveSupport/Testing/Performance/Metrics/Time.html#M002881","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::UserTime","classes/ActiveSupport/Testing/Performance/Metrics/UserTime.html#M002817","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html#M002851","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html#M002814","()","",2],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html#M002821","()","",2],["measure_mode","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002846","()","",2],["memoize","ActiveSupport::Memoizable","classes/ActiveSupport/Memoizable.html#M002679","(*symbols)","",2],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M002675","()","",2],["memoized_ivar_for","ActiveSupport::Memoizable","classes/ActiveSupport/Memoizable.html#M002672","(symbol)","",2],["merge","ActiveRecord::SpawnMethods","classes/ActiveRecord/SpawnMethods.html#M001665","(r)","",2],["merge","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002585","(hash)","Merges the instantized and the specified hashes together, giving precedence to the values from the second",2],["message","ActiveRecord::UnknownPrimaryKey","classes/ActiveRecord/UnknownPrimaryKey.html#M001439","()","",2],["method_for_action","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000061","(action_name)","",2],["method_for_action","ActionController::HideActions","classes/ActionController/HideActions.html#M000079","(action_name)","Overrides AbstractController::Base#action_method? to return false if the action name is in the list of",2],["method_for_action","ActionController::ImplicitRender","classes/ActionController/ImplicitRender.html#M000086","(action_name)","",2],["method_missing","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#M000349","(method, *arguments, &block)","Delegate to xml builder, first wrapping the element in a xhtml namespaced div element if the method and",2],["method_missing","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000636","(selector, *args)","",2],["method_missing","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000658","(method_id, *args, &block)","Allows access to the object attributes, which are held in the <tt>@attributes</tt> hash, as though they",2],["method_missing","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000983","(method_id, *arguments, &block)","Enables dynamic finders like <tt>User.find_by_user_name(user_name)</tt> and <tt>User.scoped_by_user_name(user_name).",2],["method_missing","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001545","(method, *arguments, &block)","",2],["method_missing","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001527","(method, *args, &block)","Forwards any missing method call to the \\target. ",2],["method_missing","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001710","(method, *args, &block)","",2],["method_missing","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#M002660","(level, message)","",2],["method_missing","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002694","(method, *args, &block)","Forward all undefined methods to the wrapped string. ",2],["method_missing","ActiveSupport::OrderedOptions","classes/ActiveSupport/OrderedOptions.html#M002773","(name, *args)","",2],["method_missing","ActiveSupport::StringInquirer","classes/ActiveSupport/StringInquirer.html#M002780","(method_name, *arguments)","",2],["method_missing","ActiveSupport::Testing::ProxyTestResult","classes/ActiveSupport/Testing/ProxyTestResult.html#M002793","(name, *args)","",2],["method_missing","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002951","(sym, *args, &block)","Send the missing method to +time+ instance, and wrap result in a new TimeWithZone with the existing +time_zone+.",2],["method_missing","NilClass","classes/NilClass.html#M002977","(method, *args)","",2],["method_name","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#M000657","(attr_name)","",2],["method_names","Module","classes/Module.html#M002298","(*args)","",2],["middleware","ActionController::Metal","classes/ActionController/Metal.html#M000223","()","Alias for middleware_stack ",2],["middleware","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002027","()","Middleware class can be inserted as a Rack handler to be local cache for the duration of request. ",2],["midnight","DateTime","classes/DateTime.html#M002194","()","Alias for #beginning_of_day",2],["midnight","Time","classes/Time.html#M002477","()","Alias for #beginning_of_day",2],["migrate","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001538","(direction)","Execute this migration in the named direction ",2],["migrate","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001534","(direction)","",2],["migration","ActiveRecord::MigrationProxy","classes/ActiveRecord/MigrationProxy.html#M001551","()","",2],["migrations_paths","ActiveRecord::Schema","classes/ActiveRecord/Schema.html#M001693","()","",2],["mime_type","ActionView::Template","classes/ActionView/Template.html#M000603","()","",2],["mime_type","ActiveResource::Formats::JsonFormat","classes/ActiveResource/Formats/JsonFormat.html#M001874","()","",2],["mime_type","ActiveResource::Formats::XmlFormat","classes/ActiveResource/Formats/XmlFormat.html#M001890","()","",2],["minimum","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001604","(column_name, options = {})","Calculates the minimum value on a given column.  The value is returned with the same data type of the",2],["minus_with_coercion","Time","classes/Time.html#M002497","(other)","Time#- can also be used to determine the number of seconds between two Time instances. We're layering",2],["minus_without_coercion","Time","classes/Time.html#M002500","(other)","Alias for #-",2],["minus_without_duration","Time","classes/Time.html#M002499","(other)","Alias for #-",2],["missing_attribute","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000666","(attr_name, stack)","",2],["missing_name","NameError","classes/NameError.html#M002310","()","Extract the name of the missing constant from the exception message. ",2],["missing_name?","NameError","classes/NameError.html#M002311","(name)","Was this exception raised because the given name was missing? ",2],["model","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000711","()","",2],["model_name","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000405","()","",2],["model_name","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000725","()","Returns an ActiveModel::Name object for module. It can be used to retrieve all kinds of naming-related",2],["model_name_from_record_or_class","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000737","(record_or_class)","",2],["modules_for_helpers","ActionController::Helpers::ClassMethods","classes/ActionController/Helpers/ClassMethods.html#M000076","(args)","Overwrite modules_for_helpers to accept :all as argument, which loads all helpers in helpers_path. ====",2],["monday","Time","classes/Time.html#M002470","()","Alias for #beginning_of_week",2],["month","Integer","classes/Integer.html#M002257","()","Alias for #months",2],["months","Integer","classes/Integer.html#M002256","()","Enables the use of time calculations and declarations, like 45.minutes + 2.hours + 4.years. These methods",2],["months_ago","Time","classes/Time.html#M002455","(months)","Returns a new Time representing the time a number of specified months ago ",2],["months_since","Time","classes/Time.html#M002458","(months)","Returns a new Time representing the time a number of specified months in the future ",2],["multipart=","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000404","(multipart)","",2],["multiple_of?","Integer","classes/Integer.html#M002254","(number)","Check whether the integer is evenly divisible by the argument. ",2],["mute","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002049","()","Silence the logger within a block. ",2],["name","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002877","()","",2],["name","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002886","()","",2],["namespaced_key","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002075","(key, options)","Prefix a key with the namespace. Namespace and key will be delimited with a colon. ",2],["native_database_types","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001070","()","",2],["navigation_behavior","ActionController::Responder","classes/ActionController/Responder.html#M000174","(error)","This is the common behavior for formats associated with browsing, like :html, :iphone and so forth. ",2],["navigation_location","ActionController::Responder","classes/ActionController/Responder.html#M000178","()","Alias for #resource_location",2],["nested_attributes_association?","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000420","(association_name)","",2],["nested_child_index","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000425","(name)","",2],["nested_records_changed_for_autosave?","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000909","()","go through nested autosave associations that are loaded in memory (without loading any new ones), and",2],["nested_under_indifferent_access","Hash","classes/Hash.html#M002240","()","Alias for #with_indifferent_access",2],["new","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M000028","(controller, options = {}, infer_extension = true)","If +infer_extension+ is true, the cache path extension is looked up from the request's path and format.",2],["new","ActionController::Metal","classes/ActionController/Metal.html#M000208","()","",2],["new","ActionController::Middleware","classes/ActionController/Middleware.html#M000200","(app)","",2],["new","ActionController::Middleware","classes/ActionController/Middleware.html#M000203","(app)","",2],["new","ActionController::Middleware::ActionMiddleware","classes/ActionController/Middleware/ActionMiddleware.html#M000198","(controller, app)","",2],["new","ActionController::Responder","classes/ActionController/Responder.html#M000168","(controller, resources, options={})","",2],["new","ActionMailer::Base","classes/ActionMailer/Base.html#M000011","(method_name=nil, *args)","Instantiate a new mailer object. If +method_name+ is not +nil+, the mailer will be initialized according",2],["new","ActionView::FileSystemResolver","classes/ActionView/FileSystemResolver.html#M000595","(path, pattern=nil)","",2],["new","ActionView::FixtureResolver","classes/ActionView/FixtureResolver.html#M000633","(hash = {}, pattern=nil)","",2],["new","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000297","(config, asset_paths)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#M000348","(xml)","",2],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#M000351","(xml, view, feed_options = {})","",2],["new","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000407","(object_name, object, template, options, proc)","",2],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html#M000474","(number)","",2],["new","ActionView::Renderer","classes/ActionView/Renderer.html#M000560","(lookup_context)","",2],["new","ActionView::Resolver","classes/ActionView/Resolver.html#M000586","()","",2],["new","ActionView::Resolver::Path","classes/ActionView/Resolver/Path.html#M000585","(name, prefix, partial, virtual)","",2],["new","ActionView::Template","classes/ActionView/Template.html#M000600","(source, identifier, handler, details)","",2],["new","ActionView::TestCase::Behavior::ClassMethods","classes/ActionView/TestCase/Behavior/ClassMethods.html#M000614","(*)","",2],["new","ActionView::TestCase::TestController","classes/ActionView/TestCase/TestController.html#M000609","()","",2],["new","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#M000655","(options = {})","",2],["new","ActiveModel::BlockValidator","classes/ActiveModel/BlockValidator.html#M000844","(options, &block)","",2],["new","ActiveModel::EachValidator","classes/ActiveModel/EachValidator.html#M000835","(options)","Returns a new validator instance. All options will be available via the +options+ reader, however the",2],["new","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000668","(base)","Pass in the instance of the object that is using the errors object. class Person def initialize @errors",2],["new","ActiveModel::Name","classes/ActiveModel/Name.html#M000721","(klass, namespace = nil, name = nil)","",2],["new","ActiveModel::Observer","classes/ActiveModel/Observer.html#M000768","()","Start observing the declared classes and their subclasses. ",2],["new","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000743","(model_class, *args)","",2],["new","ActiveModel::Validations::AcceptanceValidator","classes/ActiveModel/Validations/AcceptanceValidator.html#M000786","(options)","",2],["new","ActiveModel::Validations::LengthValidator","classes/ActiveModel/Validations/LengthValidator.html#M000810","(options)","",2],["new","ActiveModel::Validator","classes/ActiveModel/Validator.html#M000832","(options)","Accepts options that will be made available through the +options+ reader. ",2],["new","ActiveRecord::AttributeAssignmentError","classes/ActiveRecord/AttributeAssignmentError.html#M001436","(message, exception, attribute)","",2],["new","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001010","(attributes = nil, options = {})","New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001132","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#M001121","(connection, max = 1000)","",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001252","(connection, logger, connection_parameters, config)","Initializes and connects a PostgreSQL adapter. ",2],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001239","(connection, max)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001319","(connection, logger, config)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#M001308","(connection, max)","",2],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#M001304","(version_string)","",2],["new","ActiveRecord::ConnectionAdapters::StatementPool","classes/ActiveRecord/ConnectionAdapters/StatementPool.html#M001412","(connection, max = 1000)","",2],["new","ActiveRecord::DynamicFinderMatch","classes/ActiveRecord/DynamicFinderMatch.html#M001425","(finder, instantiator, bang, attribute_names)","",2],["new","ActiveRecord::DynamicScopeMatch","classes/ActiveRecord/DynamicScopeMatch.html#M001434","(scope, attribute_names)","",2],["new","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001467","(connection, table_name, class_name, fixture_path)","",2],["new","ActiveRecord::HasManyThroughNestedAssociationsAreReadonly","classes/ActiveRecord/HasManyThroughNestedAssociationsAreReadonly.html#M000870","(owner, reflection)","",2],["new","ActiveRecord::IdentityMap::Middleware","classes/ActiveRecord/IdentityMap/Middleware.html#M001451","(app)","",2],["new","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001499","()","",2],["new","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001535","()","",2],["new","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001514","(delegate = nil)","",2],["new","ActiveRecord::MigrationProxy","classes/ActiveRecord/MigrationProxy.html#M001548","(name, version, filename)","",2],["new","ActiveRecord::MultiparameterAssignmentErrors","classes/ActiveRecord/MultiparameterAssignmentErrors.html#M001437","(errors)","",2],["new","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001064","(connection, logger, connection_options, config)","",2],["new","ActiveRecord::QueryCache","classes/ActiveRecord/QueryCache.html#M001572","(app)","",2],["new","ActiveRecord::RecordInvalid","classes/ActiveRecord/RecordInvalid.html#M001779","(record)","",2],["new","ActiveRecord::Reflection::MacroReflection","classes/ActiveRecord/Reflection/MacroReflection.html#M001596","(macro, name, options, active_record)","",2],["new","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001678","(*args, &block)","",2],["new","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001673","(klass, table)","",2],["new","ActiveRecord::Result","classes/ActiveRecord/Result.html#M001675","(columns, rows)","",2],["new","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001723","(attributes = nil, options = {})","",2],["new","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001734","(attributes)","Look for normal and marshaled data, self.find_by_session_id's way of telling us to postpone unmarshaling",2],["new","ActiveRecord::UnknownPrimaryKey","classes/ActiveRecord/UnknownPrimaryKey.html#M001438","(model)","",2],["new","ActiveRecord::Validations::UniquenessValidator","classes/ActiveRecord/Validations/UniquenessValidator.html#M001770","(options)","",2],["new","ActiveRecord::WrappedDatabaseException","classes/ActiveRecord/WrappedDatabaseException.html#M001435","(message, original_exception)","",2],["new","ActiveResource::Base","classes/ActiveResource/Base.html#M001888","(attributes = {}, persisted = false)","Constructor method for \\new resources; the optional +attributes+ parameter takes a \\hash of attributes",2],["new","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001786","(site, format = ActiveResource::Formats::JsonFormat)","The +site+ parameter is required and will set the +site+ attribute to the URI for the remote resource",2],["new","ActiveResource::Request","classes/ActiveResource/Request.html#M001940","(method, path, body = nil, headers = {})","",2],["new","ActiveResource::Response","classes/ActiveResource/Response.html#M001944","(body, message = 200, headers = {})","",2],["new","ActiveResource::SSLError","classes/ActiveResource/SSLError.html#M001862","(message)","",2],["new","ActiveResource::TimeoutError","classes/ActiveResource/TimeoutError.html#M001860","(message)","",2],["new","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001959","()","",2],["new","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001976","(log, level = DEBUG)","",2],["new","ActiveSupport::Cache::CompressedMemCacheStore","classes/ActiveSupport/Cache/CompressedMemCacheStore.html#M001985","(*args)","",2],["new","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002081","(value, options = {})","Create a new cache entry for the specified value. Options supported are +:compress+, +:compress_threshold+,",2],["new","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001986","(cache_path, options = nil)","",2],["new","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M001993","(*addresses)","Creates a new MemCacheStore object, with the given memcached server addresses. Each address is either",2],["new","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002013","(options = nil)","",2],["new","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002047","(options = nil)","Create a new cache. The options will be passed to any write method calls except for :namespace which",2],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#M002016","()","",2],["new","ActiveSupport::Cache::SynchronizedMemoryStore","classes/ActiveSupport/Cache/SynchronizedMemoryStore.html#M002044","(*args)","",2],["new","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002537","(name)","",2],["new","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002531","()","",2],["new","ActiveSupport::Dependencies::WatchStack","classes/ActiveSupport/Dependencies/WatchStack.html#M002520","()","@watching is a stack of lists of constants being watched. For instance, if parent.rb is autoloaded, the",2],["new","ActiveSupport::FileUpdateChecker","classes/ActiveSupport/FileUpdateChecker.html#M002552","(paths, calculate=false, &block)","",2],["new","ActiveSupport::FileWatcher","classes/ActiveSupport/FileWatcher.html#M002566","()","",2],["new","ActiveSupport::FileWatcher::Backend","classes/ActiveSupport/FileWatcher/Backend.html#M002564","(path, watcher)","",2],["new","ActiveSupport::Gzip::Stream","classes/ActiveSupport/Gzip/Stream.html#M002569","(*)","",2],["new","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002575","(constructor = {})","",2],["new","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002602","()","",2],["new","ActiveSupport::InheritableOptions","classes/ActiveSupport/InheritableOptions.html#M002775","(parent = nil)","",2],["new","ActiveSupport::JSON::Encoding::Encoder","classes/ActiveSupport/JSON/Encoding/Encoder.html#M002633","(options = nil)","",2],["new","ActiveSupport::LogSubscriber::TestHelper::MockLogger","classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#M002659","(level = DEBUG)","",2],["new","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002680","(secret, cipher = 'aes-256-cbc')","",2],["new","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M002687","(secret, digest = 'SHA1')","",2],["new","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002692","(string)","Creates a new Chars instance by wrapping _string_. ",2],["new","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#M002746","()","",2],["new","ActiveSupport::Notifications::Event","classes/ActiveSupport/Notifications/Event.html#M002765","(name, start, ending, transaction_id, payload)","",2],["new","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002753","()","",2],["new","ActiveSupport::Notifications::Instrumenter","classes/ActiveSupport/Notifications/Instrumenter.html#M002760","(notifier)","",2],["new","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002415","(*)","",2],["new","ActiveSupport::SafeBuffer::SafeConcatError","classes/ActiveSupport/SafeBuffer/SafeConcatError.html#M002413","()","",2],["new","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M002865","(*args)","",2],["new","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002876","()","",2],["new","ActiveSupport::Testing::Performance::Metrics::CpuTime","classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#M002852","(*args)","",2],["new","ActiveSupport::Testing::Performance::Performer","classes/ActiveSupport/Testing/Performance/Performer.html#M002859","(harness, metric)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002839","(*args)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002804","(*args)","",2],["new","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002809","(*args)","",2],["new","ActiveSupport::Testing::ProxyTestResult","classes/ActiveSupport/Testing/ProxyTestResult.html#M002790","()","",2],["new","ActiveSupport::Testing::RemoteError","classes/ActiveSupport/Testing/RemoteError.html#M002789","(exception)","",2],["new","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002887","(utc_time, time_zone, local_time = nil, period = nil)","",2],["new","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002966","(name)","Return a TimeZone instance with the given name, or +nil+ if no such TimeZone instance exists. (This exists",2],["new","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002933","(name, utc_offset = nil, tzinfo = nil)","Create a new TimeZone object with the given name and offset. The offset is the number of seconds that",2],["new","ArJdbcMySQL::Error","classes/ArJdbcMySQL/Error.html#M001586","(msg)","",2],["new","HTML::Selector","classes/HTML/Selector.html#M000270","(selector, *values)","Creates a new selector from a CSS 2 selector expression. The first argument is the selector expression.",2],["new?","ActiveResource::Base","classes/ActiveResource/Base.html#M001894","()","Returns +true+ if this object hasn't yet been saved, otherwise, returns +false+. ==== Examples not_new",2],["new_cipher","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002685","()","",2],["new_constants","ActiveSupport::Dependencies::WatchStack","classes/ActiveSupport/Dependencies/WatchStack.html#M002521","()","return a list of new constants found since the last call to watch_namespaces ",2],["new_element_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001924","()","",2],["new_element_path","ActiveResource::Base","classes/ActiveResource/Base.html#M001857","(prefix_options = {})","Gets the new element path for REST resources. ==== Options * +prefix_options+ - A hash to add a prefix",2],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002577","(hash)","",2],["new_http","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001802","()","",2],["new_record?","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001553","()","Returns true if this object hasn't been saved yet -- that is, a record for the object doesn't exist in",2],["new_record?","ActiveResource::Base","classes/ActiveResource/Base.html#M001895","()","Alias for #new?",2],["next_element","HTML::Selector","classes/HTML/Selector.html#M000275","(element, name = nil)","Return the next element after this one. Skips sibling text nodes. With the +name+ argument, returns the",2],["next_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#M001244","()","",2],["next_migration_number","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001547","(number)","",2],["next_month","Time","classes/Time.html#M002468","()","Short-hand for months_since(1) ",2],["next_selector","HTML::Selector","classes/HTML/Selector.html#M000280","(statement, values)","Called to create a dependent selector (sibling, descendant, etc). Passes the remainder of the statement",2],["next_week","Time","classes/Time.html#M002475","(day = :monday)","Returns a new Time representing the start of the given day in next week (default is Monday). ",2],["next_year","Time","classes/Time.html#M002462","()","Short-hand for years_since(1) ",2],["noise","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001967","(backtrace)","",2],["nonce","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000117","(secret_key, time = Time.now)","Uses an MD5 digest based on time to generate a value to be used only once. A server-specified data string",2],["normalize","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002734","(form = nil)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002744","(string, form=nil)","Returns the KC normalization of the string by default. NFKC is considered the best normalization form",2],["normalize!","ActionController::Caching::Actions::ActionCachePath","classes/ActionController/Caching/Actions/ActionCachePath.html#M000029","(path)","",2],["notify_observers","ActiveModel::Observing","classes/ActiveModel/Observing.html#M000761","(method)","Fires notifications to model's observers def save notify_observers(:before_save) ... notify_observers(:after_save)",2],["notify_observers","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000754","(*arg)","Notify list of observers of a change. ",2],["now","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002959","()","Returns an ActiveSupport::TimeWithZone instance representing the current time in the time zone represented",2],["nth_child","HTML::Selector","classes/HTML/Selector.html#M000278","(a, b, of_type, reverse)","Returns a lambda that can match an element against the nth-child pseudo class, given the following arguments:",2],["number_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000396","(object_name, method, options = {})","Returns an input tag of type \"number\". ==== Options * Accepts same options as number_field_tag ",2],["number_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000466","(name, value = nil, options = {})","Creates a number field. ==== Options * <tt>:min</tt> - The minimum acceptable value. * <tt>:max</tt>",2],["number_to_currency","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000476","(number, options = {})","Formats a +number+ into a currency string (e.g., $13.65). You can customize the format in the +options+",2],["number_to_human","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000487","(number, options = {})","Pretty prints (formats and approximates) a number in a way it is more readable by humans (eg.: 1200000000",2],["number_to_human_size","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000484","(number, options = {})","Formats the bytes in +number+ into a more understandable representation (e.g., giving it 1500 yields",2],["number_to_percentage","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000479","(number, options = {})","Formats a +number+ as a percentage string (e.g., 65%). You can customize the format in the +options+",2],["number_to_phone","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000475","(number, options = {})","Formats a +number+ into a US phone number (e.g., (555) 123-9876). You can customize the format in the",2],["number_with_delimiter","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000480","(number, options = {})","Formats a +number+ with grouped thousands using +delimiter+ (e.g., 12,324). You can customize the format",2],["number_with_precision","ActionView::Helpers::NumberHelper","classes/ActionView/Helpers/NumberHelper.html#M000482","(number, options = {})","Formats a +number+ with the specified level of <tt>:precision</tt> (e.g., 112.32 has a precision of 2",2],["object","ActionView::Helpers::ActiveModelInstanceTag","classes/ActionView/Helpers/ActiveModelInstanceTag.html#M000290","()","",2],["object_has_errors?","ActionView::Helpers::ActiveModelInstanceTag","classes/ActionView/Helpers/ActiveModelInstanceTag.html#M000294","()","",2],["objectify_options","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000418","(options)","",2],["observe","ActiveModel::Observer","classes/ActiveModel/Observer.html#M000765","(*models)","Attaches the observer to the supplied model classes. ",2],["observed_class","ActiveModel::Observer","classes/ActiveModel/Observer.html#M000767","()","The class observed by default is inferred from the observer's class name: assert_equal Person, PersonObserver.observed_class",2],["observed_classes","ActiveModel::Observer","classes/ActiveModel/Observer.html#M000766","()","Returns an array of Classes to observe. You can override this instead of using the +observe+ helper.",2],["observed_classes","ActiveRecord::Observer","classes/ActiveRecord/Observer.html#M001556","()","",2],["observer_class_for","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000753","(observer)","",2],["observer_instances","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000748","()","Gets the current observer instances. ",2],["observers","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000747","()","Gets an array of observers observing this model. The array also provides +enable+ and +disable+ methods",2],["observers=","ActiveModel::Observing::ClassMethods","classes/ActiveModel/Observing/ClassMethods.html#M000745","(*values)","== Active Model Observers Activation Activates the observers assigned. Examples: class ORM include ActiveModel::Observing",2],["odd?","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001505","()","",2],["offset","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001648","(value)","",2],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002985","(string)","Alias for #on_characters",2],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002984","(string)","",2],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002981","()","",2],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002983","(name)","",2],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002980","()","",2],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#M002982","(name, attrs = {})","",2],["only","ActiveRecord::SpawnMethods","classes/ActiveRecord/SpawnMethods.html#M001671","(*onlies)","Removes any condition from the query other than the one(s) specified in +onlies+. Example: Post.order('id",2],["only_child","HTML::Selector","classes/HTML/Selector.html#M000279","(of_type)","Creates a only child lambda. Pass +of-type+ to only look at elements of its type. ",2],["opaque","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000119","(secret_key)","Opaque based on random generation - but changing each request? ",2],["open_log","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001977","(log, mode)","",2],["operation_over_aggregate_column","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001610","(column, operation, distinct)","",2],["option_call","ActiveModel::Validations::FormatValidator","classes/ActiveModel/Validations/FormatValidator.html#M000802","(record, name)","",2],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000429","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","Returns a string of <tt><option></tt> tags, like <tt>options_from_collection_for_select</tt>, but groups",2],["option_html_attributes","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000432","(element)","",2],["option_text_and_value","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000433","(option)","",2],["option_value_selected?","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000434","(value, selected)","",2],["options_for","ActiveSupport::JSON::Encoding::Encoder","classes/ActiveSupport/JSON/Encoding/Encoder.html#M002638","(value)","",2],["options_for_javascript","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000547","(options)","",2],["options_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000427","(container, selected = nil)","Accepts a container (hash, array, enumerable, your type) and returns a string of option tags. Given a",2],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000428","(collection, value_method, text_method, selected = nil)","Returns a string of option tags that have been compiled by iterating over the +collection+ and assigning",2],["ord","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002710","()","Returns the codepoint of the first character in the string. Example: 'こんにちは'.mb_chars.ord # => 12371",2],["ord","String","classes/String.html#M002378","()","Returns the codepoint of the first character of the string, assuming a single-byte character encoding:",2],["order","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001639","(*args)","",2],["ordinalize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002621","(number)","Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st,",2],["ordinalize","Integer","classes/Integer.html#M002255","()","Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such",2],["orig_delete","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001834","(custom_method_name, options = {})","Alias for #delete",2],["original_concat","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002418","(value)","Alias for #concat",2],["output_filename","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M002873","()","",2],["output_filename","ActiveSupport::Testing::Performance::Performer","classes/ActiveSupport/Testing/Performance/Performer.html#M002861","()","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002842","(printer_class)","",2],["output_filename","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002808","(printer_class)","",2],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001297","()","",2],["page_cache_file","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M000039","(path, extension)","",2],["page_cache_path","ActionController::Caching::Pages::ClassMethods","classes/ActionController/Caching/Pages/ClassMethods.html#M000040","(path, extension = nil)","",2],["param_key","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000736","(record_or_class)","Returns string to use for params names. It differs for namespaced models regarding whether it's inside",2],["parameterize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002625","(string, sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["parameterize","String","classes/String.html#M002399","(sep = '-')","Replaces special characters in a string so that it may be used as part of a 'pretty' URL. ==== Examples",2],["paramify_values","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000248","(hash_or_array_or_value)","",2],["params","ActionController::Metal","classes/ActionController/Metal.html#M000209","()","",2],["params=","ActionController::Metal","classes/ActionController/Metal.html#M000210","(val)","",2],["parent","Module","classes/Module.html#M002294","()","Returns the module which contains this one according to its name. module M module N end end X = M::N",2],["parent_name","Module","classes/Module.html#M002293","()","Returns the name of the module containing this one. M::N.parent_name # => \"M\" ",2],["parent_of?","ActiveSupport::Notifications::Event","classes/ActiveSupport/Notifications/Event.html#M002766","(event)","",2],["parents","Module","classes/Module.html#M002295","()","Returns all the parents of this module according to its name, ordered from nested outwards. The receiver",2],["parse","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002956","(str, now=now)","Method for creating new ActiveSupport::TimeWithZone instance in time zone of +self+ from parsed string.",2],["parse","ActiveSupport::XmlMini_LibXMLSAX","classes/ActiveSupport/XmlMini_LibXMLSAX.html#M002986","(data)","",2],["parse","ActiveSupport::XmlMini_NokogiriSAX","classes/ActiveSupport/XmlMini_NokogiriSAX.html#M002995","(data)","",2],["parse_error","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002630","()","",2],["parse_raw_value_as_a_number","ActiveModel::Validations::NumericalityValidator","classes/ActiveModel/Validations/NumericalityValidator.html#M000817","(raw_value)","",2],["parse_raw_value_as_an_integer","ActiveModel::Validations::NumericalityValidator","classes/ActiveModel/Validations/NumericalityValidator.html#M000818","(raw_value)","",2],["parse_yaml_string","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001492","(fixture_content)","",2],["parser","URI","classes/URI.html#M002510","()","",2],["password","ActiveResource::Base","classes/ActiveResource/Base.html#M001826","()","Gets the \\password for REST HTTP authentication. ",2],["password=","ActiveModel::SecurePassword::InstanceMethodsOnActivation","classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#M000777","(unencrypted_password)","Encrypts the password into the password_digest attribute. ",2],["password=","ActiveResource::Base","classes/ActiveResource/Base.html#M001828","(password)","Sets the \\password for REST HTTP authentication. ",2],["password=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001790","(password)","Sets the password for remote service. ",2],["password_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000385","(object_name, method, options = {})","Returns an input tag of the \"password\" type tailored for accessing a specified attribute (identified",2],["password_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000447","(name = \"password\", value = nil, options = {})","Creates a password field, a masked text field that will hide the users input behind a mask character.",2],["past?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002921","()","",2],["past?","DateTime","classes/DateTime.html#M002184","()","Tells whether the DateTime object's datetime lies in the past ",2],["past?","Time","classes/Time.html#M002441","()","Tells whether the Time object's time lies in the past ",2],["path","LoadError","classes/LoadError.html#M002275","()","",2],["path_to_asset","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000303","(source, options = {})","",2],["path_to_asset_source","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000304","(source)","",2],["path_to_audio","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000321","(source)","Alias for #audio_path",2],["path_to_image","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000317","(source)","Alias for #image_path",2],["path_to_javascript","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#M000343","(source)","Alias for #javascript_path",2],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#M000339","(source)","Alias for #stylesheet_path",2],["path_to_video","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000319","(source)","Alias for #video_path",2],["pending","ActiveSupport::Testing::Pending","classes/ActiveSupport/Testing/Pending.html#M002800","(description = \"\", &block)","",2],["perform_calculation","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001608","(operation, column_name, options = {})","",2],["perform_validations","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001784","(options={})","",2],["performed?","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000062","()","",2],["period","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002894","()","Returns the underlying TZInfo::TimezonePeriod. ",2],["period_for_local","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002964","(time, dst=true)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["period_for_utc","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002963","(time)","Available so that TimeZone instances respond like TZInfo::Timezone instances ",2],["persisted?","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001555","()","Returns if the record is persisted, i.e. it's not a new record and it was not destroyed. ",2],["persisted?","ActiveResource::Base","classes/ActiveResource/Base.html#M001896","()","Returns +true+ if this object has been saved, otherwise returns +false+. ==== Examples persisted = Computer.create(:brand",2],["phone_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000393","(object_name, method, options = {})","Alias for #telephone_field",2],["phone_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000463","(name, value = nil, options = {})","Alias for #telephone_field_tag",2],["pk_and_sequence_for","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001142","(table)","Returns a table's primary key and belonging sequence. ",2],["plural","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000727","(record_or_class)","Returns the plural class name of a record or class. Examples: ActiveModel::Naming.plural(post)      ",2],["plural","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002603","(rule, replacement)","Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular",2],["pluralize","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000510","(count, singular, plural = nil)","Attempts to pluralize the +singular+ word unless +count+ is 1. If +plural+ is supplied, it will use that",2],["pluralize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002613","(word)","Returns the plural form of the word in the string. Examples: \"post\".pluralize             # => \"posts\"",2],["pluralize","String","classes/String.html#M002388","()","Returns the plural form of the word in the string. \"post\".pluralize             # => \"posts\" \"octopus\".pluralize",2],["pluralize_table_names","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000927","","Indicates whether table names should be the pluralized versions of the corresponding class names. If",2],["pop_modules","ActiveSupport::Dependencies::WatchStack","classes/ActiveSupport/Dependencies/WatchStack.html#M002523","(modules)","",2],["populate_with_current_scope_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001060","()","",2],["post","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000242","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating POST HTTP method and set/volley the response ",2],["post","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001797","(path, body = '', headers = {})","Executes a POST request. Used to create new resources. ",2],["post","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001831","(custom_method_name, options = {}, body = '')","",2],["post","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001842","(method_name, options = {}, body = nil)","",2],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001380","()","Returns the version of the connected PostgreSQL server. ",2],["precisionless_round","Float","classes/Float.html#M002228","(precision = nil)","Alias for #round",2],["prefix","ActiveResource::Base","classes/ActiveResource/Base.html#M001853","(options={})","Gets the \\prefix for a resource's nested URL (e.g., <tt>prefix/collectionname/1.json</tt>) This method",2],["prefix=","ActiveResource::Base","classes/ActiveResource/Base.html#M001855","(value = '/')","Sets the \\prefix for a resource's nested URL (e.g., <tt>prefix/collectionname/1.json</tt>). Default value",2],["prefix_parameters","ActiveResource::Base","classes/ActiveResource/Base.html#M001883","()","contains a set of the current prefix parameters. ",2],["prefix_source","ActiveResource::Base","classes/ActiveResource/Base.html#M001854","()","An attribute reader for the source string for the resource path \\prefix.  This method is regenerated",2],["preload","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001634","(*args)","",2],["prepare_controller_class","ActionController::TestCase::Behavior::ClassMethods","classes/ActionController/TestCase/Behavior/ClassMethods.html#M000240","(new_class)","",2],["prepare_statement","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001391","(sql)","Prepare the statement if it hasn't been prepared, return the statement key. ",2],["presence","Object","classes/Object.html#M002340","()","Returns object if it's <tt>present?</tt> otherwise returns +nil+. <tt>object.presence</tt> is equivalent",2],["present?","Object","classes/Object.html#M002339","()","An object is present if it's not <tt>blank?</tt>. ",2],["prev_month","Time","classes/Time.html#M002467","()","Short-hand for months_ago(1) ",2],["prev_week","Time","classes/Time.html#M002474","(day = :monday)","Returns a new Time representing the start of the given day in the previous week (default is Monday).",2],["prev_year","Time","classes/Time.html#M002461","()","Short-hand for years_ago(1) ",2],["previous_changes","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000677","()","Map of attributes that were changed when the model was saved. person.name # => 'bob' person.name = 'robert'",2],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#M000864","()","Defines the primary key field -- can be overridden in subclasses. Overwriting will negate any effect",2],["primary_key","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001214","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001351","(table)","Returns just a table's primary key ",2],["primary_key","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001146","(table)","Returns just a table's primary key ",2],["primary_key","ActiveResource::Base","classes/ActiveResource/Base.html#M001852","()","",2],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#M000868","(value)","Attribute writer for the primary key column ",2],["primary_key_name","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001480","()","",2],["primary_key_prefix_type","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000924","","Accessor for the prefix type that will be prepended to every primary key column name. The options are",2],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M002677","(*syms)","",2],["process","ActionController::Middleware","classes/ActionController/Middleware.html#M000202","(action)","",2],["process","ActionController::TemplateAssertions","classes/ActionController/TemplateAssertions.html#M000233","(*args)","",2],["process","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000249","(action, parameters = nil, session = nil, flash = nil, http_method = 'GET')","",2],["process_action","ActionController::Instrumentation","classes/ActionController/Instrumentation.html#M000096","(*args)","",2],["process_action","ActionController::LogSubscriber","classes/ActionController/LogSubscriber.html#M000050","(event)","",2],["process_action","ActionController::ParamsWrapper","classes/ActionController/ParamsWrapper.html#M000137","(*args)","Performs parameters wrapping upon the request. Will be called automatically by the metal call stack.",2],["process_action","ActionController::Rescue","classes/ActionController/Rescue.html#M000167","(*args)","",2],["process_attributes_for","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M000266","(node, options)","",2],["process_node","HTML::FullSanitizer","classes/HTML/FullSanitizer.html#M000260","(node, result, options)","",2],["process_node","HTML::LinkSanitizer","classes/HTML/LinkSanitizer.html#M000262","(node, result, options)","",2],["process_node","HTML::Sanitizer","classes/HTML/Sanitizer.html#M000258","(node, result, options)","",2],["process_node","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M000265","(node, result, options)","",2],["process_view_paths","ActionView::Base","classes/ActionView/Base.html#M000283","(value)","",2],["process_with_new_base_test","ActionController::Testing","classes/ActionController/Testing.html#M000194","(request, response)","TODO: Clean this up ",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002847","()","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002812","()","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002819","()","",2],["profile","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002879","()","overridden by each implementation ",2],["protect_against_forgery?","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M000165","()","",2],["protect_against_forgery?","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000626","()","",2],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","classes/ActionController/RequestForgeryProtection/ClassMethods.html#M000159","(options = {})","Turn on request forgery protection. Bear in mind that only non-GET, HTML/JavaScript requests are checked.",2],["protected_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000730","(role = :default)","",2],["protected_attributes_configs","ActiveModel::MassAssignmentSecurity::ClassMethods","classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#M000739","()","",2],["provide","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000356","(name, content = nil, &block)","The same as +content_for+ but when used with streaming flushes straight back to the layout. In other",2],["proxy","ActiveResource::Base","classes/ActiveResource/Base.html#M001822","()","Gets the \\proxy variable if a proxy is required ",2],["proxy=","ActiveResource::Base","classes/ActiveResource/Base.html#M001823","(proxy)","Sets the URI of the http proxy to the value in the +proxy+ argument. ",2],["proxy=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001788","(proxy)","Set the proxy for remote service. ",2],["prune","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002019","(target_size, max_time = nil)","To ensure entries fit within the specified memory prune the cache by removing the least recently accessed",2],["pruning?","ActiveSupport::Cache::MemoryStore","classes/ActiveSupport/Cache/MemoryStore.html#M002024","()","Returns true if the cache is currently being pruned. ",2],["public_path","Rails","classes/Rails.html#M003018","()","",2],["publish","ActiveSupport::Notifications","classes/ActiveSupport/Notifications.html#M002763","(name, *args)","",2],["publish","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002756","(name, *args)","",2],["put","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000243","(action, parameters = nil, session = nil, flash = nil)","Executes a request simulating PUT HTTP method and set/volley the response ",2],["put","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001796","(path, body = '', headers = {})","Executes a PUT request (see HTTP protocol documentation if unfamiliar). Used to update resources. ",2],["put","ActiveResource::CustomMethods","classes/ActiveResource/CustomMethods.html#M001832","(custom_method_name, options = {}, body = '')","",2],["put","ActiveResource::CustomMethods::InstanceMethods","classes/ActiveResource/CustomMethods/InstanceMethods.html#M001845","(method_name, options = {}, body = '')","",2],["query","ActionView::FixtureResolver","classes/ActionView/FixtureResolver.html#M000638","(path, exts, formats)","",2],["query","ActionView::NullResolver","classes/ActionView/NullResolver.html#M000639","(path, exts, formats)","",2],["query_attribute","ActiveRecord::AttributeMethods::Query","classes/ActiveRecord/AttributeMethods/Query.html#M000871","(attr_name)","",2],["query_string","ActiveResource::Base","classes/ActiveResource/Base.html#M001884","(options)","Builds the query string for the request. ",2],["quietly","Kernel","classes/Kernel.html#M002272","()","Silences both STDOUT and STDERR, even for subprocesses. quietly { system 'bundle install' } ",2],["quote","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001144","(value, column = nil)","QUOTING ================================================== ",2],["quote","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001071","(value, column = nil)","QUOTING ================================================== ",2],["quote_columns","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001057","(quoter, hash)","",2],["quote_string","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001074","(string)","",2],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001277","(name)","Checks the following cases: - table_name - \"table.name\" - schema_name.table_name - schema_name.\"table.name\"",2],["quote_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001044","(value, column = nil)","Quote strings appropriately for SQL statements. ",2],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001222","(column_names, options = {})","",2],["quoted_columns_for_index","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001158","(column_names, options = {})","",2],["quoted_comma_pair_list","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001058","(quoter, hash)","",2],["quoted_false","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001152","()","",2],["quoted_false","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001076","()","",2],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001477","()","Quote the column name used for optimistic locking. ",2],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#M000865","()","Returns a quoted version of the primary key name, used to construct SQL statements. ",2],["quoted_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000938","()","Returns a quoted version of the table name, used to construct SQL statements. ",2],["quoted_true","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001151","()","",2],["quoted_true","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001075","()","",2],["radio_button","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000411","(method, tag_value, options = {})","",2],["radio_button","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000390","(object_name, method, tag_value, options = {})","Returns a radio button tag for accessing a specified attribute (identified by +method+) on an object",2],["radio_button_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000453","(name, value, checked = false, options = {})","Creates a radio button; use groups of radio buttons named the same to allow users to select from a group",2],["raise_nil_warning_for","NilClass","classes/NilClass.html#M002978","(class_name = nil, selector = nil, with_caller = nil)","Raises a NoMethodError when you attempt to call a method on +nil+. ",2],["raise_on_session_data_overflow!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001727","()","Ensures that the data about to be stored in the database is not larger than the data storage column.",2],["range_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000397","(object_name, method, options = {})","Returns an input tag of type \"range\". ==== Options * Accepts same options as range_field_tag ",2],["range_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000467","(name, value = nil, options = {})","Creates a range form element. ==== Options * Accepts the same options as number_field_tag. ",2],["raw","ActionView::Helpers::OutputSafetyHelper","classes/ActionView/Helpers/OutputSafetyHelper.html#M000477","(stringish)","This method outputs without escaping a string. Since escaping tags is now default, this can be used when",2],["raw_value","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002083","()","Get the raw value. This value may be serialized and compressed. ",2],["raw_write_attribute","ActiveRecord::AttributeMethods::Write","classes/ActiveRecord/AttributeMethods/Write.html#M000890","(attr_name, value)","Alias for #write_attribute",2],["read","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002054","(name, options = nil)","Fetches data from the cache, using the given key. If there is data in the cache with the given key, then",2],["read_attribute","ActiveRecord::AttributeMethods::Read","classes/ActiveRecord/AttributeMethods/Read.html#M000880","(attr_name)","Returns the value of the attribute identified by <tt>attr_name</tt> after it has been typecast (for example,",2],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#M000853","(attr_name)","",2],["read_csv_fixture_files","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001487","()","",2],["read_date_parameter_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001050","(name, values_hash_from_param)","",2],["read_entry","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001994","(key, options)","",2],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#M002020","(key, options)","",2],["read_fixture_files","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001485","()","",2],["read_fragment","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M000032","(key, options = nil)","Reads a cached fragment from the location signified by <tt>key</tt> (see <tt>expire_fragment</tt> for",2],["read_multi","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M001995","(*names)","Reads multiple values from the cache using a single call to the servers for all keys. Options can be",2],["read_multi","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002055","(*names)","Read multiple values at once from the cache. Options can be passed in the last argument. Some cache implementation",2],["read_other_parameter_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001051","(klass, name, values_hash_from_param)","",2],["read_time_parameter_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001049","(name, values_hash_from_param)","",2],["read_value_from_parameter","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001048","(name, values_hash_from_param)","",2],["read_yaml_fixture_files","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001486","()","",2],["readable_inspect","DateTime","classes/DateTime.html#M002202","()","Overrides the default inspect method with a human readable one, e.g., \"Mon, 21 Feb 2005 14:30:00 +0000\".",2],["reader_method","ActiveRecord::Aggregations::ClassMethods","classes/ActiveRecord/Aggregations/ClassMethods.html#M000851","(name, class_name, mapping, allow_nil, constructor)","",2],["readonly","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001650","(value = true)","",2],["readonly!","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001033","()","Marks this record as read only. ",2],["readonly?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001032","()","Returns +true+ if the record is read only. Records loaded through joins with piggy-back attributes will",2],["readonly_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000935","()","Returns an array of all the attributes that have been specified as readonly. ",2],["receive","ActionMailer::Base","classes/ActionMailer/Base.html#M000006","(raw_mail)","Receives a raw email, parses it into an email object, decodes it, instantiates a new mailer, and passes",2],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001159","()","",2],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001260","()","Close then reopen the connection. ",2],["reconnect!","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001080","()","",2],["record","ActiveRecord::Migration::CommandRecorder","classes/ActiveRecord/Migration/CommandRecorder.html#M001515","(*command)","record +command+.  +command+ should be a method name and arguments. For example: recorder.record(:method_name,",2],["record","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M002867","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002841","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002806","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002864","()","",2],["record","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002811","()","",2],["record_error","ActiveModel::Validations::FormatValidator","classes/ActiveModel/Validations/FormatValidator.html#M000803","(record, attribute, name, value)","",2],["record_key_for_dom_id","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M000229","(record)","Returns a string representation of the key attribute(s) that is suitable for use in an HTML DOM id. This",2],["recreate_database","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001103","(name, options = {})","Drops the database specified on the +name+ attribute and creates it again using the provided +options+.",2],["recycle!","ActionController::TestResponse","classes/ActionController/TestResponse.html#M000235","()","",2],["recycle!","ActionController::Testing","classes/ActionController/Testing.html#M000193","()","",2],["redefine_method","Module","classes/Module.html#M002302","(method, &block)","",2],["redirect_to","ActionController::Flash","classes/ActionController/Flash.html#M000071","(options = {}, response_status_and_flash = {})","",2],["redirect_to","ActionController::Instrumentation","classes/ActionController/Instrumentation.html#M000105","(*args)","",2],["redirect_to","ActionController::LogSubscriber","classes/ActionController/LogSubscriber.html#M000052","(event)","",2],["redirect_to","ActionController::Redirecting","classes/ActionController/Redirecting.html#M000146","(options = {}, response_status = {})","Redirects the browser to the target specified in +options+. This parameter can take one of three forms:",2],["references_eager_loaded_tables?","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001711","()","",2],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001591","(aggregation)","Returns the AggregateReflection object for the named +aggregation+ (use the symbol). Account.reflect_on_aggregation(:balance)",2],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001590","()","Returns an array of AggregateReflection objects for all the aggregations in the class. ",2],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001592","(macro = nil)","Returns an array of AssociationReflection objects for all the associations in the class. If you only",2],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001594","()","Returns an array of AssociationReflection objects for all associations which have <tt>:autosave</tt>",2],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","classes/ActiveRecord/Reflection/ClassMethods.html#M001593","(association)","Returns the AssociationReflection object for the +association+ (use the symbol). Account.reflect_on_association(:owner)",2],["refresh","ActionView::Template","classes/ActionView/Template.html#M000604","(view)","Receives a view object and return a template similar to self by using @virtual_path. This method is useful",2],["register_interceptor","ActionMailer::Base","classes/ActionMailer/Base.html#M000003","(interceptor)","Register an Interceptor which will be called before mail is sent. Either a class or a string can be passed",2],["register_interceptors","ActionMailer::Base","classes/ActionMailer/Base.html#M000001","(*interceptors)","Register one or more Interceptors which will be called before mail is sent. ",2],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers::ClassMethods","classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers/ClassMethods.html#M000340","(expansions)","Register one or more javascript files to be included when <tt>symbol</tt> is passed to <tt>javascript_include_tag</tt>.",2],["register_observer","ActionMailer::Base","classes/ActionMailer/Base.html#M000002","(observer)","Register an Observer which will be notified when mail is delivered. Either a class or a string can be",2],["register_observers","ActionMailer::Base","classes/ActionMailer/Base.html#M000000","(*observers)","Register one or more Observers which will be notified when mail is delivered. ",2],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers::ClassMethods","classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers/ClassMethods.html#M000336","(expansions)","Register one or more stylesheet files to be included when <tt>symbol</tt> is passed to <tt>stylesheet_link_tag</tt>.",2],["regular_writer","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002579","(key, value)","Alias for #[]=",2],["reinit_with","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001450","(coder)","Reinitialize an Identity Map model object from +coder+. +coder+ must contain the attributes necessary",2],["release_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001186","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001300","()","",2],["release_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001372","()","",2],["release_savepoint","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001098","()","",2],["reload","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000904","(options = nil)","Reloads the attributes of the object as usual and clears <tt>marked_for_destruction</tt> flag. ",2],["reload","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001578","(options = nil)","Reloads the attributes of this object from the database. The optional options argument is passed to find",2],["reload","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001700","()","",2],["reload","ActiveResource::Base","classes/ActiveResource/Base.html#M001910","()","A method to \\reload the attributes of this object from the remote web service. ==== Examples my_branch",2],["reloader","I18n::Railtie","classes/I18n/Railtie.html#M002595","()","",2],["remember_transaction_record_state","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001768","()","Save the new record state and id of a record so it can be restored later if a transaction fails. ",2],["remove","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001447","(record)","",2],["remove_by_id","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001448","(symbolized_sti_name, id)","",2],["remove_column_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001226","(table_name, *column_names)","",2],["remove_filters!","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001964","()","",2],["remove_index_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001232","(table_name, options = {})","",2],["remove_multiparameter_id","ActiveModel::MassAssignmentSecurity::PermissionSet","classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#M000715","(key)","",2],["remove_possible_method","Module","classes/Module.html#M002301","(method)","",2],["remove_root","ActiveResource::Formats","classes/ActiveResource/Formats.html#M001903","(data)","",2],["remove_silencers!","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001963","()","Will remove all silencers, but leave in the filters. This is useful if your context of debugging suddenly",2],["remove_timestamps_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001234","(table_name)","",2],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001367","(table_name, column_name, new_column_name)","Renames a column in a table. ",2],["rename_column","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001126","(table_name, column_name, new_column_name)","",2],["rename_column_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001228","(table_name, column_name, new_column_name)","",2],["rename_index","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001369","(table_name, old_name, new_name)","",2],["rename_key","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M002999","(key, options = {})","",2],["rename_table","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001202","(table_name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001352","(name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001386","(name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["rename_table","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001115","(table_name, new_name)","Renames a table. Example: rename_table('octopuses', 'octopi') ",2],["render","ActionController::Instrumentation","classes/ActionController/Instrumentation.html#M000102","(*args)","",2],["render","ActionView::Helpers::RenderingHelper","classes/ActionView/Helpers/RenderingHelper.html#M000485","(options = {}, locals = {}, &block)","Returns the result of a render that's dictated by the options hash. The primary options are: * <tt>:partial</tt>",2],["render","ActionView::Renderer","classes/ActionView/Renderer.html#M000561","(context, options)","Main render entry point shared by AV and AC. ",2],["render","ActionView::Template","classes/ActionView/Template.html#M000602","(view, locals, buffer=nil, &block)","Render a template. If the template was not compiled yet, it is done exactly before rendering. This method",2],["render","ActionView::Template::Handler","classes/ActionView/Template/Handler.html#M000573","(template, local_assigns)","",2],["render","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000620","(options = {}, local_assigns = {}, &block)","",2],["render","ActionView::TestCase::Behavior::Locals","classes/ActionView/TestCase/Behavior/Locals.html#M000628","(options = {}, local_assigns = {})","",2],["render_body","ActionView::Renderer","classes/ActionView/Renderer.html#M000562","(context, options)","Render but returns a valid Rack body. If fibers are defined, we return a streaming body that renders",2],["render_collection","ActionView::LogSubscriber","classes/ActionView/LogSubscriber.html#M000525","(event)","Alias for #render_template",2],["render_partial","ActionView::LogSubscriber","classes/ActionView/LogSubscriber.html#M000524","(event)","Alias for #render_template",2],["render_template","ActionView::LogSubscriber","classes/ActionView/LogSubscriber.html#M000523","(event)","",2],["render_to_body","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000059","(options)","",2],["render_to_body","ActionController::Renderers","classes/ActionController/Renderers.html#M000148","(options)","",2],["render_to_string","ActionController::Rendering","classes/ActionController/Rendering.html#M000155","(*)","Overwrite render_to_string because body can now be set to a rack body. ",2],["reorder","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001641","(*args)","",2],["reorder_characters","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002727","(codepoints)","Re-order codepoints so the string becomes canonical. ",2],["report","ActiveSupport::Testing::Performance::Performer","classes/ActiveSupport/Testing/Performance/Performer.html#M002860","()","",2],["repository","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001442","()","",2],["request","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001799","(method, path, *arguments)","Makes a request to the remote service. ",2],["request","ActiveResource::LogSubscriber","classes/ActiveResource/LogSubscriber.html#M001945","(event)","",2],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#M000090","(realm = \"Application\")","",2],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#M000099","(realm = \"Application\", message = nil)","Render output including the HTTP Digest authentication header ",2],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#M000122","(realm = \"Application\")","",2],["requests","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001785","()","",2],["requests","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001929","()","Returns an array of all request objects that have been sent to the mock. You can use this to check if",2],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001502","(fixture_names = nil)","",2],["require_library_or_gem","Kernel","classes/Kernel.html#M002271","(library_name)","Require a library with fallback to RubyGems.  Warnings during library loading are silenced to increase",2],["require_tzinfo","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002972","()","",2],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001330","()","",2],["requires_reloading?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001081","()","this is set to true in 2.3, but we don't want it to be ",2],["rescue_action","ActionController::Compatibility","classes/ActionController/Compatibility.html#M000054","(env)","",2],["rescue_action_in_public!","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000251","()","Cause the action to be rescued according to the regular rules for rescue_action when the visitor is not",2],["rescue_action_without_handler","ActionController::TestCase::RaiseActionExceptions","classes/ActionController/TestCase/RaiseActionExceptions.html#M000254","(e)","",2],["rescue_from","ActiveSupport::Rescuable::ClassMethods","classes/ActiveSupport/Rescuable/ClassMethods.html#M002777","(*klasses, &block)","Rescue exceptions raised in controller actions. <tt>rescue_from</tt> receives a series of exception classes",2],["rescue_with_handler","ActionController::Rescue","classes/ActionController/Rescue.html#M000166","(exception)","",2],["rescue_with_handler","ActiveSupport::Rescuable","classes/ActiveSupport/Rescuable.html#M002778","(exception)","Tries to rescue the exception by looking up and calling a registered handler. ",2],["reset","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001701","()","",2],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001161","()","",2],["reset!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001261","()","",2],["reset!","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001083","()","",2],["reset!","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001937","()","Deletes all logged requests and responses. ",2],["reset_attribute!","ActiveModel::Dirty","classes/ActiveModel/Dirty.html#M000685","(attr)","Handle <tt>reset_*!</tt> for +method_missing+. ",2],["reset_cache","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001454","()","",2],["reset_callbacks","ActiveSupport::ClassMethods","classes/ActiveSupport/ClassMethods.html#M002092","(symbol)","Remove all set callbacks for the given event. ",2],["reset_column_information","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000954","()","Resets all the cached information about columns, which will cause them to be reloaded on the next request.",2],["reset_counters","ActiveRecord::CounterCache","classes/ActiveRecord/CounterCache.html#M001423","(id, *counters)","Resets one or more counter caches to their correct value using an SQL count query.  This is useful when",2],["reset_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000515","(name = \"default\")","Resets a cycle so that it starts from the first element the next time it is called. Pass in +name+ to",2],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001478","()","Reset the column used for optimistic locking back to the +lock_version+ default. ",2],["reset_runtime","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001498","()","",2],["reset_session","ActionController::RackDelegation","classes/ActionController/RackDelegation.html#M000140","()","",2],["resource_location","ActionController::Responder","classes/ActionController/Responder.html#M000177","()","Returns the resource location by retrieving it from the options or returning the resources array. ",2],["resourceful?","ActionController::Responder","classes/ActionController/Responder.html#M000176","()","Checks whether the resource responds to the current format or not. ",2],["respond","ActionController::Responder","classes/ActionController/Responder.html#M000170","()","Main entry point for responder responsible to dispatch to the proper format. ",2],["respond_to","ActionController::MimeResponds","classes/ActionController/MimeResponds.html#M000129","(*mimes, &block)","Without web-service support, an action which collects the data for displaying a list of people might",2],["respond_to","ActionController::MimeResponds::ClassMethods","classes/ActionController/MimeResponds/ClassMethods.html#M000123","(*mimes)","Defines mime types that are rendered by default when invoking <tt>respond_with</tt>. Examples: respond_to",2],["respond_to","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001935","(*args)","Accepts a block which declares a set of requests and responses for the HttpMock to respond to in the",2],["respond_to?","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000659","(method, include_private_methods = false)","",2],["respond_to?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000970","(method_id, include_private = false)","",2],["respond_to?","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001684","(method, include_private = false)","",2],["respond_to?","ActiveResource::Base","classes/ActiveResource/Base.html#M001914","(method, include_priv = false)","A method to determine if an object responds to a message (e.g., a method call). In Active Resource, a",2],["respond_to?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002695","(method, include_private=false)","Returns +true+ if _obj_ responds to the given method. Private methods are included in the search only",2],["respond_to?","ActiveSupport::OrderedOptions","classes/ActiveSupport/OrderedOptions.html#M002774","(name)","",2],["respond_to?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002950","(sym, include_priv = false)","Ensure proxy class responds to all methods that underlying time instance responds to. ",2],["respond_to_without_attributes?","ActiveModel::AttributeMethods","classes/ActiveModel/AttributeMethods.html#M000660","(method, include_private_methods = false)","Alias for #respond_to?",2],["respond_to_without_attributes?","ActiveResource::Base","classes/ActiveResource/Base.html#M001915","(method, include_priv = false)","Alias for #respond_to?",2],["respond_with","ActionController::MimeResponds","classes/ActionController/MimeResponds.html#M000130","(*resources, &block)","respond_with wraps a resource around a responder for default representation. First it invokes respond_to,",2],["response_auth_header","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001807","()","",2],["response_body=","ActionController::Metal","classes/ActionController/Metal.html#M000218","(val)","",2],["response_body=","ActionController::RackDelegation","classes/ActionController/RackDelegation.html#M000139","(body)","",2],["response_code_allows_body?","ActiveResource::Base","classes/ActiveResource/Base.html#M001926","(c)","Determine whether the response is allowed to have a body per HTTP 1.1 spec section 4.4.1 ",2],["response_from_page","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000624","()","Support the selector assertions Need to experiment if this priority is the best one: rendered => output_buffer",2],["responses","ActiveResource::HttpMock","classes/ActiveResource/HttpMock.html#M001930","()","Returns the list of requests and their mocked responses. Look up a response for a request using <tt>responses.assoc(request)</tt>.",2],["restore_transaction_record_state","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001773","(force = false)","Restore the new record state and id of a record that was previously saved by a call to save_record_state.",2],["reverse","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002719","()","Reverses all characters in the string. Example: 'Café'.mb_chars.reverse.to_s # => 'éfaC' ",2],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002586","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["reverse_merge","Hash","classes/Hash.html#M002248","(other_hash)","Merges the caller into +other_hash+. For example, options = options.reverse_merge(:size => 25, :velocity",2],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002587","(other_hash)","",2],["reverse_merge!","Hash","classes/Hash.html#M002249","(other_hash)","Destructive +reverse_merge+. ",2],["reverse_order","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001655","()","",2],["reverse_sql_order","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001668","(order_query)","",2],["reverse_update","Hash","classes/Hash.html#M002250","(other_hash)","Alias for #reverse_merge!",2],["rfc2822","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002914","()","",2],["rfc822","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002915","()","Alias for #rfc2822",2],["rindex","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002705","(needle, offset=nil)","Returns the position _needle_ in the string, counting in codepoints, searching backward from _offset_",2],["rjust","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002711","(integer, padstr=' ')","Works just like <tt>String#rjust</tt>, only integer specifies characters instead of bytes. Example: \"¾",2],["rollback_active_record_state!","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001763","()","Reset id and @new_record if the transaction rolls back. ",2],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001296","()","Aborts a transaction. ",2],["rollback_db_transaction","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001095","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001185","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001299","()","",2],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001366","()","",2],["rollback_to_savepoint","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001097","()","",2],["root","Rails","classes/Rails.html#M003012","()","",2],["round","Float","classes/Float.html#M002227","(precision = nil)","Rounds the float with the specified precision. x = 1.337 x.round    # => 1 x.round(1) # => 1.3 x.round(2)",2],["route_key","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000735","(record_or_class)","Returns string to use while generating route names. It differs for namespaced models regarding whether",2],["rstrip","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002707","()","Strips entire range of Unicode whitespace from the right of the string. ",2],["run","ActiveSupport::Testing::Isolation::MiniTest","classes/ActiveSupport/Testing/Isolation/MiniTest.html#M002798","(runner)","",2],["run","ActiveSupport::Testing::Isolation::TestUnit","classes/ActiveSupport/Testing/Isolation/TestUnit.html#M002797","(result)","",2],["run","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M002866","()","",2],["run","ActiveSupport::Testing::Performance::ForClassicTestUnit","classes/ActiveSupport/Testing/Performance/ForClassicTestUnit.html#M002854","(result)","",2],["run","ActiveSupport::Testing::Performance::ForMiniTest","classes/ActiveSupport/Testing/Performance/ForMiniTest.html#M002845","(runner)","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002840","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002863","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002810","()","",2],["run","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002805","()","",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","classes/ActiveSupport/Testing/SetupAndTeardown/ForClassicTestUnit.html#M002875","(result)","This redefinition is unfortunate but test/unit shows us no alternative. Doubly unfortunate: hax to support",2],["run","ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","classes/ActiveSupport/Testing/SetupAndTeardown/ForMiniTest.html#M002871","(runner)","",2],["run_callbacks","ActiveSupport::Callbacks","classes/ActiveSupport/Callbacks.html#M002052","(kind, *args, &block)","Runs the callbacks for the given event. Calls the before and around callbacks in the order they were",2],["run_gc","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002807","()","",2],["run_gc","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002856","()","overridden by each implementation ",2],["run_gc","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002838","()","",2],["run_gc","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002803","()","",2],["run_in_isolation","ActiveSupport::Testing::Isolation::Forking","classes/ActiveSupport/Testing/Isolation/Forking.html#M002799","(&blk)","",2],["run_in_isolation","ActiveSupport::Testing::Isolation::Subprocess","classes/ActiveSupport/Testing/Isolation/Subprocess.html#M002801","(&blk)","Crazy H4X to get this working in windows / jruby with no forking. ",2],["run_in_transaction?","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001509","()","",2],["run_profile","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002858","(metric)","",2],["run_test","ActiveSupport::Testing::Performance::ForClassicTestUnit","classes/ActiveSupport/Testing/Performance/ForClassicTestUnit.html#M002855","(metric, mode)","",2],["run_test","ActiveSupport::Testing::Performance::ForMiniTest","classes/ActiveSupport/Testing/Performance/ForMiniTest.html#M002849","(metric, mode)","",2],["run_validations!","ActiveModel::Validations","classes/ActiveModel/Validations.html#M000849","()","",2],["run_validations!","ActiveModel::Validations::Callbacks","classes/ActiveModel/Validations/Callbacks.html#M000792","()","Overwrite run validations to include callbacks. ",2],["run_warmup","ActiveSupport::Testing::Performance","classes/ActiveSupport/Testing/Performance.html#M002857","()","",2],["runtime","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001497","()","",2],["runtime=","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001496","(value)","",2],["safe_concat","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000500","(string)","",2],["safe_concat","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002414","(value)","",2],["safe_join","ActionView::Helpers::OutputSafetyHelper","classes/ActionView/Helpers/OutputSafetyHelper.html#M000478","(array, sep=$,)","This method returns a html safe string similar to what <tt>Array#join</tt> would return. All items in",2],["sample","Array","classes/Array.html#M002120","(n=nil)","Backport of Array#sample based on Marc-Andre Lafortune's https://github.com/marcandre/backports/ Returns",2],["sanitize","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M000488","(html, options = {})","This +sanitize+ helper will html encode all tags and strip all attributes that aren't specifically allowed.",2],["sanitize","ActiveModel::MassAssignmentSecurity::Sanitizer","classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#M000718","(attributes)","Returns all attributes not denied by the authorizer. ",2],["sanitize","HTML::FullSanitizer","classes/HTML/FullSanitizer.html#M000259","(text, options = {})","",2],["sanitize","HTML::Sanitizer","classes/HTML/Sanitizer.html#M000255","(text, options = {})","",2],["sanitize_css","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M000489","(style)","Sanitizes a block of CSS code. Used by +sanitize+ when it comes across a style attribute. ",2],["sanitize_css","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M000263","(style)","Sanitizes a block of css code.  Used by #sanitize when it comes across a style attribute ",2],["sanitize_dom_id","ActionController::RecordIdentifier","classes/ActionController/RecordIdentifier.html#M000230","(candidate_id)","Replaces characters that are invalid in HTML DOM ids with valid ones. ",2],["sanitize_for_mass_assignment","ActiveModel::MassAssignmentSecurity","classes/ActiveModel/MassAssignmentSecurity.html#M000741","(attributes, role = :default)","",2],["sanitize_sql_array","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001003","(ary)","Accepts an array of conditions. The array has each value sanitized and interpolated into the SQL statement.",2],["sanitize_sql_for_assignment","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000998","(assignments)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_for_conditions","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000997","(condition, table_name = self.table_name)","Accepts an array, hash, or string of SQL conditions and sanitizes them into a valid SQL fragment for",2],["sanitize_sql_hash_for_assignment","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001002","(attrs)","Sanitizes a hash of attribute/value pairs into SQL conditions for a SET clause. { :status => nil, :group_id",2],["sanitize_sql_hash_for_conditions","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001001","(attrs, default_table_name = self.table_name)","Sanitizes a hash of attribute/value pairs into SQL conditions for a WHERE clause. { :name => \"foo'bar\",",2],["sanitize_to_id","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000473","(name)","see http://www.w3.org/TR/html4/types.html#type-name ",2],["sanitizeable?","HTML::LinkSanitizer","classes/HTML/LinkSanitizer.html#M000261","(text)","",2],["sanitizeable?","HTML::Sanitizer","classes/HTML/Sanitizer.html#M000256","(text)","",2],["save","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001559","(*)","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001737","()","",2],["save","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001781","(options={})","The validation process on save can be skipped by passing <tt>:validate => false</tt>. The regular Base#save",2],["save","ActiveResource::Base","classes/ActiveResource/Base.html#M001905","()","Saves (+POST+) or \\updates (+PUT+) a resource.  Delegates to +create+ if the object is \\new, +update+",2],["save!","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001560","(*)","Saves the model. If the model is new a record gets created in the database, otherwise the existing record",2],["save!","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001782","(options={})","Attempts to save the record just like Base#save but will raise a +RecordInvalid+ exception instead of",2],["save!","ActiveResource::Base","classes/ActiveResource/Base.html#M001906","()","Saves the resource. If the resource is new, it is created via +POST+, otherwise the existing resource",2],["save_belongs_to_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000916","(reflection)","Saves the associated record if it's new or <tt>:autosave</tt> is enabled. In addition, it will destroy",2],["save_collection_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000914","(reflection)","Saves any new associated records, or all loaded autosave associations if <tt>:autosave</tt> is enabled",2],["save_has_one_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000915","(reflection)","Saves the associated record if it's new or <tt>:autosave</tt> is enabled on the association. In addition,",2],["save_with_validation","ActiveResource::Validations","classes/ActiveResource/Validations.html#M001955","(options={})","Validate a resource and save (POST) it to the remote web service. If any local validations fail - the",2],["say","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001541","(message, subitem=false)","",2],["say_no_to_protect_against_forgery!","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000625","()","",2],["say_with_time","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001542","(message)","",2],["schema","ActiveResource::Base","classes/ActiveResource/Base.html#M001817","(&block)","Creates a schema for this resource - setting the attributes that are known prior to fetching an instance",2],["schema","ActiveResource::Base","classes/ActiveResource/Base.html#M001886","()","If no schema has been defined for the class (see <tt>ActiveResource::schema=</tt>), the default automatic",2],["schema=","ActiveResource::Base","classes/ActiveResource/Base.html#M001818","(the_schema)","Alternative, direct way to specify a <tt>schema</tt> for this Resource. <tt>schema</tt> is more flexible,",2],["schema_format","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000929","","Specifies the format to use when dumping the database schema with Rails' Rakefile. If :sql, the schema",2],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001336","()","Returns the active schema search path. ",2],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001335","(schema_csv)","Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have",2],["scope","ActiveRecord::NamedScope::ClassMethods","classes/ActiveRecord/NamedScope/ClassMethods.html#M001531","(name, scope_options = {})","Adds a class method for retrieving and querying objects. A \\scope represents a narrowing of a database",2],["scope_for_create","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001704","()","",2],["scope_key_by_partial","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M000507","(key)","",2],["scoped","ActiveRecord::NamedScope::ClassMethods","classes/ActiveRecord/NamedScope/ClassMethods.html#M001528","(options = nil)","Returns an anonymous \\scope. posts = Post.scoped posts.size # Fires \"select count(*) from  posts\" and",2],["scoping","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001691","()","Scope all queries to the current scope. ==== Example Comment.where(:post_id => 1).scoping do Comment.first",2],["search_dir","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M002009","(dir, &callback)","",2],["search_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000391","(object_name, method, options = {})","Returns an input of type \"search\" for accessing a specified attribute (identified by +method+) on an",2],["search_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000461","(name, value = nil, options = {})","Creates a text field of type \"search\". ==== Options * Accepts the same options as text_field_tag. ",2],["second","Array","classes/Array.html#M002105","()","Equal to <tt>self[1]</tt>. ",2],["seconds_since_midnight","DateTime","classes/DateTime.html#M002186","()","Seconds since midnight: DateTime.now.seconds_since_midnight ",2],["seconds_since_midnight","Time","classes/Time.html#M002446","()","Seconds since midnight: Time.now.seconds_since_midnight ",2],["seconds_since_unix_epoch","DateTime","classes/DateTime.html#M002218","()","",2],["seconds_to_utc_offset","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002930","(seconds, colon = true)","Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this",2],["secret_token","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000116","(request)","",2],["secure_compare","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M002690","(a, b)","constant-time comparison algorithm to prevent timing attacks ",2],["select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000440","(method, choices, options = {}, html_options = {})","",2],["select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000412","(object, method, choices, options = {}, html_options = {})","Create a select tag and a series of contained option tags for the provided object and method. The option",2],["select","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001253","(sql, name = nil, binds = [])","",2],["select","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001398","(sql, name = nil, binds = [])","Executes a SELECT query and returns the results, performing any data type conversions that are required",2],["select","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001167","(sql, name = nil, binds = [])","Returns an array of record hashes with the column names as keys and column values as values. ",2],["select","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001637","(value = Proc.new)","Works in two unique ways. First: takes a block so it can be used just like Array#select. Model.scoped.select",2],["select","HTML::Selector","classes/HTML/Selector.html#M000272","(root)","Selects and returns an array with all matching elements, beginning with one node and traversing through",2],["select_date","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000371","(date = Date.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, and day) pre-selected with the +date+. It's possible",2],["select_datetime","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000370","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for year, month, day, hour, minute and second) pre-selected with",2],["select_day","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000377","(date, options = {}, html_options = {})","Returns a select tag with options for each of the days 1 through 31 with the current day selected. The",2],["select_first","HTML::Selector","classes/HTML/Selector.html#M000273","(root)","Similar to #select but returns the first matching element. Returns +nil+ if no element matches the selector.",2],["select_for_count","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001617","()","",2],["select_hour","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000375","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the hours 0 through 23 with the current hour selected.",2],["select_minute","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000374","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the minutes 0 through 59 with the current minute selected.",2],["select_month","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000378","(date, options = {}, html_options = {})","Returns a select tag with options for each of the months January through December with the current month",2],["select_raw","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001400","(sql, name = nil)","",2],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001162","(sql, name = nil)","DATABASE STATEMENTS ====================================== ",2],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001283","(sql, name = nil)","Executes a SELECT query and returns an array of rows. Each row is an array of field values. ",2],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001364","(sql, name = nil)","",2],["select_rows","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001084","(sql, name = nil)","Returns an array of arrays containing the field values. Order is the same as that returned by +columns+.",2],["select_second","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000373","(datetime, options = {}, html_options = {})","Returns a select tag with options for each of the seconds 0 through 59 with the current second selected.",2],["select_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000438","(name, option_tags = nil, options = {})","Creates a dropdown selection box, or if the <tt>:multiple</tt> option is set to true, a multiple choice",2],["select_time","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000372","(datetime = Time.current, options = {}, html_options = {})","Returns a set of html select-tags (one for hour and minute). You can set <tt>:time_separator</tt> key",2],["select_year","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000379","(date, options = {}, html_options = {})","Returns a select tag with options for each of the five years on each side of the current, which is selected.",2],["send_action","ActionController::ImplicitRender","classes/ActionController/ImplicitRender.html#M000084","(method, *args)","",2],["send_data","ActionController::DataStreaming","classes/ActionController/DataStreaming.html#M000069","(data, options = {})","Sends the given binary data to the browser. This method is similar to <tt>render :text => data</tt>,",2],["send_data","ActionController::Instrumentation","classes/ActionController/Instrumentation.html#M000104","(data, options = {})","",2],["send_data","ActionController::LogSubscriber","classes/ActionController/LogSubscriber.html#M000053","(event)","",2],["send_file","ActionController::DataStreaming","classes/ActionController/DataStreaming.html#M000068","(path, options = {})","Sends the file. This uses a server-appropriate method (such as X-Sendfile) via the Rack::Sendfile middleware.",2],["send_file","ActionController::Instrumentation","classes/ActionController/Instrumentation.html#M000103","(path, options={})","",2],["send_file","ActionController::LogSubscriber","classes/ActionController/LogSubscriber.html#M000051","(event)","",2],["send_file_headers!","ActionController::DataStreaming","classes/ActionController/DataStreaming.html#M000070","(options)","",2],["serial_sequence","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001342","(table, column)","",2],["serializable_add_includes","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001714","(options = {})","Add associations specified via the <tt>:include</tt> option. Expects a block that takes as arguments:",2],["serializable_hash","ActiveModel::Serialization","classes/ActiveModel/Serialization.html#M000778","(options = nil)","",2],["serializable_hash","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001713","(options = nil)","",2],["serialize","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000936","(attr_name, class_name = Object)","If you have an attribute that needs to be saved to the database as an object, and retrieved as the same",2],["session_auth=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001280","(user)","Set the authorized user for this session ",2],["session_id_column","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001719","()","",2],["session_id_column","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001729","","The session id field defaults to 'session_id'. ",2],["set","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000675","(key, value)","Set messages for +key+ to +value+ ",2],["set_callback","ActiveSupport::ClassMethods","classes/ActiveSupport/ClassMethods.html#M002082","(name, *filter_list, &block)","Install a callback for the given event. set_callback :save, :before, :before_meth set_callback :save,",2],["set_content_type","ActionMailer::Base","classes/ActionMailer/Base.html#M000018","(m, user_content_type, class_default)","",2],["set_cycle","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000517","(name, cycle_object)","",2],["set_enablement","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000764","(enabled, observers)","",2],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001494","(class_names = {})","",2],["set_inheritance_column","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000945","(value = nil, &block)","Sets the name of the inheritance column to use to the given value, or (if the value # is nil or false)",2],["set_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001475","(value = nil, &block)","Set the column to use for optimistic locking. Defaults to +lock_version+. ",2],["set_logger","ActiveSupport::LogSubscriber::TestHelper","classes/ActiveSupport/LogSubscriber/TestHelper.html#M002664","(logger)","Overwrite if you use another logger in your log subscriber: def logger ActiveRecord::Base.logger = @logger",2],["set_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#M000869","(value = nil, &block)","Sets the name of the primary key column to use to the given value, or (if the value is nil or false)",2],["set_sequence_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000946","(value = nil, &block)","Sets the name of the sequence to use when generating ids to the given value, or (if the value is nil",2],["set_serialized_attributes","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001040","()","",2],["set_session","ActiveRecord::SessionStore","classes/ActiveRecord/SessionStore.html#M001740","(env, sid, session_data, options)","",2],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001266","()","Enable standard-conforming strings if available. ",2],["set_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000944","(value = nil, &block)","Sets the table name. If the value is nil or false then the value returned by the given block is used.",2],["setup","ActiveModel::Validations::AcceptanceValidator","classes/ActiveModel/Validations/AcceptanceValidator.html#M000788","(klass)","",2],["setup","ActiveModel::Validations::ConfirmationValidator","classes/ActiveModel/Validations/ConfirmationValidator.html#M000794","(klass)","",2],["setup","ActiveRecord::Validations::UniquenessValidator","classes/ActiveRecord/Validations/UniquenessValidator.html#M001771","(klass)","Unfortunately, we have to tie Uniqueness validators to a class. ",2],["setup","ActiveSupport::LogSubscriber::TestHelper","classes/ActiveSupport/LogSubscriber/TestHelper.html#M002657","()","",2],["setup","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","classes/ActiveSupport/Testing/SetupAndTeardown/ClassMethods.html#M002869","(*args, &block)","",2],["setup_controller_request_and_response","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000250","()","",2],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001503","(fixture_names = nil)","",2],["setup_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001510","()","",2],["setup_sessid_compatibility!","ActiveRecord::SessionStore::Session","classes/ActiveRecord/SessionStore/Session.html#M001720","()","Compatibility with tables using sessid instead of session_id. ",2],["setup_subscriptions","ActionController::TemplateAssertions","classes/ActionController/TemplateAssertions.html#M000231","()","",2],["setup_with_controller","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000616","()","",2],["should_compress?","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002091","(value, options)","",2],["should_record_timestamps?","ActiveRecord::Timestamp","classes/ActiveRecord/Timestamp.html#M001746","()","",2],["show_variable","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001212","(name)","SHOW VARIABLES LIKE 'name' ",2],["show_variable","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001141","(name)","SHOW VARIABLES LIKE 'name'. ",2],["silence","ActiveSupport::BacktraceCleaner","classes/ActiveSupport/BacktraceCleaner.html#M001966","(backtrace)","",2],["silence","ActiveSupport::Benchmarkable","classes/ActiveSupport/Benchmarkable.html#M001973","()","Silence the logger during the execution of the block. ",2],["silence","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001975","(temporary_level = ERROR)","Silences the logger for the duration of the block. ",2],["silence","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002526","()","Silence deprecation warnings within the block. ",2],["silence","Kernel","classes/Kernel.html#M002270","(stream)","Alias for #capture",2],["silence!","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002048","()","Silence the logger. ",2],["silence_stream","Kernel","classes/Kernel.html#M002267","(stream)","Silences any stream for the duration of the block. silence_stream(STDOUT) do puts 'This will never be",2],["silence_warnings","Kernel","classes/Kernel.html#M002263","()","Sets $VERBOSE to nil for the duration of the block and back to its original value afterwards. silence_warnings",2],["silencer","ActiveSupport::BufferedLogger","classes/ActiveSupport/BufferedLogger.html#M001974","","Set to false to disable the silencer ",2],["simple_format","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000512","(text, html_options={}, options={})","Returns +text+ transformed into HTML using simple formatting rules. Two or more consecutive newlines(<tt>\\n\\n</tt>)",2],["simple_selector","HTML::Selector","classes/HTML/Selector.html#M000276","(statement, values, can_negate = true)","Creates a simple selector given the statement and array of substitution values. Returns a hash with the",2],["simplified_type","ActiveRecord::ConnectionAdapters::PostgreSQLColumn","classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html#M001218","(field_type)","Maps PostgreSQL-specific data types to logical Rails types. ",2],["since","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002555","(time = ::Time.current)","Calculates a new Time or Date that is as far in the future as this Duration represents. ",2],["since","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002927","(other)","",2],["since","DateTime","classes/DateTime.html#M002190","(seconds)","Returns a new DateTime representing the time a number of seconds since the instance time Do not use this",2],["since","Time","classes/Time.html#M002452","(seconds)","Returns a new Time representing the time a number of seconds since the instance time ",2],["singleton_class","Kernel","classes/Kernel.html#M002273","()","Returns the object's singleton class. ",2],["singular","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000728","(record_or_class)","Returns the singular class name of a record or class. Examples: ActiveModel::Naming.singular(post)  ",2],["singular","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002604","(rule, replacement)","Specifies a new singularization rule and its replacement. The rule can either be a string or a regular",2],["singularize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002617","(word)","The reverse of +pluralize+, returns the singular form of a word in a string. Examples: \"posts\".singularize",2],["singularize","String","classes/String.html#M002389","()","The reverse of +pluralize+, returns the singular form of a word in a string. \"posts\".singularize    ",2],["site","ActiveResource::Base","classes/ActiveResource/Base.html#M001820","()","Gets the URI of the REST resources to map for this class.  The site variable is required for Active Resource's",2],["site=","ActiveResource::Base","classes/ActiveResource/Base.html#M001821","(site)","Sets the URI of the REST resources to map for this class to the value in the +site+ argument. The site",2],["site=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001787","(site)","Set URI for remote service. ",2],["size","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000686","()","Returns the number of error messages. p.errors.add(:name, \"can't be blank\") p.errors.size # => 1 p.errors.add(:name,",2],["size","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001471","()","",2],["size","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001687","()","Returns size of the records. ",2],["size","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002089","()","Returns the size of the cached value. This could be less than value.size if the data is compressed. ",2],["size","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002706","()","Returns the number of codepoints in the string ",2],["skip_callback","ActiveSupport::ClassMethods","classes/ActiveSupport/ClassMethods.html#M002090","(name, *filter_list, &block)","Skip a previously set callback. Like +set_callback+, <tt>:if</tt> or <tt>:unless</tt> options may be",2],["skip_default_locale!","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000553","()","Do not use the default locale on template lookup. ",2],["slice","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002722","(*args)","Implements Unicode-aware slice with codepoints. Slicing on one point returns the codepoints for that",2],["slice","Hash","classes/Hash.html#M002251","(*keys)","Slice a hash to include only the given keys. This is useful for limiting an options hash to valid keys",2],["slice!","Hash","classes/Hash.html#M002252","(*keys)","Replaces the hash with only the given keys. Returns a hash contained the removed key/value pairs {:a",2],["split","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002715","(*args)","Works just like <tt>String#split</tt>, with the exception that the items in the resulting list are Chars",2],["split","Array","classes/Array.html#M002119","(value = nil)","Divides the array into one or more subarrays based on a delimiting +value+ or the result of an optional",2],["split_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001885","(options = {})","split an option hash into two hashes, one containing the prefix options, and the other containing the",2],["split_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001933","(options = {})","",2],["sql","ActiveRecord::LogSubscriber","classes/ActiveRecord/LogSubscriber.html#M001500","(event)","",2],["sql_for_insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001292","(sql, pk, id_value, sequence_name, binds)","",2],["sql_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001387","(sql)","Returns the statement identifier for the client side cache of statements ",2],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001420","()","",2],["squish","String","classes/String.html#M002385","()","Returns the string, first removing all whitespace on both ends of the string, and then changing remaining",2],["squish!","String","classes/String.html#M002386","()","Performs a destructive squish. See String#squish. ",2],["ssl_options","ActiveResource::Base","classes/ActiveResource/Base.html#M001843","()","Returns the SSL options hash. ",2],["ssl_options=","ActiveResource::Base","classes/ActiveResource/Base.html#M001841","(opts={})","Options that will get applied to an SSL connection. * <tt>:key</tt> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA",2],["ssl_options=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001793","(opts={})","Hash of options applied to Net::HTTP instance when +site+ protocol is 'https'. ",2],["stale?","ActionController::ConditionalGet","classes/ActionController/ConditionalGet.html#M000065","(options)","Sets the etag and/or last_modified on the response and checks it against the client request. If the request",2],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002988","()","",2],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#M002991","(name, attrs = [])","",2],["start_processing","ActionController::LogSubscriber","classes/ActionController/LogSubscriber.html#M000049","(event)","",2],["start_transaction","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000757","()","",2],["stats","ActiveSupport::Cache::MemCacheStore","classes/ActiveSupport/Cache/MemCacheStore.html#M002003","()","Get the statistics from the memcached servers. ",2],["status","ActionController::Metal","classes/ActionController/Metal.html#M000216","()","",2],["status=","ActionController::Metal","classes/ActionController/Metal.html#M000217","(status)","",2],["sti_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000971","()","",2],["store","ActiveSupport::Dependencies::ClassCache","classes/ActiveSupport/Dependencies/ClassCache.html#M002538","(name)","",2],["stream","ActionController::Streaming::ClassMethods","classes/ActionController/Streaming/ClassMethods.html#M000188","(options={})","Render streaming templates. It accepts :only, :except, :if and :unless as options to specify when to",2],["strftime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002918","(format)","Replaces <tt>%Z</tt> and <tt>%z</tt> directives with +zone+ and +formatted_offset+, respectively, before",2],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002590","()","",2],["stringify_keys","Hash","classes/Hash.html#M002241","()","Return a new hash with all keys converted to strings. ",2],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002589","()","",2],["stringify_keys!","Hash","classes/Hash.html#M002242","()","Destructively convert all keys to strings. ",2],["strip","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002709","()","Strips entire range of Unicode whitespace from the right and left of the string. ",2],["strip_heredoc","String","classes/String.html#M002428","()","Strips indentation in heredocs. For example in if options[:usage] puts <<-USAGE.strip_heredoc This command",2],["strip_links","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M000491","(html)","Strips all link tags from +text+ leaving just the link text. ==== Examples strip_links('<a href=\"http://www.rubyonrails.org\">Ruby",2],["strip_tags","ActionView::Helpers::SanitizeHelper","classes/ActionView/Helpers/SanitizeHelper.html#M000490","(html)","Strips all HTML tags from the +html+, including comments.  This uses the html-scanner tokenizer and so",2],["structure_dump","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001101","()","SCHEMA STATEMENTS ======================================== ",2],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#M000342","(*sources)","Returns a stylesheet link tag for the sources specified as arguments. If you don't specify an extension,",2],["stylesheet_path","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#M000338","(source)","Computes the path to a stylesheet asset in the public stylesheets directory. If the +source+ filename",2],["submit","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000416","(value=nil, options={})","Add the submit button for the given form. When no value is given, it checks if the object is a new resource",2],["submit_default_value","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000419","()","",2],["submit_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000456","(value = \"Save changes\", options = {})","Creates a submit button with the text <tt>value</tt> as the caption. ==== Options * <tt>:confirm => 'question?'</tt>",2],["subscribe","ActiveSupport::Notifications","classes/ActiveSupport/Notifications.html#M002767","(*args, &block)","",2],["subscribe","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002754","(pattern = nil, block = Proc.new)","",2],["substitute_at","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001288","(column, index)","",2],["substitute_at","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001077","(column, index)","",2],["success?","ActiveResource::Response","classes/ActiveResource/Response.html#M001947","()","Returns true if code is 2xx, false otherwise. ",2],["sum","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001606","(column_name, options = {})","Calculates the sum of values on a given column. The value is returned with the same data type of the",2],["sum","Enumerable","classes/Enumerable.html#M002221","(identity = 0, &block)","Calculates a sum from the elements. Examples: payments.sum { |p| p.price * p.tax_rate } payments.sum(&:price)",2],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001331","()","Returns true if SQLite version is '3.1.6' or greater, false otherwise. ",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001268","()","",2],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001322","()","Returns true if SQLite version is '2.0.0' or greater, false otherwise. ",2],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001267","()","",2],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001264","()","Returns true, since this connection adapter supports migrations. ",2],["supports_migrations?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001067","()","Returns true, since this connection adapter supports migrations. ",2],["supports_primary_key?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001068","()","",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001269","()","Returns true, since this connection adapter supports savepoints. ",2],["supports_savepoints?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001323","()","Returns true if SQLite version is '3.6.8' or greater, false otherwise. ",2],["supports_savepoints?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001069","()","Returns true, since this connection adapter supports savepoints. ",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001136","()","Returns true, since this connection adapter supports prepared statement caching. ",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001237","()","Returns +true+, since this connection adapter supports prepared statement caching. ",2],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001324","()","Returns true, since this connection adapter supports prepared statement caching. ",2],["supports_streaming?","ActionView::Template","classes/ActionView/Template.html#M000601","()","Returns if the underlying handler supports streaming. If so, a streaming buffer *may* be passed when",2],["supports_streaming?","ActionView::Template::Handlers::ERB","classes/ActionView/Template/Handlers/ERB.html#M000580","()","",2],["supports_views?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001254","()","",2],["supports_views?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001169","()","",2],["suppress","Kernel","classes/Kernel.html#M002268","(*exception_classes)","Blocks and ignores any exception passed as argument if raised within the block. suppress(ZeroDivisionError)",2],["suppress_messages","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001543","()","",2],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002591","()","",2],["symbolize_keys","Hash","classes/Hash.html#M002243","()","Return a new hash with all keys converted to symbols, as long as they respond to +to_sym+. ",2],["symbolize_keys!","Hash","classes/Hash.html#M002244","()","Destructively convert all keys to symbols, as long as they respond to +to_sym+. ",2],["symbolized_base_class","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000966","()","",2],["symbolized_sti_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000967","()","",2],["synchronize","Module","classes/Module.html#M002304","(*methods)","Synchronize access around a method, delegating synchronization to a particular mutex. A mutex (either",2],["t","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M000503","(key, options = {})","Alias for #translate",2],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001270","()","Returns the configured supported identifier length supported by PostgreSQL ",2],["table_definition","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001409","()","",2],["table_exists?","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000947","()","Indicates whether the table associated with this class exists ",2],["table_exists?","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001197","(name)","",2],["table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001307","(name)","",2],["table_exists?","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001110","(name)","",2],["table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000937","()","Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy",2],["table_name","ActiveRecord::SessionStore::SqlBypass","classes/ActiveRecord/SessionStore/SqlBypass.html#M001728","","The table name defaults to 'sessions'. ",2],["table_name_prefix","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000925","","Accessor for the name of the prefix string to prepend to every table name. So if set to \"basecamp_\",",2],["table_name_suffix","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000926","","Works like +table_name_prefix+, but appends instead of prepends (set to \"_basecamp\" gives \"projects_basecamp\",",2],["table_rows","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001473","()","Return a hash of rows to be inserted. The key is the table, the value is a list of rows to insert to",2],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001404","(table_name)","",2],["tableize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002622","(class_name)","Create the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tableize","String","classes/String.html#M002400","()","Creates the name of a table like Rails does for models to table names. This method uses the +pluralize+",2],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001306","(name = nil)","Returns the list of all tables in the schema search path or a specified schema. ",2],["tables_in_string","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001712","(string)","",2],["tag","ActionView::Helpers::ActiveModelInstanceTag","classes/ActionView/Helpers/ActiveModelInstanceTag.html#M000291","(type, options, *)","",2],["tag","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000492","(name, options = nil, open = false, escape = true)","Returns an empty HTML tag of type +name+ which by default is XHTML compliant. Set +open+ to true to create",2],["tag_generate_errors?","ActionView::Helpers::ActiveModelInstanceTag","classes/ActionView/Helpers/ActiveModelInstanceTag.html#M000295","(options)","",2],["tag_options","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000497","(options, escape = true)","",2],["teardown","ActiveSupport::LogSubscriber::TestHelper","classes/ActiveSupport/LogSubscriber/TestHelper.html#M002658","()","",2],["teardown","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","classes/ActiveSupport/Testing/SetupAndTeardown/ClassMethods.html#M002870","(*args, &block)","",2],["teardown_fixtures","ActiveRecord::TestFixtures","classes/ActiveRecord/TestFixtures.html#M001511","()","",2],["teardown_subscriptions","ActionController::TemplateAssertions","classes/ActionController/TemplateAssertions.html#M000232","()","",2],["telephone_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000392","(object_name, method, options = {})","Returns a text_field of type \"tel\". telephone_field(\"user\", \"phone\") # => <input id=\"user_phone\" name=\"user[phone]\"",2],["telephone_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000462","(name, value = nil, options = {})","Creates a text field of type \"tel\". ==== Options * Accepts the same options as text_field_tag. ",2],["template_exists?","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000538","(name, prefixes = [], partial = false, keys = [])","Alias for #exists?",2],["test","ActiveSupport::Testing::Declarative","classes/ActiveSupport/Testing/Declarative.html#M002788","(name, &block)","test \"verify something\" do ... end ",2],["test_errors_aref","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000709","()","== Errors Testing Returns an object that has :[] and :full_messages defined on it. See below for more",2],["test_errors_full_messages","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000710","()","Returns an Array of all error messages for the object. Each message should contain information about",2],["test_model_naming","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000708","()","== Naming Model.model_name must return a string with some convenience methods as :human and :partial_path.",2],["test_persisted?","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000707","()","== Responds to <tt>persisted?</tt> Returns a boolean that specifies whether the object has been persisted",2],["test_to_key","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000700","()","== Responds to <tt>to_key</tt> Returns an Enumerable of all (primary) key attributes or nil if model.persisted?",2],["test_to_param","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000702","()","== Responds to <tt>to_param</tt> Returns a string representing the object's key suitable for use in URLs",2],["test_valid?","ActiveModel::Lint::Tests","classes/ActiveModel/Lint/Tests.html#M000706","()","== Responds to <tt>valid?</tt> Returns a boolean that specifies whether the object is in a valid or invalid",2],["tests","ActionController::TestCase::Behavior::ClassMethods","classes/ActionController/TestCase/Behavior/ClassMethods.html#M000236","(controller_class)","Sets the controller class name. Useful if the name can't be inferred from test class. Expects +controller_class+",2],["tests","ActionView::TestCase::Behavior::ClassMethods","classes/ActionView/TestCase/Behavior/ClassMethods.html#M000610","(helper_class)","",2],["text_area","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000388","(object_name, method, options = {})","Returns a textarea opening and closing tag set tailored for accessing a specified attribute (identified",2],["text_area_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000448","(name, content = nil, options = {})","Creates a text input area; use a textarea for longer text inputs such as blog posts or descriptions.",2],["text_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000384","(object_name, method, options = {})","Returns an input tag of the \"text\" type tailored for accessing a specified attribute (identified by +method+)",2],["text_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000439","(name, value = nil, options = {})","Creates a standard text field; use these text fields to input smaller chunks of text like a username",2],["third","Array","classes/Array.html#M002106","()","Equal to <tt>self[2]</tt>. ",2],["thread_local_key","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002040","()","",2],["tidy_byte","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002751","(byte)","",2],["tidy_bytes","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002738","(force = false)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["tidy_bytes","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002740","(string, force = false)","Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent resulting in a valid UTF-8 string.",2],["time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002888","()","Returns a Time or DateTime instance that represents the time in +time_zone+. ",2],["time_ago_in_words","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000364","(from_time, include_seconds = false)","Like <tt>distance_of_time_in_words</tt>, but where <tt>to_time</tt> is fixed to <tt>Time.now</tt>. ====",2],["time_select","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000367","(object_name, method, options = {}, html_options = {})","Returns a set of select tags (one for hour, minute and optionally second) pre-selected for accessing",2],["time_select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000402","(method, options = {}, html_options = {})","",2],["time_tag","ActionView::Helpers::DateHelper","classes/ActionView/Helpers/DateHelper.html#M000381","(date_or_time, *args)","Returns an html time tag for the given date or time. ==== Examples time_tag Date.today  # => <time datetime=\"2010-11-04\">November",2],["time_with_block","ActiveSupport::Testing::Performance::Profiler","classes/ActiveSupport/Testing/Performance/Profiler.html#M002862","()","",2],["time_with_datetime_fallback","Time","classes/Time.html#M002433","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","Returns a new Time if requested year can be accommodated by Ruby's Time class (i.e., if year is within",2],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000431","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","Returns a string of option tags for pretty much any time zone in the world. Supply a ActiveSupport::TimeZone",2],["time_zone_select","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000444","(method, priority_zones = nil, options = {}, html_options = {})","",2],["time_zone_select","ActionView::Helpers::FormOptionsHelper","classes/ActionView/Helpers/FormOptionsHelper.html#M000424","(object, method, priority_zones = nil, options = {}, html_options = {})","Return select and option tags for the given object and method, using #time_zone_options_for_select to",2],["timeout","ActiveResource::Base","classes/ActiveResource/Base.html#M001840","()","Gets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Base","classes/ActiveResource/Base.html#M001837","(timeout)","Sets the number of seconds after which requests to the REST API should time out. ",2],["timeout=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001792","(timeout)","Sets the number of seconds after which HTTP requests to the remote service should time out. ",2],["timestamp_attributes_for_create_in_model","ActiveRecord::Timestamp","classes/ActiveRecord/Timestamp.html#M001747","()","",2],["timestamp_attributes_for_update_in_model","ActiveRecord::Timestamp","classes/ActiveRecord/Timestamp.html#M001748","()","",2],["timestamp_column_names","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001482","()","",2],["timestamped_migrations","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000930","","Specify whether or not to use timestamps for migration versions ",2],["titlecase","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002732","()","Alias for #titleize",2],["titlecase","String","classes/String.html#M002395","()","Alias for #titleize",2],["titleize","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002620","(word)","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["titleize","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002731","()","Capitalizes the first letter of every word, when possible. Example: \"ÉL QUE SE ENTERÓ\".mb_chars.titleize",2],["titleize","String","classes/String.html#M002394","()","Capitalizes all the words and replaces some characters in the string to create a nicer looking title.",2],["to","Array","classes/Array.html#M002104","(position)","Returns the beginning of the array up to +position+. %w( a b c d ).to(0)  # => %w( a ) %w( a b c d ).to(2)",2],["to","String","classes/String.html#M002375","(position)","",2],["to","String","classes/String.html#M002370","(position)","Returns the beginning of the string up to the +position+ treating the string as an array (where 0 is",2],["to_a","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000689","()","Returns an array of error messages, with the attribute name included p.errors.add(:name, \"can't be blank\")",2],["to_a","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001685","()","",2],["to_a","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002932","()","",2],["to_d","BigDecimal","classes/BigDecimal.html#M002127","()","",2],["to_date","DateTime","classes/DateTime.html#M002205","()","Converts self to a Ruby Date object; time portion is discarded. ",2],["to_date","Mysql::Time","classes/Mysql/Time.html#M001100","()","This monkey patch is for test_additional_columns_from_join_table ",2],["to_date","String","classes/String.html#M002382","()","",2],["to_date","Time","classes/Time.html#M002437","()","Converts a Time object to a Date, dropping hour, minute, and second precision. my_time = Time.now  #",2],["to_datetime","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002941","()","",2],["to_datetime","DateTime","classes/DateTime.html#M002208","()","To be able to keep Times, Dates and DateTimes interchangeable on conversions. ",2],["to_datetime","String","classes/String.html#M002383","()","",2],["to_datetime","Time","classes/Time.html#M002444","()","Converts a Time instance to a Ruby DateTime instance, preserving UTC offset. my_time = Time.now    #",2],["to_default_s","Array","classes/Array.html#M002115","(format = :default)","Alias for #to_s",2],["to_default_s","DateTime","classes/DateTime.html#M002200","(format = :default)","Alias for #to_s",2],["to_default_s","Time","classes/Time.html#M002435","(format = :default)","Alias for #to_s",2],["to_f","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002934","()","",2],["to_f","DateTime","classes/DateTime.html#M002216","()","Converts self to a floating-point number of seconds since the Unix epoch. ",2],["to_format","ActionController::Responder","classes/ActionController/Responder.html#M000173","()","All other formats follow the procedure below. First we try to render a template, if the template is not",2],["to_formatted_s","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002917","(format = :default)","Alias for #to_s",2],["to_formatted_s","Array","classes/Array.html#M002111","(format = :default)","Converts a collection of elements into a formatted string by calling <tt>to_s</tt> on all elements and",2],["to_formatted_s","BigDecimal","classes/BigDecimal.html#M002128","(format = DEFAULT_STRING_FORMAT)","",2],["to_formatted_s","DateTime","classes/DateTime.html#M002191","(format = :default)","Convert to a formatted string. See Time::DATE_FORMATS for predefined formats. This method is aliased",2],["to_formatted_s","Time","classes/Time.html#M002432","(format = :default)","Converts to a formatted string. See DATE_FORMATS for builtin formats. This method is aliased to <tt>to_s</tt>.",2],["to_hash","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000695","()","",2],["to_hash","ActiveRecord::Result","classes/ActiveRecord/Result.html#M001677","()","",2],["to_hash","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002593","()","Convert to a Hash with String keys. ",2],["to_html","ActionController::Responder","classes/ActionController/Responder.html#M000171","()","HTML format does not render the resource, it always attempt to render a template. ",2],["to_i","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002935","()","",2],["to_i","DateTime","classes/DateTime.html#M002217","()","Converts self to an integer number of seconds since the Unix epoch. ",2],["to_js","ActionController::Responder","classes/ActionController/Responder.html#M000172","()","to_js simply tries to render a template. If no template is found, raises the error. ",2],["to_json","ActiveResource::Base","classes/ActiveResource/Base.html#M001916","(options={})","",2],["to_key","ActiveModel::Conversion","classes/ActiveModel/Conversion.html#M000664","()","Returns an Enumerable of all key attributes if any is set, regardless if the object is persisted or not.",2],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","classes/ActiveRecord/AttributeMethods/PrimaryKey.html#M000863","()","Returns this record's primary key value wrapped in an Array if one is available ",2],["to_model","ActionView::Helpers::FormBuilder","classes/ActionView/Helpers/FormBuilder.html#M000406","()","",2],["to_model","ActiveModel::Conversion","classes/ActiveModel/Conversion.html#M000663","()","If your object is already designed to implement all of the Active Model you can use the default <tt>:to_model</tt>",2],["to_options","Hash","classes/Hash.html#M002245","()","Alias for #symbolize_keys",2],["to_options!","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002592","()","",2],["to_options!","Hash","classes/Hash.html#M002246","()","Alias for #symbolize_keys!",2],["to_param","ActiveModel::Conversion","classes/ActiveModel/Conversion.html#M000667","()","Returns a string representing the object's key suitable for use in URLs, or nil if <tt>persisted?</tt>",2],["to_param","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001013","()","Returns a String, which Action Pack uses for constructing an URL to this object. The default implementation",2],["to_param","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002423","()","",2],["to_param","Array","classes/Array.html#M002358","()","Calls <tt>to_param</tt> on all its elements and joins the result with slashes. This is used by <tt>url_for</tt>",2],["to_param","FalseClass","classes/FalseClass.html#M002357","()","",2],["to_param","Hash","classes/Hash.html#M002361","(namespace = nil)","Returns a string representation of the receiver suitable for use as a URL query string: {:name => 'David',",2],["to_param","NilClass","classes/NilClass.html#M002355","()","",2],["to_param","Object","classes/Object.html#M002354","()","Alias of <tt>to_s</tt>. ",2],["to_param","TrueClass","classes/TrueClass.html#M002356","()","",2],["to_path","ActionView::FileSystemResolver","classes/ActionView/FileSystemResolver.html#M000597","()","Alias for #to_s",2],["to_query","Array","classes/Array.html#M002360","(key)","Converts an array into a string suitable for use as a URL query string, using the given +key+ as the",2],["to_query","Hash","classes/Hash.html#M002362","(namespace = nil)","Alias for #to_param",2],["to_query","Object","classes/Object.html#M002359","(key)","Converts an object into a string suitable for use as a URL query string, using the given <tt>key</tt>",2],["to_s","ActionView::FileSystemResolver","classes/ActionView/FileSystemResolver.html#M000596","()","",2],["to_s","ActionView::FixtureResolver","classes/ActionView/FixtureResolver.html#M000637","()","",2],["to_s","ActiveResource::Request","classes/ActiveResource/Request.html#M001942","()","",2],["to_s","ActiveResource::SSLError","classes/ActiveResource/SSLError.html#M001863","()","",2],["to_s","ActiveResource::TimeoutError","classes/ActiveResource/TimeoutError.html#M001861","()","",2],["to_s","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002422","()","",2],["to_s","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002916","(format = :default)","<tt>:db</tt> format outputs time in UTC; all others output time in local. Uses TimeWithZone's +strftime+,",2],["to_s","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002952","()","Returns a textual representation of this time zone. ",2],["to_s","Array","classes/Array.html#M002114","(format = :default)","Alias for #to_formatted_s",2],["to_s","BigDecimal","classes/BigDecimal.html#M002129","(format = DEFAULT_STRING_FORMAT)","Alias for #to_formatted_s",2],["to_s","DateTime","classes/DateTime.html#M002199","(format = :default)","Alias for #to_formatted_s",2],["to_s","Time","classes/Time.html#M002434","(format = :default)","Alias for #to_formatted_s",2],["to_sentence","Array","classes/Array.html#M002110","(options = {})","Converts the array to a comma-separated sentence where the last element is joined by the connector word.",2],["to_sql","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001702","()","",2],["to_tag","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M002998","(key, value, options)","",2],["to_time","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002940","()","A TimeWithZone acts like a Time, so just return +self+. ",2],["to_time","DateTime","classes/DateTime.html#M002207","()","Attempts to convert self to a Ruby Time object; returns self if out of range of Ruby Time class. If self",2],["to_time","String","classes/String.html#M002379","(form = :utc)","Form can be either :utc (default) or :local. ",2],["to_time","Time","classes/Time.html#M002443","()","A method to keep Time, Date and DateTime instances interchangeable on conversions. In this case, it simply",2],["to_xml","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000693","(options={})","Returns an xml formatted representation of the Errors hash. p.errors.add(:name, \"can't be blank\") p.errors.add(:name,",2],["to_xml","ActiveModel::Serializers::Xml","classes/ActiveModel/Serializers/Xml.html#M000783","(options = {}, &block)","Returns XML representing the model. Configuration can be passed through +options+. Without any +options+,",2],["to_xml","ActiveRecord::Serialization","classes/ActiveRecord/Serialization.html#M001715","(options = {}, &block)","Builds an XML document to represent the model. Some configuration is available through +options+. However",2],["to_xml","ActiveResource::Base","classes/ActiveResource/Base.html#M001917","(options={})","",2],["to_xml","Array","classes/Array.html#M002116","(options = {})","Returns a string that represents the array in XML by invoking +to_xml+ on each element. Active Record",2],["to_xml","Hash","classes/Hash.html#M002230","(options = {})","Returns a string containing an XML representation of its receiver: {\"foo\" => 1, \"bar\" => 2}.to_xml #",2],["to_yaml","ActiveSupport::SafeBuffer","classes/ActiveSupport/SafeBuffer.html#M002425","(*args)","",2],["to_yaml","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002912","(options = {})","",2],["to_yaml","BigDecimal","classes/BigDecimal.html#M002125","(opts = {})","This emits the number without any scientific notation. This is better than self.to_f.to_s since it doesn't",2],["today","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002960","()","Return the current date in this time zone. ",2],["today?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002922","()","",2],["today?","Time","classes/Time.html#M002442","()","Tells whether the Time object's time is today ",2],["toggle","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001575","(attribute)","Assigns to +attribute+ the boolean opposite of <tt>attribute?</tt>. So if the predicate returns +true+",2],["toggle!","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001577","(attribute)","Wrapper around +toggle+ that saves the record. This method differs from its non-bang version in that",2],["token_and_options","ActionController::HttpAuthentication::Token","classes/ActionController/HttpAuthentication/Token.html#M000125","(request)","Parses the token and options out of the token authorization header.  If the header looks like this: Authorization:",2],["token_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000472","(token)","",2],["tokenize","HTML::Sanitizer","classes/HTML/Sanitizer.html#M000257","(text, options)","",2],["tokenize","HTML::WhiteListSanitizer","classes/HTML/WhiteListSanitizer.html#M000264","(text, options)","",2],["tomorrow","Time","classes/Time.html#M002494","()","Convenience method which returns a new Time representing the time 1 day since the instance time ",2],["touch","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001579","(name = nil)","Saves the record with the updated_at/on attributes set to the current time. Please note that no validation",2],["transaction","ActiveModel::ObserverArray","classes/ActiveModel/ObserverArray.html#M000762","()","",2],["transaction","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001759","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction","ActiveRecord::Transactions::ClassMethods","classes/ActiveRecord/Transactions/ClassMethods.html#M001756","(options = {}, &block)","See ActiveRecord::Transactions::ClassMethods for detailed documentation. ",2],["transaction_include_action?","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001775","(action)","Determine if a transaction included an action for :create, :update, or :destroy. Used in filtering callbacks.",2],["transaction_record_state","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001774","(state)","Determine if a record was created or destroyed in a transaction. State should be one of :new_record or",2],["transfer_time_values_to_utc_constructor","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002957","(time)","",2],["translate","ActionView::Helpers::TranslationHelper","classes/ActionView/Helpers/TranslationHelper.html#M000501","(key, options = {})","Delegates to <tt>I18n#translate</tt> but also performs three additional functions. First, it'll pass",2],["translate_exception","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001223","(exception, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001381","(exception, message)","",2],["translate_exception","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001422","(exception, message)","",2],["translate_exception","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001163","(exception, message)","",2],["transliterate","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002624","(string, replacement = \"?\")","Replaces non-ASCII characters with an ASCII approximation, or if none exists, a replacement character",2],["trigger","ActiveSupport::FileWatcher","classes/ActiveSupport/FileWatcher.html#M002568","(files)","",2],["trigger","ActiveSupport::FileWatcher::Backend","classes/ActiveSupport/FileWatcher/Backend.html#M002565","(files)","",2],["truncate","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000502","(text, options = {})","Truncates a given +text+ after a given <tt>:length</tt> if +text+ is longer than <tt>:length</tt> (defaults",2],["truncate","String","classes/String.html#M002387","(length, options = {})","Truncates a given +text+ after a given <tt>length</tt> if +text+ is longer than <tt>length</tt>: \"Once",2],["try","NilClass","classes/NilClass.html#M002364","(*args)","Calling +try+ on +nil+ always returns +nil+. It becomes specially helpful when navigating through associations",2],["try","Object","classes/Object.html#M002363","(*a, &b)","Invokes the method identified by the symbol +method+, passing it any arguments and/or the block specified,",2],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001501","(file_name)","",2],["tsvector","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#M001231","(*args)","",2],["tv_sec","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002939","()","Alias for #to_i",2],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001145","(value, column)","",2],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001274","(value, column)","",2],["type_cast_attribute_value","ActiveRecord::Base","classes/ActiveRecord/Base.html#M001054","(multiparameter_name, value)","",2],["type_cast_calculated_value","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001615","(value, column, operation = nil)","",2],["type_cast_using_column","ActiveRecord::Calculations","classes/ActiveRecord/Calculations.html#M001616","(value, column)","",2],["type_condition","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000980","(table = arel_table)","",2],["type_to_sql","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001210","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to MySQL-specific data types. ",2],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001371","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to PostgreSQL-specific data types. ",2],["type_to_sql","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001131","(type, limit = nil, precision = nil, scale = nil)","Maps logical Rails types to MySQL-specific data types. ",2],["typecast_xml_value","Hash","classes/Hash.html#M002232","(value)","",2],["u_unpack","ActiveSupport::Multibyte::Unicode","classes/ActiveSupport/Multibyte/Unicode.html#M002718","(string)","Unpack the string at codepoints boundaries. Raises an EncodingError when the encoding of the string isn't",2],["uncached","ActiveRecord::QueryCache::ClassMethods","classes/ActiveRecord/QueryCache/ClassMethods.html#M001569","(&block)","Disable the query cache within the block if Active Record is configured. ",2],["uncountable","ActiveSupport::Inflector::Inflections","classes/ActiveSupport/Inflector/Inflections.html#M002606","(*words)","Add uncountable words that shouldn't be attempted inflected. Examples: uncountable \"money\" uncountable",2],["uncountable?","ActiveModel::Naming","classes/ActiveModel/Naming.html#M000729","(record_or_class)","Identifies whether the class name of a record or class is uncountable. Examples: ActiveModel::Naming.uncountable?(Sheep)",2],["undecorated_table_name","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000981","(class_name = base_class.name)","Guesses the table name, but does not decorate it with prefix and suffix information. ",2],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","classes/ActiveModel/AttributeMethods/ClassMethods.html#M000652","()","Removes all the previously dynamically defined methods from the class ",2],["undefine_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","classes/ActiveRecord/AttributeMethods/ClassMethods.html#M000895","(*args)","",2],["underscore","ActiveSupport::Inflector","classes/ActiveSupport/Inflector.html#M002610","(camel_cased_word)","Makes an underscored, lowercase form from the expression in the string. Changes '::' to '/' to convert",2],["underscore","String","classes/String.html#M002396","()","The reverse of +camelize+. Makes an underscored, lowercase form from the expression in the string. +underscore+",2],["unescape","Object","classes/Object.html#M002508","(str, escaped = /%[a-fA-F\\d]{2}/)","",2],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001272","(value)","Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse",2],["uniq_by","Array","classes/Array.html#M002121","()","Returns an unique array based on the criteria given as a +Proc+. [1, 2, 3, 4].uniq_by { |i| i.odd? }",2],["uniq_by!","Array","classes/Array.html#M002122","()","Same as uniq_by, but modifies self. ",2],["unique_id","ActiveSupport::Notifications::Instrumenter","classes/ActiveSupport/Notifications/Instrumenter.html#M002762","()","",2],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","classes/ActiveSupport/Memoizable/InstanceMethods.html#M002676","()","",2],["unrename_keys","Hash","classes/Hash.html#M002235","(params)","",2],["unserializable_attribute?","ActiveRecord::AttributeMethods::Read","classes/ActiveRecord/AttributeMethods/Read.html#M000882","(attr_name, column)","Returns true if the attribute is of a text column and marked for serialization. ",2],["unserialize_attribute","ActiveRecord::AttributeMethods::Read","classes/ActiveRecord/AttributeMethods/Read.html#M000883","(attr_name)","Returns the unserialized object of the attribute. ",2],["unsubscribe","ActiveSupport::Notifications","classes/ActiveSupport/Notifications.html#M002768","(args)","",2],["unsubscribe","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002755","(subscriber)","",2],["until","ActiveSupport::Duration","classes/ActiveSupport/Duration.html#M002558","(time = ::Time.current)","Alias for #ago",2],["up","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001536","()","",2],["upcase","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002726","()","Convert characters in the string to uppercase. Example: 'Laurent, où sont les tests ?'.mb_chars.upcase.to_s",2],["update","ActiveRecord::AttributeMethods::Dirty","classes/ActiveRecord/AttributeMethods/Dirty.html#M000860","(*)","",2],["update","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001582","(attribute_names = @attributes.keys)","Updates the associated record with values matching those of the instance attributes. Returns the number",2],["update","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001695","(id, attributes)","Updates an object (or multiple objects) and saves it to the database, if validations pass. The resulting",2],["update","ActiveResource::Base","classes/ActiveResource/Base.html#M001919","()","Update the resource on the remote service. ",2],["update","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002580","(other_hash)","Updates the instantized hash with values from the second: hash_1 = HashWithIndifferentAccess.new hash_1[:key]",2],["update_all","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001692","(updates, conditions = nil, options = {})","Updates all records with details given if they match a set of conditions supplied, limits and order can",2],["update_attribute","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001564","(name, value)","Updates a single attribute and saves the record. This is especially useful for boolean flags on existing",2],["update_attribute","ActiveResource::Base","classes/ActiveResource/Base.html#M001912","(name, value)","Updates a single attribute and then saves the object. Note: Unlike ActiveRecord::Base.update_attribute,",2],["update_attributes","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001566","(attributes, options = {})","Updates the attributes of the model from the passed-in hash and saves the record, all wrapped in a transaction.",2],["update_attributes","ActiveResource::Base","classes/ActiveResource/Base.html#M001913","(attributes)","Updates this resource with all the attributes from the passed-in Hash and requests that the record be",2],["update_attributes!","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001567","(attributes, options = {})","Updates its receiver just like +update_attributes+ but calls <tt>save!</tt> instead of +save+, so an",2],["update_column","ActiveRecord::Persistence","classes/ActiveRecord/Persistence.html#M001565","(name, value)","Updates a single attribute of an object, without calling save. * Validation is skipped. * Callbacks are",2],["update_counters","ActiveRecord::CounterCache","classes/ActiveRecord/CounterCache.html#M001429","(id, counters)","A generic \"counter updater\" implementation, intended primarily to be used by increment_counter and decrement_counter,",2],["update_counters","ActiveRecord::Locking::Optimistic::ClassMethods","classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#M001479","(id, counters)","Make sure the lock version column gets updated when counters are updated. ",2],["update_details","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000558","(new_details)","Update the details keys by merging the given hash into the current details hash. If a block is given,",2],["update_source_list","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000307","(list, source)","",2],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#M001293","(sql, name = nil)","Executes an UPDATE query and returns the number of affected tuples. ",2],["update_sql","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001092","(sql, name = nil)","",2],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#M000352","(date_or_time = nil)","Accepts a Date or Time object and inserts it in the proper format. If nil is passed, current time in",2],["updated_at","ActiveSupport::FileUpdateChecker","classes/ActiveSupport/FileUpdateChecker.html#M002553","()","",2],["url_field","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000394","(object_name, method, options = {})","Returns a text_field of type \"url\". url_field(\"user\", \"homepage\") # => <input id=\"user_homepage\" size=\"30\"",2],["url_field_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000464","(name, value = nil, options = {})","Creates a text field of type \"url\". ==== Options * Accepts the same options as text_field_tag. ",2],["url_for","ActionController::Metal","classes/ActionController/Metal.html#M000215","(string)","basic url_for that can be overridden for more robust functionality ",2],["url_for","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000520","(options = {})","Returns the URL for the set of +options+ provided. This takes the same options as +url_for+ in Action",2],["url_options","ActionController::UrlFor","classes/ActionController/UrlFor.html#M000197","()","",2],["url_options","ActionView::Helpers::UrlHelper","classes/ActionView/Helpers/UrlHelper.html#M000519","()","Need to map default url options to controller one. def default_url_options(*args) #:nodoc: controller.send(:default_url_options,",2],["us_zones","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002971","()","A convenience method for returning a collection of TimeZone objects for time zones in the USA. ",2],["use","ActionController::Metal","classes/ActionController/Metal.html#M000222","(*args, &block)","Adds given middleware class and its args to bottom of middleware_stack ",2],["use","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001443","()","",2],["use_renderer","ActionController::Renderers::ClassMethods","classes/ActionController/Renderers/ClassMethods.html#M000147","(*args)","Alias for #use_renderers",2],["use_renderers","ActionController::Renderers::ClassMethods","classes/ActionController/Renderers/ClassMethods.html#M000145","(*args)","",2],["use_zone","Time","classes/Time.html#M002506","(time_zone)","Allows override of <tt>Time.zone</tt> locally inside supplied block; resets <tt>Time.zone</tt> to existing",2],["usec","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002931","()","",2],["user","ActiveResource::Base","classes/ActiveResource/Base.html#M001824","()","Gets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Base","classes/ActiveResource/Base.html#M001825","(user)","Sets the \\user for REST HTTP authentication. ",2],["user=","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001789","(user)","Sets the user for remote service. ",2],["user_name_and_password","ActionController::HttpAuthentication::Basic","classes/ActionController/HttpAuthentication/Basic.html#M000092","(request)","",2],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001507","(*methods)","",2],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","classes/ActiveRecord/TestFixtures/ClassMethods.html#M001508","(method)","",2],["using_limitable_reflections?","ActiveRecord::FinderMethods","classes/ActiveRecord/FinderMethods.html#M001660","(reflections)","",2],["utc","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002889","()","Returns a Time or DateTime instance that represents the time in UTC. ",2],["utc","DateTime","classes/DateTime.html#M002210","()","Adjusts DateTime to UTC by adding its offset value; offset is set to 0 Example: DateTime.civil(2005,",2],["utc?","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002900","()","",2],["utc?","DateTime","classes/DateTime.html#M002212","()","Returns true if offset == 0 ",2],["utc_offset","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002902","()","",2],["utc_offset","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002937","()","",2],["utc_offset","DateTime","classes/DateTime.html#M002213","()","Returns the offset value in seconds ",2],["utc_time","Time","classes/Time.html#M002438","(*args)","Wraps class method +time_with_datetime_fallback+ with +utc_or_local+ set to <tt>:utc</tt>. ",2],["utc_to_local","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002961","(time)","Adjust the given time to the simultaneous time in the time zone represented by +self+. Returns a Time.utc()",2],["valid?","ActiveModel::Validations","classes/ActiveModel/Validations.html#M000847","(context = nil)","Runs all the specified validations and returns true if no errors were added otherwise false. Context",2],["valid?","ActiveRecord::Validations","classes/ActiveRecord/Validations.html#M001783","(context = nil)","Runs all the validations within the specified context. Returns true if no errors are found, false otherwise.",2],["valid?","ActiveResource::Validations","classes/ActiveResource/Validations.html#M001957","()","Checks for errors on an object (i.e., is resource.errors empty?). Runs all the specified local validations",2],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#M001388","( type, options)","See: http://www.sqlite.org/lang_altertable.html SQLite has an additional restriction on the ALTER TABLE",2],["valid_encoding","ActionView::Template::Handlers::ERB","classes/ActionView/Template/Handlers/ERB.html#M000583","(string, encoding)","",2],["valid_scope_name?","ActiveRecord::NamedScope::ClassMethods","classes/ActiveRecord/NamedScope/ClassMethods.html#M001532","(name)","",2],["validate","ActiveModel::EachValidator","classes/ActiveModel/EachValidator.html#M000838","(record)","Performs validation on the supplied record. By default this will call +validates_each+ to determine validity",2],["validate","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000836","(*args, &block)","Adds a validation method or block to the class. This is useful when overriding the +validate+ instance",2],["validate","ActiveModel::Validations::PresenceValidator","classes/ActiveModel/Validations/PresenceValidator.html#M000821","(record)","",2],["validate","ActiveModel::Validator","classes/ActiveModel/Validator.html#M000834","(record)","Override this method in subclasses with validation logic, adding errors to the records +errors+ array",2],["validate_collection_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000911","(reflection)","Validate the associated records if <tt>:validate</tt> or <tt>:autosave</tt> is turned on for the association",2],["validate_digest_response","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000101","(request, realm, &password_procedure)","Returns false unless the request credentials response value matches the expected value. First try the",2],["validate_each","ActiveModel::BlockValidator","classes/ActiveModel/BlockValidator.html#M000845","(record, attribute, value)","",2],["validate_each","ActiveModel::EachValidator","classes/ActiveModel/EachValidator.html#M000839","(record, attribute, value)","Override this method in subclasses with the validation logic, adding errors to the records +errors+ array",2],["validate_each","ActiveModel::Validations::AcceptanceValidator","classes/ActiveModel/Validations/AcceptanceValidator.html#M000787","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::ConfirmationValidator","classes/ActiveModel/Validations/ConfirmationValidator.html#M000793","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::ExclusionValidator","classes/ActiveModel/Validations/ExclusionValidator.html#M000796","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::FormatValidator","classes/ActiveModel/Validations/FormatValidator.html#M000800","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::InclusionValidator","classes/ActiveModel/Validations/InclusionValidator.html#M000806","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::LengthValidator","classes/ActiveModel/Validations/LengthValidator.html#M000813","(record, attribute, value)","",2],["validate_each","ActiveModel::Validations::NumericalityValidator","classes/ActiveModel/Validations/NumericalityValidator.html#M000814","(record, attr_name, value)","",2],["validate_each","ActiveModel::Validations::WithValidator","classes/ActiveModel/Validations/WithValidator.html#M000824","(record, attr, val)","",2],["validate_each","ActiveRecord::Validations::AssociatedValidator","classes/ActiveRecord/Validations/AssociatedValidator.html#M001754","(record, attribute, value)","",2],["validate_each","ActiveRecord::Validations::UniquenessValidator","classes/ActiveRecord/Validations/UniquenessValidator.html#M001772","(record, attribute, value)","",2],["validate_fallbacks","I18n::Railtie","classes/I18n/Railtie.html#M002600","(fallbacks)","",2],["validate_nonce","ActionController::HttpAuthentication::Digest","classes/ActionController/HttpAuthentication/Digest.html#M000118","(secret_key, request, value, seconds_to_timeout=5*60)","Might want a shorter timeout depending on whether the request is a PUT or POST, and if client is browser",2],["validate_single_association","ActiveRecord::AutosaveAssociation","classes/ActiveRecord/AutosaveAssociation.html#M000910","(reflection)","Validate the association if <tt>:validate</tt> or <tt>:autosave</tt> is turned on for the association.",2],["validates","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000826","(*attributes)","This method is a shortcut to all default validators and any custom validator classes ending in 'Validator'.",2],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000791","(*attr_names)","Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar",2],["validates_associated","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001755","(*attr_names)","Validates whether the associated object or objects are all valid themselves. Works with any kind of association.",2],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000798","(*attr_names)","Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.",2],["validates_each","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000830","(*attr_names, &block)","Validates each attribute against a block. class Person include ActiveModel::Validations attr_accessor",2],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000799","(*attr_names)","Validates that the value of the specified attribute is not in a particular enumerable object. class Person",2],["validates_format_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000808","(*attr_names)","Validates whether the value of the specified attribute is of the correct form, going by the regular expression",2],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000809","(*attr_names)","Validates whether the value of the specified attribute is available in a particular enumerable object.",2],["validates_length_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000815","(*attr_names)","Validates that the specified attribute matches the length restrictions supplied. Only one option can",2],["validates_numericality_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000820","(*attr_names)","Validates whether the value of the specified attribute is numeric by trying to convert it to a float",2],["validates_presence_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000822","(*attr_names)","Validates that the specified attributes are not blank (as defined by Object#blank?). Happens by default",2],["validates_size_of","ActiveModel::Validations::HelperMethods","classes/ActiveModel/Validations/HelperMethods.html#M000816","(*attr_names)","Alias for #validates_length_of",2],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","classes/ActiveRecord/Validations/ClassMethods.html#M001778","(*attr_names)","Validates whether the value of the specified attributes are unique across the system. Useful for making",2],["validates_with","ActiveModel::Validations","classes/ActiveModel/Validations.html#M000827","(*args, &block)","Passes the record off to the class or classes specified and allows them to add errors based on more complex",2],["validates_with","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000825","(*args, &block)","Passes the record off to the class or classes specified and allows them to add errors based on more complex",2],["validators","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000837","()","List all validators that are being used to validate the model using +validates_with+ method. ",2],["validators_on","ActiveModel::Validations::ClassMethods","classes/ActiveModel/Validations/ClassMethods.html#M000840","(*attributes)","List all validators that being used to validate a specific attribute. ",2],["value","ActiveSupport::Cache::Entry","classes/ActiveSupport/Cache/Entry.html#M002084","()","Get the value stored in the cache. ",2],["values","ActiveModel::Errors","classes/ActiveModel/Errors.html#M000687","()","Returns all message values ",2],["values_at","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002583","(*indices)","Returns an array of the values at the specified indices: hash = HashWithIndifferentAccess.new hash[:a]",2],["verified_request?","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M000162","()","Returns true or false if a request is verified. Checks: * is it a GET request?  Gets should be safe and",2],["verifier","ActiveSupport::MessageEncryptor","classes/ActiveSupport/MessageEncryptor.html#M002686","()","",2],["verify","ActiveSupport::MessageVerifier","classes/ActiveSupport/MessageVerifier.html#M002688","(signed_message)","",2],["verify_authenticity_token","ActionController::RequestForgeryProtection","classes/ActionController/RequestForgeryProtection.html#M000160","()","The actual before_filter that is used. Modify this to change how you handle unverified requests. ",2],["version","ActiveRecord::ConnectionAdapters::MysqlAdapter","classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#M001255","()","Returns the version of the connected MySQL server. ",2],["version","ActiveRecord::Mysql2Adapter","classes/ActiveRecord/Mysql2Adapter.html#M001174","()","",2],["version","Rails","classes/Rails.html#M003017","()","",2],["video_path","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000318","(source)","Computes the path to a video asset in the public videos directory. Full paths from the document root",2],["video_tag","ActionView::Helpers::AssetTagHelper","classes/ActionView/Helpers/AssetTagHelper.html#M000324","(sources, options = {})","Returns an html video tag for the +sources+. If +sources+ is a string, a single video tag will be returned.",2],["view","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000629","()","The instance of ActionView::Base that is used by +render+. ",2],["view_assigns","ActionView::TestCase::Behavior","classes/ActionView/TestCase/Behavior.html#M000632","()","Returns a Hash of instance variables and their values, as defined by the user in the test case, which",2],["view_paths=","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000532","(paths)","Whenever setting view paths, makes a copy so we can manipulate then in instance objects as we wish. ",2],["visible_action?","ActionController::HideActions::ClassMethods","classes/ActionController/HideActions/ClassMethods.html#M000082","(action_name)","",2],["wait","ActiveSupport::LogSubscriber::TestHelper","classes/ActiveSupport/LogSubscriber/TestHelper.html#M002663","()","Wait notifications to be published. ",2],["wait","ActiveSupport::Notifications::Fanout","classes/ActiveSupport/Notifications/Fanout.html#M002759","()","This is a sync queue, so there is no waiting. ",2],["wants?","ActiveSupport::Multibyte::Chars","classes/ActiveSupport/Multibyte/Chars.html#M002699","(string)","Returns +true+ if the Chars class can and should act as a proxy for the string _string_. Returns +false+",2],["warn","ActiveSupport::Deprecation","classes/ActiveSupport/Deprecation.html#M002525","(message = nil, callstack = caller)","Outputs a deprecation warning to the output configured by <tt>ActiveSupport::Deprecation.behavior</tt>",2],["warn!","ActiveModel::MassAssignmentSecurity::Sanitizer","classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#M000720","(attrs)","",2],["watch","ActiveSupport::FileWatcher","classes/ActiveSupport/FileWatcher.html#M002567","(pattern, &block)","",2],["watch_namespaces","ActiveSupport::Dependencies::WatchStack","classes/ActiveSupport/Dependencies/WatchStack.html#M002522","(namespaces)","Add a set of modules to the watch stack, remembering the initial constants ",2],["weeks_ago","Time","classes/Time.html#M002454","(weeks)","Returns a new Time representing the time a number of specified weeks ago. ",2],["where","ActiveRecord::QueryMethods","classes/ActiveRecord/QueryMethods.html#M001644","(opts, *rest)","",2],["where_values_hash","ActiveRecord::Relation","classes/ActiveRecord/Relation.html#M001703","()","",2],["with","ActionController::Railties::Paths","classes/ActionController/Railties/Paths.html#M000226","(app)","",2],["with_auth","ActiveResource::Connection","classes/ActiveResource/Connection.html#M001808","()","",2],["with_backend","ActiveSupport::JSON","classes/ActiveSupport/JSON.html#M002629","(name)","",2],["with_backend","ActiveSupport::XmlMini","classes/ActiveSupport/XmlMini.html#M002997","(name)","",2],["with_exclusive_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000987","(method_scoping = {}, &block)","Works like with_scope, but discards any nested properties. ",2],["with_fallbacks","ActionView::LookupContext::ViewPaths","classes/ActionView/LookupContext/ViewPaths.html#M000539","()","Add fallbacks to the view paths. Useful in cases you are rendering a :file. ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002848","()","overridden by each implementation ",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002833","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002813","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002820","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002828","()","",2],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","classes/ActiveSupport/Testing/Performance/Metrics/Base.html#M002880","()","overridden by each implementation ",2],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","classes/ActiveSupport/HashWithIndifferentAccess.html#M002574","()","",2],["with_indifferent_access","Hash","classes/Hash.html#M002239","()","Returns an +ActiveSupport::HashWithIndifferentAccess+ out of its receiver: {:a => 1}.with_indifferent_access[\"a\"]",2],["with_layout_format","ActionView::LookupContext::Details","classes/ActionView/LookupContext/Details.html#M000557","()","A method which only uses the first format in the formats array for layout lookup. This method plays straight",2],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","classes/ActiveSupport/Cache/Strategy/LocalCache.html#M002023","()","Use a local cache for the duration of block. ",2],["with_options","Object","classes/Object.html#M002365","(options)","An elegant way to factor duplication out of options passed to a series of method calls. Each method called",2],["with_output_file","ActiveSupport::Testing::Performance::Benchmarker","classes/ActiveSupport/Testing/Performance/Benchmarker.html#M002872","()","",2],["with_scope","ActiveRecord::Base","classes/ActiveRecord/Base.html#M000986","(scope = {}, action = :merge, &block)","with_scope lets you apply options to inner block incrementally. It takes a hash and the keys must be",2],["with_transaction_returning_status","ActiveRecord::Transactions","classes/ActiveRecord/Transactions.html#M001767","()","Executes +method+ within a transaction and captures its return value as a status flag. If the status",2],["with_warnings","Kernel","classes/Kernel.html#M002265","(flag)","Sets $VERBOSE for the duration of the block and back to its original value afterwards. ",2],["without","ActiveRecord::IdentityMap","classes/ActiveRecord/IdentityMap.html#M001444","()","",2],["without_modules","ActionController::Base","classes/ActionController/Base.html#M000024","(*modules)","",2],["word_wrap","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000511","(text, *args)","Wraps the +text+ into lines no longer than +line_width+ width. This method breaks on the first whitespace",2],["wrap","Array","classes/Array.html#M002123","(object)","Wraps its argument in an array unless it is already an array (or array-like). Specifically: * If the",2],["wrap_parameters","ActionController::ParamsWrapper::ClassMethods","classes/ActionController/ParamsWrapper/ClassMethods.html#M000133","(name_or_model_or_options, options = {})","Sets the name of the wrapper key, or the model which +ParamsWrapper+ would use to determine the attribute",2],["write","ActiveRecord::Migration","classes/ActiveRecord/Migration.html#M001539","(text=\"\")","",2],["write","ActiveSupport::Cache::Store","classes/ActiveSupport/Cache/Store.html#M002056","(name, value, options = nil)","Writes the value to the cache, with the key. Options are passed to the underlying cache implementation.",2],["write_asset_file_contents","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#M000312","(joined_asset_path, asset_paths)","",2],["write_attribute","ActiveRecord::AttributeMethods::Dirty","classes/ActiveRecord/AttributeMethods/Dirty.html#M000859","(attr, value)","Wrap write_attribute to remember original attribute value. ",2],["write_attribute","ActiveRecord::AttributeMethods::Write","classes/ActiveRecord/AttributeMethods/Write.html#M000889","(attr_name, value)","Updates the attribute identified by <tt>attr_name</tt> with the specified +value+. Empty strings for",2],["write_entry","ActiveSupport::Cache::FileStore","classes/ActiveSupport/Cache/FileStore.html#M001996","(key, entry, options)","",2],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#M002021","(key, value, options)","",2],["write_fragment","ActionController::Caching::Fragments","classes/ActionController/Caching/Fragments.html#M000031","(key, content, options = nil)","Writes <tt>content</tt> to the location signified by  <tt>key</tt> (see <tt>expire_fragment</tt> for",2],["writer_method","ActiveRecord::Aggregations::ClassMethods","classes/ActiveRecord/Aggregations/ClassMethods.html#M000852","(name, class_name, mapping, allow_nil, converter)","",2],["xhr","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000247","(request_method, action, parameters = nil, session = nil, flash = nil)","Alias for #xml_http_request",2],["xhtml_block?","ActionView::Helpers::AtomFeedHelper::AtomBuilder","classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#M000350","(method, arguments)","True if the method name matches one of the five elements defined in the Atom spec as potentially containing",2],["xml","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#M001230","(*args)","",2],["xml_http_request","ActionController::TestCase::Behavior","classes/ActionController/TestCase/Behavior.html#M000246","(request_method, action, parameters = nil, session = nil, flash = nil)","",2],["xmlschema","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002908","(fraction_digits = 0)","",2],["xmlschema","DateTime","classes/DateTime.html#M002215","()","Converts datetime to an appropriate format for use in XML. ",2],["yaml_file_path","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001488","()","",2],["yaml_fixtures_key","ActiveRecord::Fixtures","classes/ActiveRecord/Fixtures.html#M001490","(path)","",2],["year","Integer","classes/Integer.html#M002259","()","Alias for #years",2],["years","Integer","classes/Integer.html#M002258","()","",2],["years_ago","Time","classes/Time.html#M002459","(years)","Returns a new Time representing the time a number of specified years ago ",2],["years_since","Time","classes/Time.html#M002460","(years)","Returns a new Time representing the time a number of specified years in the future ",2],["yesterday","Time","classes/Time.html#M002493","()","Convenience method which returns a new Time representing the time 1 day ago ",2],["zone","ActiveSupport::TimeWithZone","classes/ActiveSupport/TimeWithZone.html#M002906","()","Time uses +zone+ to display the time zone abbreviation, so we're duck-typing it. ",2],["zone","Time","classes/Time.html#M002504","()","Returns the TimeZone for the current request, if this has been set (via Time.zone=). If <tt>Time.zone</tt>",2],["zone=","Time","classes/Time.html#M002505","(time_zone)","Sets <tt>Time.zone</tt> to a TimeZone object for the current request/thread. This method accepts any",2],["zones_map","ActiveSupport::TimeZone","classes/ActiveSupport/TimeZone.html#M002969","()","",2],["CHANGELOG.md","files/actionmailer-3_1_3/CHANGELOG_md.html","files/actionmailer-3_1_3/CHANGELOG_md.html","","## Rails 3.1.1 (October 7, 2011) ##  *   No changes   ## Rails 3.1.0 (August 30, 2011) ##  *   No changes",3],["MIT-LICENSE","files/actionmailer-3_1_3/MIT-LICENSE.html","files/actionmailer-3_1_3/MIT-LICENSE.html","","Copyright (c) 2004-2011 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README.rdoc","files/actionmailer-3_1_3/README_rdoc.html","files/actionmailer-3_1_3/README_rdoc.html","","= Action Mailer -- Easy email delivery and testing  Action Mailer is a framework for designing email-service",3],["base.rb","files/actionmailer-3_1_3/lib/action_mailer/base_rb.html","files/actionmailer-3_1_3/lib/action_mailer/base_rb.html","","",3],["CHANGELOG.md","files/actionpack-3_1_3/CHANGELOG_md.html","files/actionpack-3_1_3/CHANGELOG_md.html","","## Rails 3.1.3 (unreleased) ##  *   Downgrade sprockets to ~> 2.0.3. Using 2.1.0 caused regressions.",3],["MIT-LICENSE","files/actionpack-3_1_3/MIT-LICENSE.html","files/actionpack-3_1_3/MIT-LICENSE.html","","Copyright (c) 2004-2011 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README.rdoc","files/actionpack-3_1_3/README_rdoc.html","files/actionpack-3_1_3/README_rdoc.html","","= Action Pack -- From request to response  Action Pack is a framework for handling and responding to",3],["base.rb","files/actionpack-3_1_3/lib/action_controller/base_rb.html","files/actionpack-3_1_3/lib/action_controller/base_rb.html","","",3],["caching.rb","files/actionpack-3_1_3/lib/action_controller/caching_rb.html","files/actionpack-3_1_3/lib/action_controller/caching_rb.html","","",3],["actions.rb","files/actionpack-3_1_3/lib/action_controller/caching/actions_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/actions_rb.html","","",3],["fragments.rb","files/actionpack-3_1_3/lib/action_controller/caching/fragments_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/fragments_rb.html","","",3],["pages.rb","files/actionpack-3_1_3/lib/action_controller/caching/pages_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/pages_rb.html","","",3],["sweeping.rb","files/actionpack-3_1_3/lib/action_controller/caching/sweeping_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/sweeping_rb.html","","",3],["deprecated.rb","files/actionpack-3_1_3/lib/action_controller/deprecated_rb.html","files/actionpack-3_1_3/lib/action_controller/deprecated_rb.html","","",3],["integration_test.rb","files/actionpack-3_1_3/lib/action_controller/deprecated/integration_test_rb.html","files/actionpack-3_1_3/lib/action_controller/deprecated/integration_test_rb.html","","",3],["performance_test.rb","files/actionpack-3_1_3/lib/action_controller/deprecated/performance_test_rb.html","files/actionpack-3_1_3/lib/action_controller/deprecated/performance_test_rb.html","","",3],["log_subscriber.rb","files/actionpack-3_1_3/lib/action_controller/log_subscriber_rb.html","files/actionpack-3_1_3/lib/action_controller/log_subscriber_rb.html","","",3],["metal.rb","files/actionpack-3_1_3/lib/action_controller/metal_rb.html","files/actionpack-3_1_3/lib/action_controller/metal_rb.html","","",3],["compatibility.rb","files/actionpack-3_1_3/lib/action_controller/metal/compatibility_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/compatibility_rb.html","","",3],["conditional_get.rb","files/actionpack-3_1_3/lib/action_controller/metal/conditional_get_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/conditional_get_rb.html","","",3],["cookies.rb","files/actionpack-3_1_3/lib/action_controller/metal/cookies_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/cookies_rb.html","","",3],["data_streaming.rb","files/actionpack-3_1_3/lib/action_controller/metal/data_streaming_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/data_streaming_rb.html","","",3],["exceptions.rb","files/actionpack-3_1_3/lib/action_controller/metal/exceptions_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/exceptions_rb.html","","",3],["flash.rb","files/actionpack-3_1_3/lib/action_controller/metal/flash_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/flash_rb.html","","",3],["force_ssl.rb","files/actionpack-3_1_3/lib/action_controller/metal/force_ssl_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/force_ssl_rb.html","","",3],["head.rb","files/actionpack-3_1_3/lib/action_controller/metal/head_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/head_rb.html","","",3],["helpers.rb","files/actionpack-3_1_3/lib/action_controller/metal/helpers_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/helpers_rb.html","","",3],["hide_actions.rb","files/actionpack-3_1_3/lib/action_controller/metal/hide_actions_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/hide_actions_rb.html","","",3],["http_authentication.rb","files/actionpack-3_1_3/lib/action_controller/metal/http_authentication_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/http_authentication_rb.html","","",3],["implicit_render.rb","files/actionpack-3_1_3/lib/action_controller/metal/implicit_render_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/implicit_render_rb.html","","",3],["instrumentation.rb","files/actionpack-3_1_3/lib/action_controller/metal/instrumentation_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/instrumentation_rb.html","","",3],["mime_responds.rb","files/actionpack-3_1_3/lib/action_controller/metal/mime_responds_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/mime_responds_rb.html","","",3],["params_wrapper.rb","files/actionpack-3_1_3/lib/action_controller/metal/params_wrapper_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/params_wrapper_rb.html","","",3],["rack_delegation.rb","files/actionpack-3_1_3/lib/action_controller/metal/rack_delegation_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/rack_delegation_rb.html","","",3],["redirecting.rb","files/actionpack-3_1_3/lib/action_controller/metal/redirecting_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/redirecting_rb.html","","",3],["renderers.rb","files/actionpack-3_1_3/lib/action_controller/metal/renderers_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/renderers_rb.html","","",3],["rendering.rb","files/actionpack-3_1_3/lib/action_controller/metal/rendering_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/rendering_rb.html","","",3],["request_forgery_protection.rb","files/actionpack-3_1_3/lib/action_controller/metal/request_forgery_protection_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/request_forgery_protection_rb.html","","",3],["rescue.rb","files/actionpack-3_1_3/lib/action_controller/metal/rescue_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/rescue_rb.html","","",3],["responder.rb","files/actionpack-3_1_3/lib/action_controller/metal/responder_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/responder_rb.html","","",3],["session_management.rb","files/actionpack-3_1_3/lib/action_controller/metal/session_management_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/session_management_rb.html","","",3],["streaming.rb","files/actionpack-3_1_3/lib/action_controller/metal/streaming_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/streaming_rb.html","","",3],["testing.rb","files/actionpack-3_1_3/lib/action_controller/metal/testing_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/testing_rb.html","","",3],["url_for.rb","files/actionpack-3_1_3/lib/action_controller/metal/url_for_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/url_for_rb.html","","Includes +url_for+ into the host class. The class has to provide a +RouteSet+ by implementing  the <tt>_routes</tt>",3],["middleware.rb","files/actionpack-3_1_3/lib/action_controller/middleware_rb.html","files/actionpack-3_1_3/lib/action_controller/middleware_rb.html","","",3],["railtie.rb","files/actionpack-3_1_3/lib/action_controller/railtie_rb.html","files/actionpack-3_1_3/lib/action_controller/railtie_rb.html","","",3],["paths.rb","files/actionpack-3_1_3/lib/action_controller/railties/paths_rb.html","files/actionpack-3_1_3/lib/action_controller/railties/paths_rb.html","","",3],["record_identifier.rb","files/actionpack-3_1_3/lib/action_controller/record_identifier_rb.html","files/actionpack-3_1_3/lib/action_controller/record_identifier_rb.html","","",3],["test_case.rb","files/actionpack-3_1_3/lib/action_controller/test_case_rb.html","files/actionpack-3_1_3/lib/action_controller/test_case_rb.html","","",3],["html-scanner.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner_rb.html","","",3],["document.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/document_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/document_rb.html","","",3],["node.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/node_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/node_rb.html","","",3],["sanitizer.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/sanitizer_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/sanitizer_rb.html","","",3],["selector.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/selector_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/selector_rb.html",""," ",3],["tokenizer.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/tokenizer_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/tokenizer_rb.html","","",3],["version.rb","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/version_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/version_rb.html","","",3],["asset_paths.rb","files/actionpack-3_1_3/lib/action_view/asset_paths_rb.html","files/actionpack-3_1_3/lib/action_view/asset_paths_rb.html","","",3],["base.rb","files/actionpack-3_1_3/lib/action_view/base_rb.html","files/actionpack-3_1_3/lib/action_view/base_rb.html","","",3],["buffers.rb","files/actionpack-3_1_3/lib/action_view/buffers_rb.html","files/actionpack-3_1_3/lib/action_view/buffers_rb.html","","",3],["context.rb","files/actionpack-3_1_3/lib/action_view/context_rb.html","files/actionpack-3_1_3/lib/action_view/context_rb.html","","",3],["flows.rb","files/actionpack-3_1_3/lib/action_view/flows_rb.html","files/actionpack-3_1_3/lib/action_view/flows_rb.html","","",3],["helpers.rb","files/actionpack-3_1_3/lib/action_view/helpers_rb.html","files/actionpack-3_1_3/lib/action_view/helpers_rb.html","","",3],["active_model_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/active_model_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/active_model_helper_rb.html","","",3],["asset_paths.rb","files/actionpack-3_1_3/lib/action_view/helpers/asset_paths_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_paths_rb.html","","",3],["asset_tag_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helper_rb.html","","",3],["asset_include_tag.rb","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/asset_include_tag_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/asset_include_tag_rb.html","","",3],["asset_paths.rb","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/asset_paths_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/asset_paths_rb.html","","",3],["javascript_tag_helpers.rb","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers_rb.html","","",3],["stylesheet_tag_helpers.rb","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/stylesheet_tag_helpers_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/stylesheet_tag_helpers_rb.html","","",3],["atom_feed_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/atom_feed_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/atom_feed_helper_rb.html","","",3],["cache_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/cache_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/cache_helper_rb.html","","",3],["capture_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/capture_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/capture_helper_rb.html","","",3],["controller_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/controller_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/controller_helper_rb.html","","",3],["csrf_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/csrf_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/csrf_helper_rb.html","","",3],["date_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/date_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/date_helper_rb.html","","",3],["debug_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/debug_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/debug_helper_rb.html","","",3],["form_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/form_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/form_helper_rb.html","","",3],["form_options_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/form_options_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/form_options_helper_rb.html","","",3],["form_tag_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/form_tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/form_tag_helper_rb.html","","",3],["javascript_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/javascript_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/javascript_helper_rb.html","","",3],["number_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/number_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/number_helper_rb.html","","encoding: utf-8 ",3],["output_safety_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/output_safety_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/output_safety_helper_rb.html","","",3],["record_tag_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/record_tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/record_tag_helper_rb.html","","",3],["rendering_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/rendering_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/rendering_helper_rb.html","","",3],["sanitize_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/sanitize_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/sanitize_helper_rb.html","","",3],["tag_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/tag_helper_rb.html","","",3],["text_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/text_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/text_helper_rb.html","","",3],["translation_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/translation_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/translation_helper_rb.html","","",3],["url_helper.rb","files/actionpack-3_1_3/lib/action_view/helpers/url_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/url_helper_rb.html","","",3],["log_subscriber.rb","files/actionpack-3_1_3/lib/action_view/log_subscriber_rb.html","files/actionpack-3_1_3/lib/action_view/log_subscriber_rb.html","","",3],["lookup_context.rb","files/actionpack-3_1_3/lib/action_view/lookup_context_rb.html","files/actionpack-3_1_3/lib/action_view/lookup_context_rb.html","","",3],["path_set.rb","files/actionpack-3_1_3/lib/action_view/path_set_rb.html","files/actionpack-3_1_3/lib/action_view/path_set_rb.html","","",3],["railtie.rb","files/actionpack-3_1_3/lib/action_view/railtie_rb.html","files/actionpack-3_1_3/lib/action_view/railtie_rb.html","","",3],["abstract_renderer.rb","files/actionpack-3_1_3/lib/action_view/renderer/abstract_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/abstract_renderer_rb.html","","",3],["partial_renderer.rb","files/actionpack-3_1_3/lib/action_view/renderer/partial_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/partial_renderer_rb.html","","",3],["renderer.rb","files/actionpack-3_1_3/lib/action_view/renderer/renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/renderer_rb.html","","",3],["streaming_template_renderer.rb","files/actionpack-3_1_3/lib/action_view/renderer/streaming_template_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/streaming_template_renderer_rb.html","","1.9 ships with Fibers but we need to require the extra methods explicitly. We only load those extra methods",3],["template_renderer.rb","files/actionpack-3_1_3/lib/action_view/renderer/template_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/template_renderer_rb.html","","",3],["template.rb","files/actionpack-3_1_3/lib/action_view/template_rb.html","files/actionpack-3_1_3/lib/action_view/template_rb.html","","",3],["error.rb","files/actionpack-3_1_3/lib/action_view/template/error_rb.html","files/actionpack-3_1_3/lib/action_view/template/error_rb.html","","",3],["handler.rb","files/actionpack-3_1_3/lib/action_view/template/handler_rb.html","files/actionpack-3_1_3/lib/action_view/template/handler_rb.html","","",3],["handlers.rb","files/actionpack-3_1_3/lib/action_view/template/handlers_rb.html","files/actionpack-3_1_3/lib/action_view/template/handlers_rb.html","","",3],["builder.rb","files/actionpack-3_1_3/lib/action_view/template/handlers/builder_rb.html","files/actionpack-3_1_3/lib/action_view/template/handlers/builder_rb.html","","",3],["erb.rb","files/actionpack-3_1_3/lib/action_view/template/handlers/erb_rb.html","files/actionpack-3_1_3/lib/action_view/template/handlers/erb_rb.html","","",3],["resolver.rb","files/actionpack-3_1_3/lib/action_view/template/resolver_rb.html","files/actionpack-3_1_3/lib/action_view/template/resolver_rb.html","","",3],["text.rb","files/actionpack-3_1_3/lib/action_view/template/text_rb.html","files/actionpack-3_1_3/lib/action_view/template/text_rb.html","","",3],["test_case.rb","files/actionpack-3_1_3/lib/action_view/test_case_rb.html","files/actionpack-3_1_3/lib/action_view/test_case_rb.html","","",3],["resolvers.rb","files/actionpack-3_1_3/lib/action_view/testing/resolvers_rb.html","files/actionpack-3_1_3/lib/action_view/testing/resolvers_rb.html","","",3],["CHANGELOG.md","files/activemodel-3_1_3/CHANGELOG_md.html","files/activemodel-3_1_3/CHANGELOG_md.html","","## Rails 3.1.1 (October 7, 2011) ##  *   Remove hard dependency on bcrypt-ruby to avoid make ActiveModel",3],["MIT-LICENSE","files/activemodel-3_1_3/MIT-LICENSE.html","files/activemodel-3_1_3/MIT-LICENSE.html","","Copyright (c) 2004-2011 David Heinemeier Hansson  Permission is hereby granted, free of charge, to any",3],["README.rdoc","files/activemodel-3_1_3/README_rdoc.html","files/activemodel-3_1_3/README_rdoc.html","","= Active Model -- model interfaces for Rails  Active Model provides a known set of interfaces for usage",3],["attribute_methods.rb","files/activemodel-3_1_3/lib/active_model/attribute_methods_rb.html","files/activemodel-3_1_3/lib/active_model/attribute_methods_rb.html","","",3],["callbacks.rb","files/activemodel-3_1_3/lib/active_model/callbacks_rb.html","files/activemodel-3_1_3/lib/active_model/callbacks_rb.html","","",3],["conversion.rb","files/activemodel-3_1_3/lib/active_model/conversion_rb.html","files/activemodel-3_1_3/lib/active_model/conversion_rb.html","","",3],["dirty.rb","files/activemodel-3_1_3/lib/active_model/dirty_rb.html","files/activemodel-3_1_3/lib/active_model/dirty_rb.html","","",3],["errors.rb","files/activemodel-3_1_3/lib/active_model/errors_rb.html","files/activemodel-3_1_3/lib/active_model/errors_rb.html","","",3],["lint.rb","files/activemodel-3_1_3/lib/active_model/lint_rb.html","files/activemodel-3_1_3/lib/active_model/lint_rb.html","","",3],["mass_assignment_security.rb","files/activemodel-3_1_3/lib/active_model/mass_assignment_security_rb.html","files/activemodel-3_1_3/lib/active_model/mass_assignment_security_rb.html","","",3],["permission_set.rb","files/activemodel-3_1_3/lib/active_model/mass_assignment_security/permission_set_rb.html","files/activemodel-3_1_3/lib/active_model/mass_assignment_security/permission_set_rb.html","","",3],["sanitizer.rb","files/activemodel-3_1_3/lib/active_model/mass_assignment_security/sanitizer_rb.html","files/activemodel-3_1_3/lib/active_model/mass_assignment_security/sanitizer_rb.html","","",3],["naming.rb","files/activemodel-3_1_3/lib/active_model/naming_rb.html","files/activemodel-3_1_3/lib/active_model/naming_rb.html","","",3],["observer_array.rb","files/activemodel-3_1_3/lib/active_model/observer_array_rb.html","files/activemodel-3_1_3/lib/active_model/observer_array_rb.html","","",3],["observing.rb","files/activemodel-3_1_3/lib/active_model/observing_rb.html","files/activemodel-3_1_3/lib/active_model/observing_rb.html","","",3],["railtie.rb","files/activemodel-3_1_3/lib/active_model/railtie_rb.html","files/activemodel-3_1_3/lib/active_model/railtie_rb.html","","",3],["secure_password.rb","files/activemodel-3_1_3/lib/active_model/secure_password_rb.html","files/activemodel-3_1_3/lib/active_model/secure_password_rb.html","","",3],["serialization.rb","files/activemodel-3_1_3/lib/active_model/serialization_rb.html","files/activemodel-3_1_3/lib/active_model/serialization_rb.html","","",3],["json.rb","files/activemodel-3_1_3/lib/active_model/serializers/json_rb.html","files/activemodel-3_1_3/lib/active_model/serializers/json_rb.html","","",3],["xml.rb","files/activemodel-3_1_3/lib/active_model/serializers/xml_rb.html","files/activemodel-3_1_3/lib/active_model/serializers/xml_rb.html","","",3],["test_case.rb","files/activemodel-3_1_3/lib/active_model/test_case_rb.html","files/activemodel-3_1_3/lib/active_model/test_case_rb.html","","",3],["translation.rb","files/activemodel-3_1_3/lib/active_model/translation_rb.html","files/activemodel-3_1_3/lib/active_model/translation_rb.html","","",3],["validations.rb","files/activemodel-3_1_3/lib/active_model/validations_rb.html","files/activemodel-3_1_3/lib/active_model/validations_rb.html","","",3],["acceptance.rb","files/activemodel-3_1_3/lib/active_model/validations/acceptance_rb.html","files/activemodel-3_1_3/lib/active_model/validations/acceptance_rb.html","","",3],["callbacks.rb","files/activemodel-3_1_3/lib/active_model/validations/callbacks_rb.html","files/activemodel-3_1_3/lib/active_model/validations/callbacks_rb.html","","",3],["confirmation.rb","files/activemodel-3_1_3/lib/active_model/validations/confirmation_rb.html","files/activemodel-3_1_3/lib/active_model/validations/confirmation_rb.html","","",3],["exclusion.rb","files/activemodel-3_1_3/lib/active_model/validations/exclusion_rb.html","files/activemodel-3_1_3/lib/active_model/validations/exclusion_rb.html","","",3],["format.rb","files/activemodel-3_1_3/lib/active_model/validations/format_rb.html","files/activemodel-3_1_3/lib/active_model/validations/format_rb.html","","",3],["inclusion.rb","files/activemodel-3_1_3/lib/active_model/validations/inclusion_rb.html","files/activemodel-3_1_3/lib/active_model/validations/inclusion_rb.html","","",3],["length.rb","files/activemodel-3_1_3/lib/active_model/validations/length_rb.html","files/activemodel-3_1_3/lib/active_model/validations/length_rb.html","","",3],["numericality.rb","files/activemodel-3_1_3/lib/active_model/validations/numericality_rb.html","files/activemodel-3_1_3/lib/active_model/validations/numericality_rb.html","","",3],["presence.rb","files/activemodel-3_1_3/lib/active_model/validations/presence_rb.html","files/activemodel-3_1_3/lib/active_model/validations/presence_rb.html","","",3],["validates.rb","files/activemodel-3_1_3/lib/active_model/validations/validates_rb.html","files/activemodel-3_1_3/lib/active_model/validations/validates_rb.html","","",3],["with.rb","files/activemodel-3_1_3/lib/active_model/validations/with_rb.html","files/activemodel-3_1_3/lib/active_model/validations/with_rb.html","","",3],["validator.rb","files/activemodel-3_1_3/lib/active_model/validator_rb.html","files/activemodel-3_1_3/lib/active_model/validator_rb.html","","",3],["version.rb","files/activemodel-3_1_3/lib/active_model/version_rb.html","files/activemodel-3_1_3/lib/active_model/version_rb.html","","",3],["CHANGELOG.md","files/activerecord-3_1_3/CHANGELOG_md.html","files/activerecord-3_1_3/CHANGELOG_md.html","","## Rails 3.1.3 (unreleased) ##  *   Perf fix: If we're deleting all records in an association, don't",3],["README.rdoc","files/activerecord-3_1_3/README_rdoc.html","files/activerecord-3_1_3/README_rdoc.html","","= Active Record -- Object-relational mapping put on rails  Active Record connects classes to relational",3],["aggregations.rb","files/activerecord-3_1_3/lib/active_record/aggregations_rb.html","files/activerecord-3_1_3/lib/active_record/aggregations_rb.html","","",3],["associations.rb","files/activerecord-3_1_3/lib/active_record/associations_rb.html","files/activerecord-3_1_3/lib/active_record/associations_rb.html","","",3],["alias_tracker.rb","files/activerecord-3_1_3/lib/active_record/associations/alias_tracker_rb.html","files/activerecord-3_1_3/lib/active_record/associations/alias_tracker_rb.html","","",3],["association.rb","files/activerecord-3_1_3/lib/active_record/associations/association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/association_rb.html","","",3],["association_scope.rb","files/activerecord-3_1_3/lib/active_record/associations/association_scope_rb.html","files/activerecord-3_1_3/lib/active_record/associations/association_scope_rb.html","","",3],["belongs_to_association.rb","files/activerecord-3_1_3/lib/active_record/associations/belongs_to_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/belongs_to_association_rb.html","","",3],["belongs_to_polymorphic_association.rb","files/activerecord-3_1_3/lib/active_record/associations/belongs_to_polymorphic_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/belongs_to_polymorphic_association_rb.html","","",3],["association.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/association_rb.html","","",3],["belongs_to.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/belongs_to_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/belongs_to_rb.html","","",3],["collection_association.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/collection_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/collection_association_rb.html","","",3],["has_and_belongs_to_many.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/has_and_belongs_to_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/has_and_belongs_to_many_rb.html","","",3],["has_many.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/has_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/has_many_rb.html","","",3],["has_one.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/has_one_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/has_one_rb.html","","",3],["singular_association.rb","files/activerecord-3_1_3/lib/active_record/associations/builder/singular_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/singular_association_rb.html","","",3],["collection_association.rb","files/activerecord-3_1_3/lib/active_record/associations/collection_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/collection_association_rb.html","","",3],["collection_proxy.rb","files/activerecord-3_1_3/lib/active_record/associations/collection_proxy_rb.html","files/activerecord-3_1_3/lib/active_record/associations/collection_proxy_rb.html","","",3],["has_and_belongs_to_many_association.rb","files/activerecord-3_1_3/lib/active_record/associations/has_and_belongs_to_many_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_and_belongs_to_many_association_rb.html","","",3],["has_many_association.rb","files/activerecord-3_1_3/lib/active_record/associations/has_many_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_many_association_rb.html","","",3],["has_many_through_association.rb","files/activerecord-3_1_3/lib/active_record/associations/has_many_through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_many_through_association_rb.html","","",3],["has_one_association.rb","files/activerecord-3_1_3/lib/active_record/associations/has_one_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_one_association_rb.html","","",3],["has_one_through_association.rb","files/activerecord-3_1_3/lib/active_record/associations/has_one_through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_one_through_association_rb.html","","",3],["join_dependency.rb","files/activerecord-3_1_3/lib/active_record/associations/join_dependency_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency_rb.html","","",3],["join_association.rb","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_association_rb.html","","",3],["join_base.rb","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_base_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_base_rb.html","","",3],["join_part.rb","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_part_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_part_rb.html","","",3],["join_helper.rb","files/activerecord-3_1_3/lib/active_record/associations/join_helper_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_helper_rb.html","","",3],["preloader.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader_rb.html","","",3],["association.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/association_rb.html","","",3],["belongs_to.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/belongs_to_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/belongs_to_rb.html","","",3],["collection_association.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/collection_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/collection_association_rb.html","","",3],["has_and_belongs_to_many.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_and_belongs_to_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_and_belongs_to_many_rb.html","","",3],["has_many.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_many_rb.html","","",3],["has_many_through.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_many_through_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_many_through_rb.html","","",3],["has_one.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_one_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_one_rb.html","","",3],["has_one_through.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_one_through_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_one_through_rb.html","","",3],["singular_association.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/singular_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/singular_association_rb.html","","",3],["through_association.rb","files/activerecord-3_1_3/lib/active_record/associations/preloader/through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/through_association_rb.html","","",3],["singular_association.rb","files/activerecord-3_1_3/lib/active_record/associations/singular_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/singular_association_rb.html","","",3],["through_association.rb","files/activerecord-3_1_3/lib/active_record/associations/through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/through_association_rb.html","","",3],["attribute_methods.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods_rb.html","","",3],["before_type_cast.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/before_type_cast_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/before_type_cast_rb.html","","",3],["dirty.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/dirty_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/dirty_rb.html","","",3],["primary_key.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/primary_key_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/primary_key_rb.html","","",3],["query.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/query_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/query_rb.html","","",3],["read.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/read_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/read_rb.html","","",3],["time_zone_conversion.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/time_zone_conversion_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/time_zone_conversion_rb.html","","",3],["write.rb","files/activerecord-3_1_3/lib/active_record/attribute_methods/write_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/write_rb.html","","",3],["autosave_association.rb","files/activerecord-3_1_3/lib/active_record/autosave_association_rb.html","files/activerecord-3_1_3/lib/active_record/autosave_association_rb.html","","",3],["base.rb","files/activerecord-3_1_3/lib/active_record/base_rb.html","files/activerecord-3_1_3/lib/active_record/base_rb.html","","",3],["callbacks.rb","files/activerecord-3_1_3/lib/active_record/callbacks_rb.html","files/activerecord-3_1_3/lib/active_record/callbacks_rb.html","","",3],["yaml_column.rb","files/activerecord-3_1_3/lib/active_record/coders/yaml_column_rb.html","files/activerecord-3_1_3/lib/active_record/coders/yaml_column_rb.html","","",3],["connection_pool.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/connection_pool_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/connection_pool_rb.html","","",3],["connection_specification.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/connection_specification_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/connection_specification_rb.html","","",3],["database_limits.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/database_limits_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/database_limits_rb.html","","",3],["database_statements.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/database_statements_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/database_statements_rb.html","","",3],["query_cache.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/query_cache_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/query_cache_rb.html","","",3],["quoting.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/quoting_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/quoting_rb.html","","",3],["schema_definitions.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/schema_definitions_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/schema_definitions_rb.html","","",3],["schema_statements.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/schema_statements_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/schema_statements_rb.html","","",3],["abstract_adapter.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract_adapter_rb.html","","",3],["column.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/column_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/column_rb.html","","",3],["mysql2_adapter.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/mysql2_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/mysql2_adapter_rb.html","","encoding: utf-8 ",3],["mysql_adapter.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/mysql_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/mysql_adapter_rb.html","","",3],["postgresql_adapter.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/postgresql_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/postgresql_adapter_rb.html","","",3],["sqlite3_adapter.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/sqlite3_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/sqlite3_adapter_rb.html","","",3],["sqlite_adapter.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/sqlite_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/sqlite_adapter_rb.html","","",3],["statement_pool.rb","files/activerecord-3_1_3/lib/active_record/connection_adapters/statement_pool_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/statement_pool_rb.html","","",3],["counter_cache.rb","files/activerecord-3_1_3/lib/active_record/counter_cache_rb.html","files/activerecord-3_1_3/lib/active_record/counter_cache_rb.html","","",3],["dynamic_finder_match.rb","files/activerecord-3_1_3/lib/active_record/dynamic_finder_match_rb.html","files/activerecord-3_1_3/lib/active_record/dynamic_finder_match_rb.html","","",3],["dynamic_scope_match.rb","files/activerecord-3_1_3/lib/active_record/dynamic_scope_match_rb.html","files/activerecord-3_1_3/lib/active_record/dynamic_scope_match_rb.html","","",3],["errors.rb","files/activerecord-3_1_3/lib/active_record/errors_rb.html","files/activerecord-3_1_3/lib/active_record/errors_rb.html","","",3],["fixtures.rb","files/activerecord-3_1_3/lib/active_record/fixtures_rb.html","files/activerecord-3_1_3/lib/active_record/fixtures_rb.html","","",3],["identity_map.rb","files/activerecord-3_1_3/lib/active_record/identity_map_rb.html","files/activerecord-3_1_3/lib/active_record/identity_map_rb.html","","",3],["optimistic.rb","files/activerecord-3_1_3/lib/active_record/locking/optimistic_rb.html","files/activerecord-3_1_3/lib/active_record/locking/optimistic_rb.html","","",3],["pessimistic.rb","files/activerecord-3_1_3/lib/active_record/locking/pessimistic_rb.html","files/activerecord-3_1_3/lib/active_record/locking/pessimistic_rb.html","","",3],["log_subscriber.rb","files/activerecord-3_1_3/lib/active_record/log_subscriber_rb.html","files/activerecord-3_1_3/lib/active_record/log_subscriber_rb.html","","",3],["migration.rb","files/activerecord-3_1_3/lib/active_record/migration_rb.html","files/activerecord-3_1_3/lib/active_record/migration_rb.html","","",3],["command_recorder.rb","files/activerecord-3_1_3/lib/active_record/migration/command_recorder_rb.html","files/activerecord-3_1_3/lib/active_record/migration/command_recorder_rb.html","","",3],["named_scope.rb","files/activerecord-3_1_3/lib/active_record/named_scope_rb.html","files/activerecord-3_1_3/lib/active_record/named_scope_rb.html","","",3],["nested_attributes.rb","files/activerecord-3_1_3/lib/active_record/nested_attributes_rb.html","files/activerecord-3_1_3/lib/active_record/nested_attributes_rb.html","","",3],["observer.rb","files/activerecord-3_1_3/lib/active_record/observer_rb.html","files/activerecord-3_1_3/lib/active_record/observer_rb.html","","",3],["persistence.rb","files/activerecord-3_1_3/lib/active_record/persistence_rb.html","files/activerecord-3_1_3/lib/active_record/persistence_rb.html","","",3],["query_cache.rb","files/activerecord-3_1_3/lib/active_record/query_cache_rb.html","files/activerecord-3_1_3/lib/active_record/query_cache_rb.html","","",3],["railtie.rb","files/activerecord-3_1_3/lib/active_record/railtie_rb.html","files/activerecord-3_1_3/lib/active_record/railtie_rb.html","","",3],["console_sandbox.rb","files/activerecord-3_1_3/lib/active_record/railties/console_sandbox_rb.html","files/activerecord-3_1_3/lib/active_record/railties/console_sandbox_rb.html","","",3],["controller_runtime.rb","files/activerecord-3_1_3/lib/active_record/railties/controller_runtime_rb.html","files/activerecord-3_1_3/lib/active_record/railties/controller_runtime_rb.html","","",3],["jdbcmysql_error.rb","files/activerecord-3_1_3/lib/active_record/railties/jdbcmysql_error_rb.html","files/activerecord-3_1_3/lib/active_record/railties/jdbcmysql_error_rb.html","","FIXME Remove if ArJdbcMysql will give. ",3],["reflection.rb","files/activerecord-3_1_3/lib/active_record/reflection_rb.html","files/activerecord-3_1_3/lib/active_record/reflection_rb.html","","",3],["relation.rb","files/activerecord-3_1_3/lib/active_record/relation_rb.html","files/activerecord-3_1_3/lib/active_record/relation_rb.html","","",3],["batches.rb","files/activerecord-3_1_3/lib/active_record/relation/batches_rb.html","files/activerecord-3_1_3/lib/active_record/relation/batches_rb.html","","",3],["calculations.rb","files/activerecord-3_1_3/lib/active_record/relation/calculations_rb.html","files/activerecord-3_1_3/lib/active_record/relation/calculations_rb.html","","",3],["finder_methods.rb","files/activerecord-3_1_3/lib/active_record/relation/finder_methods_rb.html","files/activerecord-3_1_3/lib/active_record/relation/finder_methods_rb.html","","",3],["predicate_builder.rb","files/activerecord-3_1_3/lib/active_record/relation/predicate_builder_rb.html","files/activerecord-3_1_3/lib/active_record/relation/predicate_builder_rb.html","","",3],["query_methods.rb","files/activerecord-3_1_3/lib/active_record/relation/query_methods_rb.html","files/activerecord-3_1_3/lib/active_record/relation/query_methods_rb.html","","",3],["spawn_methods.rb","files/activerecord-3_1_3/lib/active_record/relation/spawn_methods_rb.html","files/activerecord-3_1_3/lib/active_record/relation/spawn_methods_rb.html","","",3],["result.rb","files/activerecord-3_1_3/lib/active_record/result_rb.html","files/activerecord-3_1_3/lib/active_record/result_rb.html","","",3],["schema.rb","files/activerecord-3_1_3/lib/active_record/schema_rb.html","files/activerecord-3_1_3/lib/active_record/schema_rb.html","","",3],["schema_dumper.rb","files/activerecord-3_1_3/lib/active_record/schema_dumper_rb.html","files/activerecord-3_1_3/lib/active_record/schema_dumper_rb.html","","",3],["serialization.rb","files/activerecord-3_1_3/lib/active_record/serialization_rb.html","files/activerecord-3_1_3/lib/active_record/serialization_rb.html","","",3],["xml_serializer.rb","files/activerecord-3_1_3/lib/active_record/serializers/xml_serializer_rb.html","files/activerecord-3_1_3/lib/active_record/serializers/xml_serializer_rb.html","","",3],["session_store.rb","files/activerecord-3_1_3/lib/active_record/session_store_rb.html","files/activerecord-3_1_3/lib/active_record/session_store_rb.html","","",3],["test_case.rb","files/activerecord-3_1_3/lib/active_record/test_case_rb.html","files/activerecord-3_1_3/lib/active_record/test_case_rb.html","","",3],["timestamp.rb","files/activerecord-3_1_3/lib/active_record/timestamp_rb.html","files/activerecord-3_1_3/lib/active_record/timestamp_rb.html","","",3],["transactions.rb","files/activerecord-3_1_3/lib/active_record/transactions_rb.html","files/activerecord-3_1_3/lib/active_record/transactions_rb.html","","",3],["validations.rb","files/activerecord-3_1_3/lib/active_record/validations_rb.html","files/activerecord-3_1_3/lib/active_record/validations_rb.html","","",3],["associated.rb","files/activerecord-3_1_3/lib/active_record/validations/associated_rb.html","files/activerecord-3_1_3/lib/active_record/validations/associated_rb.html","","",3],["uniqueness.rb","files/activerecord-3_1_3/lib/active_record/validations/uniqueness_rb.html","files/activerecord-3_1_3/lib/active_record/validations/uniqueness_rb.html","","",3],["version.rb","files/activerecord-3_1_3/lib/active_record/version_rb.html","files/activerecord-3_1_3/lib/active_record/version_rb.html","","",3],["CHANGELOG.md","files/activeresource-3_1_3/CHANGELOG_md.html","files/activeresource-3_1_3/CHANGELOG_md.html","","## Rails 3.1.1 (October 7, 2011) ##  *   No changes   ## Rails 3.1.0 (August 30, 2011) ##  *   The default",3],["README.rdoc","files/activeresource-3_1_3/README_rdoc.html","files/activeresource-3_1_3/README_rdoc.html","","= Active Resource  Active Resource (ARes) connects business objects and Representational State Transfer",3],["active_resource.rb","files/activeresource-3_1_3/lib/active_resource_rb.html","files/activeresource-3_1_3/lib/active_resource_rb.html",""," ",3],["base.rb","files/activeresource-3_1_3/lib/active_resource/base_rb.html","files/activeresource-3_1_3/lib/active_resource/base_rb.html","","",3],["connection.rb","files/activeresource-3_1_3/lib/active_resource/connection_rb.html","files/activeresource-3_1_3/lib/active_resource/connection_rb.html","","",3],["custom_methods.rb","files/activeresource-3_1_3/lib/active_resource/custom_methods_rb.html","files/activeresource-3_1_3/lib/active_resource/custom_methods_rb.html","","",3],["exceptions.rb","files/activeresource-3_1_3/lib/active_resource/exceptions_rb.html","files/activeresource-3_1_3/lib/active_resource/exceptions_rb.html","","",3],["formats.rb","files/activeresource-3_1_3/lib/active_resource/formats_rb.html","files/activeresource-3_1_3/lib/active_resource/formats_rb.html","","",3],["json_format.rb","files/activeresource-3_1_3/lib/active_resource/formats/json_format_rb.html","files/activeresource-3_1_3/lib/active_resource/formats/json_format_rb.html","","",3],["xml_format.rb","files/activeresource-3_1_3/lib/active_resource/formats/xml_format_rb.html","files/activeresource-3_1_3/lib/active_resource/formats/xml_format_rb.html","","",3],["http_mock.rb","files/activeresource-3_1_3/lib/active_resource/http_mock_rb.html","files/activeresource-3_1_3/lib/active_resource/http_mock_rb.html","","",3],["log_subscriber.rb","files/activeresource-3_1_3/lib/active_resource/log_subscriber_rb.html","files/activeresource-3_1_3/lib/active_resource/log_subscriber_rb.html","","",3],["observing.rb","files/activeresource-3_1_3/lib/active_resource/observing_rb.html","files/activeresource-3_1_3/lib/active_resource/observing_rb.html","","",3],["railtie.rb","files/activeresource-3_1_3/lib/active_resource/railtie_rb.html","files/activeresource-3_1_3/lib/active_resource/railtie_rb.html","","",3],["schema.rb","files/activeresource-3_1_3/lib/active_resource/schema_rb.html","files/activeresource-3_1_3/lib/active_resource/schema_rb.html","","",3],["validations.rb","files/activeresource-3_1_3/lib/active_resource/validations_rb.html","files/activeresource-3_1_3/lib/active_resource/validations_rb.html","","",3],["version.rb","files/activeresource-3_1_3/lib/active_resource/version_rb.html","files/activeresource-3_1_3/lib/active_resource/version_rb.html","","",3],["CHANGELOG.md","files/activesupport-3_1_3/CHANGELOG_md.html","files/activesupport-3_1_3/CHANGELOG_md.html","","## Rails 3.1.1 (October 7, 2011) ##  *   ruby193: String#prepend is also unsafe *Akira Matsuda*  *  ",3],["README.rdoc","files/activesupport-3_1_3/README_rdoc.html","files/activesupport-3_1_3/README_rdoc.html","","= Active Support -- Utility classes and Ruby extensions from Rails  Active Support is a collection of",3],["all.rb","files/activesupport-3_1_3/lib/active_support/all_rb.html","files/activesupport-3_1_3/lib/active_support/all_rb.html","","",3],["backtrace_cleaner.rb","files/activesupport-3_1_3/lib/active_support/backtrace_cleaner_rb.html","files/activesupport-3_1_3/lib/active_support/backtrace_cleaner_rb.html","","",3],["base64.rb","files/activesupport-3_1_3/lib/active_support/base64_rb.html","files/activesupport-3_1_3/lib/active_support/base64_rb.html","","",3],["basic_object.rb","files/activesupport-3_1_3/lib/active_support/basic_object_rb.html","files/activesupport-3_1_3/lib/active_support/basic_object_rb.html","","",3],["benchmarkable.rb","files/activesupport-3_1_3/lib/active_support/benchmarkable_rb.html","files/activesupport-3_1_3/lib/active_support/benchmarkable_rb.html","","",3],["buffered_logger.rb","files/activesupport-3_1_3/lib/active_support/buffered_logger_rb.html","files/activesupport-3_1_3/lib/active_support/buffered_logger_rb.html","","",3],["builder.rb","files/activesupport-3_1_3/lib/active_support/builder_rb.html","files/activesupport-3_1_3/lib/active_support/builder_rb.html","","",3],["cache.rb","files/activesupport-3_1_3/lib/active_support/cache_rb.html","files/activesupport-3_1_3/lib/active_support/cache_rb.html","","",3],["compressed_mem_cache_store.rb","files/activesupport-3_1_3/lib/active_support/cache/compressed_mem_cache_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/compressed_mem_cache_store_rb.html","","",3],["file_store.rb","files/activesupport-3_1_3/lib/active_support/cache/file_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/file_store_rb.html","","",3],["mem_cache_store.rb","files/activesupport-3_1_3/lib/active_support/cache/mem_cache_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/mem_cache_store_rb.html","","",3],["memory_store.rb","files/activesupport-3_1_3/lib/active_support/cache/memory_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/memory_store_rb.html","","",3],["local_cache.rb","files/activesupport-3_1_3/lib/active_support/cache/strategy/local_cache_rb.html","files/activesupport-3_1_3/lib/active_support/cache/strategy/local_cache_rb.html","","",3],["synchronized_memory_store.rb","files/activesupport-3_1_3/lib/active_support/cache/synchronized_memory_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/synchronized_memory_store_rb.html","","",3],["callbacks.rb","files/activesupport-3_1_3/lib/active_support/callbacks_rb.html","files/activesupport-3_1_3/lib/active_support/callbacks_rb.html","","",3],["concern.rb","files/activesupport-3_1_3/lib/active_support/concern_rb.html","files/activesupport-3_1_3/lib/active_support/concern_rb.html","","",3],["configurable.rb","files/activesupport-3_1_3/lib/active_support/configurable_rb.html","files/activesupport-3_1_3/lib/active_support/configurable_rb.html","","",3],["core_ext.rb","files/activesupport-3_1_3/lib/active_support/core_ext_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext_rb.html","","",3],["array.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array_rb.html","","",3],["access.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/access_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/conversions_rb.html","","",3],["extract_options.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/extract_options_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/extract_options_rb.html","","",3],["grouping.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/grouping_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/grouping_rb.html","","",3],["random_access.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/random_access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/random_access_rb.html","","",3],["uniq_by.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/uniq_by_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/uniq_by_rb.html","","",3],["wrap.rb","files/activesupport-3_1_3/lib/active_support/core_ext/array/wrap_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/wrap_rb.html","","",3],["benchmark.rb","files/activesupport-3_1_3/lib/active_support/core_ext/benchmark_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/benchmark_rb.html","","",3],["big_decimal.rb","files/activesupport-3_1_3/lib/active_support/core_ext/big_decimal_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/big_decimal_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/big_decimal/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/big_decimal/conversions_rb.html","","",3],["class.rb","files/activesupport-3_1_3/lib/active_support/core_ext/class_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class_rb.html","","",3],["attribute.rb","files/activesupport-3_1_3/lib/active_support/core_ext/class/attribute_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/attribute_rb.html","","",3],["attribute_accessors.rb","files/activesupport-3_1_3/lib/active_support/core_ext/class/attribute_accessors_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/attribute_accessors_rb.html","","",3],["delegating_attributes.rb","files/activesupport-3_1_3/lib/active_support/core_ext/class/delegating_attributes_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/delegating_attributes_rb.html","","",3],["inheritable_attributes.rb","files/activesupport-3_1_3/lib/active_support/core_ext/class/inheritable_attributes_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/inheritable_attributes_rb.html","","",3],["subclasses.rb","files/activesupport-3_1_3/lib/active_support/core_ext/class/subclasses_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/subclasses_rb.html","","",3],["acts_like.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/acts_like_rb.html","","",3],["calculations.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date/calculations_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/calculations_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/conversions_rb.html","","",3],["freeze.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date/freeze_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/freeze_rb.html","","Date memoizes some instance methods using metaprogramming to wrap the methods with one that caches the",3],["zones.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date/zones_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/zones_rb.html","","",3],["acts_like.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/acts_like_rb.html","","",3],["calculations.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/calculations_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/calculations_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/conversions_rb.html","","",3],["zones.rb","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/zones_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/zones_rb.html","","",3],["enumerable.rb","files/activesupport-3_1_3/lib/active_support/core_ext/enumerable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/enumerable_rb.html","","",3],["exception.rb","files/activesupport-3_1_3/lib/active_support/core_ext/exception_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/exception_rb.html","","",3],["file.rb","files/activesupport-3_1_3/lib/active_support/core_ext/file_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/file_rb.html","","",3],["atomic.rb","files/activesupport-3_1_3/lib/active_support/core_ext/file/atomic_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/file/atomic_rb.html","","",3],["path.rb","files/activesupport-3_1_3/lib/active_support/core_ext/file/path_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/file/path_rb.html","","",3],["float.rb","files/activesupport-3_1_3/lib/active_support/core_ext/float_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/float_rb.html","","",3],["rounding.rb","files/activesupport-3_1_3/lib/active_support/core_ext/float/rounding_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/float/rounding_rb.html","","",3],["hash.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/conversions_rb.html","","",3],["deep_dup.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/deep_dup_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/deep_dup_rb.html","","",3],["deep_merge.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/deep_merge_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/deep_merge_rb.html","","",3],["diff.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/diff_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/diff_rb.html","","",3],["except.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/except_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/except_rb.html","","",3],["indifferent_access.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/indifferent_access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/indifferent_access_rb.html","","",3],["keys.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/keys_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/keys_rb.html","","",3],["reverse_merge.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/reverse_merge_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/reverse_merge_rb.html","","",3],["slice.rb","files/activesupport-3_1_3/lib/active_support/core_ext/hash/slice_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/slice_rb.html","","",3],["integer.rb","files/activesupport-3_1_3/lib/active_support/core_ext/integer_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer_rb.html","","",3],["inflections.rb","files/activesupport-3_1_3/lib/active_support/core_ext/integer/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer/inflections_rb.html","","",3],["multiple.rb","files/activesupport-3_1_3/lib/active_support/core_ext/integer/multiple_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer/multiple_rb.html","","",3],["time.rb","files/activesupport-3_1_3/lib/active_support/core_ext/integer/time_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer/time_rb.html","","",3],["kernel.rb","files/activesupport-3_1_3/lib/active_support/core_ext/kernel_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel_rb.html","","",3],["agnostics.rb","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/agnostics_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/agnostics_rb.html","","",3],["debugger.rb","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/debugger_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/debugger_rb.html","","",3],["reporting.rb","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/reporting_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/reporting_rb.html","","",3],["requires.rb","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/requires_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/requires_rb.html","","",3],["singleton_class.rb","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/singleton_class_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/singleton_class_rb.html","","",3],["load_error.rb","files/activesupport-3_1_3/lib/active_support/core_ext/load_error_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/load_error_rb.html","","",3],["logger.rb","files/activesupport-3_1_3/lib/active_support/core_ext/logger_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/logger_rb.html","","",3],["module.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module_rb.html","","",3],["aliasing.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/aliasing_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/aliasing_rb.html","","",3],["anonymous.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/anonymous_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/anonymous_rb.html","","",3],["attr_accessor_with_default.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/attr_accessor_with_default_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/attr_accessor_with_default_rb.html","","",3],["attr_internal.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/attr_internal_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/attr_internal_rb.html","","",3],["attribute_accessors.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/attribute_accessors_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/attribute_accessors_rb.html","","",3],["delegation.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/delegation_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/delegation_rb.html","","",3],["deprecation.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/deprecation_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/deprecation_rb.html","","",3],["introspection.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/introspection_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/introspection_rb.html","","",3],["method_names.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/method_names_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/method_names_rb.html","","",3],["reachable.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/reachable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/reachable_rb.html","","",3],["remove_method.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/remove_method_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/remove_method_rb.html","","",3],["synchronization.rb","files/activesupport-3_1_3/lib/active_support/core_ext/module/synchronization_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/synchronization_rb.html","","",3],["name_error.rb","files/activesupport-3_1_3/lib/active_support/core_ext/name_error_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/name_error_rb.html","","",3],["numeric.rb","files/activesupport-3_1_3/lib/active_support/core_ext/numeric_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/numeric_rb.html","","",3],["bytes.rb","files/activesupport-3_1_3/lib/active_support/core_ext/numeric/bytes_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/numeric/bytes_rb.html","","",3],["time.rb","files/activesupport-3_1_3/lib/active_support/core_ext/numeric/time_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/numeric/time_rb.html","","",3],["object.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object_rb.html","","",3],["acts_like.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/acts_like_rb.html","","",3],["blank.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/blank_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/blank_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/conversions_rb.html","","",3],["duplicable.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/duplicable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/duplicable_rb.html",""," ",3],["inclusion.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/inclusion_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/inclusion_rb.html","","",3],["instance_variables.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/instance_variables_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/instance_variables_rb.html","","",3],["to_json.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_json_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_json_rb.html","","Hack to load json gem first so we can overwrite its to_json. ",3],["to_param.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_param_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_param_rb.html","","",3],["to_query.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_query_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_query_rb.html","","",3],["try.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/try_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/try_rb.html","","",3],["with_options.rb","files/activesupport-3_1_3/lib/active_support/core_ext/object/with_options_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/with_options_rb.html","","",3],["proc.rb","files/activesupport-3_1_3/lib/active_support/core_ext/proc_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/proc_rb.html","","",3],["process.rb","files/activesupport-3_1_3/lib/active_support/core_ext/process_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/process_rb.html","","",3],["daemon.rb","files/activesupport-3_1_3/lib/active_support/core_ext/process/daemon_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/process/daemon_rb.html","","",3],["range.rb","files/activesupport-3_1_3/lib/active_support/core_ext/range_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range_rb.html","","",3],["blockless_step.rb","files/activesupport-3_1_3/lib/active_support/core_ext/range/blockless_step_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/blockless_step_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/range/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/conversions_rb.html","","",3],["cover.rb","files/activesupport-3_1_3/lib/active_support/core_ext/range/cover_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/cover_rb.html","","",3],["include_range.rb","files/activesupport-3_1_3/lib/active_support/core_ext/range/include_range_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/include_range_rb.html","","",3],["overlaps.rb","files/activesupport-3_1_3/lib/active_support/core_ext/range/overlaps_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/overlaps_rb.html","","",3],["regexp.rb","files/activesupport-3_1_3/lib/active_support/core_ext/regexp_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/regexp_rb.html","","",3],["rexml.rb","files/activesupport-3_1_3/lib/active_support/core_ext/rexml_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/rexml_rb.html","","",3],["string.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string_rb.html","","",3],["access.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/access_rb.html","","",3],["behavior.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/behavior_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/behavior_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/conversions_rb.html","","encoding: utf-8 ",3],["encoding.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/encoding_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/encoding_rb.html","","",3],["exclude.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/exclude_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/exclude_rb.html","","",3],["filters.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/filters_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/filters_rb.html","","",3],["inflections.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/inflections_rb.html","","",3],["inquiry.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/inquiry_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/inquiry_rb.html","","",3],["interpolation.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/interpolation_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/interpolation_rb.html","","",3],["multibyte.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/multibyte_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/multibyte_rb.html","","encoding: utf-8 ",3],["output_safety.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/output_safety_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/output_safety_rb.html","","",3],["starts_ends_with.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/starts_ends_with_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/starts_ends_with_rb.html","","",3],["strip.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/strip_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/strip_rb.html","","",3],["xchar.rb","files/activesupport-3_1_3/lib/active_support/core_ext/string/xchar_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/xchar_rb.html","","",3],["acts_like.rb","files/activesupport-3_1_3/lib/active_support/core_ext/time/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/acts_like_rb.html","","",3],["calculations.rb","files/activesupport-3_1_3/lib/active_support/core_ext/time/calculations_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/calculations_rb.html","","",3],["conversions.rb","files/activesupport-3_1_3/lib/active_support/core_ext/time/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/conversions_rb.html","","",3],["marshal.rb","files/activesupport-3_1_3/lib/active_support/core_ext/time/marshal_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/marshal_rb.html","","Pre-1.9 versions of Ruby have a bug with marshaling Time instances, where utc instances are unmarshalled",3],["publicize_conversion_methods.rb","files/activesupport-3_1_3/lib/active_support/core_ext/time/publicize_conversion_methods_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/publicize_conversion_methods_rb.html","","",3],["zones.rb","files/activesupport-3_1_3/lib/active_support/core_ext/time/zones_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/zones_rb.html","","",3],["uri.rb","files/activesupport-3_1_3/lib/active_support/core_ext/uri_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/uri_rb.html","","encoding: utf-8 ",3],["dependencies.rb","files/activesupport-3_1_3/lib/active_support/dependencies_rb.html","files/activesupport-3_1_3/lib/active_support/dependencies_rb.html","","",3],["autoload.rb","files/activesupport-3_1_3/lib/active_support/dependencies/autoload_rb.html","files/activesupport-3_1_3/lib/active_support/dependencies/autoload_rb.html","","",3],["deprecation.rb","files/activesupport-3_1_3/lib/active_support/deprecation_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation_rb.html","","",3],["behaviors.rb","files/activesupport-3_1_3/lib/active_support/deprecation/behaviors_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/behaviors_rb.html","","",3],["method_wrappers.rb","files/activesupport-3_1_3/lib/active_support/deprecation/method_wrappers_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/method_wrappers_rb.html","","",3],["proxy_wrappers.rb","files/activesupport-3_1_3/lib/active_support/deprecation/proxy_wrappers_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/proxy_wrappers_rb.html","","",3],["reporting.rb","files/activesupport-3_1_3/lib/active_support/deprecation/reporting_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/reporting_rb.html","","",3],["descendants_tracker.rb","files/activesupport-3_1_3/lib/active_support/descendants_tracker_rb.html","files/activesupport-3_1_3/lib/active_support/descendants_tracker_rb.html","","",3],["duration.rb","files/activesupport-3_1_3/lib/active_support/duration_rb.html","files/activesupport-3_1_3/lib/active_support/duration_rb.html","","",3],["file_update_checker.rb","files/activesupport-3_1_3/lib/active_support/file_update_checker_rb.html","files/activesupport-3_1_3/lib/active_support/file_update_checker_rb.html","","",3],["file_watcher.rb","files/activesupport-3_1_3/lib/active_support/file_watcher_rb.html","files/activesupport-3_1_3/lib/active_support/file_watcher_rb.html","","",3],["gzip.rb","files/activesupport-3_1_3/lib/active_support/gzip_rb.html","files/activesupport-3_1_3/lib/active_support/gzip_rb.html","","",3],["hash_with_indifferent_access.rb","files/activesupport-3_1_3/lib/active_support/hash_with_indifferent_access_rb.html","files/activesupport-3_1_3/lib/active_support/hash_with_indifferent_access_rb.html","","",3],["i18n.rb","files/activesupport-3_1_3/lib/active_support/i18n_rb.html","files/activesupport-3_1_3/lib/active_support/i18n_rb.html","","",3],["i18n_railtie.rb","files/activesupport-3_1_3/lib/active_support/i18n_railtie_rb.html","files/activesupport-3_1_3/lib/active_support/i18n_railtie_rb.html","","",3],["inflections.rb","files/activesupport-3_1_3/lib/active_support/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/inflections_rb.html","","",3],["inflector.rb","files/activesupport-3_1_3/lib/active_support/inflector_rb.html","files/activesupport-3_1_3/lib/active_support/inflector_rb.html","","in case active_support/inflector is required without the rest of active_support ",3],["inflections.rb","files/activesupport-3_1_3/lib/active_support/inflector/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/inflector/inflections_rb.html","","",3],["methods.rb","files/activesupport-3_1_3/lib/active_support/inflector/methods_rb.html","files/activesupport-3_1_3/lib/active_support/inflector/methods_rb.html","","",3],["transliterate.rb","files/activesupport-3_1_3/lib/active_support/inflector/transliterate_rb.html","files/activesupport-3_1_3/lib/active_support/inflector/transliterate_rb.html","","encoding: utf-8 ",3],["json.rb","files/activesupport-3_1_3/lib/active_support/json_rb.html","files/activesupport-3_1_3/lib/active_support/json_rb.html","","",3],["decoding.rb","files/activesupport-3_1_3/lib/active_support/json/decoding_rb.html","files/activesupport-3_1_3/lib/active_support/json/decoding_rb.html","","",3],["encoding.rb","files/activesupport-3_1_3/lib/active_support/json/encoding_rb.html","files/activesupport-3_1_3/lib/active_support/json/encoding_rb.html","","",3],["variable.rb","files/activesupport-3_1_3/lib/active_support/json/variable_rb.html","files/activesupport-3_1_3/lib/active_support/json/variable_rb.html","","",3],["lazy_load_hooks.rb","files/activesupport-3_1_3/lib/active_support/lazy_load_hooks_rb.html","files/activesupport-3_1_3/lib/active_support/lazy_load_hooks_rb.html","","lazy_load_hooks allows rails to lazily load a lot of components and thus making the app boot faster.",3],["log_subscriber.rb","files/activesupport-3_1_3/lib/active_support/log_subscriber_rb.html","files/activesupport-3_1_3/lib/active_support/log_subscriber_rb.html","","",3],["test_helper.rb","files/activesupport-3_1_3/lib/active_support/log_subscriber/test_helper_rb.html","files/activesupport-3_1_3/lib/active_support/log_subscriber/test_helper_rb.html","","",3],["memoizable.rb","files/activesupport-3_1_3/lib/active_support/memoizable_rb.html","files/activesupport-3_1_3/lib/active_support/memoizable_rb.html","","",3],["message_encryptor.rb","files/activesupport-3_1_3/lib/active_support/message_encryptor_rb.html","files/activesupport-3_1_3/lib/active_support/message_encryptor_rb.html","","",3],["message_verifier.rb","files/activesupport-3_1_3/lib/active_support/message_verifier_rb.html","files/activesupport-3_1_3/lib/active_support/message_verifier_rb.html","","",3],["multibyte.rb","files/activesupport-3_1_3/lib/active_support/multibyte_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte_rb.html","","encoding: utf-8 ",3],["chars.rb","files/activesupport-3_1_3/lib/active_support/multibyte/chars_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/chars_rb.html","","encoding: utf-8 ",3],["exceptions.rb","files/activesupport-3_1_3/lib/active_support/multibyte/exceptions_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/exceptions_rb.html","","encoding: utf-8 ",3],["unicode.rb","files/activesupport-3_1_3/lib/active_support/multibyte/unicode_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/unicode_rb.html","","encoding: utf-8 ",3],["utils.rb","files/activesupport-3_1_3/lib/active_support/multibyte/utils_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/utils_rb.html","","encoding: utf-8 ",3],["notifications.rb","files/activesupport-3_1_3/lib/active_support/notifications_rb.html","files/activesupport-3_1_3/lib/active_support/notifications_rb.html","","",3],["fanout.rb","files/activesupport-3_1_3/lib/active_support/notifications/fanout_rb.html","files/activesupport-3_1_3/lib/active_support/notifications/fanout_rb.html","","",3],["instrumenter.rb","files/activesupport-3_1_3/lib/active_support/notifications/instrumenter_rb.html","files/activesupport-3_1_3/lib/active_support/notifications/instrumenter_rb.html","","",3],["option_merger.rb","files/activesupport-3_1_3/lib/active_support/option_merger_rb.html","files/activesupport-3_1_3/lib/active_support/option_merger_rb.html","","",3],["ordered_hash.rb","files/activesupport-3_1_3/lib/active_support/ordered_hash_rb.html","files/activesupport-3_1_3/lib/active_support/ordered_hash_rb.html","","",3],["ordered_options.rb","files/activesupport-3_1_3/lib/active_support/ordered_options_rb.html","files/activesupport-3_1_3/lib/active_support/ordered_options_rb.html","","",3],["railtie.rb","files/activesupport-3_1_3/lib/active_support/railtie_rb.html","files/activesupport-3_1_3/lib/active_support/railtie_rb.html","","",3],["rescuable.rb","files/activesupport-3_1_3/lib/active_support/rescuable_rb.html","files/activesupport-3_1_3/lib/active_support/rescuable_rb.html","","",3],["shim.rb","files/activesupport-3_1_3/lib/active_support/ruby/shim_rb.html","files/activesupport-3_1_3/lib/active_support/ruby/shim_rb.html","","Backported Ruby builtins so you can code with the latest & greatest but still run on any Ruby 1.8.x.",3],["secure_random.rb","files/activesupport-3_1_3/lib/active_support/secure_random_rb.html","files/activesupport-3_1_3/lib/active_support/secure_random_rb.html","","",3],["string_inquirer.rb","files/activesupport-3_1_3/lib/active_support/string_inquirer_rb.html","files/activesupport-3_1_3/lib/active_support/string_inquirer_rb.html","","",3],["test_case.rb","files/activesupport-3_1_3/lib/active_support/test_case_rb.html","files/activesupport-3_1_3/lib/active_support/test_case_rb.html","","",3],["assertions.rb","files/activesupport-3_1_3/lib/active_support/testing/assertions_rb.html","files/activesupport-3_1_3/lib/active_support/testing/assertions_rb.html","","",3],["declarative.rb","files/activesupport-3_1_3/lib/active_support/testing/declarative_rb.html","files/activesupport-3_1_3/lib/active_support/testing/declarative_rb.html","","",3],["deprecation.rb","files/activesupport-3_1_3/lib/active_support/testing/deprecation_rb.html","files/activesupport-3_1_3/lib/active_support/testing/deprecation_rb.html","","",3],["isolation.rb","files/activesupport-3_1_3/lib/active_support/testing/isolation_rb.html","files/activesupport-3_1_3/lib/active_support/testing/isolation_rb.html","","",3],["mochaing.rb","files/activesupport-3_1_3/lib/active_support/testing/mochaing_rb.html","files/activesupport-3_1_3/lib/active_support/testing/mochaing_rb.html","","",3],["pending.rb","files/activesupport-3_1_3/lib/active_support/testing/pending_rb.html","files/activesupport-3_1_3/lib/active_support/testing/pending_rb.html","","Some code from jeremymcanally's \"pending\" https://github.com/jeremymcanally/pending/tree/master ",3],["performance.rb","files/activesupport-3_1_3/lib/active_support/testing/performance_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance_rb.html","","",3],["jruby.rb","files/activesupport-3_1_3/lib/active_support/testing/performance/jruby_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/jruby_rb.html","","",3],["rubinius.rb","files/activesupport-3_1_3/lib/active_support/testing/performance/rubinius_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/rubinius_rb.html","","",3],["ruby.rb","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby_rb.html","","",3],["mri.rb","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby/mri_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby/mri_rb.html","","",3],["yarv.rb","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby/yarv_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby/yarv_rb.html","","",3],["setup_and_teardown.rb","files/activesupport-3_1_3/lib/active_support/testing/setup_and_teardown_rb.html","files/activesupport-3_1_3/lib/active_support/testing/setup_and_teardown_rb.html","","",3],["time.rb","files/activesupport-3_1_3/lib/active_support/time_rb.html","files/activesupport-3_1_3/lib/active_support/time_rb.html","","",3],["autoload.rb","files/activesupport-3_1_3/lib/active_support/time/autoload_rb.html","files/activesupport-3_1_3/lib/active_support/time/autoload_rb.html","","",3],["time_with_zone.rb","files/activesupport-3_1_3/lib/active_support/time_with_zone_rb.html","files/activesupport-3_1_3/lib/active_support/time_with_zone_rb.html","","",3],["time_zone.rb","files/activesupport-3_1_3/lib/active_support/values/time_zone_rb.html","files/activesupport-3_1_3/lib/active_support/values/time_zone_rb.html","","",3],["version.rb","files/activesupport-3_1_3/lib/active_support/version_rb.html","files/activesupport-3_1_3/lib/active_support/version_rb.html","","",3],["whiny_nil.rb","files/activesupport-3_1_3/lib/active_support/whiny_nil_rb.html","files/activesupport-3_1_3/lib/active_support/whiny_nil_rb.html","","Extensions to +nil+ which allow for more helpful error messages for people who are new to Rails. Ruby",3],["xml_mini.rb","files/activesupport-3_1_3/lib/active_support/xml_mini_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini_rb.html","","",3],["jdom.rb","files/activesupport-3_1_3/lib/active_support/xml_mini/jdom_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/jdom_rb.html","","",3],["libxml.rb","files/activesupport-3_1_3/lib/active_support/xml_mini/libxml_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/libxml_rb.html","","",3],["libxmlsax.rb","files/activesupport-3_1_3/lib/active_support/xml_mini/libxmlsax_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/libxmlsax_rb.html","","",3],["nokogiri.rb","files/activesupport-3_1_3/lib/active_support/xml_mini/nokogiri_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/nokogiri_rb.html","","",3],["nokogirisax.rb","files/activesupport-3_1_3/lib/active_support/xml_mini/nokogirisax_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/nokogirisax_rb.html","","",3],["rexml.rb","files/activesupport-3_1_3/lib/active_support/xml_mini/rexml_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/rexml_rb.html","","",3],["CHANGELOG.md","files/railties-3_1_3/CHANGELOG_md.html","files/railties-3_1_3/CHANGELOG_md.html","","## Rails 3.1.3 (unreleased) ##  *   New apps should be generated with a sass-rails dependency of 3.1.5,",3],["README.rdoc","files/railties-3_1_3/README_rdoc.html","files/railties-3_1_3/README_rdoc.html","","= Railties -- Gluing the Engine to the Rails  Railties is responsible for gluing all frameworks together.",3],["rails.rb","files/railties-3_1_3/lib/rails_rb.html","files/railties-3_1_3/lib/rails_rb.html","","",3]],"searchIndex":["base","caching","actions","actioncachepath","classmethods","configmethods","fragments","pages","classmethods","sweeping","compatibility","conditionalget","cookies","datastreaming","flash","forcessl","classmethods","head","helpers","classmethods","hideactions","classmethods","httpauthentication","basic","controllermethods","classmethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","logsubscriber","metal","middleware","actionmiddleware","mimeresponds","classmethods","paramswrapper","classmethods","rackdelegation","railtie","railties","paths","recordidentifier","redirecting","renderers","all","classmethods","rendering","requestforgeryprotection","classmethods","rescue","responder","classmethods","streaming","classmethods","templateassertions","testcase","behavior","classmethods","raiseactionexceptions","testresponse","testing","classmethods","urlfor","base","base","context","filesystemresolver","fixtureresolver","activemodelhelper","activemodelinstancetag","assettaghelper","assetincludetag","javascriptincludetag","javascripttaghelpers","classmethods","stylesheetincludetag","stylesheettaghelpers","classmethods","atomfeedhelper","atombuilder","atomfeedbuilder","cachehelper","capturehelper","csrfhelper","datehelper","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","javascripthelper","numberhelper","invalidnumbererror","outputsafetyhelper","recordtaghelper","renderinghelper","sanitizehelper","taghelper","texthelper","translationhelper","urlhelper","logsubscriber","details","viewpaths","nullresolver","railtie","renderer","resolver","path","template","handler","builder","compilable","classmethods","erb","erubis","testcase","behavior","classmethods","locals","testcontroller","attributemethods","classmethods","attributemethodmatcher","blockvalidator","callbacks","conversion","dirty","eachvalidator","errors","lint","tests","massassignmentsecurity","blacklist","classmethods","permissionset","sanitizer","whitelist","missingattributeerror","name","naming","observer","observerarray","observing","classmethods","securepassword","classmethods","instancemethodsonactivation","serialization","serializers","json","xml","translation","validations","acceptancevalidator","callbacks","classmethods","classmethods","confirmationvalidator","exclusionvalidator","formatvalidator","helpermethods","inclusionvalidator","lengthvalidator","numericalityvalidator","presencevalidator","withvalidator","validator","activerecorderror","adapternotfound","adapternotspecified","classmethods","associationtypemismatch","classmethods","attributeassignmenterror","beforetypecast","classmethods","dirty","primarykey","classmethods","query","read","classmethods","timezoneconversion","classmethods","write","classmethods","autosaveassociation","classmethods","base","batches","calculations","callbacks","configurationerror","mysqladapter","statementpool","postgresqladapter","statementpool","tabledefinition","postgresqlcolumn","sqliteadapter","statementpool","version","statementpool","connectionnotestablished","countercache","dangerousattributeerror","dynamicfindermatch","dynamicscopematch","findermethods","fixtures","hasmanythroughnestedassociationsarereadonly","identitymap","middleware","invalidforeignkey","irreversiblemigration","locking","optimistic","classmethods","pessimistic","logsubscriber","migration","commandrecorder","migrationproxy","multiparameterassignmenterrors","mysql2adapter","namedscope","classmethods","classmethods","toomanyrecords","observer","persistence","preparedstatementinvalid","querycache","classmethods","querymethods","railtie","railties","classmethods","readonlyrecord","recordinvalid","recordnotfound","recordnotsaved","recordnotunique","classmethods","macroreflection","relation","result","rollback","schema","serialization","serializationtypemismatch","sessionstore","session","sqlbypass","spawnmethods","staleobjecterror","statementinvalid","testfixtures","classmethods","throwresult","timestamp","transactions","classmethods","unknownattributeerror","unknownprimarykey","validations","associatedvalidator","classmethods","uniquenessvalidator","wrappeddatabaseexception","badrequest","base","clienterror","connection","custommethods","classmethods","instancemethods","errors","forbiddenaccess","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","logsubscriber","missingprefixparam","observing","railtie","request","resourceconflict","resourcegone","resourcenotfound","response","sslerror","servererror","timeouterror","unauthorizedaccess","validations","autoload","backtracecleaner","base64","benchmarkable","bufferedlogger","severity","cache","compressedmemcachestore","entry","filestore","memcachestore","memorystore","store","strategy","localcache","localstore","synchronizedmemorystore","callbacks","classmethods","concern","configurable","classmethods","configuration","classcache","watchstack","deprecation","descendantstracker","duration","fileupdatechecker","filewatcher","backend","gzip","stream","hashwithindifferentaccess","inflector","inflections","inheritableoptions","json","circularreferenceerror","encoder","variable","logsubscriber","testhelper","mocklogger","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","chars","encodingerror","unicode","codepoint","unicodedatabase","notifications","event","fanout","instrumenter","orderedoptions","railtie","rescuable","classmethods","safebuffer","safeconcaterror","stringinquirer","testcase","testing","assertions","declarative","isolation","forking","minitest","subprocess","testunit","pending","performance","benchmarker","forclassictestunit","forminitest","metrics","amount","base","cputime","digitalinformationunit","gcruns","gctime","memory","objects","processtime","time","usertime","walltime","performer","profiler","proxytestresult","remoteerror","setupandteardown","classmethods","forclassictestunit","forminitest","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","arjdbcmysql","error","array","bigdecimal","datetime","erb","util","enumerable","falseclass","file","fixturesfilenotfound","float","fullsanitizer","linksanitizer","sanitizer","selector","whitelistsanitizer","hash","i18n","exceptionhandler","railtie","integer","kernel","loaderror","simpleformatter","module","mysql","result","stmt","time","nameerror","nilclass","object","process","rails","string","struct","symbol","test","unit","collector","objectspace","time","trueclass","uri","+()","+()","+()","+()","+()","-()","-()","-()","<<()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","==()","==()","==()","===()","===()","===()","=~()","=~()","=~()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","__replay__()","_assigns()","_compile_filter()","_compile_options()","_compute_redirect_to_location()","_dasherize()","_dump()","_dump()","_dump_without_utc_flag()","_dump_without_zone()","_extract_redirect_to_status()","_get()","_handle_method_missing()","_handle_render_options()","_layout_for()","_layout_for()","_load()","_load()","_load_without_utc_flag()","_load_without_zone()","_merge_attributes()","_normalize_legacy_filter()","_normalize_options()","_original_to_s()","_parse_file()","_prepare_context()","_read_attribute()","_routes()","_routes_context()","_run_class_setup()","_save_fragment()","_set_detail()","_set_wrapper_defaults()","_singularize()","_user_defined_ivars()","_validates_default_keys()","_view()","_wrap_parameters()","_wrapper_enabled?()","_wrapper_formats()","_wrapper_key()","abstract_class?()","accepts_nested_attributes_for()","accessible_attributes()","accessible_attributes_configs()","action()","action_methods()","active?()","active?()","active?()","active_authorizer()","active_authorizers()","acts_like?()","acts_like_date?()","acts_like_string?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter_name()","adapter_name()","add()","add()","add()","add()","add_application_js()","add_autosave_association_callbacks()","add_column()","add_column()","add_column()","add_column_position!()","add_column_position!()","add_column_sql()","add_error()","add_expr_escaped()","add_expr_literal()","add_filter()","add_index_sql()","add_limit_offset!()","add_method_to_attributes!()","add_observer()","add_observer!()","add_on_blank()","add_on_empty()","add_postamble()","add_preamble()","add_silencer()","add_text()","add_timestamps_sql()","add_to_transaction()","add_whiner()","advance()","advance()","advance()","after_commit()","after_rollback()","after_validation()","aggregate_column()","aggregate_mapping()","ago()","ago()","ago()","ago()","alias_attribute()","alias_attribute()","alias_method_chain()","all()","all()","all()","all_application_helpers()","all_attributes_exists?()","all_helpers_from_path()","all_timestamp_attributes_in_model()","announce()","anonymous?()","any?()","api_behavior()","api_location()","append_features()","application()","application=()","apply_finder_options()","apply_join_dependency()","apply_modules()","apply_ssl_options()","arel()","arel_attributes_values()","arel_engine()","arel_table()","array_of_strings?()","array_or_string_for_javascript()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","assert_blank()","assert_boolean()","assert_difference()","assert_no_difference()","assert_present()","assert_template()","assert_valid_keys()","asset_file_path!()","asset_name()","asset_name()","asset_name()","asset_paths()","asset_tag()","asset_tag()","asset_tag()","assign_attributes()","assign_multiparameter_attributes()","assign_shortcuts()","associated_records_to_validate_or_save()","association_valid?()","at()","at()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_year()","at_end_of_month()","at_end_of_quarter()","at_end_of_week()","at_end_of_year()","at_midnight()","at_midnight()","atom_feed()","atomic_write()","attach_to()","attachments()","attr_accessible()","attr_accessor_with_default()","attr_internal()","attr_internal_accessor()","attr_internal_define()","attr_internal_ivar_name()","attr_internal_reader()","attr_internal_writer()","attr_protected()","attr_readonly()","attribute()","attribute=()","attribute?()","attribute_before_type_cast()","attribute_change()","attribute_changed?()","attribute_for_inspect()","attribute_match()","attribute_method?()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_methods_generated?()","attribute_names()","attribute_names()","attribute_present?()","attribute_was()","attribute_will_change!()","attributes()","attributes=()","attributes_before_type_cast()","attributes_from_column_definition()","attributes_from_column_definition()","attributes_protected_by_default()","attributes_protected_by_default()","attributes_protected_by_default()","audio_path()","audio_tag()","auth_attributes_for()","auth_type()","auth_type=()","auth_type=()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","authorization_header()","auto_discovery_link_tag()","auto_flush()","auto_flushing=()","autoload()","autoload_at()","autoload_under()","autoloads()","average()","backend=()","backtrace_cleaner()","bang?()","base_class()","basename()","batch_order()","becomes()","before_filters()","before_save_collection_association()","before_validation()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_month()","beginning_of_quarter()","beginning_of_week()","beginning_of_year()","behavior()","behavior=()","belongs_to()","benchmark()","benchmark()","between?()","bind()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","breakpoint()","buffer()","build()","build()","build()","build()","build_arel()","build_count_subquery()","build_joins()","build_mem_cache()","build_path()","build_request_headers()","build_request_uri()","build_select()","build_where()","button_tag()","button_to()","button_to_function()","bypass_local_cache()","cache()","cache()","cache()","cache()","cache()","cache()","cache()","cache_attribute?()","cache_attributes()","cache_configured?()","cache_fixtures()","cache_for_connection()","cache_key()","cache_page()","cache_page()","cache_store()","cache_store=()","cache_template_loading()","cache_template_loading=()","cacheable_column?()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","caching_allowed?()","calculate()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","camelcase()","camelize()","camelize()","capitalize()","capture()","capture()","case_sensitive_equality_operator()","case_sensitive_equality_operator()","case_sensitive_modifier()","case_sensitive_modifier()","cdata_block()","cdata_section()","center()","change()","change()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_column_null()","change_column_sql()","changed()","changed?()","changed_attributes()","changed_for_autosave?()","changes()","characters()","charset()","charset()","check_box()","check_box()","check_box_tag()","check_for_circular_references()","check_options_validity()","check_prefix_options()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","civil_from_format()","class_eval()","class_name()","class_of_active_record_descendant()","classify()","classify()","clean()","cleanup()","cleanup()","cleanup()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear_buffer()","clear_cache()","clear_cache!()","clear_cache!()","clear_cache!()","clear_respond_to()","clear_timestamp_attributes()","clear_transaction_record_state()","client_encoding()","client_min_messages()","client_min_messages=()","client_nonce()","clone()","clone_attribute_value()","clone_attributes()","clone_with_time_zone_conversion_attribute?()","close()","close()","collapse_wheres()","collation()","collation()","collect_asset_files()","collection_name()","collection_path()","collection_path()","collection_select()","collection_select()","color()","column_alias_for()","column_defaults()","column_for()","column_for()","column_for()","column_for_attribute()","column_names()","column_names()","columns()","columns()","columns()","columns_hash()","comma_pair_list()","commit_db_transaction()","commit_db_transaction()","comparable_time()","compare_with_coercion()","compare_without_coercion()","compile()","compile_methods!()","compile_methods!()","compose()","compose_codepoints()","composed_of()","compress()","compressed?()","compute_paths()","compute_table_name()","compute_type()","concat()","concat()","config()","config()","config()","config_accessor()","configuration()","configurations()","configure()","configure_connection()","configure_connection()","configure_connection()","configure_http()","connect()","connect()","connect()","connection()","connection()","connection()","connection()","connection_active?()","connection_pool()","constantize()","constantize()","construct_finder_arel()","construct_join_dependency_for_association_find()","construct_limited_ids_condition()","construct_relation_for_association_calculations()","construct_relation_for_association_find()","consumes?()","contains_bad_protocols?()","content_columns()","content_for()","content_for?()","content_tag()","content_tag_for()","content_tag_string()","content_type()","content_type=()","controller_class()","controller_class=()","controller_name()","controller_name()","controller_path()","controller_path=()","convert_boolean_attributes!()","convert_dates_from()","convert_key()","convert_number_column_value()","convert_options_to_data_attributes()","convert_to_model()","convert_to_model()","convert_to_model()","convert_value()","cookies()","copy()","count()","count()","count_by_sql()","count_observers()","create()","create()","create()","create()","create()","create()","create()","create()","create!()","create!()","create_database()","create_database()","create_database()","create_fixtures()","create_or_update()","create_path_and_open_file()","create_proxy_uri_from()","create_reflection()","create_resource_for()","create_savepoint()","create_savepoint()","create_savepoint()","create_savepoint()","create_site_uri_from()","create_table()","create_time_zone_conversion_attribute?()","create_with()","creator?()","csrf_meta_tag()","csrf_meta_tags()","csv_file_path()","current()","current()","current_cycle()","current_database()","current_database()","current_database()","current_hash()","current_hash()","current_page?()","custom_dir()","custom_dir()","custom_dir()","custom_join_ast()","custom_method_collection_url()","custom_method_element_url()","custom_method_new_element_url()","cycle()","daemon()","dasherize()","dasherize()","data()","data()","data_column()","data_column_name()","data_column_size_limit()","database()","date_select()","date_select()","datetime_select()","datetime_select()","days_in_month()","dealloc()","dealloc()","debug()","debug_protected_attribute_removal()","debugger()","decode()","decode()","decode()","decode64()","decode_credentials()","decode_credentials()","decode_credentials_header()","decompose()","decompose_codepoints()","decompress()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrypt()","decrypt_and_verify()","deep_dup()","deep_merge()","deep_merge!()","default()","default()","default_action()","default_header()","default_inspect()","default_primary_key_type()","default_render()","default_render()","default_scope()","default_timezone()","define()","define_attr_method()","define_attribute_method()","define_attribute_methods()","define_attribute_methods()","define_callbacks()","define_callbacks()","define_method_attribute()","define_method_attribute()","define_method_attribute=()","define_method_attribute=()","define_model_callbacks()","define_non_cyclic_method()","define_read_method()","define_read_method_for_serialized_attribute()","defined_activerecord_methods()","delegate()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete_all()","delete_empty_directories()","delete_entry()","delete_entry()","delete_matched()","delete_matched()","delete_matched()","delete_responses_to_replace()","demodulize()","demodulize()","deny?()","deny?()","deprecate()","deprecated_method_warning()","deprecation_caller_message()","deprecation_message()","derive_class_name()","descendants()","descendants()","descends_from_active_record?()","describe()","deserialize_entry()","destroy()","destroy()","destroy()","destroy()","destroy_all()","destroy_associations()","destroy_session()","destroyed?()","determine_default_controller_class()","determine_default_helper_class()","determine_source()","diff()","digest_auth_header()","direct_descendants()","direct_descendants()","dirname()","dirty?()","disable()","disable_cache()","disabled_for?()","disabled_for?()","disabled_observer_stack()","disabled_observers()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","dispatch()","display()","display_errors()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","div_for()","dom_class()","dom_id()","down()","downcase()","drop_table()","drop_table()","dst?()","dup()","dup()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duration_of_variable_length?()","each()","each()","each()","each()","each()","each()","each()","each_subclass_array()","each_with_object()","eager_autoload()","eager_autoload!()","eager_load()","eager_loading?()","element_name()","element_path()","element_path()","email_field()","email_field_tag()","emitted_hidden_id?()","empty?()","empty?()","empty?()","empty_insert_statement_value()","empty_json_resource()","empty_resource()","emulate_booleans()","enable()","enable_warnings()","enabled()","enabled=()","encode()","encode()","encode()","encode()","encode()","encode64()","encode64s()","encode_credentials()","encode_credentials()","encode_credentials()","encode_json()","encode_json()","encode_json()","encode_with()","encode_with()","encode_with()","encode_with()","encoding()","encoding_aware?()","encoding_aware?()","encrypt()","encrypt_and_sign()","end_document()","end_element()","end_of_day()","end_of_day()","end_of_month()","end_of_quarter()","end_of_week()","end_of_year()","end_transaction()","engine()","engine=()","ensure_cache_path()","ensure_proper_type()","ensure_sources!()","entry()","env()","env()","env=()","environment()","eql?()","eql?()","eql?()","eql?()","erb_render()","error()","error_message()","error_wrapping()","errors()","errors()","escape()","escape_bytea()","escape_javascript()","escape_key()","escape_once()","evaluate_default_scope()","except()","except()","except!()","excerpt()","exclude?()","exclude?()","exec_cache()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_insert()","exec_no_cache()","exec_query()","exec_query()","exec_query()","exec_query()","exec_stmt()","exec_update()","exec_update()","exec_update()","exec_update()","execute()","execute()","execute_callstack_for_multiparameter_attributes()","execute_if_updated()","exist?()","exists?()","exists?()","exists?()","exists?()","expand_attribute_names_for_aggregates()","expand_cache_key()","expand_hash_conditions_for_aggregates()","expand_sources()","expand_sources()","expected_response()","expire_action()","expire_fragment()","expire_page()","expire_page()","expired?()","expires_at()","expires_at=()","expires_in()","expires_now()","extended()","extended()","extended()","extending()","extension()","extension()","extension()","extension()","extension()","extra_tags_for_form()","extract!()","extract_callstack()","extract_callstack_for_multiparameter_attributes()","extract_limit()","extract_max_param_for_multiparameter_attributes()","extract_options!()","extract_params_from_response()","extract_pg_identifier_from_name()","extract_precision()","extract_scale()","extract_schema_and_table()","extract_selected_and_disabled()","extract_value_from_default()","extract_values_from_collection()","extractable_options?()","extractable_options?()","favicon_link_tag()","fetch()","fetch()","field_changed?()","field_set_tag()","fields_for()","fields_for()","fields_for_nested_model()","fields_for_with_nested_attributes()","fifth()","file_field()","file_field()","file_field_tag()","file_path_key()","filename()","filter()","filtered_options()","find()","find()","find()","find_all()","find_all()","find_by_attributes()","find_by_session_id()","find_by_session_id()","find_by_session_id()","find_by_session_id()","find_by_sql()","find_each()","find_every()","find_first()","find_in_batches()","find_last()","find_one()","find_one()","find_or_create_resource_for()","find_or_create_resource_for_collection()","find_or_create_resource_in_modules()","find_or_instantiator_by_attributes()","find_parameter_position()","find_session()","find_single()","find_some()","find_sti_class()","find_template()","find_templates()","find_tzinfo()","find_with_associations()","find_with_ids()","find_zone()","find_zone!()","finder?()","first()","first()","first()","first()","first!()","fixture_is_cached?()","fixtures()","flush()","flush()","flush_all!()","flush_cache()","flushable_loggers()","for_class()","for_id()","for_tag()","force_ssl()","foreign_key()","foreign_key()","forking_env?()","form_authenticity_param()","form_authenticity_token()","form_for()","form_tag()","form_tag_html()","form_tag_in_block()","format()","format()","format()","format()","format=()","formats=()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","forty_two()","fourth()","fragment_cache_key()","fragment_exist?()","freeze()","freeze()","freeze_with_memoizable()","fresh_when()","from()","from()","from()","from()","from_array()","from_json()","from_json()","from_now()","from_rails_root()","from_xml()","from_xml()","from_xml()","frozen?()","full_messages()","full_profile_options()","full_test_name()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","generate()","generate_digest()","generate_message()","get()","get()","get()","get()","get()","get()","get()","get_cycle()","get_period_and_ensure_valid_local_time()","get_session()","get_session_model()","getgm()","getlocal()","getutc()","getutc()","gmt?()","gmt_offset()","gmtime()","gmtoff()","group()","group_by()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","groups()","guard_private_attribute_method!()","h()","h()","ha1()","handle_response()","handle_unverified_request()","handler_for_rescue()","handles_encoding?()","has_and_belongs_to_many()","has_attribute?()","has_empty_resource_definition?()","has_errors?()","has_many()","has_one()","has_primary_key_column?()","has_secure_password()","hash()","hash()","hash()","hash_rows()","having()","head()","head()","head()","headers()","headers()","headers=()","headers_match?()","helper_attr()","helper_class()","helper_method()","helpers()","hidden_field()","hidden_field()","hidden_field_tag()","hide_action()","highlight()","html_escape()","html_escape()","html_options_for_form()","html_safe()","html_safe?()","html_safe?()","html_safe_translation_key?()","http()","http()","http_basic_authenticate_with()","http_format_header()","httpdate()","human()","human()","human_attribute_name()","humanize()","humanize()","i18n_scope()","id()","id()","id=()","id_from_response()","identify()","identity()","image_alt()","image_path()","image_submit_tag()","image_tag()","in()","in()","in?()","in_char_class?()","in_groups()","in_groups_of()","in_time_zone()","in_time_zone()","in_time_zone()","include?()","include?()","include?()","include?()","include_fallbacks_module()","include_helper_modules!()","include_tag()","included()","included()","included()","included()","included()","includes()","inclusion_method()","inclusion_method()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_lock()","index()","index()","index_by()","index_name_length()","indexes()","indexes()","inflections()","inheritable_copy()","inheritance_column()","inheritance_column_name()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","init_fallbacks()","init_with()","initialize!()","initialize_copy()","initialize_copy()","initialize_dup()","initialize_i18n()","initialize_template_class()","initialized=()","initialized?()","inquiry()","insert()","insert()","insert_sql()","insert_sql()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","instance()","instance_method_already_implemented?()","instance_method_already_implemented?()","instance_method_names()","instance_variable_names()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_builder()","instantiate_collection()","instantiate_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiate_record()","instantiate_time_object()","instantiator?()","instrument()","instrument()","instrument()","instrument()","instrument=()","instrument_fragment_cache()","instrument_page_cache()","instrumenter()","invalid?()","inverse()","invert_add_column()","invert_add_index()","invert_add_timestamps()","invert_create_table()","invert_remove_timestamps()","invert_rename_column()","invert_rename_index()","invert_rename_table()","irregular()","is_a?()","is_missing?()","is_utf8?()","is_utf8?()","isdst()","iso8601()","j()","j()","j()","javascript_include_tag()","javascript_path()","javascript_tag()","join_asset_file_contents()","joined_includes_values()","joins()","json_escape()","json_escape()","key?()","key?()","key?()","key?()","key?()","key?()","key_file_path()","key_matcher()","keys()","kind()","kind()","kind_of?()","klass()","known_attributes()","known_attributes()","l()","label()","label()","label_tag()","last()","last()","last()","last()","last!()","last_inserted_id()","last_inserted_id()","last_inserted_id()","lazy_zones_map()","legitimize_auth_type()","length()","length()","length()","length()","limit()","limit()","limited_update_conditions()","limited_update_conditions()","link_to()","link_to_function()","link_to_if()","link_to_remote_options?()","link_to_unless()","link_to_unless_current()","listeners_for()","listening?()","ljust()","load()","load()","load_attributes_from_response()","load_fixtures()","load_instances?()","load_migration()","loaded?()","loaded?()","local()","local_cache()","local_constant_names()","local_constants()","local_offset()","local_time()","local_to_utc()","locale()","locale=()","localize()","locals()","localtime()","location()","location=()","lock()","lock!()","locking_column()","locking_enabled?()","log()","log_process_action()","log_subscribers()","logged()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger=()","lookup()","lookup_ancestors()","lookup_store()","lstrip()","mail()","mail_to()","mailer_name()","mailer_name()","make_test_case_available_to_view!()","many?()","many?()","mark_for_destruction()","marked_for_destruction?()","marshal_data!()","marshal_dump()","marshal_load()","mass_assignment_authorizer()","mass_assignment_options()","mass_assignment_role()","match()","match()","match()","match()","match_attribute_method?()","mattr_accessor()","mattr_reader()","mattr_writer()","maximum()","mb_chars()","mb_chars()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure_mode()","memoize()","memoize_all()","memoized_ivar_for()","merge()","merge()","message()","method_for_action()","method_for_action()","method_for_action()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_name()","method_names()","middleware()","middleware()","midnight()","midnight()","migrate()","migrate()","migration()","migrations_paths()","mime_type()","mime_type()","mime_type()","minimum()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","missing_attribute()","missing_name()","missing_name?()","model()","model_name()","model_name()","model_name_from_record_or_class()","modules_for_helpers()","monday()","month()","months()","months_ago()","months_since()","multipart=()","multiple_of?()","mute()","name()","name()","namespaced_key()","native_database_types()","navigation_behavior()","navigation_location()","nested_attributes_association?()","nested_child_index()","nested_records_changed_for_autosave?()","nested_under_indifferent_access()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_cipher()","new_constants()","new_element_path()","new_element_path()","new_from_hash_copying_default()","new_http()","new_record?()","new_record?()","next_element()","next_key()","next_migration_number()","next_month()","next_selector()","next_week()","next_year()","noise()","nonce()","normalize()","normalize()","normalize!()","notify_observers()","notify_observers()","now()","nth_child()","number_field()","number_field_tag()","number_to_currency()","number_to_human()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","object()","object_has_errors?()","objectify_options()","observe()","observed_class()","observed_classes()","observed_classes()","observer_class_for()","observer_instances()","observers()","observers=()","odd?()","offset()","on_cdata_block()","on_characters()","on_end_document()","on_end_element()","on_start_document()","on_start_element()","only()","only_child()","opaque()","open_log()","operation_over_aggregate_column()","option_call()","option_groups_from_collection_for_select()","option_html_attributes()","option_text_and_value()","option_value_selected?()","options_for()","options_for_javascript()","options_for_select()","options_from_collection_for_select()","ord()","ord()","order()","ordinalize()","ordinalize()","orig_delete()","original_concat()","output_filename()","output_filename()","output_filename()","output_filename()","outside_transaction?()","page_cache_file()","page_cache_path()","param_key()","parameterize()","parameterize()","paramify_values()","params()","params=()","parent()","parent_name()","parent_of?()","parents()","parse()","parse()","parse()","parse_error()","parse_raw_value_as_a_number()","parse_raw_value_as_an_integer()","parse_yaml_string()","parser()","password()","password=()","password=()","password=()","password_field()","password_field_tag()","past?()","past?()","past?()","path()","path_to_asset()","path_to_asset_source()","path_to_audio()","path_to_image()","path_to_javascript()","path_to_stylesheet()","path_to_video()","pending()","perform_calculation()","perform_validations()","performed?()","period()","period_for_local()","period_for_utc()","persisted?()","persisted?()","phone_field()","phone_field_tag()","pk_and_sequence_for()","plural()","plural()","pluralize()","pluralize()","pluralize()","pluralize_table_names()","pop_modules()","populate_with_current_scope_attributes()","post()","post()","post()","post()","postgresql_version()","precisionless_round()","prefix()","prefix=()","prefix_parameters()","prefix_source()","preload()","prepare_controller_class()","prepare_statement()","presence()","present?()","prev_month()","prev_week()","prev_year()","previous_changes()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_key_name()","primary_key_prefix_type()","prime_cache()","process()","process()","process()","process_action()","process_action()","process_action()","process_action()","process_attributes_for()","process_node()","process_node()","process_node()","process_node()","process_view_paths()","process_with_new_base_test()","profile()","profile()","profile()","profile()","protect_against_forgery?()","protect_against_forgery?()","protect_from_forgery()","protected_attributes()","protected_attributes_configs()","provide()","proxy()","proxy=()","proxy=()","prune()","pruning?()","public_path()","publish()","publish()","put()","put()","put()","put()","query()","query()","query_attribute()","query_string()","quietly()","quote()","quote()","quote_columns()","quote_string()","quote_table_name()","quote_value()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_comma_pair_list()","quoted_false()","quoted_false()","quoted_locking_column()","quoted_primary_key()","quoted_table_name()","quoted_true()","quoted_true()","radio_button()","radio_button()","radio_button_tag()","raise_nil_warning_for()","raise_on_session_data_overflow!()","range_field()","range_field_tag()","raw()","raw_value()","raw_write_attribute()","read()","read_attribute()","read_attribute_before_type_cast()","read_csv_fixture_files()","read_date_parameter_value()","read_entry()","read_entry()","read_fixture_files()","read_fragment()","read_multi()","read_multi()","read_other_parameter_value()","read_time_parameter_value()","read_value_from_parameter()","read_yaml_fixture_files()","readable_inspect()","reader_method()","readonly()","readonly!()","readonly?()","readonly_attributes()","receive()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record()","record()","record()","record()","record_error()","record_key_for_dom_id()","recreate_database()","recycle!()","recycle!()","redefine_method()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","references_eager_loaded_tables?()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","refresh()","register_interceptor()","register_interceptors()","register_javascript_expansion()","register_observer()","register_observers()","register_stylesheet_expansion()","regular_writer()","reinit_with()","release_savepoint()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload()","reload()","reloader()","remember_transaction_record_state()","remove()","remove_by_id()","remove_column_sql()","remove_filters!()","remove_index_sql()","remove_multiparameter_id()","remove_possible_method()","remove_root()","remove_silencers!()","remove_timestamps_sql()","rename_column()","rename_column()","rename_column_sql()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render()","render()","render_body()","render_collection()","render_partial()","render_template()","render_to_body()","render_to_body()","render_to_string()","reorder()","reorder_characters()","report()","repository()","request()","request()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","requests()","requests()","require_fixture_classes()","require_library_or_gem()","require_tzinfo()","requires_reloading?()","requires_reloading?()","rescue_action()","rescue_action_in_public!()","rescue_action_without_handler()","rescue_from()","rescue_with_handler()","rescue_with_handler()","reset()","reset!()","reset!()","reset!()","reset!()","reset_attribute!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_locking_column()","reset_runtime()","reset_session()","resource_location()","resourceful?()","respond()","respond_to()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_without_attributes?()","respond_to_without_attributes?()","respond_with()","response_auth_header()","response_body=()","response_body=()","response_code_allows_body?()","response_from_page()","responses()","restore_transaction_record_state()","reverse()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_merge!()","reverse_order()","reverse_sql_order()","reverse_update()","rfc2822()","rfc822()","rindex()","rjust()","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","root()","round()","route_key()","rstrip()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_callbacks()","run_gc()","run_gc()","run_gc()","run_gc()","run_in_isolation()","run_in_isolation()","run_in_transaction?()","run_profile()","run_test()","run_test()","run_validations!()","run_validations!()","run_warmup()","runtime()","runtime=()","safe_concat()","safe_concat()","safe_join()","sample()","sanitize()","sanitize()","sanitize()","sanitize()","sanitize_css()","sanitize_css()","sanitize_dom_id()","sanitize_for_mass_assignment()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","sanitize_to_id()","sanitizeable?()","sanitizeable?()","save()","save()","save()","save()","save!()","save!()","save!()","save_belongs_to_association()","save_collection_association()","save_has_one_association()","save_with_validation()","say()","say_no_to_protect_against_forgery!()","say_with_time()","schema()","schema()","schema=()","schema_format()","schema_search_path()","schema_search_path=()","scope()","scope_for_create()","scope_key_by_partial()","scoped()","scoping()","search_dir()","search_field()","search_field_tag()","second()","seconds_since_midnight()","seconds_since_midnight()","seconds_since_unix_epoch()","seconds_to_utc_offset()","secret_token()","secure_compare()","select()","select()","select()","select()","select()","select()","select()","select_date()","select_datetime()","select_day()","select_first()","select_for_count()","select_hour()","select_minute()","select_month()","select_raw()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_year()","send_action()","send_data()","send_data()","send_data()","send_file()","send_file()","send_file()","send_file_headers!()","serial_sequence()","serializable_add_includes()","serializable_hash()","serializable_hash()","serialize()","session_auth=()","session_id_column()","session_id_column()","set()","set_callback()","set_content_type()","set_cycle()","set_enablement()","set_fixture_class()","set_inheritance_column()","set_locking_column()","set_logger()","set_primary_key()","set_sequence_name()","set_serialized_attributes()","set_session()","set_standard_conforming_strings()","set_table_name()","setup()","setup()","setup()","setup()","setup()","setup_controller_request_and_response()","setup_fixture_accessors()","setup_fixtures()","setup_sessid_compatibility!()","setup_subscriptions()","setup_with_controller()","should_compress?()","should_record_timestamps?()","show_variable()","show_variable()","silence()","silence()","silence()","silence()","silence()","silence!()","silence_stream()","silence_warnings()","silencer()","simple_format()","simple_selector()","simplified_type()","since()","since()","since()","since()","singleton_class()","singular()","singular()","singularize()","singularize()","site()","site=()","site=()","size()","size()","size()","size()","size()","skip_callback()","skip_default_locale!()","slice()","slice()","slice!()","split()","split()","split_options()","split_options()","sql()","sql_for_insert()","sql_key()","sqlite_version()","squish()","squish!()","ssl_options()","ssl_options=()","ssl_options=()","stale?()","start_document()","start_element()","start_processing()","start_transaction()","stats()","status()","status=()","sti_name()","store()","stream()","strftime()","stringify_keys()","stringify_keys()","stringify_keys!()","stringify_keys!()","strip()","strip_heredoc()","strip_links()","strip_tags()","structure_dump()","stylesheet_link_tag()","stylesheet_path()","submit()","submit_default_value()","submit_tag()","subscribe()","subscribe()","substitute_at()","substitute_at()","success?()","sum()","sum()","supports_add_column?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_streaming?()","supports_streaming?()","supports_views?()","supports_views?()","suppress()","suppress_messages()","symbolize_keys()","symbolize_keys()","symbolize_keys!()","symbolized_base_class()","symbolized_sti_name()","synchronize()","t()","table_alias_length()","table_definition()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_name()","table_name()","table_name_prefix()","table_name_suffix()","table_rows()","table_structure()","tableize()","tableize()","tables()","tables_in_string()","tag()","tag()","tag_generate_errors?()","tag_options()","teardown()","teardown()","teardown_fixtures()","teardown_subscriptions()","telephone_field()","telephone_field_tag()","template_exists?()","test()","test_errors_aref()","test_errors_full_messages()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_valid?()","tests()","tests()","text_area()","text_area_tag()","text_field()","text_field_tag()","third()","thread_local_key()","tidy_byte()","tidy_bytes()","tidy_bytes()","time()","time_ago_in_words()","time_select()","time_select()","time_tag()","time_with_block()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout=()","timeout=()","timestamp_attributes_for_create_in_model()","timestamp_attributes_for_update_in_model()","timestamp_column_names()","timestamped_migrations()","titlecase()","titlecase()","titleize()","titleize()","titleize()","to()","to()","to()","to_a()","to_a()","to_a()","to_d()","to_date()","to_date()","to_date()","to_date()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_default_s()","to_default_s()","to_default_s()","to_f()","to_f()","to_format()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_hash()","to_hash()","to_hash()","to_html()","to_i()","to_i()","to_js()","to_json()","to_key()","to_key()","to_model()","to_model()","to_options()","to_options!()","to_options!()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_path()","to_query()","to_query()","to_query()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_sql()","to_tag()","to_time()","to_time()","to_time()","to_time()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","today()","today?()","today?()","toggle()","toggle!()","token_and_options()","token_tag()","tokenize()","tokenize()","tomorrow()","touch()","transaction()","transaction()","transaction()","transaction_include_action?()","transaction_record_state()","transfer_time_values_to_utc_constructor()","translate()","translate_exception()","translate_exception()","translate_exception()","translate_exception()","transliterate()","trigger()","trigger()","truncate()","truncate()","try()","try()","try_to_load_dependency()","tsvector()","tv_sec()","type_cast()","type_cast()","type_cast_attribute_value()","type_cast_calculated_value()","type_cast_using_column()","type_condition()","type_to_sql()","type_to_sql()","type_to_sql()","typecast_xml_value()","u_unpack()","uncached()","uncountable()","uncountable?()","undecorated_table_name()","undefine_attribute_methods()","undefine_attribute_methods()","underscore()","underscore()","unescape()","unescape_bytea()","uniq_by()","uniq_by!()","unique_id()","unmemoize_all()","unrename_keys()","unserializable_attribute?()","unserialize_attribute()","unsubscribe()","unsubscribe()","until()","up()","upcase()","update()","update()","update()","update()","update()","update_all()","update_attribute()","update_attribute()","update_attributes()","update_attributes()","update_attributes!()","update_column()","update_counters()","update_counters()","update_details()","update_source_list()","update_sql()","update_sql()","updated()","updated_at()","url_field()","url_field_tag()","url_for()","url_for()","url_options()","url_options()","us_zones()","use()","use()","use_renderer()","use_renderers()","use_zone()","usec()","user()","user=()","user=()","user_name_and_password()","uses_transaction()","uses_transaction?()","using_limitable_reflections?()","utc()","utc()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","valid?()","valid?()","valid?()","valid_alter_table_options()","valid_encoding()","valid_scope_name?()","validate()","validate()","validate()","validate()","validate_collection_association()","validate_digest_response()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_fallbacks()","validate_nonce()","validate_single_association()","validates()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","values()","values_at()","verified_request?()","verifier()","verify()","verify_authenticity_token()","version()","version()","version()","video_path()","video_tag()","view()","view_assigns()","view_paths=()","visible_action?()","wait()","wait()","wants?()","warn()","warn!()","watch()","watch_namespaces()","weeks_ago()","where()","where_values_hash()","with()","with_auth()","with_backend()","with_backend()","with_exclusive_scope()","with_fallbacks()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_gc_stats()","with_indifferent_access()","with_indifferent_access()","with_layout_format()","with_local_cache()","with_options()","with_output_file()","with_scope()","with_transaction_returning_status()","with_warnings()","without()","without_modules()","word_wrap()","wrap()","wrap_parameters()","write()","write()","write_asset_file_contents()","write_attribute()","write_attribute()","write_entry()","write_entry()","write_fragment()","writer_method()","xhr()","xhtml_block?()","xml()","xml_http_request()","xmlschema()","xmlschema()","yaml_file_path()","yaml_fixtures_key()","year()","years()","years_ago()","years_since()","yesterday()","zone()","zone()","zone=()","zones_map()","changelog.md","mit-license","readme.rdoc","base.rb","changelog.md","mit-license","readme.rdoc","base.rb","caching.rb","actions.rb","fragments.rb","pages.rb","sweeping.rb","deprecated.rb","integration_test.rb","performance_test.rb","log_subscriber.rb","metal.rb","compatibility.rb","conditional_get.rb","cookies.rb","data_streaming.rb","exceptions.rb","flash.rb","force_ssl.rb","head.rb","helpers.rb","hide_actions.rb","http_authentication.rb","implicit_render.rb","instrumentation.rb","mime_responds.rb","params_wrapper.rb","rack_delegation.rb","redirecting.rb","renderers.rb","rendering.rb","request_forgery_protection.rb","rescue.rb","responder.rb","session_management.rb","streaming.rb","testing.rb","url_for.rb","middleware.rb","railtie.rb","paths.rb","record_identifier.rb","test_case.rb","html-scanner.rb","document.rb","node.rb","sanitizer.rb","selector.rb","tokenizer.rb","version.rb","asset_paths.rb","base.rb","buffers.rb","context.rb","flows.rb","helpers.rb","active_model_helper.rb","asset_paths.rb","asset_tag_helper.rb","asset_include_tag.rb","asset_paths.rb","javascript_tag_helpers.rb","stylesheet_tag_helpers.rb","atom_feed_helper.rb","cache_helper.rb","capture_helper.rb","controller_helper.rb","csrf_helper.rb","date_helper.rb","debug_helper.rb","form_helper.rb","form_options_helper.rb","form_tag_helper.rb","javascript_helper.rb","number_helper.rb","output_safety_helper.rb","record_tag_helper.rb","rendering_helper.rb","sanitize_helper.rb","tag_helper.rb","text_helper.rb","translation_helper.rb","url_helper.rb","log_subscriber.rb","lookup_context.rb","path_set.rb","railtie.rb","abstract_renderer.rb","partial_renderer.rb","renderer.rb","streaming_template_renderer.rb","template_renderer.rb","template.rb","error.rb","handler.rb","handlers.rb","builder.rb","erb.rb","resolver.rb","text.rb","test_case.rb","resolvers.rb","changelog.md","mit-license","readme.rdoc","attribute_methods.rb","callbacks.rb","conversion.rb","dirty.rb","errors.rb","lint.rb","mass_assignment_security.rb","permission_set.rb","sanitizer.rb","naming.rb","observer_array.rb","observing.rb","railtie.rb","secure_password.rb","serialization.rb","json.rb","xml.rb","test_case.rb","translation.rb","validations.rb","acceptance.rb","callbacks.rb","confirmation.rb","exclusion.rb","format.rb","inclusion.rb","length.rb","numericality.rb","presence.rb","validates.rb","with.rb","validator.rb","version.rb","changelog.md","readme.rdoc","aggregations.rb","associations.rb","alias_tracker.rb","association.rb","association_scope.rb","belongs_to_association.rb","belongs_to_polymorphic_association.rb","association.rb","belongs_to.rb","collection_association.rb","has_and_belongs_to_many.rb","has_many.rb","has_one.rb","singular_association.rb","collection_association.rb","collection_proxy.rb","has_and_belongs_to_many_association.rb","has_many_association.rb","has_many_through_association.rb","has_one_association.rb","has_one_through_association.rb","join_dependency.rb","join_association.rb","join_base.rb","join_part.rb","join_helper.rb","preloader.rb","association.rb","belongs_to.rb","collection_association.rb","has_and_belongs_to_many.rb","has_many.rb","has_many_through.rb","has_one.rb","has_one_through.rb","singular_association.rb","through_association.rb","singular_association.rb","through_association.rb","attribute_methods.rb","before_type_cast.rb","dirty.rb","primary_key.rb","query.rb","read.rb","time_zone_conversion.rb","write.rb","autosave_association.rb","base.rb","callbacks.rb","yaml_column.rb","connection_pool.rb","connection_specification.rb","database_limits.rb","database_statements.rb","query_cache.rb","quoting.rb","schema_definitions.rb","schema_statements.rb","abstract_adapter.rb","column.rb","mysql2_adapter.rb","mysql_adapter.rb","postgresql_adapter.rb","sqlite3_adapter.rb","sqlite_adapter.rb","statement_pool.rb","counter_cache.rb","dynamic_finder_match.rb","dynamic_scope_match.rb","errors.rb","fixtures.rb","identity_map.rb","optimistic.rb","pessimistic.rb","log_subscriber.rb","migration.rb","command_recorder.rb","named_scope.rb","nested_attributes.rb","observer.rb","persistence.rb","query_cache.rb","railtie.rb","console_sandbox.rb","controller_runtime.rb","jdbcmysql_error.rb","reflection.rb","relation.rb","batches.rb","calculations.rb","finder_methods.rb","predicate_builder.rb","query_methods.rb","spawn_methods.rb","result.rb","schema.rb","schema_dumper.rb","serialization.rb","xml_serializer.rb","session_store.rb","test_case.rb","timestamp.rb","transactions.rb","validations.rb","associated.rb","uniqueness.rb","version.rb","changelog.md","readme.rdoc","active_resource.rb","base.rb","connection.rb","custom_methods.rb","exceptions.rb","formats.rb","json_format.rb","xml_format.rb","http_mock.rb","log_subscriber.rb","observing.rb","railtie.rb","schema.rb","validations.rb","version.rb","changelog.md","readme.rdoc","all.rb","backtrace_cleaner.rb","base64.rb","basic_object.rb","benchmarkable.rb","buffered_logger.rb","builder.rb","cache.rb","compressed_mem_cache_store.rb","file_store.rb","mem_cache_store.rb","memory_store.rb","local_cache.rb","synchronized_memory_store.rb","callbacks.rb","concern.rb","configurable.rb","core_ext.rb","array.rb","access.rb","conversions.rb","extract_options.rb","grouping.rb","random_access.rb","uniq_by.rb","wrap.rb","benchmark.rb","big_decimal.rb","conversions.rb","class.rb","attribute.rb","attribute_accessors.rb","delegating_attributes.rb","inheritable_attributes.rb","subclasses.rb","acts_like.rb","calculations.rb","conversions.rb","freeze.rb","zones.rb","acts_like.rb","calculations.rb","conversions.rb","zones.rb","enumerable.rb","exception.rb","file.rb","atomic.rb","path.rb","float.rb","rounding.rb","hash.rb","conversions.rb","deep_dup.rb","deep_merge.rb","diff.rb","except.rb","indifferent_access.rb","keys.rb","reverse_merge.rb","slice.rb","integer.rb","inflections.rb","multiple.rb","time.rb","kernel.rb","agnostics.rb","debugger.rb","reporting.rb","requires.rb","singleton_class.rb","load_error.rb","logger.rb","module.rb","aliasing.rb","anonymous.rb","attr_accessor_with_default.rb","attr_internal.rb","attribute_accessors.rb","delegation.rb","deprecation.rb","introspection.rb","method_names.rb","reachable.rb","remove_method.rb","synchronization.rb","name_error.rb","numeric.rb","bytes.rb","time.rb","object.rb","acts_like.rb","blank.rb","conversions.rb","duplicable.rb","inclusion.rb","instance_variables.rb","to_json.rb","to_param.rb","to_query.rb","try.rb","with_options.rb","proc.rb","process.rb","daemon.rb","range.rb","blockless_step.rb","conversions.rb","cover.rb","include_range.rb","overlaps.rb","regexp.rb","rexml.rb","string.rb","access.rb","behavior.rb","conversions.rb","encoding.rb","exclude.rb","filters.rb","inflections.rb","inquiry.rb","interpolation.rb","multibyte.rb","output_safety.rb","starts_ends_with.rb","strip.rb","xchar.rb","acts_like.rb","calculations.rb","conversions.rb","marshal.rb","publicize_conversion_methods.rb","zones.rb","uri.rb","dependencies.rb","autoload.rb","deprecation.rb","behaviors.rb","method_wrappers.rb","proxy_wrappers.rb","reporting.rb","descendants_tracker.rb","duration.rb","file_update_checker.rb","file_watcher.rb","gzip.rb","hash_with_indifferent_access.rb","i18n.rb","i18n_railtie.rb","inflections.rb","inflector.rb","inflections.rb","methods.rb","transliterate.rb","json.rb","decoding.rb","encoding.rb","variable.rb","lazy_load_hooks.rb","log_subscriber.rb","test_helper.rb","memoizable.rb","message_encryptor.rb","message_verifier.rb","multibyte.rb","chars.rb","exceptions.rb","unicode.rb","utils.rb","notifications.rb","fanout.rb","instrumenter.rb","option_merger.rb","ordered_hash.rb","ordered_options.rb","railtie.rb","rescuable.rb","shim.rb","secure_random.rb","string_inquirer.rb","test_case.rb","assertions.rb","declarative.rb","deprecation.rb","isolation.rb","mochaing.rb","pending.rb","performance.rb","jruby.rb","rubinius.rb","ruby.rb","mri.rb","yarv.rb","setup_and_teardown.rb","time.rb","autoload.rb","time_with_zone.rb","time_zone.rb","version.rb","whiny_nil.rb","xml_mini.rb","jdom.rb","libxml.rb","libxmlsax.rb","nokogiri.rb","nokogirisax.rb","rexml.rb","changelog.md","readme.rdoc","rails.rb"],"longSearchIndex":["actioncontroller","actioncontroller","actioncontroller::caching","actioncontroller::caching::actions","actioncontroller::caching::actions","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching","actioncontroller::caching::pages","actioncontroller::caching","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller","actioncontroller::forcessl","actioncontroller","actioncontroller","actioncontroller::helpers","actioncontroller","actioncontroller::hideactions","actioncontroller","actioncontroller::httpauthentication","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication","actioncontroller::httpauthentication::token","actioncontroller","actioncontroller","actioncontroller::instrumentation","actioncontroller","actioncontroller","actioncontroller","actioncontroller::middleware","actioncontroller","actioncontroller::mimeresponds","actioncontroller","actioncontroller::paramswrapper","actioncontroller","actioncontroller","actioncontroller","actioncontroller::railties","actioncontroller","actioncontroller","actioncontroller","actioncontroller::renderers","actioncontroller::renderers","actioncontroller","actioncontroller","actioncontroller::requestforgeryprotection","actioncontroller","actioncontroller","actioncontroller::sessionmanagement","actioncontroller","actioncontroller::streaming","actioncontroller","actioncontroller","actioncontroller::testcase","actioncontroller::testcase::behavior","actioncontroller::testcase","actioncontroller","actioncontroller","actioncontroller::testing","actioncontroller","actionmailer","actionview","actionview","actionview","actionview","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers","actionview::helpers::atomfeedhelper","actionview::helpers::atomfeedhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers::numberhelper","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview","actionview::lookupcontext","actionview::lookupcontext","actionview","actionview","actionview","actionview","actionview::resolver","actionview","actionview::template","actionview::template::handlers","actionview::template::handlers","actionview::template::handlers::compilable","actionview::template::handlers","actionview::template::handlers","actionview","actionview::testcase","actionview::testcase::behavior","actionview::testcase::behavior","actionview::testcase","activemodel","activemodel::attributemethods","activemodel::attributemethods::classmethods","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel::lint","activemodel","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel::massassignmentsecurity","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel","activemodel::observing","activemodel","activemodel::securepassword","activemodel::securepassword","activemodel","activemodel","activemodel::serializers","activemodel::serializers","activemodel","activemodel","activemodel::validations","activemodel::validations","activemodel::validations::callbacks","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel::validations","activemodel","activerecord","activerecord","activerecord","activerecord::aggregations","activerecord","activerecord::associations","activerecord","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::primarykey","activerecord::attributemethods","activerecord::attributemethods","activerecord::attributemethods::read","activerecord::attributemethods","activerecord::attributemethods::timezoneconversion","activerecord::attributemethods","activerecord::attributemethods::write","activerecord","activerecord::autosaveassociation","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::connectionadapters","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters","activerecord::connectionadapters","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::identitymap","activerecord","activerecord","activerecord","activerecord::locking","activerecord::locking::optimistic","activerecord::locking","activerecord","activerecord","activerecord::migration","activerecord","activerecord","activerecord","activerecord","activerecord::namedscope","activerecord::nestedattributes","activerecord::nestedattributes","activerecord","activerecord","activerecord","activerecord","activerecord::querycache","activerecord","activerecord","activerecord","activerecord::railties::controllerruntime","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::reflection","activerecord::reflection","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord","activerecord::sessionstore","activerecord::sessionstore","activerecord","activerecord","activerecord","activerecord","activerecord::testfixtures","activerecord","activerecord","activerecord","activerecord::transactions","activerecord","activerecord","activerecord","activerecord::validations","activerecord::validations","activerecord::validations","activerecord","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource::custommethods","activeresource::custommethods","activeresource","activeresource","activeresource","activeresource::formats","activeresource::formats","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activeresource","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::bufferedlogger","activesupport","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache","activesupport::cache::strategy","activesupport::cache::strategy::localcache","activesupport::cache","activesupport","activesupport","activesupport","activesupport","activesupport::configurable","activesupport::configurable","activesupport::dependencies","activesupport::dependencies","activesupport","activesupport","activesupport","activesupport","activesupport","activesupport::filewatcher","activesupport","activesupport::gzip","activesupport","activesupport","activesupport::inflector","activesupport","activesupport","activesupport::json::encoding","activesupport::json::encoding","activesupport::json","activesupport","activesupport::logsubscriber","activesupport::logsubscriber::testhelper","activesupport","activesupport::memoizable","activesupport","activesupport::messageencryptor","activesupport","activesupport::messageverifier","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte","activesupport::multibyte::unicode","activesupport::multibyte::unicode","activesupport","activesupport::notifications","activesupport::notifications","activesupport::notifications","activesupport","activesupport","activesupport","activesupport::rescuable","activesupport","activesupport::safebuffer","activesupport","activesupport","activesupport","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing::isolation","activesupport::testing","activesupport::testing","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance::metrics","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing","activesupport::testing","activesupport::testing","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport::testing::setupandteardown","activesupport","activesupport","activesupport","activesupport","activesupport::xmlmini_libxmlsax","activesupport","activesupport::xmlmini_nokogirisax","activerecord-3.1.3/lib/active_record/railties/jdbcmysql_error.rb","arjdbcmysql","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/core_ext/string/output_safety.rb","erb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/core_ext/file/atomic.rb","activerecord-3.1.3/lib/active_record/fixtures.rb","activesupport-3.1.3/lib/active_support/core_ext/float/rounding.rb","html","html","html","html","html","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/i18n_railtie.rb","i18n","i18n","activesupport-3.1.3/lib/active_support/core_ext/integer/time.rb","activesupport-3.1.3/lib/active_support/core_ext/kernel/singleton_class.rb","activesupport-3.1.3/lib/active_support/core_ext/load_error.rb","logger","activesupport-3.1.3/lib/active_support/core_ext/object/duplicable.rb","activerecord-3.1.3/lib/active_record/connection_adapters/mysql_adapter.rb","mysql","mysql","mysql","activesupport-3.1.3/lib/active_support/core_ext/name_error.rb","activesupport-3.1.3/lib/active_support/whiny_nil.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/core_ext/process/daemon.rb","railties-3.1.3/lib/rails.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/testing/deprecation.rb","test","test::unit","test::unit::collector","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/json/encoding.rb","activesupport-3.1.3/lib/active_support/core_ext/uri.rb","activemodel::massassignmentsecurity::permissionset","activesupport::duration","activesupport::multibyte::chars","activesupport::safebuffer","activesupport::timewithzone","activesupport::duration","activesupport::timewithzone","time","activesupport::safebuffer","activerecord::base","activerecord::connectionadapters::sqliteadapter::version","activesupport::multibyte::chars","activesupport::timewithzone","activesupport::timezone","datetime","time","actionview::filesystemresolver","activerecord::base","activerecord::reflection::macroreflection","activerecord::relation","activeresource::base","activeresource::request","activeresource::response","activesupport::duration","activerecord::base","activesupport::multibyte::unicode::unicodedatabase","time","activesupport::multibyte::chars","activesupport::multibyte::chars","activesupport::timezone","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::fixtures","activeresource::formats","activeresource::response","activesupport::dependencies::classcache","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::testing::performance::metrics","activesupport::timezone","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::fixtures","activeresource::response","activesupport::dependencies::classcache","activesupport::hashwithindifferentaccess","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::testing::proxytestresult","actionview::testcase::behavior","activesupport::callbacks","activesupport::callbacks","actioncontroller::redirecting","activesupport::xmlmini","time","time","time","time","actioncontroller::redirecting","activesupport::orderedoptions","actioncontroller::compatibility","actioncontroller::renderers","actionview::context","actionview::helpers::renderinghelper","time","time","time","time","activemodel::validations::helpermethods","activesupport::callbacks","actioncontroller::compatibility","bigdecimal","activesupport::xmlmini","actionview::context","activerecord::attributemethods::read","actionview::testcase::behavior","actionview::helpers::urlhelper","activesupport::testing::isolation","actioncontroller::caching::actions","actionview::lookupcontext::details","actioncontroller::paramswrapper::classmethods","activemodel::name","actionview::testcase::behavior","activemodel::validations::classmethods","actionview::testcase::behavior","actioncontroller::paramswrapper","actioncontroller::paramswrapper","actioncontroller::paramswrapper","actioncontroller::paramswrapper","activerecord::base","activerecord::nestedattributes::classmethods","activemodel::massassignmentsecurity::classmethods","activemodel::massassignmentsecurity::classmethods","actioncontroller::metal","actioncontroller::hideactions::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activemodel::massassignmentsecurity::classmethods","activemodel::massassignmentsecurity::classmethods","object","datetime","activesupport::multibyte::chars","string","activesupport::timewithzone","datetime","time","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","actioncontroller::renderers","activemodel::errors","activerecord::identitymap","activesupport::bufferedlogger","actionview::helpers::assettaghelper::javascriptincludetag","activerecord::autosaveassociation::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activesupport::testing::proxytestresult","actionview::template::handlers::erubis","actionview::template::handlers::erubis","activesupport::backtracecleaner","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","actionview::helpers::urlhelper","activemodel::observing::classmethods","activerecord::observer","activemodel::errors","activemodel::errors","actionview::template::handlers::erubis","actionview::template::handlers::erubis","activesupport::backtracecleaner","actionview::template::handlers::erubis","activerecord::connectionadapters::mysqladapter","activerecord::transactions","nilclass","activesupport::timewithzone","datetime","time","activerecord::transactions::classmethods","activerecord::transactions::classmethods","activemodel::validations::callbacks::classmethods","activerecord::calculations","activerecord::base","activesupport::duration","activesupport::timewithzone","datetime","time","activemodel::attributemethods::classmethods","module","module","activerecord::findermethods","activeresource::base","activesupport::timezone","actioncontroller::helpers::classmethods","activerecord::base","actioncontroller::helpers::classmethods","activerecord::timestamp","activerecord::migration","module","activerecord::relation","actioncontroller::responder","actioncontroller::responder","activesupport::concern","rails","rails","activerecord::spawnmethods","activerecord::findermethods","activerecord::querymethods","activeresource::connection","activerecord::querymethods","activerecord::base","activerecord::base","activerecord::base","activerecord::querymethods","actionview::helpers::urlhelper","activemodel::errors","activemodel::serializers::json","activesupport::json::encoding::encoder","activesupport::json::variable","activesupport::timewithzone","bigdecimal","falseclass","nilclass","string","symbol","trueclass","activesupport::testing::assertions","activemodel::lint::tests","activesupport::testing::assertions","activesupport::testing::assertions","activesupport::testing::assertions","actioncontroller::templateassertions","hash","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","activerecord::base","activerecord::base","actioncontroller::compatibility","activerecord::autosaveassociation","activerecord::autosaveassociation","activesupport::timezone","string","string","datetime","time","time","time","time","time","time","time","time","time","datetime","time","actionview::helpers::atomfeedhelper","file","activesupport::logsubscriber","actionmailer::base","activemodel::massassignmentsecurity::classmethods","module","module","module","module","module","module","module","activemodel::massassignmentsecurity::classmethods","activerecord::base","activerecord::attributemethods::read","activerecord::attributemethods::write","activerecord::attributemethods::query","activerecord::attributemethods::beforetypecast","activemodel::dirty","activemodel::dirty","activerecord::base","html::selector","activemodel::attributemethods","activemodel::validations::classmethods","activerecord::base","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::base","activerecord::base","activerecord::base","activemodel::dirty","activemodel::dirty","activerecord::base","activerecord::base","activerecord::attributemethods::beforetypecast","activerecord::locking::optimistic","activerecord::persistence","activemodel::massassignmentsecurity::classmethods","activemodel::securepassword::classmethods","activerecord::base","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","activeresource::connection","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","activemodel::securepassword::instancemethodsonactivation","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","activeresource::connection","actionview::helpers::assettaghelper","activesupport::bufferedlogger","activesupport::bufferedlogger","activesupport::autoload","activesupport::autoload","activesupport::autoload","activesupport::autoload","activerecord::calculations","activesupport::xmlmini","rails","activerecord::dynamicfindermatch","activerecord::base","activerecord::migrationproxy","activerecord::batches","activerecord::persistence","actioncontroller::testing::classmethods","activerecord::autosaveassociation","activemodel::validations::callbacks::classmethods","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","datetime","time","time","time","time","time","activesupport::deprecation","activesupport::deprecation","activerecord::associations::classmethods","activesupport::benchmarkable","activesupport::testing::performance::metrics::base","activesupport::timewithzone","activerecord::querymethods","activemodel::errors","falseclass","nilclass","object","string","trueclass","kernel","activesupport::bufferedlogger","actioncontroller::middleware","actionview::resolver::path","activerecord::relation","activeresource::base","activerecord::querymethods","activerecord::calculations","activerecord::querymethods","activesupport::cache::memcachestore","actionview::resolver","activeresource::connection","actioncontroller::testcase::behavior","activerecord::querymethods","activerecord::querymethods","actionview::helpers::formtaghelper","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","activesupport::cache::strategy::localcache","actioncontroller::caching","actionview::helpers::cachehelper","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::querycache::classmethods","rails","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::read::classmethods","actioncontroller::caching::configmethods","activerecord::fixtures","activerecord::fixtures","activerecord::base","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","actioncontroller::caching::configmethods","actioncontroller::caching::configmethods","actionview::base","actionview::base","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::read::classmethods","activerecord::fixtures","actioncontroller::caching::actions::classmethods","actioncontroller::caching::pages::classmethods","actioncontroller::caching","activerecord::calculations","actioncontroller::metal","actioncontroller::middleware::actionmiddleware","actioncontroller::responder","actionview::template::handler","actionview::template::handlers::builder","actionview::template::handlers::compilable::classmethods","actionview::template::handlers::erb","actionview::template::handlers::erb","activerecord::identitymap::middleware","activerecord::querycache","activesupport::logsubscriber","i18n::exceptionhandler","logger::simpleformatter","string","activesupport::inflector","string","activesupport::multibyte::chars","actionview::helpers::capturehelper","kernel","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::taghelper","activesupport::multibyte::chars","datetime","time","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activemodel::dirty","activemodel::dirty","activemodel::dirty","activerecord::autosaveassociation","activemodel::dirty","activesupport::xmlmini_nokogirisax::hashbuilder","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::json::encoding::encoder","activemodel::validations::formatvalidator","activeresource::base","activemodel::eachvalidator","activemodel::validations::exclusionvalidator","activemodel::validations::formatvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","datetime","kernel","activerecord::reflection::macroreflection","activerecord::base","activesupport::inflector","string","activesupport::backtracecleaner","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::identitymap","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache::localstore","activesupport::descendantstracker","activesupport::inflector::inflections","activesupport::dependencies::classcache","activesupport::bufferedlogger","actionview::resolver","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actioncontroller::mimeresponds::classmethods","activerecord::base","activerecord::transactions","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activeresource::connection","activeresource::base","activerecord::base","activerecord::base","activerecord::attributemethods::dirty","activesupport::bufferedlogger","activesupport::gzip::stream","activerecord::querymethods","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","actionview::helpers::assettaghelper::assetincludetag","activeresource::base","activeresource::base","activeresource::base","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activesupport::logsubscriber","activerecord::calculations","activerecord::base","activerecord::calculations","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activerecord::base","activerecord::base","activerecord::fixtures","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::base","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activesupport::timewithzone","time","time","actionview::template::handlers::compilable","activesupport::configurable::configuration","activesupport::configurable::configuration","activesupport::multibyte::chars","activesupport::multibyte::unicode","activerecord::aggregations::classmethods","activesupport::gzip","activesupport::cache::entry","actionview::helpers::assettaghelper::assetincludetag","activerecord::base","activerecord::base","actionview::helpers::texthelper","activesupport::safebuffer","actionview::testcase::behavior","activesupport::configurable","activesupport::configurable::classmethods","activesupport::configurable::classmethods","rails","activerecord::base","activesupport::configurable::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activeresource::connection","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::migration","activerecord::sessionstore::sqlbypass","activeresource::base","activeresource::base","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::sessionstore::sqlbypass","activesupport::inflector","string","activerecord::base","activerecord::findermethods","activerecord::findermethods","activerecord::findermethods","activerecord::findermethods","activesupport::multibyte::chars","html::whitelistsanitizer","activerecord::base","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::taghelper","actionview::helpers::recordtaghelper","actionview::helpers::taghelper","actioncontroller::metal","actioncontroller::metal","actioncontroller::testcase::behavior::classmethods","actioncontroller::testcase::behavior::classmethods","actioncontroller::metal","actioncontroller::metal","actionmailer::base","actionview::testcase::testcontroller","actionview::helpers::urlhelper","activesupport::json","activesupport::hashwithindifferentaccess","activerecord::base","actionview::helpers::urlhelper","actionview::helpers::formbuilder","actionview::helpers::formhelper","activemodel::naming","activesupport::hashwithindifferentaccess","actioncontroller::cookies","activerecord::migration","activemodel::errors","activerecord::calculations","activerecord::base","activemodel::observing::classmethods","activerecord::base","activerecord::mysql2adapter","activerecord::persistence","activerecord::relation","activeresource::base","activeresource::base","activesupport::cache::entry","activesupport::timezone","activerecord::relation","activerecord::validations::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::fixtures","activerecord::persistence","activesupport::testing::performance::profiler","activeresource::base","activerecord::reflection::classmethods","activeresource::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activeresource::base","activerecord::mysql2adapter","activerecord::attributemethods::timezoneconversion::classmethods","activerecord::querymethods","activerecord::dynamicfindermatch","actionview::helpers::csrfhelper","actionview::helpers::csrfhelper","activerecord::fixtures","datetime","time","actionview::helpers::texthelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::urlhelper","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","activerecord::querymethods","activeresource::custommethods::classmethods","activeresource::custommethods::instancemethods","activeresource::custommethods::instancemethods","actionview::helpers::texthelper","process","activesupport::inflector","string","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::sqlbypass","activerecord::sessionstore::session","activerecord::sessionstore::session","activesupport::multibyte::unicode","actionview::helpers::datehelper","actionview::helpers::formbuilder","actionview::helpers::datehelper","actionview::helpers::formbuilder","time","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","actionview::helpers::debughelper","activemodel::massassignmentsecurity::sanitizer","kernel","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::gzip","activerecord::persistence","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activerecord::persistence","activerecord::countercache","activesupport::messageencryptor","activesupport::messageencryptor","hash","hash","hash","actionmailer::base","activesupport::hashwithindifferentaccess","actioncontroller::responder","activeresource::connection","datetime","activerecord::connectionadapters::sqliteadapter","actioncontroller::implicitrender","actioncontroller::responder","activerecord::base","activerecord::base","activerecord::schema","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activemodel::attributemethods::classmethods","activerecord::attributemethods::classmethods","activerecord::observer","activesupport::classmethods","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::timezoneconversion::classmethods","activerecord::attributemethods::timezoneconversion::classmethods","activerecord::attributemethods::write::classmethods","activemodel::callbacks","activerecord::autosaveassociation::classmethods","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::read::classmethods","activerecord::attributemethods::classmethods","module","actioncontroller::testcase::behavior","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::persistence","activerecord::relation","activeresource::base","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activesupport::cache::store","activesupport::hashwithindifferentaccess","activerecord::relation","activesupport::cache::filestore","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activeresource::httpmock","activesupport::inflector","string","activemodel::massassignmentsecurity::blacklist","activemodel::massassignmentsecurity::whitelist","module","activesupport::deprecation","activesupport::deprecation","activesupport::deprecation","activerecord::reflection::macroreflection","activesupport::descendantstracker","activesupport::descendantstracker","activerecord::base","activesupport::testing::declarative","activesupport::cache::memcachestore","activerecord::persistence","activerecord::relation","activerecord::sessionstore::sqlbypass","activeresource::base","activerecord::relation","activerecord::persistence","activerecord::sessionstore","activerecord::persistence","actioncontroller::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","actionview::helpers::assettaghelper::assetincludetag","hash","activeresource::connection","activesupport::descendantstracker","activesupport::descendantstracker","activesupport::multibyte::unicode::unicodedatabase","activesupport::safebuffer","activemodel::observerarray","actionview::lookupcontext::details","activemodel::observer","activemodel::observerarray","activemodel::observerarray","activemodel::observerarray","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","actioncontroller::rackdelegation","actioncontroller::responder","actioncontroller::responder","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::recordtaghelper","actioncontroller::recordidentifier","actioncontroller::recordidentifier","activerecord::migration","activesupport::multibyte::chars","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activesupport::timewithzone","activeresource::base","activesupport::hashwithindifferentaccess","falseclass","module","nilclass","object","symbol","trueclass","activesupport::timewithzone","activemodel::errors","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::fixtures","activerecord::result","activemodel::observerarray","enumerable","activesupport::autoload","activesupport::autoload","activerecord::querymethods","activerecord::relation","activeresource::base","activeresource::base","activeresource::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formbuilder","activemodel::errors","activerecord::relation","activesupport::dependencies::classcache","activerecord::connectionadapters::sqliteadapter","actioncontroller::responder","actioncontroller::responder","activerecord::connectionadapters::mysqladapter","activemodel::observerarray","kernel","activerecord::identitymap","activerecord::identitymap","activeresource::base","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activesupport::json","activesupport::json::encoding::encoder","activesupport::base64","activesupport::base64","actioncontroller::httpauthentication::basic","actioncontroller::httpauthentication::digest","actioncontroller::httpauthentication::token","activesupport::json::variable","hash","string","activerecord::base","activesupport::safebuffer","activesupport::timewithzone","bigdecimal","activerecord::connectionadapters::postgresqladapter","string","string","activesupport::messageencryptor","activesupport::messageencryptor","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","datetime","time","time","time","time","time","activemodel::observerarray","activesupport::json","activesupport::json","activesupport::cache::filestore","activerecord::base","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::atomfeedhelper::atomfeedbuilder","actioncontroller::metal","rails","rails","activesupport::testing::performance::benchmarker","actionview::filesystemresolver","activerecord::base","activeresource::base","activesupport::timewithzone","activerecord::fixtures","activesupport::xmlmini_nokogirisax::hashbuilder","actionview::helpers::activemodelinstancetag","actionview::helpers::activemodelinstancetag","activemodel::validations","activeresource::validations","activesupport::json::encoding::encoder","activerecord::connectionadapters::postgresqladapter","actionview::helpers::javascripthelper","activesupport::cache::memcachestore","actionview::helpers::taghelper","activerecord::base","activerecord::spawnmethods","hash","hash","actionview::helpers::texthelper","enumerable","string","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activerecord::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::base","activesupport::fileupdatechecker","activesupport::cache::store","actionview::lookupcontext::viewpaths","activerecord::findermethods","activeresource::base","activeresource::base","activerecord::base","activesupport::cache","activerecord::base","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actioncontroller::httpauthentication::digest","actioncontroller::caching::actions","actioncontroller::caching::fragments","actioncontroller::caching::pages","actioncontroller::caching::pages::classmethods","activesupport::cache::entry","activesupport::cache::entry","activesupport::cache::entry","actioncontroller::conditionalget","actioncontroller::conditionalget","activemodel::callbacks","activesupport::concern","activesupport::testing::declarative","activerecord::querymethods","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::javascriptincludetag","actionview::helpers::assettaghelper::stylesheetincludetag","activeresource::formats::jsonformat","activeresource::formats::xmlformat","actionview::helpers::formtaghelper","hash","activesupport::deprecation","activerecord::base","activerecord::connectionadapters::postgresqlcolumn","activerecord::base","array","activeresource::connection","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqlcolumn","activerecord::connectionadapters::postgresqlcolumn","activerecord::connectionadapters::postgresqladapter","actionview::helpers::formoptionshelper","activerecord::connectionadapters::postgresqlcolumn","actionview::helpers::formoptionshelper","activesupport::hashwithindifferentaccess","hash","actionview::helpers::assettaghelper","activesupport::cache::store","activesupport::hashwithindifferentaccess","activerecord::attributemethods::dirty","actionview::helpers::formtaghelper","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formbuilder","actionview::helpers::formbuilder","array","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::cache::filestore","activesupport::multibyte::unicode::unicodedatabase","activesupport::backtracecleaner","activemodel::validations::numericalityvalidator","actionview::lookupcontext::viewpaths","activerecord::findermethods","activeresource::base","actionview::lookupcontext::viewpaths","actionview::resolver","activerecord::findermethods","activerecord::sessionstore::session","activerecord::sessionstore::session","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::base","activerecord::batches","activeresource::base","activerecord::findermethods","activerecord::batches","activerecord::findermethods","activerecord::findermethods","activeresource::base","activeresource::base","activeresource::base","activeresource::base","activerecord::findermethods","activerecord::base","activerecord::sessionstore","activeresource::base","activerecord::findermethods","activerecord::base","actionview::lookupcontext::viewpaths","actionview::resolver","activesupport::timezone","activerecord::findermethods","activerecord::findermethods","time","time","activerecord::dynamicfindermatch","activerecord::findermethods","activeresource::base","string","string","activerecord::findermethods","activerecord::fixtures","activerecord::testfixtures::classmethods","activesupport::bufferedlogger","activesupport::logsubscriber::testhelper::mocklogger","activesupport::logsubscriber","activesupport::memoizable::instancemethods","activesupport::logsubscriber","html::selector","html::selector","activesupport::testcase","actioncontroller::forcessl::classmethods","activesupport::inflector","string","activesupport::testing::isolation","actioncontroller::requestforgeryprotection","actioncontroller::requestforgeryprotection","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","activeresource::base","activesupport::testing::performance::metrics::amount","activesupport::testing::performance::metrics::digitalinformationunit","activesupport::testing::performance::metrics::time","activeresource::base","actionview::lookupcontext::details","activesupport::timewithzone","activesupport::timezone","datetime","time","array","array","actioncontroller::caching::fragments","actioncontroller::caching::fragments","activerecord::base","activesupport::timewithzone","activesupport::memoizable::instancemethods","actioncontroller::conditionalget","activerecord::querymethods","array","string","string","activeresource::errors","activemodel::serializers::json","activeresource::errors","activesupport::duration","actionview::logsubscriber","activemodel::serializers::xml","activeresource::errors","hash","activerecord::base","activemodel::errors","activesupport::testing::performance","activesupport::testing::performance","activesupport::timewithzone","datetime","time","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::multibyte::unicode","activesupport::messageverifier","activesupport::messageverifier","activemodel::errors","actioncontroller::testcase::behavior","activemodel::errors","activerecord::identitymap","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activesupport::dependencies::classcache","actionview::helpers::texthelper","activesupport::timewithzone","activerecord::sessionstore","activerecord::sessionstore","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","datetime","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activesupport::timewithzone","activerecord::querymethods","enumerable","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","rails","activemodel::attributemethods","erb::util","erb::util","actioncontroller::httpauthentication::digest","activeresource::connection","actioncontroller::requestforgeryprotection","activesupport::rescuable","actionview::template::handlers::erb","activerecord::associations::classmethods","activerecord::base","actioncontroller::responder","actioncontroller::responder","activerecord::associations::classmethods","activerecord::associations::classmethods","activerecord::fixtures","activemodel::securepassword::classmethods","activerecord::base","activeresource::base","activesupport::timewithzone","activerecord::result","activerecord::querymethods","actioncontroller::head","actioncontroller::testcase::behavior","activeresource::connection","actionmailer::base","activeresource::base","actioncontroller::testing","activeresource::request","actioncontroller::helpers::classmethods","actionview::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","actioncontroller::helpers::classmethods","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actioncontroller::hideactions::classmethods","actionview::helpers::texthelper","erb::util","erb::util","actionview::helpers::formtaghelper","string","activesupport::safebuffer","object","actionview::helpers::translationhelper","activeresource::connection","activeresource::connection","actioncontroller::httpauthentication::basic::controllermethods::classmethods","activeresource::connection","activesupport::timewithzone","activemodel::name","activesupport::inflector::inflections","activemodel::translation","activesupport::inflector","string","activemodel::translation","activeresource::base","nilclass","activeresource::base","activeresource::base","activerecord::fixtures","activerecord::logsubscriber","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::formtaghelper","actionview::helpers::assettaghelper","datetime","time","object","activesupport::multibyte::unicode","array","array","activesupport::timewithzone","datetime","time","activemodel::errors","activemodel::massassignmentsecurity::permissionset","activesupport::multibyte::chars","test::unit::collector::objectspace","i18n::railtie","actionview::testcase::behavior::classmethods","actionview::helpers::assettaghelper::assetincludetag","actioncontroller::testcase::raiseactionexceptions","actionview::template::handlers::compilable","activesupport::concern","activesupport::memoizable::instancemethods","activesupport::testing::isolation","activerecord::querymethods","activemodel::validations::exclusionvalidator","activemodel::validations::inclusionvalidator","activerecord::persistence","activesupport::cache::filestore","activesupport::cache::memorystore","activesupport::cache::store","activerecord::persistence","activerecord::countercache","activerecord::locking::optimistic","actioncontroller::middleware","activesupport::multibyte::chars","enumerable","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activesupport::inflector","activesupport::inheritableoptions","activerecord::base","activerecord::fixtures","actioncontroller::hideactions::classmethods","actioncontroller::paramswrapper::classmethods","actionview::helpers::assettaghelper::assetincludetag","actionview::template::handler","activemodel::observing::classmethods","activemodel::validations::classmethods","activesupport::descendantstracker","i18n::railtie","activerecord::base","rails","activerecord::relation","activesupport::safebuffer","activerecord::base","i18n::railtie","actioncontroller::compatibility","rails","rails","string","activerecord::relation","activesupport::multibyte::chars","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","actionview::template","activerecord::base","activerecord::base","activerecord::relation","activesupport::timewithzone","datetime","activesupport::inflector::inflections","activemodel::attributemethods::classmethods","activerecord::attributemethods::classmethods","module","object","activerecord::base","activerecord::fixtures","actionview::helpers::formhelper","activeresource::base","activerecord::fixtures","activerecord::testfixtures","activemodel::observing::classmethods","activeresource::base","activerecord::base","activerecord::dynamicfindermatch","activesupport::cache::store","activesupport::cache::store","activesupport::notifications","activesupport::notifications::instrumenter","activesupport::cache::store","actioncontroller::caching::fragments","actioncontroller::caching::pages::classmethods","activesupport::notifications","activemodel::validations","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activerecord::migration::commandrecorder","activesupport::inflector::inflections","activesupport::timewithzone","loaderror","string","string","activesupport::timewithzone","activesupport::timewithzone","actionview::helpers::javascripthelper","erb::util","erb::util","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::javascripthelper","actionview::helpers::assettaghelper::assetincludetag","activerecord::relation","activerecord::querymethods","erb::util","erb::util","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activesupport::dependencies::classcache","activesupport::hashwithindifferentaccess","activesupport::cache::filestore","activesupport::cache::store","activemodel::errors","activemodel::validator","activemodel::validator","activesupport::timewithzone","activerecord::reflection::macroreflection","activeresource::base","activeresource::base","actionview::helpers::translationhelper","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activerecord::findermethods","activeresource::base","string","string","activerecord::findermethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activesupport::timezone","activeresource::connection","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::statementpool","activerecord::querymethods","activesupport::multibyte::chars","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","actionview::helpers::urlhelper","actionview::helpers::javascripthelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","actionview::helpers::urlhelper","activesupport::notifications::fanout","activesupport::notifications::fanout","activesupport::multibyte::chars","activeresource::base","activesupport::multibyte::unicode::unicodedatabase","activeresource::base","activerecord::testfixtures","activerecord::testfixtures","activerecord::migrationproxy","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activesupport::timezone","activesupport::cache::strategy::localcache","module","module","datetime","time","activesupport::timezone","actionview::lookupcontext::details","actionview::lookupcontext::details","actionview::helpers::translationhelper","actionview::testcase::behavior","activesupport::timewithzone","actioncontroller::metal","actioncontroller::metal","activerecord::querymethods","activerecord::locking::pessimistic","activerecord::locking::optimistic::classmethods","activerecord::locking::optimistic::classmethods","activesupport::cache::store","activerecord::railties::controllerruntime::classmethods","activesupport::logsubscriber","activesupport::logsubscriber::testhelper::mocklogger","actioncontroller::logsubscriber","actionview::logsubscriber","activerecord::base","activerecord::logsubscriber","activeresource::base","activeresource::logsubscriber","activesupport::logsubscriber","rails","rails","activesupport::timezone","activemodel::translation","activesupport::cache","activesupport::multibyte::chars","actionmailer::base","actionview::helpers::urlhelper","actionmailer::base","actionmailer::base","actionview::testcase::behavior","activerecord::relation","enumerable","activerecord::autosaveassociation","activerecord::autosaveassociation","activerecord::sessionstore::session","activesupport::timewithzone","activesupport::timewithzone","activemodel::massassignmentsecurity","activerecord::base","activerecord::base","activemodel::attributemethods::classmethods::attributemethodmatcher","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","html::selector","activemodel::attributemethods","module","module","module","activerecord::calculations","string","string","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gcruns","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::gctime","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::memory","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::objects","activesupport::testing::performance::metrics::processtime","activesupport::testing::performance::metrics::time","activesupport::testing::performance::metrics::usertime","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::walltime","activesupport::testing::performance::metrics::base","activesupport::memoizable","activesupport::memoizable::instancemethods","activesupport::memoizable","activerecord::spawnmethods","activesupport::hashwithindifferentaccess","activerecord::unknownprimarykey","actioncontroller::compatibility","actioncontroller::hideactions","actioncontroller::implicitrender","actionview::helpers::atomfeedhelper::atombuilder","actionview::testcase::behavior","activemodel::attributemethods","activerecord::base","activerecord::migration","activerecord::migration::commandrecorder","activerecord::relation","activesupport::logsubscriber::testhelper::mocklogger","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::stringinquirer","activesupport::testing::proxytestresult","activesupport::timewithzone","nilclass","activemodel::attributemethods::classmethods::attributemethodmatcher","module","actioncontroller::metal","activesupport::cache::strategy::localcache","datetime","time","activerecord::migration","activerecord::migration","activerecord::migrationproxy","activerecord::schema","actionview::template","activeresource::formats::jsonformat","activeresource::formats::xmlformat","activerecord::calculations","time","time","time","activemodel::attributemethods","nameerror","nameerror","activemodel::lint::tests","actionview::helpers::formbuilder","activemodel::naming","activemodel::naming","actioncontroller::helpers::classmethods","time","integer","integer","time","time","actionview::helpers::formbuilder","integer","activesupport::cache::store","activesupport::testing::performance::metrics::base","activesupport::timewithzone","activesupport::cache::store","activerecord::mysql2adapter","actioncontroller::responder","actioncontroller::responder","actionview::helpers::formbuilder","actionview::helpers::formbuilder","activerecord::autosaveassociation","hash","actioncontroller::caching::actions::actioncachepath","actioncontroller::metal","actioncontroller::middleware","actioncontroller::middleware","actioncontroller::middleware::actionmiddleware","actioncontroller::responder","actionmailer::base","actionview::filesystemresolver","actionview::fixtureresolver","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::atomfeedhelper::atombuilder","actionview::helpers::atomfeedhelper::atomfeedbuilder","actionview::helpers::formbuilder","actionview::helpers::numberhelper::invalidnumbererror","actionview::renderer","actionview::resolver","actionview::resolver::path","actionview::template","actionview::testcase::behavior::classmethods","actionview::testcase::testcontroller","activemodel::attributemethods::classmethods::attributemethodmatcher","activemodel::blockvalidator","activemodel::eachvalidator","activemodel::errors","activemodel::name","activemodel::observer","activemodel::observerarray","activemodel::validations::acceptancevalidator","activemodel::validations::lengthvalidator","activemodel::validator","activerecord::attributeassignmenterror","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::mysqladapter::statementpool","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::sqliteadapter::statementpool","activerecord::connectionadapters::sqliteadapter::version","activerecord::connectionadapters::statementpool","activerecord::dynamicfindermatch","activerecord::dynamicscopematch","activerecord::fixtures","activerecord::hasmanythroughnestedassociationsarereadonly","activerecord::identitymap::middleware","activerecord::logsubscriber","activerecord::migration","activerecord::migration::commandrecorder","activerecord::migrationproxy","activerecord::multiparameterassignmenterrors","activerecord::mysql2adapter","activerecord::querycache","activerecord::recordinvalid","activerecord::reflection::macroreflection","activerecord::relation","activerecord::relation","activerecord::result","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activerecord::unknownprimarykey","activerecord::validations::uniquenessvalidator","activerecord::wrappeddatabaseexception","activeresource::base","activeresource::connection","activeresource::request","activeresource::response","activeresource::sslerror","activeresource::timeouterror","activesupport::backtracecleaner","activesupport::bufferedlogger","activesupport::cache::compressedmemcachestore","activesupport::cache::entry","activesupport::cache::filestore","activesupport::cache::memcachestore","activesupport::cache::memorystore","activesupport::cache::store","activesupport::cache::strategy::localcache::localstore","activesupport::cache::synchronizedmemorystore","activesupport::dependencies::classcache","activesupport::dependencies::classcache","activesupport::dependencies::watchstack","activesupport::fileupdatechecker","activesupport::filewatcher","activesupport::filewatcher::backend","activesupport::gzip::stream","activesupport::hashwithindifferentaccess","activesupport::inflector::inflections","activesupport::inheritableoptions","activesupport::json::encoding::encoder","activesupport::logsubscriber::testhelper::mocklogger","activesupport::messageencryptor","activesupport::messageverifier","activesupport::multibyte::chars","activesupport::multibyte::unicode::unicodedatabase","activesupport::notifications::event","activesupport::notifications::fanout","activesupport::notifications::instrumenter","activesupport::safebuffer","activesupport::safebuffer::safeconcaterror","activesupport::testing::performance::benchmarker","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::cputime","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::proxytestresult","activesupport::testing::remoteerror","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","arjdbcmysql::error","html::selector","activeresource::base","activesupport::messageencryptor","activesupport::dependencies::watchstack","activeresource::base","activeresource::base","activesupport::hashwithindifferentaccess","activeresource::connection","activerecord::persistence","activeresource::base","html::selector","activerecord::connectionadapters::postgresqladapter::statementpool","activerecord::migration","time","html::selector","time","time","activesupport::backtracecleaner","actioncontroller::httpauthentication::digest","activesupport::multibyte::chars","activesupport::multibyte::unicode","actioncontroller::caching::actions::actioncachepath","activemodel::observing","activemodel::observing::classmethods","activesupport::timezone","html::selector","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::numberhelper","actionview::helpers::activemodelinstancetag","actionview::helpers::activemodelinstancetag","actionview::helpers::formbuilder","activemodel::observer","activemodel::observer","activemodel::observer","activerecord::observer","activemodel::observerarray","activemodel::observing::classmethods","activemodel::observing::classmethods","activemodel::observing::classmethods","activerecord::logsubscriber","activerecord::querymethods","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activesupport::xmlmini_libxmlsax::hashbuilder","activerecord::spawnmethods","html::selector","actioncontroller::httpauthentication::digest","activesupport::bufferedlogger","activerecord::calculations","activemodel::validations::formatvalidator","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activesupport::json::encoding::encoder","actionview::helpers::urlhelper","actionview::helpers::formoptionshelper","actionview::helpers::formoptionshelper","activesupport::multibyte::chars","string","activerecord::querymethods","activesupport::inflector","integer","activeresource::custommethods","activesupport::safebuffer","activesupport::testing::performance::benchmarker","activesupport::testing::performance::performer","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activerecord::connectionadapters::postgresqladapter","actioncontroller::caching::pages::classmethods","actioncontroller::caching::pages::classmethods","activemodel::naming","activesupport::inflector","string","actioncontroller::testcase::behavior","actioncontroller::metal","actioncontroller::metal","module","module","activesupport::notifications::event","module","activesupport::timezone","activesupport::xmlmini_libxmlsax","activesupport::xmlmini_nokogirisax","activesupport::json","activemodel::validations::numericalityvalidator","activemodel::validations::numericalityvalidator","activerecord::fixtures","uri","activeresource::base","activemodel::securepassword::instancemethodsonactivation","activeresource::base","activeresource::connection","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activesupport::timewithzone","datetime","time","loaderror","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper::assetincludetag","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper::javascripttaghelpers","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers::assettaghelper","activesupport::testing::pending","activerecord::calculations","activerecord::validations","actioncontroller::compatibility","activesupport::timewithzone","activesupport::timezone","activesupport::timezone","activerecord::persistence","activeresource::base","actionview::helpers::formhelper","actionview::helpers::formtaghelper","activerecord::mysql2adapter","activemodel::naming","activesupport::inflector::inflections","actionview::helpers::texthelper","activesupport::inflector","string","activerecord::base","activesupport::dependencies::watchstack","activerecord::base","actioncontroller::testcase::behavior","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","activerecord::connectionadapters::postgresqladapter","float","activeresource::base","activeresource::base","activeresource::base","activeresource::base","activerecord::querymethods","actioncontroller::testcase::behavior::classmethods","activerecord::connectionadapters::postgresqladapter","object","object","time","time","time","activemodel::dirty","activerecord::attributemethods::primarykey::classmethods","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activeresource::base","activerecord::attributemethods::primarykey::classmethods","activerecord::fixtures","activerecord::base","activesupport::memoizable::instancemethods","actioncontroller::middleware","actioncontroller::templateassertions","actioncontroller::testcase::behavior","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::paramswrapper","actioncontroller::rescue","html::whitelistsanitizer","html::fullsanitizer","html::linksanitizer","html::sanitizer","html::whitelistsanitizer","actionview::base","actioncontroller::testing","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","actioncontroller::requestforgeryprotection","actionview::testcase::behavior","actioncontroller::requestforgeryprotection::classmethods","activemodel::massassignmentsecurity::classmethods","activemodel::massassignmentsecurity::classmethods","actionview::helpers::capturehelper","activeresource::base","activeresource::base","activeresource::connection","activesupport::cache::memorystore","activesupport::cache::memorystore","rails","activesupport::notifications","activesupport::notifications::fanout","actioncontroller::testcase::behavior","activeresource::connection","activeresource::custommethods","activeresource::custommethods::instancemethods","actionview::fixtureresolver","actionview::nullresolver","activerecord::attributemethods::query","activeresource::base","kernel","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activerecord::base","activerecord::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activerecord::locking::optimistic::classmethods","activerecord::attributemethods::primarykey::classmethods","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","actionview::helpers::formbuilder","actionview::helpers::formhelper","actionview::helpers::formtaghelper","nilclass","activerecord::sessionstore::session","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::outputsafetyhelper","activesupport::cache::entry","activerecord::attributemethods::write","activesupport::cache::store","activerecord::attributemethods::read","activerecord::attributemethods::beforetypecast","activerecord::fixtures","activerecord::base","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","activerecord::fixtures","actioncontroller::caching::fragments","activesupport::cache::memcachestore","activesupport::cache::store","activerecord::base","activerecord::base","activerecord::base","activerecord::fixtures","datetime","activerecord::aggregations::classmethods","activerecord::querymethods","activerecord::base","activerecord::base","activerecord::base","actionmailer::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::migration::commandrecorder","activesupport::testing::performance::benchmarker","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activemodel::validations::formatvalidator","actioncontroller::recordidentifier","activerecord::mysql2adapter","actioncontroller::testresponse","actioncontroller::testing","module","actioncontroller::flash","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::redirecting","activerecord::relation","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","activerecord::reflection::classmethods","actionview::template","actionmailer::base","actionmailer::base","actionview::helpers::assettaghelper::javascripttaghelpers::classmethods","actionmailer::base","actionmailer::base","actionview::helpers::assettaghelper::stylesheettaghelpers::classmethods","activesupport::hashwithindifferentaccess","activerecord::identitymap","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activerecord::autosaveassociation","activerecord::persistence","activerecord::relation","activeresource::base","i18n::railtie","activerecord::transactions","activerecord::identitymap","activerecord::identitymap","activerecord::connectionadapters::mysqladapter","activesupport::backtracecleaner","activerecord::connectionadapters::mysqladapter","activemodel::massassignmentsecurity::permissionset","module","activeresource::formats","activesupport::backtracecleaner","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activesupport::xmlmini","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","actioncontroller::instrumentation","actionview::helpers::renderinghelper","actionview::renderer","actionview::template","actionview::template::handler","actionview::testcase::behavior","actionview::testcase::behavior::locals","actionview::renderer","actionview::logsubscriber","actionview::logsubscriber","actionview::logsubscriber","actioncontroller::compatibility","actioncontroller::renderers","actioncontroller::rendering","activerecord::querymethods","activesupport::multibyte::unicode","activesupport::testing::performance::performer","activerecord::identitymap","activeresource::connection","activeresource::logsubscriber","actioncontroller::httpauthentication::basic::controllermethods","actioncontroller::httpauthentication::digest::controllermethods","actioncontroller::httpauthentication::token::controllermethods","activeresource::connection","activeresource::httpmock","activerecord::testfixtures::classmethods","kernel","activesupport::timezone","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","actioncontroller::compatibility","actioncontroller::testcase::behavior","actioncontroller::testcase::raiseactionexceptions","activesupport::rescuable::classmethods","actioncontroller::rescue","activesupport::rescuable","activerecord::relation","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activeresource::httpmock","activemodel::dirty","activerecord::fixtures","activesupport::classmethods","activerecord::base","activerecord::countercache","actionview::helpers::texthelper","activerecord::locking::optimistic::classmethods","activerecord::logsubscriber","actioncontroller::rackdelegation","actioncontroller::responder","actioncontroller::responder","actioncontroller::responder","actioncontroller::mimeresponds","actioncontroller::mimeresponds::classmethods","activeresource::httpmock","activemodel::attributemethods","activerecord::base","activerecord::relation","activeresource::base","activesupport::multibyte::chars","activesupport::orderedoptions","activesupport::timewithzone","activemodel::attributemethods","activeresource::base","actioncontroller::mimeresponds","activeresource::connection","actioncontroller::metal","actioncontroller::rackdelegation","activeresource::base","actionview::testcase::behavior","activeresource::httpmock","activerecord::transactions","activesupport::multibyte::chars","activesupport::hashwithindifferentaccess","hash","activesupport::hashwithindifferentaccess","hash","activerecord::querymethods","activerecord::querymethods","hash","activesupport::timewithzone","activesupport::timewithzone","activesupport::multibyte::chars","activesupport::multibyte::chars","activerecord::transactions","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","rails","float","activemodel::naming","activesupport::multibyte::chars","activesupport::testing::isolation::minitest","activesupport::testing::isolation::testunit","activesupport::testing::performance::benchmarker","activesupport::testing::performance::forclassictestunit","activesupport::testing::performance::forminitest","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::performance::profiler","activesupport::testing::setupandteardown::forclassictestunit","activesupport::testing::setupandteardown::forminitest","activesupport::callbacks","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::performance","activesupport::testing::isolation::forking","activesupport::testing::isolation::subprocess","activerecord::testfixtures","activesupport::testing::performance","activesupport::testing::performance::forclassictestunit","activesupport::testing::performance::forminitest","activemodel::validations","activemodel::validations::callbacks","activesupport::testing::performance","activerecord::logsubscriber","activerecord::logsubscriber","actionview::helpers::texthelper","activesupport::safebuffer","actionview::helpers::outputsafetyhelper","array","actionview::helpers::sanitizehelper","activemodel::massassignmentsecurity::sanitizer","html::fullsanitizer","html::sanitizer","actionview::helpers::sanitizehelper","html::whitelistsanitizer","actioncontroller::recordidentifier","activemodel::massassignmentsecurity","activerecord::base","activerecord::base","activerecord::base","activerecord::base","activerecord::base","actionview::helpers::formtaghelper","html::linksanitizer","html::sanitizer","activerecord::persistence","activerecord::sessionstore::sqlbypass","activerecord::validations","activeresource::base","activerecord::persistence","activerecord::validations","activeresource::base","activerecord::autosaveassociation","activerecord::autosaveassociation","activerecord::autosaveassociation","activeresource::validations","activerecord::migration","actionview::testcase::behavior","activerecord::migration","activeresource::base","activeresource::base","activeresource::base","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::namedscope::classmethods","activerecord::relation","actionview::helpers::translationhelper","activerecord::namedscope::classmethods","activerecord::relation","activesupport::cache::filestore","actionview::helpers::formhelper","actionview::helpers::formtaghelper","array","datetime","time","datetime","activesupport::timezone","actioncontroller::httpauthentication::digest","activesupport::messageverifier","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::querymethods","html::selector","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","html::selector","activerecord::calculations","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::datehelper","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","actionview::helpers::datehelper","actionview::helpers::formtaghelper","actionview::helpers::datehelper","actionview::helpers::datehelper","actioncontroller::implicitrender","actioncontroller::datastreaming","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::datastreaming","actioncontroller::instrumentation","actioncontroller::logsubscriber","actioncontroller::datastreaming","activerecord::connectionadapters::postgresqladapter","activerecord::serialization","activemodel::serialization","activerecord::serialization","activerecord::base","activerecord::connectionadapters::postgresqladapter","activerecord::sessionstore::session","activerecord::sessionstore::sqlbypass","activemodel::errors","activesupport::classmethods","actionmailer::base","actionview::helpers::texthelper","activemodel::observerarray","activerecord::testfixtures::classmethods","activerecord::base","activerecord::locking::optimistic::classmethods","activesupport::logsubscriber::testhelper","activerecord::attributemethods::primarykey::classmethods","activerecord::base","activerecord::base","activerecord::sessionstore","activerecord::connectionadapters::postgresqladapter","activerecord::base","activemodel::validations::acceptancevalidator","activemodel::validations::confirmationvalidator","activerecord::validations::uniquenessvalidator","activesupport::logsubscriber::testhelper","activesupport::testing::setupandteardown::classmethods","actioncontroller::testcase::behavior","activerecord::testfixtures::classmethods","activerecord::testfixtures","activerecord::sessionstore::session","actioncontroller::templateassertions","actionview::testcase::behavior","activesupport::cache::entry","activerecord::timestamp","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","activesupport::backtracecleaner","activesupport::benchmarkable","activesupport::bufferedlogger","activesupport::deprecation","kernel","activesupport::cache::store","kernel","kernel","activesupport::bufferedlogger","actionview::helpers::texthelper","html::selector","activerecord::connectionadapters::postgresqlcolumn","activesupport::duration","activesupport::timewithzone","datetime","time","kernel","activemodel::naming","activesupport::inflector::inflections","activesupport::inflector","string","activeresource::base","activeresource::base","activeresource::connection","activemodel::errors","activerecord::fixtures","activerecord::relation","activesupport::cache::entry","activesupport::multibyte::chars","activesupport::classmethods","actionview::lookupcontext::details","activesupport::multibyte::chars","hash","hash","activesupport::multibyte::chars","array","activeresource::base","activeresource::base","activerecord::logsubscriber","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","string","string","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::conditionalget","activesupport::xmlmini_nokogirisax::hashbuilder","activesupport::xmlmini_nokogirisax::hashbuilder","actioncontroller::logsubscriber","activemodel::observerarray","activesupport::cache::memcachestore","actioncontroller::metal","actioncontroller::metal","activerecord::base","activesupport::dependencies::classcache","actioncontroller::streaming::classmethods","activesupport::timewithzone","activesupport::hashwithindifferentaccess","hash","activesupport::hashwithindifferentaccess","hash","activesupport::multibyte::chars","string","actionview::helpers::sanitizehelper","actionview::helpers::sanitizehelper","activerecord::mysql2adapter","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers::assettaghelper::stylesheettaghelpers","actionview::helpers::formbuilder","actionview::helpers::formbuilder","actionview::helpers::formtaghelper","activesupport::notifications","activesupport::notifications::fanout","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activeresource::response","activerecord::calculations","enumerable","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::mysql2adapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","actionview::template","actionview::template::handlers::erb","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","kernel","activerecord::migration","activesupport::hashwithindifferentaccess","hash","hash","activerecord::base","activerecord::base","module","actionview::helpers::translationhelper","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","activerecord::base","activerecord::sessionstore::sqlbypass","activerecord::base","activerecord::base","activerecord::fixtures","activerecord::connectionadapters::sqliteadapter","activesupport::inflector","string","activerecord::connectionadapters::postgresqladapter","activerecord::relation","actionview::helpers::activemodelinstancetag","actionview::helpers::taghelper","actionview::helpers::activemodelinstancetag","actionview::helpers::taghelper","activesupport::logsubscriber::testhelper","activesupport::testing::setupandteardown::classmethods","activerecord::testfixtures","actioncontroller::templateassertions","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::lookupcontext::viewpaths","activesupport::testing::declarative","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","activemodel::lint::tests","actioncontroller::testcase::behavior::classmethods","actionview::testcase::behavior::classmethods","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","array","activesupport::cache::strategy::localcache","activesupport::multibyte::unicode","activesupport::multibyte::chars","activesupport::multibyte::unicode","activesupport::timewithzone","actionview::helpers::datehelper","actionview::helpers::datehelper","actionview::helpers::formbuilder","actionview::helpers::datehelper","activesupport::testing::performance::profiler","time","actionview::helpers::formoptionshelper","actionview::helpers::formbuilder","actionview::helpers::formoptionshelper","activeresource::base","activeresource::base","activeresource::connection","activerecord::timestamp","activerecord::timestamp","activerecord::fixtures","activerecord::base","activesupport::multibyte::chars","string","activesupport::inflector","activesupport::multibyte::chars","string","array","string","string","activemodel::errors","activerecord::relation","activesupport::timewithzone","bigdecimal","datetime","mysql::time","string","time","activesupport::timewithzone","datetime","string","time","array","datetime","time","activesupport::timewithzone","datetime","actioncontroller::responder","activesupport::timewithzone","array","bigdecimal","datetime","time","activemodel::errors","activerecord::result","activesupport::hashwithindifferentaccess","actioncontroller::responder","activesupport::timewithzone","datetime","actioncontroller::responder","activeresource::base","activemodel::conversion","activerecord::attributemethods::primarykey","actionview::helpers::formbuilder","activemodel::conversion","hash","activesupport::hashwithindifferentaccess","hash","activemodel::conversion","activerecord::base","activesupport::safebuffer","array","falseclass","hash","nilclass","object","trueclass","actionview::filesystemresolver","array","hash","object","actionview::filesystemresolver","actionview::fixtureresolver","activeresource::request","activeresource::sslerror","activeresource::timeouterror","activesupport::safebuffer","activesupport::timewithzone","activesupport::timezone","array","bigdecimal","datetime","time","array","activerecord::relation","activesupport::xmlmini","activesupport::timewithzone","datetime","string","time","activemodel::errors","activemodel::serializers::xml","activerecord::serialization","activeresource::base","array","hash","activesupport::safebuffer","activesupport::timewithzone","bigdecimal","activesupport::timezone","activesupport::timewithzone","time","activerecord::persistence","activerecord::persistence","actioncontroller::httpauthentication::token","actionview::helpers::formtaghelper","html::sanitizer","html::whitelistsanitizer","time","activerecord::persistence","activemodel::observerarray","activerecord::transactions","activerecord::transactions::classmethods","activerecord::transactions","activerecord::transactions","activesupport::timewithzone","actionview::helpers::translationhelper","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::connectionadapters::sqliteadapter","activerecord::mysql2adapter","activesupport::inflector","activesupport::filewatcher","activesupport::filewatcher::backend","actionview::helpers::texthelper","string","nilclass","object","activerecord::testfixtures::classmethods","activerecord::connectionadapters::postgresqladapter::tabledefinition","activesupport::timewithzone","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::base","activerecord::calculations","activerecord::calculations","activerecord::base","activerecord::connectionadapters::mysqladapter","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","hash","activesupport::multibyte::unicode","activerecord::querycache::classmethods","activesupport::inflector::inflections","activemodel::naming","activerecord::base","activemodel::attributemethods::classmethods","activerecord::attributemethods::classmethods","activesupport::inflector","string","object","activerecord::connectionadapters::postgresqladapter","array","array","activesupport::notifications::instrumenter","activesupport::memoizable::instancemethods","hash","activerecord::attributemethods::read","activerecord::attributemethods::read","activesupport::notifications","activesupport::notifications::fanout","activesupport::duration","activerecord::migration","activesupport::multibyte::chars","activerecord::attributemethods::dirty","activerecord::persistence","activerecord::relation","activeresource::base","activesupport::hashwithindifferentaccess","activerecord::relation","activerecord::persistence","activeresource::base","activerecord::persistence","activeresource::base","activerecord::persistence","activerecord::persistence","activerecord::countercache","activerecord::locking::optimistic::classmethods","actionview::lookupcontext::details","actionview::helpers::assettaghelper::assetincludetag","activerecord::connectionadapters::postgresqladapter","activerecord::mysql2adapter","actionview::helpers::atomfeedhelper::atomfeedbuilder","activesupport::fileupdatechecker","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actioncontroller::metal","actionview::helpers::urlhelper","actioncontroller::urlfor","actionview::helpers::urlhelper","activesupport::timezone","actioncontroller::metal","activerecord::identitymap","actioncontroller::renderers::classmethods","actioncontroller::renderers::classmethods","time","activesupport::timewithzone","activeresource::base","activeresource::base","activeresource::connection","actioncontroller::httpauthentication::basic","activerecord::testfixtures::classmethods","activerecord::testfixtures::classmethods","activerecord::findermethods","activesupport::timewithzone","datetime","activesupport::timewithzone","datetime","activesupport::timewithzone","activesupport::timezone","datetime","time","activesupport::timezone","activemodel::validations","activerecord::validations","activeresource::validations","activerecord::connectionadapters::sqliteadapter","actionview::template::handlers::erb","activerecord::namedscope::classmethods","activemodel::eachvalidator","activemodel::validations::classmethods","activemodel::validations::presencevalidator","activemodel::validator","activerecord::autosaveassociation","actioncontroller::httpauthentication::digest","activemodel::blockvalidator","activemodel::eachvalidator","activemodel::validations::acceptancevalidator","activemodel::validations::confirmationvalidator","activemodel::validations::exclusionvalidator","activemodel::validations::formatvalidator","activemodel::validations::inclusionvalidator","activemodel::validations::lengthvalidator","activemodel::validations::numericalityvalidator","activemodel::validations::withvalidator","activerecord::validations::associatedvalidator","activerecord::validations::uniquenessvalidator","i18n::railtie","actioncontroller::httpauthentication::digest","activerecord::autosaveassociation","activemodel::validations::classmethods","activemodel::validations::helpermethods","activerecord::validations::classmethods","activemodel::validations::helpermethods","activemodel::validations::classmethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activemodel::validations::helpermethods","activerecord::validations::classmethods","activemodel::validations","activemodel::validations::classmethods","activemodel::validations::classmethods","activemodel::validations::classmethods","activesupport::cache::entry","activemodel::errors","activesupport::hashwithindifferentaccess","actioncontroller::requestforgeryprotection","activesupport::messageencryptor","activesupport::messageverifier","actioncontroller::requestforgeryprotection","activerecord::connectionadapters::mysqladapter","activerecord::mysql2adapter","rails","actionview::helpers::assettaghelper","actionview::helpers::assettaghelper","actionview::testcase::behavior","actionview::testcase::behavior","actionview::lookupcontext::viewpaths","actioncontroller::hideactions::classmethods","activesupport::logsubscriber::testhelper","activesupport::notifications::fanout","activesupport::multibyte::chars","activesupport::deprecation","activemodel::massassignmentsecurity::sanitizer","activesupport::filewatcher","activesupport::dependencies::watchstack","time","activerecord::querymethods","activerecord::relation","actioncontroller::railties::paths","activeresource::connection","activesupport::json","activesupport::xmlmini","activerecord::base","actionview::lookupcontext::viewpaths","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::testing::performance::metrics::base","activesupport::hashwithindifferentaccess","hash","actionview::lookupcontext::details","activesupport::cache::strategy::localcache","object","activesupport::testing::performance::benchmarker","activerecord::base","activerecord::transactions","kernel","activerecord::identitymap","actioncontroller::base","actionview::helpers::texthelper","array","actioncontroller::paramswrapper::classmethods","activerecord::migration","activesupport::cache::store","actionview::helpers::assettaghelper::assetincludetag","activerecord::attributemethods::dirty","activerecord::attributemethods::write","activesupport::cache::filestore","activesupport::cache::strategy::localcache::localstore","actioncontroller::caching::fragments","activerecord::aggregations::classmethods","actioncontroller::testcase::behavior","actionview::helpers::atomfeedhelper::atombuilder","activerecord::connectionadapters::postgresqladapter::tabledefinition","actioncontroller::testcase::behavior","activesupport::timewithzone","datetime","activerecord::fixtures","activerecord::fixtures","integer","integer","time","time","time","activesupport::timewithzone","time","time","activesupport::timezone","files/actionmailer-3_1_3/changelog_md.html","files/actionmailer-3_1_3/mit-license.html","files/actionmailer-3_1_3/readme_rdoc.html","files/actionmailer-3_1_3/lib/action_mailer/base_rb.html","files/actionpack-3_1_3/changelog_md.html","files/actionpack-3_1_3/mit-license.html","files/actionpack-3_1_3/readme_rdoc.html","files/actionpack-3_1_3/lib/action_controller/base_rb.html","files/actionpack-3_1_3/lib/action_controller/caching_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/actions_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/fragments_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/pages_rb.html","files/actionpack-3_1_3/lib/action_controller/caching/sweeping_rb.html","files/actionpack-3_1_3/lib/action_controller/deprecated_rb.html","files/actionpack-3_1_3/lib/action_controller/deprecated/integration_test_rb.html","files/actionpack-3_1_3/lib/action_controller/deprecated/performance_test_rb.html","files/actionpack-3_1_3/lib/action_controller/log_subscriber_rb.html","files/actionpack-3_1_3/lib/action_controller/metal_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/compatibility_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/conditional_get_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/cookies_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/data_streaming_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/exceptions_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/flash_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/force_ssl_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/head_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/helpers_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/hide_actions_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/http_authentication_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/implicit_render_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/instrumentation_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/mime_responds_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/params_wrapper_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/rack_delegation_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/redirecting_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/renderers_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/rendering_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/request_forgery_protection_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/rescue_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/responder_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/session_management_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/streaming_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/testing_rb.html","files/actionpack-3_1_3/lib/action_controller/metal/url_for_rb.html","files/actionpack-3_1_3/lib/action_controller/middleware_rb.html","files/actionpack-3_1_3/lib/action_controller/railtie_rb.html","files/actionpack-3_1_3/lib/action_controller/railties/paths_rb.html","files/actionpack-3_1_3/lib/action_controller/record_identifier_rb.html","files/actionpack-3_1_3/lib/action_controller/test_case_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/document_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/node_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/sanitizer_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/selector_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/tokenizer_rb.html","files/actionpack-3_1_3/lib/action_controller/vendor/html-scanner/html/version_rb.html","files/actionpack-3_1_3/lib/action_view/asset_paths_rb.html","files/actionpack-3_1_3/lib/action_view/base_rb.html","files/actionpack-3_1_3/lib/action_view/buffers_rb.html","files/actionpack-3_1_3/lib/action_view/context_rb.html","files/actionpack-3_1_3/lib/action_view/flows_rb.html","files/actionpack-3_1_3/lib/action_view/helpers_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/active_model_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_paths_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/asset_include_tag_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/asset_paths_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/javascript_tag_helpers_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/asset_tag_helpers/stylesheet_tag_helpers_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/atom_feed_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/cache_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/capture_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/controller_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/csrf_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/date_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/debug_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/form_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/form_options_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/form_tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/javascript_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/number_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/output_safety_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/record_tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/rendering_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/sanitize_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/tag_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/text_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/translation_helper_rb.html","files/actionpack-3_1_3/lib/action_view/helpers/url_helper_rb.html","files/actionpack-3_1_3/lib/action_view/log_subscriber_rb.html","files/actionpack-3_1_3/lib/action_view/lookup_context_rb.html","files/actionpack-3_1_3/lib/action_view/path_set_rb.html","files/actionpack-3_1_3/lib/action_view/railtie_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/abstract_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/partial_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/streaming_template_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/renderer/template_renderer_rb.html","files/actionpack-3_1_3/lib/action_view/template_rb.html","files/actionpack-3_1_3/lib/action_view/template/error_rb.html","files/actionpack-3_1_3/lib/action_view/template/handler_rb.html","files/actionpack-3_1_3/lib/action_view/template/handlers_rb.html","files/actionpack-3_1_3/lib/action_view/template/handlers/builder_rb.html","files/actionpack-3_1_3/lib/action_view/template/handlers/erb_rb.html","files/actionpack-3_1_3/lib/action_view/template/resolver_rb.html","files/actionpack-3_1_3/lib/action_view/template/text_rb.html","files/actionpack-3_1_3/lib/action_view/test_case_rb.html","files/actionpack-3_1_3/lib/action_view/testing/resolvers_rb.html","files/activemodel-3_1_3/changelog_md.html","files/activemodel-3_1_3/mit-license.html","files/activemodel-3_1_3/readme_rdoc.html","files/activemodel-3_1_3/lib/active_model/attribute_methods_rb.html","files/activemodel-3_1_3/lib/active_model/callbacks_rb.html","files/activemodel-3_1_3/lib/active_model/conversion_rb.html","files/activemodel-3_1_3/lib/active_model/dirty_rb.html","files/activemodel-3_1_3/lib/active_model/errors_rb.html","files/activemodel-3_1_3/lib/active_model/lint_rb.html","files/activemodel-3_1_3/lib/active_model/mass_assignment_security_rb.html","files/activemodel-3_1_3/lib/active_model/mass_assignment_security/permission_set_rb.html","files/activemodel-3_1_3/lib/active_model/mass_assignment_security/sanitizer_rb.html","files/activemodel-3_1_3/lib/active_model/naming_rb.html","files/activemodel-3_1_3/lib/active_model/observer_array_rb.html","files/activemodel-3_1_3/lib/active_model/observing_rb.html","files/activemodel-3_1_3/lib/active_model/railtie_rb.html","files/activemodel-3_1_3/lib/active_model/secure_password_rb.html","files/activemodel-3_1_3/lib/active_model/serialization_rb.html","files/activemodel-3_1_3/lib/active_model/serializers/json_rb.html","files/activemodel-3_1_3/lib/active_model/serializers/xml_rb.html","files/activemodel-3_1_3/lib/active_model/test_case_rb.html","files/activemodel-3_1_3/lib/active_model/translation_rb.html","files/activemodel-3_1_3/lib/active_model/validations_rb.html","files/activemodel-3_1_3/lib/active_model/validations/acceptance_rb.html","files/activemodel-3_1_3/lib/active_model/validations/callbacks_rb.html","files/activemodel-3_1_3/lib/active_model/validations/confirmation_rb.html","files/activemodel-3_1_3/lib/active_model/validations/exclusion_rb.html","files/activemodel-3_1_3/lib/active_model/validations/format_rb.html","files/activemodel-3_1_3/lib/active_model/validations/inclusion_rb.html","files/activemodel-3_1_3/lib/active_model/validations/length_rb.html","files/activemodel-3_1_3/lib/active_model/validations/numericality_rb.html","files/activemodel-3_1_3/lib/active_model/validations/presence_rb.html","files/activemodel-3_1_3/lib/active_model/validations/validates_rb.html","files/activemodel-3_1_3/lib/active_model/validations/with_rb.html","files/activemodel-3_1_3/lib/active_model/validator_rb.html","files/activemodel-3_1_3/lib/active_model/version_rb.html","files/activerecord-3_1_3/changelog_md.html","files/activerecord-3_1_3/readme_rdoc.html","files/activerecord-3_1_3/lib/active_record/aggregations_rb.html","files/activerecord-3_1_3/lib/active_record/associations_rb.html","files/activerecord-3_1_3/lib/active_record/associations/alias_tracker_rb.html","files/activerecord-3_1_3/lib/active_record/associations/association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/association_scope_rb.html","files/activerecord-3_1_3/lib/active_record/associations/belongs_to_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/belongs_to_polymorphic_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/belongs_to_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/collection_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/has_and_belongs_to_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/has_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/has_one_rb.html","files/activerecord-3_1_3/lib/active_record/associations/builder/singular_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/collection_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/collection_proxy_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_and_belongs_to_many_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_many_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_many_through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_one_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/has_one_through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_base_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_dependency/join_part_rb.html","files/activerecord-3_1_3/lib/active_record/associations/join_helper_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/belongs_to_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/collection_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_and_belongs_to_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_many_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_many_through_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_one_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/has_one_through_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/singular_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/preloader/through_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/singular_association_rb.html","files/activerecord-3_1_3/lib/active_record/associations/through_association_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/before_type_cast_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/dirty_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/primary_key_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/query_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/read_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/time_zone_conversion_rb.html","files/activerecord-3_1_3/lib/active_record/attribute_methods/write_rb.html","files/activerecord-3_1_3/lib/active_record/autosave_association_rb.html","files/activerecord-3_1_3/lib/active_record/base_rb.html","files/activerecord-3_1_3/lib/active_record/callbacks_rb.html","files/activerecord-3_1_3/lib/active_record/coders/yaml_column_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/connection_pool_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/connection_specification_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/database_limits_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/database_statements_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/query_cache_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/quoting_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/schema_definitions_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract/schema_statements_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/abstract_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/column_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/mysql2_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/mysql_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/postgresql_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/sqlite3_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/sqlite_adapter_rb.html","files/activerecord-3_1_3/lib/active_record/connection_adapters/statement_pool_rb.html","files/activerecord-3_1_3/lib/active_record/counter_cache_rb.html","files/activerecord-3_1_3/lib/active_record/dynamic_finder_match_rb.html","files/activerecord-3_1_3/lib/active_record/dynamic_scope_match_rb.html","files/activerecord-3_1_3/lib/active_record/errors_rb.html","files/activerecord-3_1_3/lib/active_record/fixtures_rb.html","files/activerecord-3_1_3/lib/active_record/identity_map_rb.html","files/activerecord-3_1_3/lib/active_record/locking/optimistic_rb.html","files/activerecord-3_1_3/lib/active_record/locking/pessimistic_rb.html","files/activerecord-3_1_3/lib/active_record/log_subscriber_rb.html","files/activerecord-3_1_3/lib/active_record/migration_rb.html","files/activerecord-3_1_3/lib/active_record/migration/command_recorder_rb.html","files/activerecord-3_1_3/lib/active_record/named_scope_rb.html","files/activerecord-3_1_3/lib/active_record/nested_attributes_rb.html","files/activerecord-3_1_3/lib/active_record/observer_rb.html","files/activerecord-3_1_3/lib/active_record/persistence_rb.html","files/activerecord-3_1_3/lib/active_record/query_cache_rb.html","files/activerecord-3_1_3/lib/active_record/railtie_rb.html","files/activerecord-3_1_3/lib/active_record/railties/console_sandbox_rb.html","files/activerecord-3_1_3/lib/active_record/railties/controller_runtime_rb.html","files/activerecord-3_1_3/lib/active_record/railties/jdbcmysql_error_rb.html","files/activerecord-3_1_3/lib/active_record/reflection_rb.html","files/activerecord-3_1_3/lib/active_record/relation_rb.html","files/activerecord-3_1_3/lib/active_record/relation/batches_rb.html","files/activerecord-3_1_3/lib/active_record/relation/calculations_rb.html","files/activerecord-3_1_3/lib/active_record/relation/finder_methods_rb.html","files/activerecord-3_1_3/lib/active_record/relation/predicate_builder_rb.html","files/activerecord-3_1_3/lib/active_record/relation/query_methods_rb.html","files/activerecord-3_1_3/lib/active_record/relation/spawn_methods_rb.html","files/activerecord-3_1_3/lib/active_record/result_rb.html","files/activerecord-3_1_3/lib/active_record/schema_rb.html","files/activerecord-3_1_3/lib/active_record/schema_dumper_rb.html","files/activerecord-3_1_3/lib/active_record/serialization_rb.html","files/activerecord-3_1_3/lib/active_record/serializers/xml_serializer_rb.html","files/activerecord-3_1_3/lib/active_record/session_store_rb.html","files/activerecord-3_1_3/lib/active_record/test_case_rb.html","files/activerecord-3_1_3/lib/active_record/timestamp_rb.html","files/activerecord-3_1_3/lib/active_record/transactions_rb.html","files/activerecord-3_1_3/lib/active_record/validations_rb.html","files/activerecord-3_1_3/lib/active_record/validations/associated_rb.html","files/activerecord-3_1_3/lib/active_record/validations/uniqueness_rb.html","files/activerecord-3_1_3/lib/active_record/version_rb.html","files/activeresource-3_1_3/changelog_md.html","files/activeresource-3_1_3/readme_rdoc.html","files/activeresource-3_1_3/lib/active_resource_rb.html","files/activeresource-3_1_3/lib/active_resource/base_rb.html","files/activeresource-3_1_3/lib/active_resource/connection_rb.html","files/activeresource-3_1_3/lib/active_resource/custom_methods_rb.html","files/activeresource-3_1_3/lib/active_resource/exceptions_rb.html","files/activeresource-3_1_3/lib/active_resource/formats_rb.html","files/activeresource-3_1_3/lib/active_resource/formats/json_format_rb.html","files/activeresource-3_1_3/lib/active_resource/formats/xml_format_rb.html","files/activeresource-3_1_3/lib/active_resource/http_mock_rb.html","files/activeresource-3_1_3/lib/active_resource/log_subscriber_rb.html","files/activeresource-3_1_3/lib/active_resource/observing_rb.html","files/activeresource-3_1_3/lib/active_resource/railtie_rb.html","files/activeresource-3_1_3/lib/active_resource/schema_rb.html","files/activeresource-3_1_3/lib/active_resource/validations_rb.html","files/activeresource-3_1_3/lib/active_resource/version_rb.html","files/activesupport-3_1_3/changelog_md.html","files/activesupport-3_1_3/readme_rdoc.html","files/activesupport-3_1_3/lib/active_support/all_rb.html","files/activesupport-3_1_3/lib/active_support/backtrace_cleaner_rb.html","files/activesupport-3_1_3/lib/active_support/base64_rb.html","files/activesupport-3_1_3/lib/active_support/basic_object_rb.html","files/activesupport-3_1_3/lib/active_support/benchmarkable_rb.html","files/activesupport-3_1_3/lib/active_support/buffered_logger_rb.html","files/activesupport-3_1_3/lib/active_support/builder_rb.html","files/activesupport-3_1_3/lib/active_support/cache_rb.html","files/activesupport-3_1_3/lib/active_support/cache/compressed_mem_cache_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/file_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/mem_cache_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/memory_store_rb.html","files/activesupport-3_1_3/lib/active_support/cache/strategy/local_cache_rb.html","files/activesupport-3_1_3/lib/active_support/cache/synchronized_memory_store_rb.html","files/activesupport-3_1_3/lib/active_support/callbacks_rb.html","files/activesupport-3_1_3/lib/active_support/concern_rb.html","files/activesupport-3_1_3/lib/active_support/configurable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/extract_options_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/grouping_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/random_access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/uniq_by_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/array/wrap_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/benchmark_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/big_decimal_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/big_decimal/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/attribute_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/attribute_accessors_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/delegating_attributes_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/inheritable_attributes_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/class/subclasses_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/calculations_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/freeze_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date/zones_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/calculations_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/date_time/zones_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/enumerable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/exception_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/file_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/file/atomic_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/file/path_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/float_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/float/rounding_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/deep_dup_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/deep_merge_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/diff_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/except_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/indifferent_access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/keys_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/reverse_merge_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/hash/slice_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer/multiple_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/integer/time_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/agnostics_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/debugger_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/reporting_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/requires_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/kernel/singleton_class_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/load_error_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/logger_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/aliasing_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/anonymous_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/attr_accessor_with_default_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/attr_internal_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/attribute_accessors_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/delegation_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/deprecation_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/introspection_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/method_names_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/reachable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/remove_method_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/module/synchronization_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/name_error_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/numeric_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/numeric/bytes_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/numeric/time_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/blank_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/duplicable_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/inclusion_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/instance_variables_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_json_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_param_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/to_query_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/try_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/object/with_options_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/proc_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/process_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/process/daemon_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/blockless_step_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/cover_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/include_range_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/range/overlaps_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/regexp_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/rexml_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/access_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/behavior_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/encoding_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/exclude_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/filters_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/inquiry_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/interpolation_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/multibyte_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/output_safety_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/starts_ends_with_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/strip_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/string/xchar_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/acts_like_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/calculations_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/conversions_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/marshal_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/publicize_conversion_methods_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/time/zones_rb.html","files/activesupport-3_1_3/lib/active_support/core_ext/uri_rb.html","files/activesupport-3_1_3/lib/active_support/dependencies_rb.html","files/activesupport-3_1_3/lib/active_support/dependencies/autoload_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/behaviors_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/method_wrappers_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/proxy_wrappers_rb.html","files/activesupport-3_1_3/lib/active_support/deprecation/reporting_rb.html","files/activesupport-3_1_3/lib/active_support/descendants_tracker_rb.html","files/activesupport-3_1_3/lib/active_support/duration_rb.html","files/activesupport-3_1_3/lib/active_support/file_update_checker_rb.html","files/activesupport-3_1_3/lib/active_support/file_watcher_rb.html","files/activesupport-3_1_3/lib/active_support/gzip_rb.html","files/activesupport-3_1_3/lib/active_support/hash_with_indifferent_access_rb.html","files/activesupport-3_1_3/lib/active_support/i18n_rb.html","files/activesupport-3_1_3/lib/active_support/i18n_railtie_rb.html","files/activesupport-3_1_3/lib/active_support/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/inflector_rb.html","files/activesupport-3_1_3/lib/active_support/inflector/inflections_rb.html","files/activesupport-3_1_3/lib/active_support/inflector/methods_rb.html","files/activesupport-3_1_3/lib/active_support/inflector/transliterate_rb.html","files/activesupport-3_1_3/lib/active_support/json_rb.html","files/activesupport-3_1_3/lib/active_support/json/decoding_rb.html","files/activesupport-3_1_3/lib/active_support/json/encoding_rb.html","files/activesupport-3_1_3/lib/active_support/json/variable_rb.html","files/activesupport-3_1_3/lib/active_support/lazy_load_hooks_rb.html","files/activesupport-3_1_3/lib/active_support/log_subscriber_rb.html","files/activesupport-3_1_3/lib/active_support/log_subscriber/test_helper_rb.html","files/activesupport-3_1_3/lib/active_support/memoizable_rb.html","files/activesupport-3_1_3/lib/active_support/message_encryptor_rb.html","files/activesupport-3_1_3/lib/active_support/message_verifier_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/chars_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/exceptions_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/unicode_rb.html","files/activesupport-3_1_3/lib/active_support/multibyte/utils_rb.html","files/activesupport-3_1_3/lib/active_support/notifications_rb.html","files/activesupport-3_1_3/lib/active_support/notifications/fanout_rb.html","files/activesupport-3_1_3/lib/active_support/notifications/instrumenter_rb.html","files/activesupport-3_1_3/lib/active_support/option_merger_rb.html","files/activesupport-3_1_3/lib/active_support/ordered_hash_rb.html","files/activesupport-3_1_3/lib/active_support/ordered_options_rb.html","files/activesupport-3_1_3/lib/active_support/railtie_rb.html","files/activesupport-3_1_3/lib/active_support/rescuable_rb.html","files/activesupport-3_1_3/lib/active_support/ruby/shim_rb.html","files/activesupport-3_1_3/lib/active_support/secure_random_rb.html","files/activesupport-3_1_3/lib/active_support/string_inquirer_rb.html","files/activesupport-3_1_3/lib/active_support/test_case_rb.html","files/activesupport-3_1_3/lib/active_support/testing/assertions_rb.html","files/activesupport-3_1_3/lib/active_support/testing/declarative_rb.html","files/activesupport-3_1_3/lib/active_support/testing/deprecation_rb.html","files/activesupport-3_1_3/lib/active_support/testing/isolation_rb.html","files/activesupport-3_1_3/lib/active_support/testing/mochaing_rb.html","files/activesupport-3_1_3/lib/active_support/testing/pending_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/jruby_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/rubinius_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby/mri_rb.html","files/activesupport-3_1_3/lib/active_support/testing/performance/ruby/yarv_rb.html","files/activesupport-3_1_3/lib/active_support/testing/setup_and_teardown_rb.html","files/activesupport-3_1_3/lib/active_support/time_rb.html","files/activesupport-3_1_3/lib/active_support/time/autoload_rb.html","files/activesupport-3_1_3/lib/active_support/time_with_zone_rb.html","files/activesupport-3_1_3/lib/active_support/values/time_zone_rb.html","files/activesupport-3_1_3/lib/active_support/version_rb.html","files/activesupport-3_1_3/lib/active_support/whiny_nil_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/jdom_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/libxml_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/libxmlsax_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/nokogiri_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/nokogirisax_rb.html","files/activesupport-3_1_3/lib/active_support/xml_mini/rexml_rb.html","files/railties-3_1_3/changelog_md.html","files/railties-3_1_3/readme_rdoc.html","files/railties-3_1_3/lib/rails_rb.html"]}}