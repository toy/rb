var search_data = {"index":{"info":[["Log4r","lib/log4r/base.rb","classes/Log4r.html"," < ",":nodoc:  Version:: $Id$ --- TODO: catch unparsed parameters #{FOO} and die --- :nodoc:  --- :nodoc: ",1],["BasicFormatter","Log4r","classes/Log4r/BasicFormatter.html"," < SimpleFormatter","BasicFormatter produces output like this: WARN loggername: I dropped my Wookie! Or like this if trace",1],["ConfigError","Log4r","classes/Log4r/ConfigError.html"," < Exception","Gets raised when Configurator encounters bad YAML. ",1],["Configurator","Log4r","classes/Log4r/Configurator.html"," < Object","See log4r/configurator.rb ",1],["DateFileOutputter","Log4r","classes/Log4r/DateFileOutputter.html"," < FileOutputter","Additional hash arguments are: [<tt>:dirname</tt>]         Directory of the log file [<tt>:date_pattern</tt>]",1],["DefaultFormatter","Log4r","classes/Log4r/DefaultFormatter.html"," < BasicFormatter","Outputters that don't define a Formatter will get this, which is currently BasicFormatter ",1],["EmailOutputter","Log4r","classes/Log4r/EmailOutputter.html"," < Outputter","",1],["FileOutputter","Log4r","classes/Log4r/FileOutputter.html"," < IOOutputter","Convenience wrapper for File. Additional hash arguments are: [<tt>:filename</tt>]   Name of the file",1],["Formatter","Log4r","classes/Log4r/Formatter.html"," < Object","Formatter is an abstract class and a null object ",1],["GDC","Log4r","classes/Log4r/GDC.html"," < Monitor","See log4r/GDC.rb ",1],["IOOutputter","Log4r","classes/Log4r/IOOutputter.html"," < Outputter","IO Outputter invokes print then flush on the wrapped IO object. If the IO stream dies, IOOutputter sets",1],["Log4jXmlFormatter","Log4r","classes/Log4r/Log4jXmlFormatter.html"," < BasicFormatter","",1],["Log4rTools","Log4r","classes/Log4r/Log4rTools.html"," < Object","Some common functions  ",1],["LogEvent","Log4r","classes/Log4r/LogEvent.html"," < Object","LogEvent wraps up all the miscellaneous data associated with a logging statement. It gets passed around",1],["LogServer","Log4r","classes/Log4r/LogServer.html"," < Logger","See log4r/logserver.rb ",1],["Logger","Log4r","classes/Log4r/Logger.html"," < Object","See log4r/logger.rb ",1],["MDC","Log4r","classes/Log4r/MDC.html"," < Monitor","See log4r/MDC.rb ",1],["NDC","Log4r","classes/Log4r/NDC.html"," < Object","See log4r/NDC.rb ",1],["ObjectFormatter","Log4r","classes/Log4r/ObjectFormatter.html"," < Formatter","Formats objects the same way irb does: loggername:foo.rb in 12>  [1, 3, 4] loggername:foo.rb in 13> ",1],["Outputter","Log4r","classes/Log4r/Outputter.html"," < Monitor","",1],["PatternFormatter","Log4r","classes/Log4r/PatternFormatter.html"," < BasicFormatter","See log4r/formatter/patternformatter.rb ",1],["RemoteOutputter","Log4r","classes/Log4r/RemoteOutputter.html"," < Outputter","See log4r/logserver.rb ",1],["RollingFileOutputter","Log4r","classes/Log4r/RollingFileOutputter.html"," < FileOutputter","RollingFileOutputter - subclass of FileOutputter that rolls files on size or time. So, given a filename",1],["RootLogger","Log4r","classes/Log4r/RootLogger.html"," < Logger","RootLogger should be retrieved with Logger.root or Logger.global. It's supposed to be transparent. ",1],["ScribeOutputter","Log4r","classes/Log4r/ScribeOutputter.html"," < Outputter","",1],["SimpleFormatter","Log4r","classes/Log4r/SimpleFormatter.html"," < Formatter","SimpleFormatter produces output like this: WARN loggername> Danger, Will Robinson, danger! Does not write",1],["StderrOutputter","Log4r","classes/Log4r/StderrOutputter.html"," < IOOutputter","Same as IOOutputter(name, $stderr) ",1],["StdoutOutputter","Log4r","classes/Log4r/StdoutOutputter.html"," < IOOutputter","Same as IOOutputter(name, $stdout) ",1],["SyslogOutputter","Log4r","classes/Log4r/SyslogOutputter.html"," < Outputter","",1],["UDPOutputter","Log4r","classes/Log4r/UDPOutputter.html"," < Outputter","",1],["YamlConfigurator","Log4r","classes/Log4r/YamlConfigurator.html"," < Object","See log4r/yamlconfigurator.rb ",1],["==","Log4r::Logger","classes/Log4r/Logger.html#M000053","(other)","",2],["[]","Log4r::Configurator","classes/Log4r/Configurator.html#M000009","(param)","Get a parameter's value ",2],["[]","Log4r::Logger","classes/Log4r/Logger.html#M000139","(_fullname)","Get a logger with a fullname from the repository or nil if logger wasn't found. ",2],["[]","Log4r::Outputter","classes/Log4r/Outputter.html#M000117","(name)","Retrieve an outputter. ",2],["[]","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000144","(param)","Get a parameter's value ",2],["[]=","Log4r::Configurator","classes/Log4r/Configurator.html#M000010","(param, value)","Define a parameter with a value ",2],["[]=","Log4r::Outputter","classes/Log4r/Outputter.html#M000120","(name, outputter)","Set an outputter. ",2],["[]=","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000145","(param, value)","Define a parameter with a value ",2],["actual_load","Log4r::Configurator","classes/Log4r/Configurator.html#M000018","(doc)","",2],["actual_load","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000149","( yaml_docs)","",2],["add","Log4r::Logger","classes/Log4r/Logger.html#M000050","(*_outputters)","Add outputters by name or by reference. Can be done any time. ",2],["add","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000060","(*foo)","Does nothing ",2],["additive=","Log4r::Logger","classes/Log4r/Logger.html#M000046","(_additive)","Set the additivity of the logger dynamically. True or false. ",2],["additive=","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000059","(foo)","Does nothing ",2],["canonical_log","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000093","(event)","",2],["canonical_log","Log4r::Outputter","classes/Log4r/Outputter.html#M000105","(logevent)","This method handles all log events passed to a typical Outputter.  Overload this to change the overall",2],["canonical_log","Log4r::RemoteOutputter","classes/Log4r/RemoteOutputter.html#M000112","(logevent)","",2],["canonical_log","Log4r::SyslogOutputter","classes/Log4r/SyslogOutputter.html#M000135","(logevent)","",2],["change","Log4r::DateFileOutputter","classes/Log4r/DateFileOutputter.html#M000086","()","change the file  ",2],["check_thread_instance","Log4r::MDC","classes/Log4r/MDC.html#M000064","()","",2],["check_thread_instance","Log4r::NDC","classes/Log4r/NDC.html#M000069","()","",2],["clear","Log4r::GDC","classes/Log4r/GDC.html#M000035","()","",2],["clear","Log4r::NDC","classes/Log4r/NDC.html#M000070","()","",2],["clone_stack","Log4r::NDC","classes/Log4r/NDC.html#M000071","()","",2],["close","Log4r::IOOutputter","classes/Log4r/IOOutputter.html#M000097","()","Close the IO and sets level to OFF ",2],["close","Log4r::SyslogOutputter","classes/Log4r/SyslogOutputter.html#M000131","()","",2],["closed?","Log4r::IOOutputter","classes/Log4r/IOOutputter.html#M000096","()","",2],["closed?","Log4r::SyslogOutputter","classes/Log4r/SyslogOutputter.html#M000130","()","",2],["comma_split","Log4r::Log4rTools","classes/Log4r/Log4rTools.html#M000005","(string)","Splits comma-delimited lists with arbitrary \\s padding ",2],["custom_levels","Log4r::Configurator","classes/Log4r/Configurator.html#M000013","(*levels)","Sets the custom levels. This method accepts symbols or strings. Configurator.custom_levels('My', 'Custom',",2],["custom_levels","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000146","( levels)","",2],["deal_with_inheritance","Log4r::Logger","classes/Log4r/Logger.html#M000043","(_level)","Parses name for location in heiarchy, sets the parent, and deals with level inheritance ",2],["decode_bool","Log4r::Log4rTools","classes/Log4r/Log4rTools.html#M000004","(hash, symbol, default)","Shortcut for decoding 'true', 'false', true, false or nil into a bool from a hash parameter. E.g., it",2],["decode_custom_levels","Log4r::Configurator","classes/Log4r/Configurator.html#M000022","(e)","",2],["decode_custom_levels","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000152","( levels)","",2],["decode_formatter","Log4r::Configurator","classes/Log4r/Configurator.html#M000027","(e)","",2],["decode_formatter","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000156","( fo)","",2],["decode_hash_params","Log4r::Configurator","classes/Log4r/Configurator.html#M000028","(e)","Does the fancy parameter to hash argument transformation ",2],["decode_hash_params","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000157","(ph)","Does the fancy parameter to hash argument transformation ",2],["decode_immediate_at","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000090","(hash)","",2],["decode_logger","Log4r::Configurator","classes/Log4r/Configurator.html#M000031","(e)","",2],["decode_logger","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000159","( lo)","",2],["decode_logger_common","Log4r::Configurator","classes/Log4r/Configurator.html#M000033","(l, e)","",2],["decode_logger_common","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000161","( l, lo)","",2],["decode_logserver","Log4r::Configurator","classes/Log4r/Configurator.html#M000032","(e)","",2],["decode_logserver","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000160","( lo)","",2],["decode_outputter","Log4r::Configurator","classes/Log4r/Configurator.html#M000026","(e)","",2],["decode_outputter","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000155","( op)","",2],["decode_parameter","Log4r::Configurator","classes/Log4r/Configurator.html#M000025","(e)","",2],["decode_parameters","Log4r::Configurator","classes/Log4r/Configurator.html#M000024","(e)","",2],["decode_parameters","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000154","( params)","",2],["decode_pre_config","Log4r::Configurator","classes/Log4r/Configurator.html#M000021","(e)","",2],["decode_pre_config","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000151","( pre)","",2],["decode_xml","Log4r::Configurator","classes/Log4r/Configurator.html#M000019","(doc)","",2],["decode_yaml","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000150","( cfg)","",2],["detect_rexml","Log4r::Configurator","classes/Log4r/Configurator.html#M000016","()","",2],["each","Log4r::Logger","classes/Log4r/Logger.html#M000141","()","Yields fullname and logger for every logger in the system. ",2],["each","Log4r::Outputter","classes/Log4r/Outputter.html#M000123","()","Yields each outputter's name and reference. ",2],["each_logger","Log4r::Logger","classes/Log4r/Logger.html#M000142","()","",2],["each_outputter","Log4r::Outputter","classes/Log4r/Outputter.html#M000124","()","",2],["flush","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000088","()","send out an email with the current buffer ",2],["flush","Log4r::Outputter","classes/Log4r/Outputter.html#M000103","()","Call flush to force an outputter to write out any buffered log events. Similar to IO#flush, so use in",2],["flush","Log4r::RemoteOutputter","classes/Log4r/RemoteOutputter.html#M000111","()","Call flush to send any remaining LogEvents to the remote server. ",2],["format","Log4r::BasicFormatter","classes/Log4r/BasicFormatter.html#M000012","(event)","",2],["format","Log4r::Formatter","classes/Log4r/Formatter.html#M000007","(logevent)","Define this method in a subclass to format data. ",2],["format","Log4r::Log4jXmlFormatter","classes/Log4r/Log4jXmlFormatter.html#M000029","(logevent)","",2],["format","Log4r::ObjectFormatter","classes/Log4r/ObjectFormatter.html#M000020","(event)","",2],["format","Log4r::Outputter","classes/Log4r/Outputter.html#M000106","(logevent)","Common method to format data. All it does is call the resident formatter's format method. If a different",2],["format","Log4r::SimpleFormatter","classes/Log4r/SimpleFormatter.html#M000008","(event)","",2],["format_object","Log4r::BasicFormatter","classes/Log4r/BasicFormatter.html#M000017","(obj)","Formats data according to its class: String::     Prints it out as normal. Exception::  Produces output",2],["formatter=","Log4r::Outputter","classes/Log4r/Outputter.html#M000102","(_formatter)","Dynamically change the formatter. You can just specify a Class object and the formatter will invoke +new+",2],["get","Log4r::GDC","classes/Log4r/GDC.html#M000036","()","",2],["get","Log4r::Logger","classes/Log4r/Logger.html#M000140","(_fullname)","Like Logger[] except that it raises NameError if Logger wasn't found. ",2],["get","Log4r::MDC","classes/Log4r/MDC.html#M000065","( a_key )","",2],["get","Log4r::NDC","classes/Log4r/NDC.html#M000074","()","",2],["get_context","Log4r::MDC","classes/Log4r/MDC.html#M000066","()","",2],["get_current_sequence_number","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000121","()","Get the highest existing log file sequence number, or 1 if there are no existing log files. ",2],["get_depth","Log4r::NDC","classes/Log4r/NDC.html#M000072","()","",2],["get_levels_map","Log4r::SyslogOutputter","classes/Log4r/SyslogOutputter.html#M000134","()","",2],["global","Log4r::Logger","classes/Log4r/Logger.html#M000138","()","Returns the root logger. Identical to Logger.root ",2],["global_config","Log4r::Configurator","classes/Log4r/Configurator.html#M000023","(e)","",2],["global_config","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000153","( e)","",2],["inherit","Log4r::NDC","classes/Log4r/NDC.html#M000073","( a_stack )","",2],["is_root?","Log4r::Logger","classes/Log4r/Logger.html#M000052","()","",2],["is_root?","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000055","()","",2],["level=","Log4r::Logger","classes/Log4r/Logger.html#M000044","(_level)","Set the logger level dynamically. Does not affect children. ",2],["level=","Log4r::Outputter","classes/Log4r/Outputter.html#M000100","(_level)","dynamically change the level ",2],["level=","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000056","(alevel)","Set the global level. Any loggers defined thereafter will not log below the global level regardless of",2],["levels","Log4r::Logger","classes/Log4r/Logger.html#M000045","()","Return array of defined levels. ",2],["load_xml_file","Log4r::Configurator","classes/Log4r/Configurator.html#M000014","(filename)","Given a filename, loads the XML configuration for Log4r. ",2],["load_xml_string","Log4r::Configurator","classes/Log4r/Configurator.html#M000015","(string)","You can load a String XML configuration instead of a file. ",2],["load_yaml_file","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000147","( filename)","Given a filename, loads the YAML configuration for Log4r. ",2],["load_yaml_string","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000148","( string)","You can load a String YAML configuration instead of a file. ",2],["log_internal","Log4r::Logger","classes/Log4r/Logger.html#M000143","(level=1)","Internal logging for Log4r components. Accepts only blocks. To see such log events, create a logger named",2],["makeNewFilename","Log4r::DateFileOutputter","classes/Log4r/DateFileOutputter.html#M000084","()","construct a new filename from the DateStamp ",2],["makeNewFilename","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000125","()","Constructs a new filename from the @current_sequence_number, @core_file_name, and @file_extension, and",2],["map_levels_by_name_to_syslog","Log4r::SyslogOutputter","classes/Log4r/SyslogOutputter.html#M000133","( lmap = SYSLOG_LOG4R_MAP )","A single hash argument that maps custom names to syslog names [<tt>levels_map</tt>] A map that will create",2],["new","Log4r::BasicFormatter","classes/Log4r/BasicFormatter.html#M000011","(hash={})","",2],["new","Log4r::DateFileOutputter","classes/Log4r/DateFileOutputter.html#M000082","(_name, hash={})","",2],["new","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000087","(_name, hash={})","",2],["new","Log4r::FileOutputter","classes/Log4r/FileOutputter.html#M000092","(_name, hash={})","",2],["new","Log4r::Formatter","classes/Log4r/Formatter.html#M000006","(hash={})","",2],["new","Log4r::IOOutputter","classes/Log4r/IOOutputter.html#M000095","(_name, _out, hash={})","IOOutputter needs an IO object to write to. ",2],["new","Log4r::LogEvent","classes/Log4r/LogEvent.html#M000040","(level, logger, tracer, data)","",2],["new","Log4r::LogServer","classes/Log4r/LogServer.html#M000063","(*args)","",2],["new","Log4r::LogServer","classes/Log4r/LogServer.html#M000062","(_fullname, _uri, _level=nil, _additive=true, _trace=false, &accept)","A valid ROMP uri must be specified. ",2],["new","Log4r::Logger","classes/Log4r/Logger.html#M000041","(_fullname, _level=nil, _additive=true, _trace=false)","Logger requires a name. The last 3 parameters are: level::     Do I have a level? (Otherwise, I'll inherit",2],["new","Log4r::Outputter","classes/Log4r/Outputter.html#M000099","(_name, hash={})","An Outputter needs a name. RootLogger will be loaded if not already done. The hash arguments are as follows:",2],["new","Log4r::PatternFormatter","classes/Log4r/PatternFormatter.html#M000038","(hash={})","Accepts the following hash arguments (either a string or a symbol): [<tt>pattern</tt>]         A pattern",2],["new","Log4r::RemoteOutputter","classes/Log4r/RemoteOutputter.html#M000109","(_name, hash={})","",2],["new","Log4r::RemoteOutputter","classes/Log4r/RemoteOutputter.html#M000110","(*args)","",2],["new","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000114","(_name, hash={})","",2],["new","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000054","()","",2],["new","Log4r::ScribeOutputter","classes/Log4r/ScribeOutputter.html#M000113","(_name, hash={})","",2],["new","Log4r::StderrOutputter","classes/Log4r/StderrOutputter.html#M000081","(_name, hash={})","",2],["new","Log4r::StdoutOutputter","classes/Log4r/StdoutOutputter.html#M000080","(_name, hash={})","",2],["new","Log4r::SyslogOutputter","classes/Log4r/SyslogOutputter.html#M000129","(_name, hash={})","There are 3 hash arguments [<tt>:ident</tt>]     syslog ident, defaults to _name [<tt>:logopt</tt>] ",2],["new","Log4r::UDPOutputter","classes/Log4r/UDPOutputter.html#M000132","(_name, hash={})","",2],["only_at","Log4r::Outputter","classes/Log4r/Outputter.html#M000101","(*levels)","Set the levels to log. All others will be ignored ",2],["open_log_file","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000126","(mode)","Open @filename with the given mode: 'a' - appends to the end of the file if it exists; otherwise creates",2],["outputters=","Log4r::Logger","classes/Log4r/Logger.html#M000049","(_outputters)","Set the Outputters dynamically by name or reference. Can be done any time. ",2],["outputters=","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000057","(foo)","Does nothing ",2],["paramsub","Log4r::Configurator","classes/Log4r/Configurator.html#M000030","(str)","Substitues any #{foo} in the XML with Parameter['foo'] ",2],["paramsub","Log4r::YamlConfigurator","classes/Log4r/YamlConfigurator.html#M000158","(str)","Substitues any #{foo} in the YAML with Parameter['foo'] ",2],["parent=","Log4r::Logger","classes/Log4r/Logger.html#M000048","(parent)","Please don't reset the parent ",2],["parse_caller","Log4r::Log4jXmlFormatter","classes/Log4r/Log4jXmlFormatter.html#M000034","(line)","",2],["peek","Log4r::NDC","classes/Log4r/NDC.html#M000075","()","",2],["pop","Log4r::NDC","classes/Log4r/NDC.html#M000076","()","",2],["purge_log_files","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000116","(number_to_keep)","Delete all but the latest number_to_keep log files. ",2],["push","Log4r::NDC","classes/Log4r/NDC.html#M000077","( value )","",2],["put","Log4r::MDC","classes/Log4r/MDC.html#M000067","( a_key, a_value )","",2],["remove","Log4r::Logger","classes/Log4r/Logger.html#M000051","(*_outputters)","Remove outputters from this logger by name only. Can be done any time. ",2],["remove","Log4r::MDC","classes/Log4r/MDC.html#M000068","( a_key )","",2],["remove","Log4r::NDC","classes/Log4r/NDC.html#M000078","()","",2],["remove","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000061","(*foo)","Does nothing ",2],["requiresChange","Log4r::DateFileOutputter","classes/Log4r/DateFileOutputter.html#M000085","()","does the file require a change? ",2],["requiresRoll","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000127","()","does the file require a roll? ",2],["roll","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000128","()","roll the file ",2],["root","Log4r::Logger","classes/Log4r/Logger.html#M000137","()","Returns the root logger. Identical to Logger.global ",2],["send_mail","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000094","()","",2],["set","Log4r::GDC","classes/Log4r/GDC.html#M000037","( a_name )","",2],["set_max_depth","Log4r::NDC","classes/Log4r/NDC.html#M000079","( max_depth )","",2],["stderr","Log4r::Outputter","classes/Log4r/Outputter.html#M000119","()","",2],["stdout","Log4r::Outputter","classes/Log4r/Outputter.html#M000118","()","",2],["synch","Log4r::Outputter","classes/Log4r/Outputter.html#M000108","()","",2],["trace=","Log4r::Logger","classes/Log4r/Logger.html#M000047","(_trace)","Set whether the logger traces. Can be set dynamically. Defaults to false and understands the strings",2],["trace=","Log4r::RootLogger","classes/Log4r/RootLogger.html#M000058","(foo)","Does nothing ",2],["valid_level?","Log4r::Log4rTools","classes/Log4r/Log4rTools.html#M000002","(lev)","",2],["validate","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000089","(hash)","",2],["validate_hash","Log4r::Outputter","classes/Log4r/Outputter.html#M000104","(hash)","Validates the common hash arguments. For now, that would be +:level+, +:formatter+ and the string equivalents",2],["validate_level","Log4r::Log4rTools","classes/Log4r/Log4rTools.html#M000001","(level, depth=0)","Raises ArgumentError if level argument is an invalid level. Depth specifies how many trace entries to",2],["validate_name","Log4r::Logger","classes/Log4r/Logger.html#M000042","(_fullname)","",2],["validate_smtp_params","Log4r::EmailOutputter","classes/Log4r/EmailOutputter.html#M000091","(hash)","",2],["write","Log4r::DateFileOutputter","classes/Log4r/DateFileOutputter.html#M000083","(data)","perform the write ",2],["write","Log4r::IOOutputter","classes/Log4r/IOOutputter.html#M000098","(data)","perform the write ",2],["write","Log4r::Outputter","classes/Log4r/Outputter.html#M000107","(data)","Abstract method to actually write the data to a destination. Custom outputters should overload this to",2],["write","Log4r::RollingFileOutputter","classes/Log4r/RollingFileOutputter.html#M000122","(data)","perform the write ",2],["write","Log4r::ScribeOutputter","classes/Log4r/ScribeOutputter.html#M000115","(data)","",2],["write","Log4r::UDPOutputter","classes/Log4r/UDPOutputter.html#M000136","(data)","",2],["log4r.rb","files/lib/log4r_rb.html","files/lib/log4r_rb.html","","= #{version} Log4r API Reference Welcome to the Log4r API reference. There are two classes of reference,",3],["GDC.rb","files/lib/log4r/GDC_rb.html","files/lib/log4r/GDC_rb.html","","= GDC The GDC class implements a copy of the Global Diagnostic Context, which is not part of the Apache",3],["MDC.rb","files/lib/log4r/MDC_rb.html","files/lib/log4r/MDC_rb.html","","= MDC The MDC class implements a copy of the Mapped Diagnostic Context, which is part of the Apache Log4j",3],["NDC.rb","files/lib/log4r/NDC_rb.html","files/lib/log4r/NDC_rb.html","","= NDC The NDC class implements a copy of the Nested Diagnostic Context, which is part of the Apache Log4j",3],["base.rb","files/lib/log4r/base_rb.html","files/lib/log4r/base_rb.html","",":nodoc:  ",3],["config.rb","files/lib/log4r/config_rb.html","files/lib/log4r/config_rb.html","",":nodoc:  Version:: $Id$ --- TODO: catch unparsed parameters #{FOO} and die --- :nodoc:  --- :nodoc: ",3],["configurator.rb","files/lib/log4r/configurator_rb.html","files/lib/log4r/configurator_rb.html","","= Configuring Log4r with Log4r::Configurator The Configurator class allows one to set up Log4r via XML.",3],["formatter.rb","files/lib/log4r/formatter/formatter_rb.html","files/lib/log4r/formatter/formatter_rb.html","","= Formatters Formatters are responsible for formatting LogEvent data. An Outputter owning a Formatter",3],["log4jxmlformatter.rb","files/lib/log4r/formatter/log4jxmlformatter_rb.html","files/lib/log4r/formatter/log4jxmlformatter_rb.html","","= Configuring Log4r with Log4r::YamlConfigurator The YamlConfigurator class allows one to set up Log4r",3],["patternformatter.rb","files/lib/log4r/formatter/patternformatter_rb.html","files/lib/log4r/formatter/patternformatter_rb.html","","= PatternFormatter PatternFormatter offers complete control over the appearance of Log4r log events without",3],["drbloader.rb","files/lib/log4r/lib/drbloader_rb.html","files/lib/log4r/lib/drbloader_rb.html","",":nodoc:  ",3],["xmlloader.rb","files/lib/log4r/lib/xmlloader_rb.html","files/lib/log4r/lib/xmlloader_rb.html","",":nodoc:  ",3],["logevent.rb","files/lib/log4r/logevent_rb.html","files/lib/log4r/logevent_rb.html","",":nodoc:  ",3],["logger.rb","files/lib/log4r/logger_rb.html","files/lib/log4r/logger_rb.html","","= Loggers Loggers provide the interface for logging in Log4r. To create a logger, first come up with",3],["loggerfactory.rb","files/lib/log4r/loggerfactory_rb.html","files/lib/log4r/loggerfactory_rb.html","",":nodoc:  Version:: $Id$ ",3],["logserver.rb","files/lib/log4r/logserver_rb.html","files/lib/log4r/logserver_rb.html","","= Remote Logging  Want to use Log4r over a network? No problem! A Log4r::RemoteOutputter will send its",3],["consoleoutputters.rb","files/lib/log4r/outputter/consoleoutputters_rb.html","files/lib/log4r/outputter/consoleoutputters_rb.html","",":nodoc:  ",3],["datefileoutputter.rb","files/lib/log4r/outputter/datefileoutputter_rb.html","files/lib/log4r/outputter/datefileoutputter_rb.html","","= DateFileOutputter Subclass of FileOutputter that changes the log file daily. When a new day begins,",3],["emailoutputter.rb","files/lib/log4r/outputter/emailoutputter_rb.html","files/lib/log4r/outputter/emailoutputter_rb.html","","= EmailOutputter This is an experimental class that sends a number of formatted log events as  an RFC",3],["fileoutputter.rb","files/lib/log4r/outputter/fileoutputter_rb.html","files/lib/log4r/outputter/fileoutputter_rb.html","",":nodoc:  Version:: $Id$ ",3],["iooutputter.rb","files/lib/log4r/outputter/iooutputter_rb.html","files/lib/log4r/outputter/iooutputter_rb.html","",":nodoc:  ",3],["outputter.rb","files/lib/log4r/outputter/outputter_rb.html","files/lib/log4r/outputter/outputter_rb.html","","= Outputters An Outputter is a logging destination with a particular way to format data. It has a level",3],["outputterfactory.rb","files/lib/log4r/outputter/outputterfactory_rb.html","files/lib/log4r/outputter/outputterfactory_rb.html","",":nodoc:  Version: $Id$ ",3],["remoteoutputter.rb","files/lib/log4r/outputter/remoteoutputter_rb.html","files/lib/log4r/outputter/remoteoutputter_rb.html","",":nodoc:  ",3],["rollingfileoutputter.rb","files/lib/log4r/outputter/rollingfileoutputter_rb.html","files/lib/log4r/outputter/rollingfileoutputter_rb.html","",":nodoc:  Version:: $Id: rollingfileoutputter.rb,v 1.2 2009/09/29 18:13:13 colbygk Exp $ ",3],["scribeoutputter.rb","files/lib/log4r/outputter/scribeoutputter_rb.html","files/lib/log4r/outputter/scribeoutputter_rb.html","",":nodoc:  Version:: $Id$ ",3],["staticoutputter.rb","files/lib/log4r/outputter/staticoutputter_rb.html","files/lib/log4r/outputter/staticoutputter_rb.html","",":nodoc:  ",3],["syslogoutputter.rb","files/lib/log4r/outputter/syslogoutputter_rb.html","files/lib/log4r/outputter/syslogoutputter_rb.html","","= SyslogOutputter A SyslogOutputter transforms a Log4r::LogEvent into a call to syslog(). Since syslog",3],["udpoutputter.rb","files/lib/log4r/outputter/udpoutputter_rb.html","files/lib/log4r/outputter/udpoutputter_rb.html","","= Outputters An Outputter is a logging destination with a particular way to format data. It has a level",3],["GDC","files/lib/log4r/rdoc/GDC.html","files/lib/log4r/rdoc/GDC.html","","= GDC  The GDC class implements a copy of the Global Diagnostic Context, which is not part of the Apache",3],["MDC","files/lib/log4r/rdoc/MDC.html","files/lib/log4r/rdoc/MDC.html","","= MDC  The MDC class implements a copy of the Mapped Diagnostic Context, which is part of the Apache",3],["NDC","files/lib/log4r/rdoc/NDC.html","files/lib/log4r/rdoc/NDC.html","","= NDC  The NDC class implements a copy of the Nested Diagnostic Context, which is part of the Apache",3],["configurator","files/lib/log4r/rdoc/configurator.html","files/lib/log4r/rdoc/configurator.html","","= Configuring Log4r with Log4r::Configurator  The Configurator class allows one to set up Log4r via XML.",3],["emailoutputter","files/lib/log4r/rdoc/emailoutputter.html","files/lib/log4r/rdoc/emailoutputter.html","","= EmailOutputter  This is an experimental class that sends a number of formatted log events as  an RFC",3],["formatter","files/lib/log4r/rdoc/formatter.html","files/lib/log4r/rdoc/formatter.html","","= Formatters  Formatters are responsible for formatting LogEvent data. An Outputter owning a Formatter",3],["log4jxmlformatter","files/lib/log4r/rdoc/log4jxmlformatter.html","files/lib/log4r/rdoc/log4jxmlformatter.html","","= Configuring Log4r with Log4r::YamlConfigurator  The YamlConfigurator class allows one to set up Log4r",3],["log4r","files/lib/log4r/rdoc/log4r.html","files/lib/log4r/rdoc/log4r.html","","= #{version} Log4r API Reference  Welcome to the Log4r API reference. There are two classes of reference,",3],["logger","files/lib/log4r/rdoc/logger.html","files/lib/log4r/rdoc/logger.html","","= Loggers  Loggers provide the interface for logging in Log4r. To create a logger, first come up with",3],["logserver","files/lib/log4r/rdoc/logserver.html","files/lib/log4r/rdoc/logserver.html","","= Remote Logging   Want to use Log4r over a network? No problem! A Log4r::RemoteOutputter will send its",3],["outputter","files/lib/log4r/rdoc/outputter.html","files/lib/log4r/rdoc/outputter.html","","= Outputters  An Outputter is a logging destination with a particular way to format data. It has a level",3],["patternformatter","files/lib/log4r/rdoc/patternformatter.html","files/lib/log4r/rdoc/patternformatter.html","","= PatternFormatter  PatternFormatter offers complete control over the appearance of Log4r log events",3],["scribeoutputter","files/lib/log4r/rdoc/scribeoutputter.html","files/lib/log4r/rdoc/scribeoutputter.html","","= ScribeOutputter  A ScribeOutputter transforms a Log4r::LogEvent into an event passed to Scribe. The",3],["syslogoutputter","files/lib/log4r/rdoc/syslogoutputter.html","files/lib/log4r/rdoc/syslogoutputter.html","","= SyslogOutputter  A SyslogOutputter transforms a Log4r::LogEvent into a call to syslog(). Since syslog",3],["win32eventoutputter","files/lib/log4r/rdoc/win32eventoutputter.html","files/lib/log4r/rdoc/win32eventoutputter.html","","= Win32EventOutputter  THIS IS A DEVELOPMENT VERSION AND IS NOT READY FOR USE INFACT, IT MAY NEVER BE",3],["yamlconfigurator","files/lib/log4r/rdoc/yamlconfigurator.html","files/lib/log4r/rdoc/yamlconfigurator.html","","= Configuring Log4r with Log4r::YamlConfigurator  The YamlConfigurator class allows one to set up Log4r",3],["repository.rb","files/lib/log4r/repository_rb.html","files/lib/log4r/repository_rb.html","",":nodoc:  Version:: $Id$ Using Thread.exclusive seems to be more efficient than using a class wide instance",3],["staticlogger.rb","files/lib/log4r/staticlogger_rb.html","files/lib/log4r/staticlogger_rb.html","",":nodoc:  ",3],["version.rb","files/lib/log4r/version_rb.html","files/lib/log4r/version_rb.html","","",3],["yamlconfigurator.rb","files/lib/log4r/yamlconfigurator_rb.html","files/lib/log4r/yamlconfigurator_rb.html","","= Configuring Log4r with Log4r::YamlConfigurator The YamlConfigurator class allows one to set up Log4r",3]],"searchIndex":["log4r","basicformatter","configerror","configurator","datefileoutputter","defaultformatter","emailoutputter","fileoutputter","formatter","gdc","iooutputter","log4jxmlformatter","log4rtools","logevent","logserver","logger","mdc","ndc","objectformatter","outputter","patternformatter","remoteoutputter","rollingfileoutputter","rootlogger","scribeoutputter","simpleformatter","stderroutputter","stdoutoutputter","syslogoutputter","udpoutputter","yamlconfigurator","==()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","actual_load()","actual_load()","add()","add()","additive=()","additive=()","canonical_log()","canonical_log()","canonical_log()","canonical_log()","change()","check_thread_instance()","check_thread_instance()","clear()","clear()","clone_stack()","close()","close()","closed?()","closed?()","comma_split()","custom_levels()","custom_levels()","deal_with_inheritance()","decode_bool()","decode_custom_levels()","decode_custom_levels()","decode_formatter()","decode_formatter()","decode_hash_params()","decode_hash_params()","decode_immediate_at()","decode_logger()","decode_logger()","decode_logger_common()","decode_logger_common()","decode_logserver()","decode_logserver()","decode_outputter()","decode_outputter()","decode_parameter()","decode_parameters()","decode_parameters()","decode_pre_config()","decode_pre_config()","decode_xml()","decode_yaml()","detect_rexml()","each()","each()","each_logger()","each_outputter()","flush()","flush()","flush()","format()","format()","format()","format()","format()","format()","format_object()","formatter=()","get()","get()","get()","get()","get_context()","get_current_sequence_number()","get_depth()","get_levels_map()","global()","global_config()","global_config()","inherit()","is_root?()","is_root?()","level=()","level=()","level=()","levels()","load_xml_file()","load_xml_string()","load_yaml_file()","load_yaml_string()","log_internal()","makenewfilename()","makenewfilename()","map_levels_by_name_to_syslog()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","only_at()","open_log_file()","outputters=()","outputters=()","paramsub()","paramsub()","parent=()","parse_caller()","peek()","pop()","purge_log_files()","push()","put()","remove()","remove()","remove()","remove()","requireschange()","requiresroll()","roll()","root()","send_mail()","set()","set_max_depth()","stderr()","stdout()","synch()","trace=()","trace=()","valid_level?()","validate()","validate_hash()","validate_level()","validate_name()","validate_smtp_params()","write()","write()","write()","write()","write()","write()","log4r.rb","gdc.rb","mdc.rb","ndc.rb","base.rb","config.rb","configurator.rb","formatter.rb","log4jxmlformatter.rb","patternformatter.rb","drbloader.rb","xmlloader.rb","logevent.rb","logger.rb","loggerfactory.rb","logserver.rb","consoleoutputters.rb","datefileoutputter.rb","emailoutputter.rb","fileoutputter.rb","iooutputter.rb","outputter.rb","outputterfactory.rb","remoteoutputter.rb","rollingfileoutputter.rb","scribeoutputter.rb","staticoutputter.rb","syslogoutputter.rb","udpoutputter.rb","gdc","mdc","ndc","configurator","emailoutputter","formatter","log4jxmlformatter","log4r","logger","logserver","outputter","patternformatter","scribeoutputter","syslogoutputter","win32eventoutputter","yamlconfigurator","repository.rb","staticlogger.rb","version.rb","yamlconfigurator.rb"],"longSearchIndex":["lib/log4r/yamlconfigurator.rb","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r","log4r::logger","log4r::configurator","log4r::logger","log4r::outputter","log4r::yamlconfigurator","log4r::configurator","log4r::outputter","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::logger","log4r::rootlogger","log4r::logger","log4r::rootlogger","log4r::emailoutputter","log4r::outputter","log4r::remoteoutputter","log4r::syslogoutputter","log4r::datefileoutputter","log4r::mdc","log4r::ndc","log4r::gdc","log4r::ndc","log4r::ndc","log4r::iooutputter","log4r::syslogoutputter","log4r::iooutputter","log4r::syslogoutputter","log4r::log4rtools","log4r::configurator","log4r::yamlconfigurator","log4r::logger","log4r::log4rtools","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::emailoutputter","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::yamlconfigurator","log4r::configurator","log4r::logger","log4r::outputter","log4r::logger","log4r::outputter","log4r::emailoutputter","log4r::outputter","log4r::remoteoutputter","log4r::basicformatter","log4r::formatter","log4r::log4jxmlformatter","log4r::objectformatter","log4r::outputter","log4r::simpleformatter","log4r::basicformatter","log4r::outputter","log4r::gdc","log4r::logger","log4r::mdc","log4r::ndc","log4r::mdc","log4r::rollingfileoutputter","log4r::ndc","log4r::syslogoutputter","log4r::logger","log4r::configurator","log4r::yamlconfigurator","log4r::ndc","log4r::logger","log4r::rootlogger","log4r::logger","log4r::outputter","log4r::rootlogger","log4r::logger","log4r::configurator","log4r::configurator","log4r::yamlconfigurator","log4r::yamlconfigurator","log4r::logger","log4r::datefileoutputter","log4r::rollingfileoutputter","log4r::syslogoutputter","log4r::basicformatter","log4r::datefileoutputter","log4r::emailoutputter","log4r::fileoutputter","log4r::formatter","log4r::iooutputter","log4r::logevent","log4r::logserver","log4r::logserver","log4r::logger","log4r::outputter","log4r::patternformatter","log4r::remoteoutputter","log4r::remoteoutputter","log4r::rollingfileoutputter","log4r::rootlogger","log4r::scribeoutputter","log4r::stderroutputter","log4r::stdoutoutputter","log4r::syslogoutputter","log4r::udpoutputter","log4r::outputter","log4r::rollingfileoutputter","log4r::logger","log4r::rootlogger","log4r::configurator","log4r::yamlconfigurator","log4r::logger","log4r::log4jxmlformatter","log4r::ndc","log4r::ndc","log4r::rollingfileoutputter","log4r::ndc","log4r::mdc","log4r::logger","log4r::mdc","log4r::ndc","log4r::rootlogger","log4r::datefileoutputter","log4r::rollingfileoutputter","log4r::rollingfileoutputter","log4r::logger","log4r::emailoutputter","log4r::gdc","log4r::ndc","log4r::outputter","log4r::outputter","log4r::outputter","log4r::logger","log4r::rootlogger","log4r::log4rtools","log4r::emailoutputter","log4r::outputter","log4r::log4rtools","log4r::logger","log4r::emailoutputter","log4r::datefileoutputter","log4r::iooutputter","log4r::outputter","log4r::rollingfileoutputter","log4r::scribeoutputter","log4r::udpoutputter","files/lib/log4r_rb.html","files/lib/log4r/gdc_rb.html","files/lib/log4r/mdc_rb.html","files/lib/log4r/ndc_rb.html","files/lib/log4r/base_rb.html","files/lib/log4r/config_rb.html","files/lib/log4r/configurator_rb.html","files/lib/log4r/formatter/formatter_rb.html","files/lib/log4r/formatter/log4jxmlformatter_rb.html","files/lib/log4r/formatter/patternformatter_rb.html","files/lib/log4r/lib/drbloader_rb.html","files/lib/log4r/lib/xmlloader_rb.html","files/lib/log4r/logevent_rb.html","files/lib/log4r/logger_rb.html","files/lib/log4r/loggerfactory_rb.html","files/lib/log4r/logserver_rb.html","files/lib/log4r/outputter/consoleoutputters_rb.html","files/lib/log4r/outputter/datefileoutputter_rb.html","files/lib/log4r/outputter/emailoutputter_rb.html","files/lib/log4r/outputter/fileoutputter_rb.html","files/lib/log4r/outputter/iooutputter_rb.html","files/lib/log4r/outputter/outputter_rb.html","files/lib/log4r/outputter/outputterfactory_rb.html","files/lib/log4r/outputter/remoteoutputter_rb.html","files/lib/log4r/outputter/rollingfileoutputter_rb.html","files/lib/log4r/outputter/scribeoutputter_rb.html","files/lib/log4r/outputter/staticoutputter_rb.html","files/lib/log4r/outputter/syslogoutputter_rb.html","files/lib/log4r/outputter/udpoutputter_rb.html","files/lib/log4r/rdoc/gdc.html","files/lib/log4r/rdoc/mdc.html","files/lib/log4r/rdoc/ndc.html","files/lib/log4r/rdoc/configurator.html","files/lib/log4r/rdoc/emailoutputter.html","files/lib/log4r/rdoc/formatter.html","files/lib/log4r/rdoc/log4jxmlformatter.html","files/lib/log4r/rdoc/log4r.html","files/lib/log4r/rdoc/logger.html","files/lib/log4r/rdoc/logserver.html","files/lib/log4r/rdoc/outputter.html","files/lib/log4r/rdoc/patternformatter.html","files/lib/log4r/rdoc/scribeoutputter.html","files/lib/log4r/rdoc/syslogoutputter.html","files/lib/log4r/rdoc/win32eventoutputter.html","files/lib/log4r/rdoc/yamlconfigurator.html","files/lib/log4r/repository_rb.html","files/lib/log4r/staticlogger_rb.html","files/lib/log4r/version_rb.html","files/lib/log4r/yamlconfigurator_rb.html"]}}