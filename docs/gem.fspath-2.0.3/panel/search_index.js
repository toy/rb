var search_data = {"index":{"longSearchIndex":["lib/fspath.rb","fspath","lib/fspath.rb","fspath","fspath","kernel","fspath","fspath","fspath","fspath","fspath","fspath","fspath::tempfile","fspath","fspath::tempfile","fspath","fspath","fspath","fspath","fspath","fspath","files/license_txt.html","files/readme_markdown.html","files/lib/fspath_rb.html"],"info":[["FSPath","lib/fspath.rb","classes/FSPath.html"," < Pathname","",1],["Tempfile","FSPath","classes/FSPath/Tempfile.html"," < ::Tempfile","",1],["Kernel","lib/fspath.rb","classes/Kernel.html"," < ","",1],["+","FSPath","classes/FSPath.html#M000008","(other)","Fixing Pathname.+ ",2],["/","FSPath","classes/FSPath.html#M000007","(other)","Join paths using File.join ",2],["FSPath","Kernel","classes/Kernel.html#M000017","(path)","FSPath(path) method ",2],["append","FSPath","classes/FSPath.html#M000011","(data)","Append data to file ",2],["ascend","FSPath","classes/FSPath.html#M000014","(&block)","Iterates over and yields each element in the given path in ascending order ",2],["common_dir","FSPath","classes/FSPath.html#M000003","(*paths)","Returns common dir for paths ",2],["descend","FSPath","classes/FSPath.html#M000015","(&block)","Iterates over and yields each element in the given path in descending order ",2],["escape_glob","FSPath","classes/FSPath.html#M000012","()","Escape characters in glob pattern ",2],["glob","FSPath","classes/FSPath.html#M000013","(*args, &block)","Expand glob ",2],["new","FSPath::Tempfile","classes/FSPath/Tempfile.html#M000000","(path_klass, *args)","",2],["parts","FSPath","classes/FSPath.html#M000016","(&block)","Returns path parts ",2],["path","FSPath::Tempfile","classes/FSPath/Tempfile.html#M000001","()","",2],["relative_path_from","FSPath","classes/FSPath.html#M000009","(other)","Fixing Pathname.relative_path_from ",2],["temp_dir","FSPath","classes/FSPath.html#M000006","(*args)","Returns or yields FSPath with temp directory created by Dir.mktmpdir ",2],["temp_file","FSPath","classes/FSPath.html#M000004","(*args, &block)","Returns or yields temp file created by Tempfile.new with path returning FSPath ",2],["temp_file_path","FSPath","classes/FSPath.html#M000005","(*args)","Returns or yields path as FSPath of temp file created by Tempfile.new WARNING: loosing reference to returned",2],["write","FSPath","classes/FSPath.html#M000010","(data)","Write data to file ",2],["~","FSPath","classes/FSPath.html#M000002","(name = nil)","Return current user home path if called without argument. If called with argument return specified user",2],["LICENSE.txt","files/LICENSE_txt.html","files/LICENSE_txt.html","","Copyright (c) 2010-2011 Ivan Kuchin  Permission is hereby granted, free of charge, to any person obtaining",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","# fspath  Better than Pathname  Check out fspath-mac and fspath-xattr.  ## Synopsis  User dir:      FSPath.~",3],["fspath.rb","files/lib/fspath_rb.html","files/lib/fspath_rb.html","","",3]],"searchIndex":["fspath","tempfile","kernel","+()","/()","fspath()","append()","ascend()","common_dir()","descend()","escape_glob()","glob()","new()","parts()","path()","relative_path_from()","temp_dir()","temp_file()","temp_file_path()","write()","~()","license.txt","readme.markdown","fspath.rb"]}}