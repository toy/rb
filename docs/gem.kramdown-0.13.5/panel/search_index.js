var search_data = {"index":{"longSearchIndex":["lib/kramdown/version.rb","kramdown","kramdown::converter","kramdown::converter","kramdown::converter","kramdown::converter","kramdown::converter","kramdown","kramdown","kramdown","kramdown","kramdown::options","kramdown","kramdown::parser","kramdown::parser","kramdown::parser::html","kramdown::parser","kramdown::parser","kramdown","kramdown::utils","kramdown::utils::entities","kramdown::utils","kramdown::utils","kramdown::options::boolean","kramdown::utils::orderedhash","kramdown::utils::orderedhash","kramdown::parser::base","kramdown::parser::kramdown","kramdown::parser::base","kramdown::converter::toc","kramdown::parser::kramdown","kramdown::element","kramdown::converter::latex","kramdown::parser::kramdown","kramdown::utils","kramdown::element","kramdown::utils::entities::entity","kramdown::parser::kramdown","kramdown::converter::base","kramdown::converter::base","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::toc","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::html","kramdown::converter::latex","kramdown","kramdown::options","kramdown::options","kramdown::parser::kramdown","kramdown::options","kramdown::options","kramdown::utils::orderedhash","kramdown::utils::orderedhash","kramdown::utils","kramdown::utils","kramdown::converter::latex","kramdown::utils::html","kramdown::converter::latex","kramdown::utils::html","kramdown::parser::base","kramdown::converter::html","kramdown::converter::base","kramdown::converter::html","kramdown::parser::kramdown","kramdown::parser::html::parser","kramdown::parser::kramdown","kramdown::parser::html::parser","kramdown::utils::orderedhash","kramdown::parser::kramdown","kramdown::utils::html","kramdown::converter::base","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::latex","kramdown::converter::latex","kramdown::options","kramdown::utils::orderedhash","kramdown::document","kramdown::converter::base","kramdown::converter::html","kramdown::converter::latex","kramdown::converter::toc","kramdown::document","kramdown::element","kramdown::parser::base","kramdown::parser::kramdown","kramdown::utils::orderedhash","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::converter::html","kramdown::element","kramdown::options","kramdown::parser::base","kramdown::parser::base","kramdown::parser::html","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::html::parser","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::options","kramdown::converter::base","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::parser::kramdown","kramdown::converter::base","kramdown::parser::base","files/copying.html","files/changelog.html","files/readme.html","files/lib/kramdown_rb.html","files/lib/kramdown/converter_rb.html","files/lib/kramdown/converter/base_rb.html","files/lib/kramdown/converter/html_rb.html","files/lib/kramdown/converter/kramdown_rb.html","files/lib/kramdown/converter/latex_rb.html","files/lib/kramdown/converter/toc_rb.html","files/lib/kramdown/document_rb.html","files/lib/kramdown/element_rb.html","files/lib/kramdown/error_rb.html","files/lib/kramdown/options_rb.html","files/lib/kramdown/parser_rb.html","files/lib/kramdown/parser/base_rb.html","files/lib/kramdown/parser/html_rb.html","files/lib/kramdown/parser/kramdown_rb.html","files/lib/kramdown/parser/kramdown/abbreviation_rb.html","files/lib/kramdown/parser/kramdown/autolink_rb.html","files/lib/kramdown/parser/kramdown/blank_line_rb.html","files/lib/kramdown/parser/kramdown/block_boundary_rb.html","files/lib/kramdown/parser/kramdown/blockquote_rb.html","files/lib/kramdown/parser/kramdown/codeblock_rb.html","files/lib/kramdown/parser/kramdown/codespan_rb.html","files/lib/kramdown/parser/kramdown/emphasis_rb.html","files/lib/kramdown/parser/kramdown/eob_rb.html","files/lib/kramdown/parser/kramdown/escaped_chars_rb.html","files/lib/kramdown/parser/kramdown/extensions_rb.html","files/lib/kramdown/parser/kramdown/footnote_rb.html","files/lib/kramdown/parser/kramdown/header_rb.html","files/lib/kramdown/parser/kramdown/horizontal_rule_rb.html","files/lib/kramdown/parser/kramdown/html_rb.html","files/lib/kramdown/parser/kramdown/html_entity_rb.html","files/lib/kramdown/parser/kramdown/line_break_rb.html","files/lib/kramdown/parser/kramdown/link_rb.html","files/lib/kramdown/parser/kramdown/list_rb.html","files/lib/kramdown/parser/kramdown/math_rb.html","files/lib/kramdown/parser/kramdown/paragraph_rb.html","files/lib/kramdown/parser/kramdown/smart_quotes_rb.html","files/lib/kramdown/parser/kramdown/table_rb.html","files/lib/kramdown/parser/kramdown/typographic_symbol_rb.html","files/lib/kramdown/parser/markdown_rb.html","files/lib/kramdown/utils_rb.html","files/lib/kramdown/utils/entities_rb.html","files/lib/kramdown/utils/html_rb.html","files/lib/kramdown/utils/ordered_hash_rb.html","files/lib/kramdown/version_rb.html"],"info":[["Kramdown","lib/kramdown/converter/base.rb","classes/Kramdown.html"," < ","--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- TODO: use [[:alpha:]] in",1],["Converter","Kramdown","classes/Kramdown/Converter.html"," < ","This module contains all available converters, i.e. classes that take a root Element and convert it to",1],["Base","Kramdown::Converter","classes/Kramdown/Converter/Base.html"," < Object","== \\Base class for converters This class serves as base class for all converters. It provides methods",1],["Html","Kramdown::Converter","classes/Kramdown/Converter/Html.html"," < Base","Converts a Kramdown::Document to HTML. You can customize the HTML converter by sub-classing it and overriding",1],["Kramdown","Kramdown::Converter","classes/Kramdown/Converter/Kramdown.html"," < Base","Converts an element tree to the kramdown format. ",1],["Latex","Kramdown::Converter","classes/Kramdown/Converter/Latex.html"," < Base","Converts an element tree to LaTeX. This converter uses ideas from other Markdown-to-LaTeX converters",1],["Toc","Kramdown::Converter","classes/Kramdown/Converter/Toc.html"," < Base","Converts a Kramdown::Document to an element tree that represents the table of contents. The returned",1],["Document","Kramdown","classes/Kramdown/Document.html"," < Object","The main interface to kramdown. This class provides a one-stop-shop for using kramdown to convert text",1],["Element","Kramdown","classes/Kramdown/Element.html"," < Object","Represents all elements in the element tree. kramdown only uses this one class for representing all available",1],["Error","Kramdown","classes/Kramdown/Error.html"," < RuntimeError","This error is raised when an error condition is encountered. *Note* that this error is only raised by",1],["Options","Kramdown","classes/Kramdown/Options.html"," < ","This module defines all options that are used by parsers and/or converters as well as providing methods",1],["Boolean","Kramdown::Options","classes/Kramdown/Options/Boolean.html"," < Object","Helper class introducing a boolean type for specifying boolean values (+true+ and +false+) as option",1],["Parser","Kramdown","classes/Kramdown/Parser.html"," < ","This module contains all available parsers. A parser takes an input string and converts the string to",1],["Base","Kramdown::Parser","classes/Kramdown/Parser/Base.html"," < Object","== \\Base class for parsers This class serves as base class for parsers. It provides common methods that",1],["Html","Kramdown::Parser","classes/Kramdown/Parser/Html.html"," < Base","Used for parsing a HTML document. The parsing code is in the Parser module that can also be used by other",1],["Parser","Kramdown::Parser::Html","classes/Kramdown/Parser/Html/Parser.html"," < ","Contains the parsing methods. This module can be mixed into any parser to get HTML parsing functionality.",1],["Kramdown","Kramdown::Parser","classes/Kramdown/Parser/Kramdown.html"," < Base","Used for parsing a document in kramdown format. If you want to extend the functionality of the parser,",1],["Markdown","Kramdown::Parser","classes/Kramdown/Parser/Markdown.html"," < Kramdown","Used for parsing a document in Markdown format. This parser is based on the kramdown parser and removes",1],["Utils","Kramdown","classes/Kramdown/Utils.html"," < ","== \\Utils Module This module contains utility class/modules/methods that can be used by both parsers",1],["Entities","Kramdown::Utils","classes/Kramdown/Utils/Entities.html"," < ","Provides convenience methods for handling named and numeric entities. ",1],["Entity","Kramdown::Utils::Entities","classes/Kramdown/Utils/Entities/Entity.html"," < Struct.new(:code_point, :name)","Represents an entity that has a +code_point+ and +name+. ",1],["Html","Kramdown::Utils","classes/Kramdown/Utils/Html.html"," < ","Provides convenience methods for HTML related tasks. *Note* that this module has to be mixed into a class",1],["OrderedHash","Kramdown::Utils","classes/Kramdown/Utils/OrderedHash.html"," < Object","A partial hash implementation which preserves the insertion order of the keys. *Note* that this class",1],["===","Kramdown::Options::Boolean","classes/Kramdown/Options/Boolean.html#M000105","(other)","Return +true+ if +other+ is either +true+ or +false+ ",2],["[]","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000193","(key)","Return the value for the +key+. ",2],["[]=","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000195","(key, val)","Set the value for the +key+ to +val+. ",2],["adapt_source","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000122","(source)","Modify the string +source+ to be usable by the parser (unifies line ending characters to +\\n+ and makes",2],["add_link","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000160","(el, href, title, alt_text = nil)","This helper methods adds the approriate attributes to the element +el+ of type +a+ or +img+ and the element",2],["add_text","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000123","(text, tree = @tree, type = @text_type)","This helper method adds the given +text+ either to the last element in the +tree+ if it is a +type+ element",2],["add_to_toc","Kramdown::Converter::Toc","classes/Kramdown/Converter/Toc.html#M000090","(el, id, toc)","",2],["after_block_boundary?","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000132","()","Return +true+ if we are after a block boundary. ",2],["attr","Kramdown::Element","classes/Kramdown/Element.html#M000112","()","The attributes of the element. Uses an Utils::OrderedHash to retain the insertion order. ",2],["attribute_list","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000099","(el)","Return a LaTeX comment containing all attributes as 'key=\"value\"' pairs. ",2],["before_block_boundary?","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000133","()","Return +true+ if we are before a block boundary. ",2],["camelize","Kramdown::Utils","classes/Kramdown/Utils.html#M000202","(name)","Treat +name+ as if it were snake cased (e.g. snake_case) and camelize it (e.g. SnakeCase). ",2],["category","Kramdown::Element","classes/Kramdown/Element.html#M000116","(el)","Return the category of +el+ which can be :block, :span or +nil+. Most elements have a fixed category,",2],["char","Kramdown::Utils::Entities::Entity","classes/Kramdown/Utils/Entities/Entity.html#M000187","()","Return the UTF8 representation of the entity. ",2],["configure_parser","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000174","()","Adapt the object to allow parsing like specified in the options. ",2],["convert","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000001","(tree, options = {})","Convert the element tree +tree+ and return the resulting conversion object (normally a string) and an",2],["convert","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000002","(el)","Convert the element +el+ and return the resulting object. This is the only method that has to be implemented",2],["convert","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000010","(el, indent = -@indent)","Dispatch the conversion of the element +el+ to a +convert_TYPE+ method using the +type+ of the element.",2],["convert","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000053","(el, opts = {})","Dispatch the conversion of the element +el+ to a +convert_TYPE+ method using the +type+ of the element.",2],["convert","Kramdown::Converter::Toc","classes/Kramdown/Converter/Toc.html#M000089","(el)","",2],["convert_a","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000036","(el, indent)","",2],["convert_a","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000081","(el, opts)","",2],["convert_abbreviation","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000047","(el, indent)","",2],["convert_abbreviation","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000096","(el, opts)","",2],["convert_blank","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000012","(el, indent)","",2],["convert_blank","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000056","(el, opts)","",2],["convert_blockquote","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000016","(el, indent)","",2],["convert_blockquote","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000061","(el, opts)","",2],["convert_br","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000035","(el, indent)","",2],["convert_br","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000080","(el, opts)","",2],["convert_codeblock","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000015","(el, indent)","",2],["convert_codeblock","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000060","(el, opts)","",2],["convert_codespan","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000038","(el, indent)","",2],["convert_codespan","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000083","(el, opts)","",2],["convert_comment","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000034","(el, indent)","",2],["convert_comment","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000079","(el, opts)","",2],["convert_dd","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000023","(el, indent)","Alias for #convert_li",2],["convert_dd","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000069","(el, opts)","",2],["convert_dl","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000021","(el, indent)","Alias for #convert_ul",2],["convert_dl","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000066","(el, opts)","",2],["convert_dt","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000024","(el, indent)","",2],["convert_dt","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000068","(el, opts)","",2],["convert_em","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000041","(el, indent)","",2],["convert_em","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000086","(el, opts)","",2],["convert_entity","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000043","(el, indent)","",2],["convert_entity","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000092","(el, opts)","",2],["convert_footnote","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000039","(el, indent)","",2],["convert_footnote","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000084","(el, opts)","",2],["convert_header","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000017","(el, indent)","",2],["convert_header","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000062","(el, opts)","",2],["convert_hr","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000018","(el, indent)","",2],["convert_hr","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000063","(el, opts)","",2],["convert_html_element","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000025","(el, indent)","",2],["convert_html_element","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000070","(el, opts)","",2],["convert_img","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000037","(el, indent)","",2],["convert_img","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000082","(el, opts)","",2],["convert_li","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000022","(el, indent)","",2],["convert_li","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000067","(el, opts)","",2],["convert_math","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000046","(el, indent)","",2],["convert_math","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000095","(el, opts)","",2],["convert_ol","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000020","(el, indent)","Alias for #convert_ul",2],["convert_ol","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000065","(el, opts)","Alias for #convert_ul",2],["convert_p","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000014","(el, indent)","",2],["convert_p","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000058","(el, opts)","",2],["convert_raw","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000040","(el, indent)","",2],["convert_raw","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000085","(el, opts)","",2],["convert_root","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000048","(el, indent)","",2],["convert_root","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000055","(el, opts)","",2],["convert_smart_quote","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000045","(el, indent)","",2],["convert_smart_quote","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000094","(el, opts)","",2],["convert_standalone_image","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000059","(el, opts, img)","Helper method used by +convert_p+ to convert a paragraph that only contains a single :img element. ",2],["convert_strong","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000042","(el, indent)","Alias for #convert_em",2],["convert_strong","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000087","(el, opts)","",2],["convert_table","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000028","(el, indent)","",2],["convert_table","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000073","(el, opts)","",2],["convert_tbody","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000030","(el, indent)","Alias for #convert_thead",2],["convert_tbody","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000075","(el, opts)","",2],["convert_td","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000033","(el, indent)","",2],["convert_td","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000078","(el, opts)","",2],["convert_text","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000013","(el, indent)","",2],["convert_text","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000057","(el, opts)","",2],["convert_tfoot","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000031","(el, indent)","Alias for #convert_thead",2],["convert_tfoot","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000076","(el, opts)","",2],["convert_thead","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000029","(el, indent)","",2],["convert_thead","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000074","(el, opts)","",2],["convert_tr","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000032","(el, indent)","Alias for #convert_thead",2],["convert_tr","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000077","(el, opts)","",2],["convert_typographic_sym","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000044","(el, indent)","",2],["convert_typographic_sym","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000093","(el, opts)","",2],["convert_ul","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000019","(el, indent)","",2],["convert_ul","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000064","(el, opts)","",2],["convert_xml_comment","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000026","(el, indent)","",2],["convert_xml_comment","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000071","(el, opts)","",2],["convert_xml_pi","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000027","(el, indent)","Alias for #convert_xml_comment",2],["convert_xml_pi","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000072","(el, opts)","",2],["data_dir","Kramdown","classes/Kramdown.html#M000100","()","Return the data directory for kramdown. ",2],["defaults","Kramdown::Options","classes/Kramdown/Options.html#M000110","()","Return a Hash with the default values for all options. ",2],["define","Kramdown::Options","classes/Kramdown/Options.html#M000106","(name, type, default, desc, &block)","Define a new option called +name+ (a Symbol) with the given +type+ (String, Integer, Float, Symbol, Boolean,",2],["define_parser","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000184","(name, start_re, span_start = nil, meth_name = \"parse_#{name}\")","Add a parser method * with the given +name+, * using +start_re+ as start regexp * and, for span parsers,",2],["defined?","Kramdown::Options","classes/Kramdown/Options.html#M000108","(name)","Return +true+ if an option called +name+ is defined. ",2],["definitions","Kramdown::Options","classes/Kramdown/Options.html#M000107","()","Return all option definitions. ",2],["delete","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000196","(key)","Delete the +key+. ",2],["each","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000192","()","Iterate over the stored keys in insertion order. ",2],["entity","Kramdown::Utils","classes/Kramdown/Utils.html#M000201","(point_or_name)","Return the entity for the given code point or name +point_or_name+. ",2],["entity","Kramdown::Utils","classes/Kramdown/Utils.html#M000201","(point_or_name)","Return the entity for the given code point or name +point_or_name+. ",2],["entity_to_latex","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000091","(entity)","",2],["entity_to_str","Kramdown::Utils::Html","classes/Kramdown/Utils/Html.html#M000188","(e, original = nil)","Convert the entity +e+ to a string. The optional parameter +original+ may contain the original representation",2],["escape","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000101","(str)","Escape the special LaTeX characters in the string +str+. ",2],["escape_html","Kramdown::Utils::Html","classes/Kramdown/Utils/Html.html#M000190","(str, type = :all)","Escape the special HTML characters in the string +str+. The parameter +type+ specifies what is escaped:",2],["extract_string","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000124","(range, strscan)","Extract the part of the StringScanner +strscan+ backed string specified by the +range+. This method works",2],["footnote_content","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000051","()","Return a HTML ordered list with the footnote content for the used footnotes. ",2],["generate_id","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000007","(str)","Generate an unique alpha-numeric ID from the the string +str+ for use as a header ID. Uses the option",2],["generate_toc_tree","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000049","(toc, type, attr)","Generate and return an element tree for the table of contents. ",2],["handle_extension","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000146","(name, opts, body, type)","",2],["handle_html_start_tag","Kramdown::Parser::Html::Parser","classes/Kramdown/Parser/Html/Parser.html#M000127","()","Process the HTML start tag that has already be scanned/checked via @src. Does the common processing steps",2],["handle_kramdown_html_tag","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000154","(el, closed)","",2],["handle_raw_html_tag","Kramdown::Parser::Html::Parser","classes/Kramdown/Parser/Html/Parser.html#M000128","(name)","Handle the raw HTML tag at the current position. ",2],["has_key?","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000194","(key)","Return +true+ if the hash contains the key. ",2],["has_parser?","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000186","(name)","Return +true+ if there is a parser called +name+. ",2],["html_attributes","Kramdown::Utils::Html","classes/Kramdown/Utils/Html.html#M000189","(attr)","Return the HTML representation of the attributes +attr+. ",2],["in_toc?","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000006","(el)","Return +true+ if the header element +el+ should be used for the table of contents (as specified by the",2],["inner","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000011","(el, indent)","Return the converted content of the children of +el+ as a string. The parameter +indent+ has to be the",2],["inner","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000054","(el, opts)","Return the converted content of the children of +el+ as a string. ",2],["latex_environment","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000097","(type, el, text)","Wrap the +text+ inside a LaTeX environment of type +type+. The element +el+ is passed on to the method",2],["latex_link_target","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000098","(el, add_label = false)","Return a string containing a valid \\hypertarget command if the element has an ID defined, or +nil+ otherwise.",2],["merge","Kramdown::Options","classes/Kramdown/Options.html#M000111","(hash)","Merge the #defaults Hash with the *parsed* options from the given Hash, i.e. only valid option names",2],["merge!","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000197","(other)","",2],["method_missing","Kramdown::Document","classes/Kramdown/Document.html#M000103","(id, *attr, &block)","Check if a method is invoked that begins with +to_+ and if so, try to instantiate a converter class (i.e.",2],["new","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000000","(root, options)","Initialize the converter with the given +root+ element and +options+ hash. ",2],["new","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000009","(root, options)","Initialize the HTML converter with the given Kramdown document +doc+. ",2],["new","Kramdown::Converter::Latex","classes/Kramdown/Converter/Latex.html#M000052","(root, options)","Initialize the LaTeX converter with the +root+ element and the conversion +options+. ",2],["new","Kramdown::Converter::Toc","classes/Kramdown/Converter/Toc.html#M000088","(root, options)","",2],["new","Kramdown::Document","classes/Kramdown/Document.html#M000102","(source, options = {})","Create a new Kramdown document from the string +source+ and use the provided +options+. The options that",2],["new","Kramdown::Element","classes/Kramdown/Element.html#M000109","(type, value = nil, attr = nil, options = nil)","Create a new Element object of type +type+. The optional parameters +value+, +attr+ and +options+ can",2],["new","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000118","(source, options)","Initialize the parser object with the +source+ string and the parsing +options+. The @root element, the",2],["new","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000172","(source, options)","Create a new Kramdown parser object with the given +options+. ",2],["new","Kramdown::Utils::OrderedHash","classes/Kramdown/Utils/OrderedHash.html#M000191","()","Initialize the OrderedHash object. ",2],["new_block_el","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000183","(*args)","Create a new block-level element, taking care of applying a preceding block IAL if it exists. This method",2],["normalize_link_id","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000158","(id)","Normalize the link identifier. ",2],["obfuscate","Kramdown::Converter::Html","classes/Kramdown/Converter/Html.html#M000050","(text)","Obfuscate the +text+ by using HTML entities. ",2],["options","Kramdown::Element","classes/Kramdown/Element.html#M000113","()","The options hash for the element. It is used for storing arbitray options. ",2],["parse","Kramdown::Options","classes/Kramdown/Options.html#M000115","(name, data)","Parse the given value +data+ as if it was a value for the option +name+ and return the parsed value with",2],["parse","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000119","(source, options = {})","Parse the +source+ string into an element tree, possibly using the parsing +options+, and return the",2],["parse","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000120","()","Parse the source string into an element tree. The parsing code should parse the source provided in @source",2],["parse","Kramdown::Parser::Html","classes/Kramdown/Parser/Html.html#M000137","()","Parse the source string provided on initialization as HTML document. ",2],["parse","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000173","()","The source string provided on initialization is parsed into the @root element. ",2],["parse_abbrev_definition","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000125","()","Parse the link definition at the current location. ",2],["parse_attribute_list","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000142","(str, opts)","Parse the string +str+ and extract all attributes and add all found attributes to the hash +opts+. ",2],["parse_atx_header","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000151","()","Parse the Atx header at the current location. ",2],["parse_autolink","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000130","()","Parse the autolink at the current location. ",2],["parse_blank_line","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000131","()","Parse the blank line at the current postition. ",2],["parse_block_extensions","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000148","()","Parse one of the block extensions (ALD, block IAL or generic extension) at the current location. ",2],["parse_block_html","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000155","()","Parse the HTML at the current position as block-level HTML. ",2],["parse_block_math","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000164","()","Parse the math block at the current location. ",2],["parse_blockquote","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000134","()","Parse the blockquote at the current location. ",2],["parse_blocks","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000176","(el, text = nil)","Parse all block-level elements in +text+ into the element +el+. ",2],["parse_codeblock","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000135","()","Parse the indented codeblock at the current location. ",2],["parse_codeblock_fenced","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000136","()","Parse the fenced codeblock at the current location. ",2],["parse_codespan","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000138","()","Parse the codespan at the current scanner location. ",2],["parse_definition_list","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000166","()","Parse the ordered or unordered list at the current location. ",2],["parse_emphasis","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000139","()","Parse the emphasis at the current location. ",2],["parse_eob_marker","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000140","()","Parse the EOB marker at the current location. ",2],["parse_escaped_chars","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000141","()","Parse the backslash-escaped character at the current location. ",2],["parse_extension_start_tag","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000144","(type)","Parse the generic extension at the current point. The parameter +type+ can either be :block or :span",2],["parse_first_list_line","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000162","(indentation, content)","Used for parsing the first line of a list item or a definition, i.e. the line with list item marker or",2],["parse_footnote_definition","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000145","()","Parse the foot note definition at the current location. ",2],["parse_footnote_marker","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000147","()","Parse the footnote marker at the current location. ",2],["parse_horizontal_rule","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000152","()","Parse the horizontal rule at the current location. ",2],["parse_html_entity","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000153","()","Parse the HTML entity at the current location. ",2],["parse_inline_math","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000165","()","Parse the inline math at the current location. ",2],["parse_line_break","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000157","()","Parse the line break at the current location. ",2],["parse_link","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000161","()","Parse the link at the current scanner position. This method is used to parse normal links as well as",2],["parse_link_definition","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000159","()","Parse the link definition at the current location. ",2],["parse_list","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000163","()","Parse the ordered or unordered list at the current location. ",2],["parse_paragraph","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000167","()","Parse the paragraph at the current location. ",2],["parse_raw_html","Kramdown::Parser::Html::Parser","classes/Kramdown/Parser/Html/Parser.html#M000129","(el, &block)","Parse raw HTML from the current source position, storing the found elements in +el+. Parsing continues",2],["parse_setext_header","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000150","()","Parse the Setext header at the current location. ",2],["parse_smart_quotes","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000169","()","Parse the smart quotes at current location. ",2],["parse_span_extensions","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000149","()","Parse the extension span at the current location. ",2],["parse_span_html","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000156","()","Parse the HTML at the current position as span-level HTML. ",2],["parse_spans","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000178","(el, stop_re = nil, parsers = nil, text_type = @text_type)","Parse all span-level elements in the source string of @src into +el+. If the parameter +stop_re+ (a regexp)",2],["parse_table","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000168","()","Parse the table at the current location. ",2],["parse_typographic_syms","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000170","()","Parse the typographic symbols at the current location. ",2],["parser","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000185","(name = nil)","Return the Data structure for the parser +name+. ",2],["replace_abbreviations","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000126","(el, regexps = nil)","Replace the abbreviation text with elements. ",2],["reset_env","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000179","(opts = {})","Reset the current parsing environment. The parameter +env+ can be used to set initial values for one",2],["restore_env","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000181","(env)","Restore the current parsing environment. ",2],["save_env","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000180","()","Return the current parsing environment. ",2],["simple_array_validator","Kramdown::Options","classes/Kramdown/Options.html#M000117","(val, name, size)","Ensures that the option value +val+ for the option called +name+ is a valid array. The parameter +val+",2],["smart_quote_entity","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000008","(el)","Return the entity that represents the given smart_quote element. ",2],["span_parser_regexps","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000175","(parsers = @span_parsers)","Create the needed span parser regexps. ",2],["update_attr_with_ial","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000182","(attr, ial)","Update the given attributes hash +attr+ with the information from the inline attribute list +ial+ and",2],["update_ial_with_ial","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000143","(ial, opts)","Update the +ial+ with the information from the inline attribute list +opts+. ",2],["update_tree","Kramdown::Parser::Kramdown","classes/Kramdown/Parser/Kramdown.html#M000177","(element)","Update the tree by parsing all :+raw_text+ elements with the span-level parser (resets the environment)",2],["warning","Kramdown::Converter::Base","classes/Kramdown/Converter/Base.html#M000005","(text)","Add the given warning +text+ to the warning array. ",2],["warning","Kramdown::Parser::Base","classes/Kramdown/Parser/Base.html#M000121","(text)","Add the given warning +text+ to the warning array. ",2],["COPYING","files/COPYING.html","files/COPYING.html","","kramdown - fast, pure-Ruby Markdown-superset converter Copyright (C) 2009 Thomas Leitner <t_leitner@gmx.at>",3],["ChangeLog","files/ChangeLog.html","files/ChangeLog.html","","commit ce785c7cc29372cb7c5c47647535b1943348aff6 Author: Thomas Leitner <t_leitner@gmx.at> Date:   Sun",3],["README","files/README.html","files/README.html","","= kramdown  kramdown is yet-another-markdown-parser but fast, pure Ruby, using a strict syntax definition",3],["kramdown.rb","files/lib/kramdown_rb.html","files/lib/kramdown_rb.html","","",3],["converter.rb","files/lib/kramdown/converter_rb.html","files/lib/kramdown/converter_rb.html","","--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- TODO: use [[:alpha:]] in",3],["base.rb","files/lib/kramdown/converter/base_rb.html","files/lib/kramdown/converter/base_rb.html","","",3],["html.rb","files/lib/kramdown/converter/html_rb.html","files/lib/kramdown/converter/html_rb.html","","",3],["kramdown.rb","files/lib/kramdown/converter/kramdown_rb.html","files/lib/kramdown/converter/kramdown_rb.html","","",3],["latex.rb","files/lib/kramdown/converter/latex_rb.html","files/lib/kramdown/converter/latex_rb.html","","",3],["toc.rb","files/lib/kramdown/converter/toc_rb.html","files/lib/kramdown/converter/toc_rb.html","","",3],["document.rb","files/lib/kramdown/document_rb.html","files/lib/kramdown/document_rb.html","","",3],["element.rb","files/lib/kramdown/element_rb.html","files/lib/kramdown/element_rb.html","","",3],["error.rb","files/lib/kramdown/error_rb.html","files/lib/kramdown/error_rb.html","","",3],["options.rb","files/lib/kramdown/options_rb.html","files/lib/kramdown/options_rb.html","","",3],["parser.rb","files/lib/kramdown/parser_rb.html","files/lib/kramdown/parser_rb.html","","",3],["base.rb","files/lib/kramdown/parser/base_rb.html","files/lib/kramdown/parser/base_rb.html","","",3],["html.rb","files/lib/kramdown/parser/html_rb.html","files/lib/kramdown/parser/html_rb.html","","",3],["kramdown.rb","files/lib/kramdown/parser/kramdown_rb.html","files/lib/kramdown/parser/kramdown_rb.html","","",3],["abbreviation.rb","files/lib/kramdown/parser/kramdown/abbreviation_rb.html","files/lib/kramdown/parser/kramdown/abbreviation_rb.html","","",3],["autolink.rb","files/lib/kramdown/parser/kramdown/autolink_rb.html","files/lib/kramdown/parser/kramdown/autolink_rb.html","","",3],["blank_line.rb","files/lib/kramdown/parser/kramdown/blank_line_rb.html","files/lib/kramdown/parser/kramdown/blank_line_rb.html","","",3],["block_boundary.rb","files/lib/kramdown/parser/kramdown/block_boundary_rb.html","files/lib/kramdown/parser/kramdown/block_boundary_rb.html","","",3],["blockquote.rb","files/lib/kramdown/parser/kramdown/blockquote_rb.html","files/lib/kramdown/parser/kramdown/blockquote_rb.html","","",3],["codeblock.rb","files/lib/kramdown/parser/kramdown/codeblock_rb.html","files/lib/kramdown/parser/kramdown/codeblock_rb.html","","",3],["codespan.rb","files/lib/kramdown/parser/kramdown/codespan_rb.html","files/lib/kramdown/parser/kramdown/codespan_rb.html","","",3],["emphasis.rb","files/lib/kramdown/parser/kramdown/emphasis_rb.html","files/lib/kramdown/parser/kramdown/emphasis_rb.html","","",3],["eob.rb","files/lib/kramdown/parser/kramdown/eob_rb.html","files/lib/kramdown/parser/kramdown/eob_rb.html","","",3],["escaped_chars.rb","files/lib/kramdown/parser/kramdown/escaped_chars_rb.html","files/lib/kramdown/parser/kramdown/escaped_chars_rb.html","","",3],["extensions.rb","files/lib/kramdown/parser/kramdown/extensions_rb.html","files/lib/kramdown/parser/kramdown/extensions_rb.html","","",3],["footnote.rb","files/lib/kramdown/parser/kramdown/footnote_rb.html","files/lib/kramdown/parser/kramdown/footnote_rb.html","","",3],["header.rb","files/lib/kramdown/parser/kramdown/header_rb.html","files/lib/kramdown/parser/kramdown/header_rb.html","","",3],["horizontal_rule.rb","files/lib/kramdown/parser/kramdown/horizontal_rule_rb.html","files/lib/kramdown/parser/kramdown/horizontal_rule_rb.html","","",3],["html.rb","files/lib/kramdown/parser/kramdown/html_rb.html","files/lib/kramdown/parser/kramdown/html_rb.html","","",3],["html_entity.rb","files/lib/kramdown/parser/kramdown/html_entity_rb.html","files/lib/kramdown/parser/kramdown/html_entity_rb.html","","",3],["line_break.rb","files/lib/kramdown/parser/kramdown/line_break_rb.html","files/lib/kramdown/parser/kramdown/line_break_rb.html","","",3],["link.rb","files/lib/kramdown/parser/kramdown/link_rb.html","files/lib/kramdown/parser/kramdown/link_rb.html","","",3],["list.rb","files/lib/kramdown/parser/kramdown/list_rb.html","files/lib/kramdown/parser/kramdown/list_rb.html","","",3],["math.rb","files/lib/kramdown/parser/kramdown/math_rb.html","files/lib/kramdown/parser/kramdown/math_rb.html","","",3],["paragraph.rb","files/lib/kramdown/parser/kramdown/paragraph_rb.html","files/lib/kramdown/parser/kramdown/paragraph_rb.html","","",3],["smart_quotes.rb","files/lib/kramdown/parser/kramdown/smart_quotes_rb.html","files/lib/kramdown/parser/kramdown/smart_quotes_rb.html","","",3],["table.rb","files/lib/kramdown/parser/kramdown/table_rb.html","files/lib/kramdown/parser/kramdown/table_rb.html","","",3],["typographic_symbol.rb","files/lib/kramdown/parser/kramdown/typographic_symbol_rb.html","files/lib/kramdown/parser/kramdown/typographic_symbol_rb.html","","",3],["markdown.rb","files/lib/kramdown/parser/markdown_rb.html","files/lib/kramdown/parser/markdown_rb.html","","",3],["utils.rb","files/lib/kramdown/utils_rb.html","files/lib/kramdown/utils_rb.html","","",3],["entities.rb","files/lib/kramdown/utils/entities_rb.html","files/lib/kramdown/utils/entities_rb.html","","",3],["html.rb","files/lib/kramdown/utils/html_rb.html","files/lib/kramdown/utils/html_rb.html","","",3],["ordered_hash.rb","files/lib/kramdown/utils/ordered_hash_rb.html","files/lib/kramdown/utils/ordered_hash_rb.html","","",3],["version.rb","files/lib/kramdown/version_rb.html","files/lib/kramdown/version_rb.html","","",3]],"searchIndex":["kramdown","converter","base","html","kramdown","latex","toc","document","element","error","options","boolean","parser","base","html","parser","kramdown","markdown","utils","entities","entity","html","orderedhash","===()","[]()","[]=()","adapt_source()","add_link()","add_text()","add_to_toc()","after_block_boundary?()","attr()","attribute_list()","before_block_boundary?()","camelize()","category()","char()","configure_parser()","convert()","convert()","convert()","convert()","convert()","convert_a()","convert_a()","convert_abbreviation()","convert_abbreviation()","convert_blank()","convert_blank()","convert_blockquote()","convert_blockquote()","convert_br()","convert_br()","convert_codeblock()","convert_codeblock()","convert_codespan()","convert_codespan()","convert_comment()","convert_comment()","convert_dd()","convert_dd()","convert_dl()","convert_dl()","convert_dt()","convert_dt()","convert_em()","convert_em()","convert_entity()","convert_entity()","convert_footnote()","convert_footnote()","convert_header()","convert_header()","convert_hr()","convert_hr()","convert_html_element()","convert_html_element()","convert_img()","convert_img()","convert_li()","convert_li()","convert_math()","convert_math()","convert_ol()","convert_ol()","convert_p()","convert_p()","convert_raw()","convert_raw()","convert_root()","convert_root()","convert_smart_quote()","convert_smart_quote()","convert_standalone_image()","convert_strong()","convert_strong()","convert_table()","convert_table()","convert_tbody()","convert_tbody()","convert_td()","convert_td()","convert_text()","convert_text()","convert_tfoot()","convert_tfoot()","convert_thead()","convert_thead()","convert_tr()","convert_tr()","convert_typographic_sym()","convert_typographic_sym()","convert_ul()","convert_ul()","convert_xml_comment()","convert_xml_comment()","convert_xml_pi()","convert_xml_pi()","data_dir()","defaults()","define()","define_parser()","defined?()","definitions()","delete()","each()","entity()","entity()","entity_to_latex()","entity_to_str()","escape()","escape_html()","extract_string()","footnote_content()","generate_id()","generate_toc_tree()","handle_extension()","handle_html_start_tag()","handle_kramdown_html_tag()","handle_raw_html_tag()","has_key?()","has_parser?()","html_attributes()","in_toc?()","inner()","inner()","latex_environment()","latex_link_target()","merge()","merge!()","method_missing()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_block_el()","normalize_link_id()","obfuscate()","options()","parse()","parse()","parse()","parse()","parse()","parse_abbrev_definition()","parse_attribute_list()","parse_atx_header()","parse_autolink()","parse_blank_line()","parse_block_extensions()","parse_block_html()","parse_block_math()","parse_blockquote()","parse_blocks()","parse_codeblock()","parse_codeblock_fenced()","parse_codespan()","parse_definition_list()","parse_emphasis()","parse_eob_marker()","parse_escaped_chars()","parse_extension_start_tag()","parse_first_list_line()","parse_footnote_definition()","parse_footnote_marker()","parse_horizontal_rule()","parse_html_entity()","parse_inline_math()","parse_line_break()","parse_link()","parse_link_definition()","parse_list()","parse_paragraph()","parse_raw_html()","parse_setext_header()","parse_smart_quotes()","parse_span_extensions()","parse_span_html()","parse_spans()","parse_table()","parse_typographic_syms()","parser()","replace_abbreviations()","reset_env()","restore_env()","save_env()","simple_array_validator()","smart_quote_entity()","span_parser_regexps()","update_attr_with_ial()","update_ial_with_ial()","update_tree()","warning()","warning()","copying","changelog","readme","kramdown.rb","converter.rb","base.rb","html.rb","kramdown.rb","latex.rb","toc.rb","document.rb","element.rb","error.rb","options.rb","parser.rb","base.rb","html.rb","kramdown.rb","abbreviation.rb","autolink.rb","blank_line.rb","block_boundary.rb","blockquote.rb","codeblock.rb","codespan.rb","emphasis.rb","eob.rb","escaped_chars.rb","extensions.rb","footnote.rb","header.rb","horizontal_rule.rb","html.rb","html_entity.rb","line_break.rb","link.rb","list.rb","math.rb","paragraph.rb","smart_quotes.rb","table.rb","typographic_symbol.rb","markdown.rb","utils.rb","entities.rb","html.rb","ordered_hash.rb","version.rb"]}}