var search_data = {"index":{"info":[["Hpricot","lib/hpricot/blankslate.rb","classes/Hpricot.html"," < ","Permission is granted for use, copying, modification, distribution, and distribution of modified versions",1],["BlankSlate","Hpricot","classes/Hpricot/BlankSlate.html"," < Object","BlankSlate provides an abstract base class with no predefined methods (except for <tt>\\_\\_send__</tt>",1],["BogusETag","Hpricot","classes/Hpricot/BogusETag.html"," < Object","",1],["Trav","Hpricot::BogusETag","classes/Hpricot/BogusETag/Trav.html"," < ","",1],["Builder","Hpricot","classes/Hpricot/Builder.html"," < ","",1],["CData","Hpricot","classes/Hpricot/CData.html"," < Object","",1],["Trav","Hpricot::CData","classes/Hpricot/CData/Trav.html"," < ","",1],["Comment","Hpricot","classes/Hpricot/Comment.html"," < Object","",1],["Trav","Hpricot::Comment","classes/Hpricot/Comment/Trav.html"," < ","",1],["Container","Hpricot","classes/Hpricot/Container.html"," < ","",1],["Trav","Hpricot::Container","classes/Hpricot/Container/Trav.html"," < ","",1],["Context","Hpricot","classes/Hpricot/Context.html"," < Object","",1],["CssProxy","Hpricot","classes/Hpricot/CssProxy.html"," < BlankSlate","Class used by Markaby::Builder to store element options.  Methods called against the CssProxy object",1],["Doc","Hpricot","classes/Hpricot/Doc.html"," < Object","",1],["Trav","Hpricot::Doc","classes/Hpricot/Doc/Trav.html"," < ","",1],["DocType","Hpricot","classes/Hpricot/DocType.html"," < Object","",1],["Trav","Hpricot::DocType","classes/Hpricot/DocType/Trav.html"," < ","",1],["ETag","Hpricot","classes/Hpricot/ETag.html"," < Object","",1],["Elem","Hpricot","classes/Hpricot/Elem.html"," < Object","",1],["Trav","Hpricot::Elem","classes/Hpricot/Elem/Trav.html"," < ","",1],["Elements","Hpricot","classes/Hpricot/Elements.html"," < Array","Once you've matched a list of elements, you will often need to handle them as a group.  Or you may want",1],["EncodingError","Hpricot","classes/Hpricot/EncodingError.html"," < StandardError","Exception class used for any errors related to deficiencies in the system when handling the character",1],["Error","Hpricot","classes/Hpricot/Error.html"," < StandardError","",1],["Leaf","Hpricot","classes/Hpricot/Leaf.html"," < ","",1],["Trav","Hpricot::Leaf","classes/Hpricot/Leaf/Trav.html"," < ","",1],["Name","Hpricot","classes/Hpricot/Name.html"," < Object","",1],["Node","Hpricot","classes/Hpricot/Node.html"," < ","",1],["ProcIns","Hpricot","classes/Hpricot/ProcIns.html"," < Object","",1],["Trav","Hpricot::ProcIns","classes/Hpricot/ProcIns/Trav.html"," < ","",1],["Text","Hpricot","classes/Hpricot/Text.html"," < Object","",1],["Trav","Hpricot::Text","classes/Hpricot/Text/Trav.html"," < ","",1],["Traverse","Hpricot","classes/Hpricot/Traverse.html"," < ","",1],["XHTMLStrict","Hpricot","classes/Hpricot/XHTMLStrict.html"," < Object","All the tags and attributes from XHTML 1.0 Strict ",1],["XHTMLTransitional","Hpricot","classes/Hpricot/XHTMLTransitional.html"," < Object","Additional tags found in XHTML 1.0 Transitional ",1],["XMLDecl","Hpricot","classes/Hpricot/XMLDecl.html"," < Object","",1],["Trav","Hpricot::XMLDecl","classes/Hpricot/XMLDecl/Trav.html"," < ","",1],["Kernel","lib/hpricot/blankslate.rb","classes/Kernel.html"," < ","Since Ruby is very dynamic, methods added to the ancestors of BlankSlate <em>after BlankSlate is defined</em>",1],["Object","lib/hpricot/blankslate.rb","classes/Object.html"," < Object","",1],["%","Hpricot::Elements","classes/Hpricot/Elements.html#M000017","(expr, &blk)","Alias for #at",2],["%","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000099","(expr)","Alias for #at",2],["/","Hpricot::Elements","classes/Hpricot/Elements.html#M000012","(*expr,&blk)","Alias for #search",2],["/","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000097","(expr, &blk)","Alias for #search",2],["<<","Hpricot::Builder","classes/Hpricot/Builder.html#M000014","(string)","Alias for #text",2],["Hpricot","Object","classes/Object.html#M000055","(input = nil, opts = {}, &blk)","",2],["XML","Hpricot","classes/Hpricot.html#M000057","(input = nil, opts = {}, &blk)","Hpricot::XML parses <i>input</i>, disregarding all the HTML rules and returning a document tree. ",2],["[]","Hpricot::Elem::Trav","classes/Hpricot/Elem/Trav.html#M000131","(name)","Alias for #get_attribute",2],["[]=","Hpricot::Elem::Trav","classes/Hpricot/Elem/Trav.html#M000133","(name, val)","Alias for #set_attribute",2],["add_child","Hpricot::Builder","classes/Hpricot/Builder.html#M000008","(ele)","",2],["add_class","Hpricot::Elements","classes/Hpricot/Elements.html#M000046","(class_name)","Adds the class to all matched elements. (doc/\"p\").add_class(\"bacon\") Now all paragraphs will have class=\"bacon\".",2],["after","Hpricot::Elements","classes/Hpricot/Elements.html#M000035","(str = nil, &blk)","Just after each element in this list, add some HTML. Pass in an HTML +str+, which is turned into Hpricot",2],["after","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000078","(html = nil, &blk)","Adds elements immediately after this element, contained in the +html+ string. ",2],["append","Hpricot::Elements","classes/Hpricot/Elements.html#M000030","(str = nil, &blk)","Add to the end of the contents inside each element in this list. Pass in an HTML +str+, which is turned",2],["at","Hpricot::Elements","classes/Hpricot/Elements.html#M000013","(expr, &blk)","Searches this list for the first element (or child of these elements) matching the CSS or XPath expression",2],["at","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000098","(expr)","Find the first matching node for the CSS or XPath +expr+ string. ",2],["attr","Hpricot::Elements","classes/Hpricot/Elements.html#M000042","(key, value = nil, &blk)","Gets and sets attributes on all matched elements. Pass in a +key+ on its own and this method will return",2],["author","Hpricot::Doc::Trav","classes/Hpricot/Doc/Trav.html#M000127","()","+author+ searches author and return it as a text. It returns nil if not found. +author+ searchs following",2],["before","Hpricot::Elements","classes/Hpricot/Elements.html#M000032","(str = nil, &blk)","Add some HTML just previous to each element in this list. Pass in an HTML +str+, which is turned into",2],["before","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000079","(html = nil, &blk)","Adds elements immediately before this element, contained in the +html+ string. ",2],["bogusetag?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000065","()","Is this object a stranded end tag? ",2],["build","Hpricot","classes/Hpricot.html#M000006","(ele = Doc.new, assigns = {}, &blk)","",2],["build","Hpricot::Builder","classes/Hpricot/Builder.html#M000033","(*a, &b)","",2],["children_of_type","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000103","(tag_name)","Find children of a given +tag_name+. ele.children_of_type('p') #=> [...array of paragraphs...] ",2],["classes","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000117","()","Returns a list of CSS classes to which this element belongs. ",2],["clean_path","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000091","(path)","",2],["comment?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000064","()","Is this object a comment? ",2],["concat","Hpricot::Builder","classes/Hpricot/Builder.html#M000015","(string)","Alias for #text",2],["containers","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000104","()","Return all children of this node which can contain other nodes.  This is a good way to get all HTML elements",2],["copy_node","Hpricot::Elements","classes/Hpricot/Elements.html#M000053","(node, l)","",2],["css_path","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000093","()","Builds a unique CSS string for this node, from the root of the document containing it. ",2],["doc?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000058","()","Is this object the enclosing HTML or XML document? ",2],["doctype","Hpricot::Builder","classes/Hpricot/Builder.html#M000037","(target, pub, sys)","",2],["doctype?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000062","()","Is this object a doctype tag? ",2],["each_child","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000114","()","+each_child+ iterates over each child. ",2],["each_child_with_index","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000115","()","+each_child_with_index+ iterates over each child. ",2],["each_hyperlink","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000122","()","+each_hyperlink+ traverses hyperlinks such as HTML href attribute of A element. It yields Hpricot::Text.",2],["each_hyperlink_attribute","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000120","()","",2],["each_hyperlink_uri","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000121","(base_uri=nil)","+each_hyperlink_uri+ traverses hyperlinks such as HTML href attribute of A element. It yields Hpricot::Text",2],["each_uri","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000123","(base_uri=nil)","+each_uri+ traverses hyperlinks such as HTML href attribute of A element. It yields URI for each hyperlink.",2],["elem?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000059","()","Is this object an HTML or XML element? ",2],["empty","Hpricot::Elements","classes/Hpricot/Elements.html#M000029","()","Empty the elements in this list, by removing their insides. doc = Hpricot(\"<p> We have <i>so much</i>",2],["expand","Hpricot::Elements","classes/Hpricot/Elements.html#M000050","(ele1, ele2, excl=false)","Given two elements, attempt to gather an Elements array of everything between (and including) those two",2],["filter","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000125","(&block)","+filter+ rebuilds the tree without some components. node.filter {|descendant_node| predicate } -> node",2],["filter","Hpricot::Elements","classes/Hpricot/Elements.html#M000049","(nodes, expr, truth = true)","",2],["filter","Hpricot::Elements","classes/Hpricot/Elements.html#M000051","(expr)","",2],["filter","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000054","(tok, &blk)","",2],["find_element","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000116","(*names)","+find_element+ searches an element which universal name is specified by the arguments. It returns nil",2],["following","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000077","()","Find all nodes which follow the current one. ",2],["following_siblings","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000109","()","Find sibling elements which follow the current one.   Like the other \"sibling\" methods, this weeds out",2],["get_attribute","Hpricot::Elem::Trav","classes/Hpricot/Elem/Trav.html#M000130","(name)","",2],["get_element_by_id","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000118","(id)","",2],["get_elements_by_tag_name","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000119","(*a)","",2],["get_subnode","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000081","(*indexes)","",2],["has_attribute?","Hpricot::Elem::Trav","classes/Hpricot/Elem/Trav.html#M000129","(name)","",2],["head","Hpricot::Builder","classes/Hpricot/Builder.html#M000038","(*args, &block)","Builds a head tag.  Adds a <tt>meta</tt> tag inside with Content-Type set to <tt>text/html; charset=utf-8</tt>.",2],["hide","Hpricot::BlankSlate","classes/Hpricot/BlankSlate.html#M000000","(name)","Hide the method named +name+ in the BlankSlate class.  Don't hide +instance_eval+ or any method beginning",2],["hpricot_slate_method_added","Kernel","classes/Kernel.html#M000002","(name)","Alias for #method_added",2],["hpricot_slate_method_added","Object","classes/Object.html#M000004","(name)","Alias for #method_added",2],["html","Hpricot::Elements","classes/Hpricot/Elements.html#M000021","(*string)","Alias for #inner_html",2],["html","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000085","(inner = nil, &blk)","Builds an HTML string from the contents of this node. ",2],["html=","Hpricot::Elements","classes/Hpricot/Elements.html#M000024","(string)","Alias for #inner_html=",2],["html_tag","Hpricot::Builder","classes/Hpricot/Builder.html#M000034","(sym, *args, &block)","Every HTML tag method goes through an html_tag call.  So, calling <tt>div</tt> is equivalent to calling",2],["index","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000070","(name)","",2],["innerHTML","Hpricot::Elements","classes/Hpricot/Elements.html#M000022","(*string)","Alias for #inner_html",2],["innerHTML","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000087","(inner = nil, &blk)","Alias for #inner_html",2],["innerHTML=","Hpricot::Elements","classes/Hpricot/Elements.html#M000025","(string)","Alias for #inner_html=",2],["innerHTML=","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000089","(inner)","Alias for #inner_html=",2],["innerText","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000084","()","Alias for #inner_text",2],["inner_html","Hpricot::Elements","classes/Hpricot/Elements.html#M000020","(*string)","Returns an HTML fragment built of the contents of each element in this list. If a HTML +string+ is supplied,",2],["inner_html","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000086","(inner = nil, &blk)","Alias for #html",2],["inner_html=","Hpricot::Elements","classes/Hpricot/Elements.html#M000023","(string)","Replaces the contents of each element in this list.  Supply an HTML +string+, which is loaded into Hpricot",2],["inner_html=","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000088","(inner)","Inserts new contents into the current node, based on the HTML contained in string +inner+. ",2],["inner_text","Hpricot::Elements","classes/Hpricot/Elements.html#M000026","()","Returns an string containing the text contents of each element in this list. All HTML tags are removed.",2],["inner_text","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000083","()","Builds a string from the text contained in this node.  All HTML elements are removed. ",2],["insert_after","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000113","(nodes, ele)","Insert +nodes+, an array of HTML elements or a single element, after the node +ele+, a child of the current",2],["insert_before","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000112","(nodes, ele)","Insert +nodes+, an array of HTML elements or a single element, before the node +ele+, a child of the",2],["make","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000066","(input = nil, &blk)","Parses an HTML string, making an HTML fragment based on the options used to create the container document.",2],["method_added","Kernel","classes/Kernel.html#M000001","(name)","Detect method additions to Kernel and remove them in the BlankSlate class. ",2],["method_added","Object","classes/Object.html#M000003","(name)","Detect method additions to Object and remove them in the BlankSlate class. ",2],["method_missing","Hpricot::CssProxy","classes/Hpricot/CssProxy.html#M000044","(id_or_class, *args, &block)","Adds attributes to an element.  Bang methods set the :id attribute. Other methods add to the :class attribute.",2],["new","Hpricot::CssProxy","classes/Hpricot/CssProxy.html#M000043","(builder, sym)","Creates a CssProxy object. ",2],["next","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000072","()","Returns the node neighboring this node to the south: just below it. This method includes text nodes and",2],["next_node","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000073","()","Alias for #next",2],["next_sibling","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000106","()","Returns the container node neighboring this node to the south: just below it. By \"container\" node, I",2],["node_position","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000094","()","",2],["nodes_at","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000071","(*pos)","Puts together an array of neighboring nodes based on their proximity to this node.  So, for example,",2],["not","Hpricot::Elements","classes/Hpricot/Elements.html#M000052","(expr)","",2],["parse","Hpricot","classes/Hpricot.html#M000056","(input = nil, opts = {}, &blk)","Hpricot.parse parses <i>input</i> and return a document tree. represented by Hpricot::Doc. ",2],["position","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000095","()","",2],["preceding","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000076","()","Find all preceding nodes. ",2],["preceding_siblings","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000108","()","Find all preceding sibling elements.   Like the other \"sibling\" methods, this weeds out text and comment",2],["prepend","Hpricot::Elements","classes/Hpricot/Elements.html#M000031","(str = nil, &blk)","Add to the start of the contents inside each element in this list. Pass in an HTML +str+, which is turned",2],["previous","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000074","()","Returns to node neighboring this node to the north: just above it. This method includes text nodes and",2],["previous_node","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000075","()","Alias for #previous",2],["previous_sibling","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000107","()","Returns the container node neighboring this node to the north: just above it. By \"container\" node, I",2],["procins?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000063","()","Is this object an XML processing instruction? ",2],["remove","Hpricot::Elements","classes/Hpricot/Elements.html#M000028","()","Remove all elements in this list from the document which contains them. doc = Hpricot(\"<html>Remove this:",2],["remove_attr","Hpricot::Elements","classes/Hpricot/Elements.html#M000047","(name)","Remove an attribute from each of the matched elements. (doc/\"input\").remove_attr(\"disabled\") ",2],["remove_attribute","Hpricot::Elem::Trav","classes/Hpricot/Elem/Trav.html#M000134","(name)","",2],["remove_class","Hpricot::Elements","classes/Hpricot/Elements.html#M000048","(name = nil)","Removes a class from all matched elements. (doc/\"span\").remove_class(\"lightgrey\") Or, to remove all classes:",2],["reparent","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000090","(nodes)","",2],["replace_child","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000111","(old, new)","Replace +old+, a child of the current node, with +new+ node. ",2],["root","Hpricot::Doc::Trav","classes/Hpricot/Doc/Trav.html#M000128","()","",2],["search","Hpricot::Elements","classes/Hpricot/Elements.html#M000011","(*expr,&blk)","Searches this list for any elements (or children of these elements) matching the CSS or XPath expression",2],["search","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000096","(expr, &blk)","Searches this node for all elements matching the CSS or XPath +expr+.  Returns an Elements array containing",2],["set","Hpricot::Builder","classes/Hpricot/Builder.html#M000007","(option, value)","",2],["set","Hpricot::Elements","classes/Hpricot/Elements.html#M000045","(key, value = nil, &blk)","Alias for #attr",2],["set_attribute","Hpricot::Elem::Trav","classes/Hpricot/Elem/Trav.html#M000132","(name, val)","",2],["siblings_at","Hpricot::Container::Trav","classes/Hpricot/Container/Trav.html#M000110","(*pos)","Puts together an array of neighboring sibling elements based on their proximity to this element. This",2],["swap","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000080","(html = nil, &blk)","Replace this element and its contents with the nodes contained in the +html+ string. ",2],["tag!","Hpricot::Builder","classes/Hpricot/Builder.html#M000016","(tag, *args, &block)","Create a tag named +tag+. Other than the first argument which is the tag name, the arguments are the",2],["text","Hpricot::Builder","classes/Hpricot/Builder.html#M000010","(string)","Write a +string+ to the HTML stream without escaping it. ",2],["text","Hpricot::Elements","classes/Hpricot/Elements.html#M000027","()","Alias for #inner_text",2],["text!","Hpricot::Builder","classes/Hpricot/Builder.html#M000009","(string)","Write a +string+ to the HTML stream, making sure to escape it. ",2],["text?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000060","()","Is this object an HTML text node? ",2],["title","Hpricot::Doc::Trav","classes/Hpricot/Doc/Trav.html#M000126","()","+title+ searches title and return it as a text. It returns nil if not found. +title+ searchs following",2],["to_html","Hpricot::Elements","classes/Hpricot/Elements.html#M000018","()","Convert this group of elements into a complete HTML fragment, returned as a string. ",2],["to_html","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000067","()","Builds an HTML string from this node and its contents. If you need to write to a stream, try calling",2],["to_original_html","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000069","()","Attempts to preserve the original HTML of the document, only outputing new tags for elements which have",2],["to_plain_text","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000082","()","Builds a string from the text contained in this node.  All HTML elements are removed. ",2],["to_s","Hpricot::Elements","classes/Hpricot/Elements.html#M000019","()","Alias for #to_html",2],["to_s","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000068","()","Alias for #to_html",2],["traverse_element","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000100","(*names)","+traverse_element+ traverses elements in the tree. It yields elements in depth first order. If _names_",2],["traverse_text","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000124","()","+traverse_text+ traverses texts in the tree ",2],["uxs","Hpricot","classes/Hpricot.html#M000105","(str)","XML unescape ",2],["uxs","Hpricot","classes/Hpricot.html#M000005","(str)","XML unescape ",2],["wrap","Hpricot::Elements","classes/Hpricot/Elements.html#M000036","(str = nil, &blk)","Wraps each element in the list inside the element created by HTML +str+. If more than one element is",2],["xchr","Hpricot","classes/Hpricot.html#M000101","(str)","XML escaped version of chr ",2],["xhtml_html","Hpricot::Builder","classes/Hpricot/Builder.html#M000041","(attrs = {}, &block)","",2],["xhtml_strict","Hpricot::Builder","classes/Hpricot/Builder.html#M000040","(attrs = {}, &block)","Builds an html tag with XHTML 1.0 Strict doctype instead. ",2],["xhtml_transitional","Hpricot::Builder","classes/Hpricot/Builder.html#M000039","(attrs = {}, &block)","Builds an html tag.  An XML 1.0 instruction and an XHTML 1.0 Transitional doctype are prepended.  Also",2],["xmldecl?","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000061","()","Is this object an XML declaration? ",2],["xpath","Hpricot::Traverse","classes/Hpricot/Traverse.html#M000092","()","Builds a unique XPath string for this node, from the root of the document containing it. ",2],["xs","Hpricot","classes/Hpricot.html#M000102","(str)","XML escaped version of to_s ",2],["CHANGELOG","files/CHANGELOG.html","files/CHANGELOG.html","","= 0.8.5 === 29 November 2011 * Remove escaped quote (\\') from matching (#55) * Fix 'undefined method",3],["COPYING","files/COPYING.html","files/COPYING.html","","Copyright (c) 2006 why the lucky stiff  Permission is hereby granted, free of charge, to any person obtaining",3],["README.md","files/README_md.html","files/README_md.html","","# Hpricot, Read Any HTML  Hpricot is a fast, flexible HTML parser written in C.  It's designed to be",3],["hpricot.rb","files/lib/hpricot_rb.html","files/lib/hpricot_rb.html","","== About hpricot.rb All of Hpricot's various part are loaded when you use <tt>require 'hpricot'</tt>.",3],["blankslate.rb","files/lib/hpricot/blankslate_rb.html","files/lib/hpricot/blankslate_rb.html","","",3],["builder.rb","files/lib/hpricot/builder_rb.html","files/lib/hpricot/builder_rb.html","","",3],["elements.rb","files/lib/hpricot/elements_rb.html","files/lib/hpricot/elements_rb.html","","",3],["htmlinfo.rb","files/lib/hpricot/htmlinfo_rb.html","files/lib/hpricot/htmlinfo_rb.html","","",3],["inspect.rb","files/lib/hpricot/inspect_rb.html","files/lib/hpricot/inspect_rb.html","","",3],["modules.rb","files/lib/hpricot/modules_rb.html","files/lib/hpricot/modules_rb.html","","",3],["parse.rb","files/lib/hpricot/parse_rb.html","files/lib/hpricot/parse_rb.html","","",3],["tag.rb","files/lib/hpricot/tag_rb.html","files/lib/hpricot/tag_rb.html","","",3],["tags.rb","files/lib/hpricot/tags_rb.html","files/lib/hpricot/tags_rb.html","","",3],["traverse.rb","files/lib/hpricot/traverse_rb.html","files/lib/hpricot/traverse_rb.html","","",3],["xchar.rb","files/lib/hpricot/xchar_rb.html","files/lib/hpricot/xchar_rb.html","","The XChar library is provided courtesy of Sam Ruby (See http://intertwingly.net/stories/2005/09/28/xchar.rb)",3]],"searchIndex":["hpricot","blankslate","bogusetag","trav","builder","cdata","trav","comment","trav","container","trav","context","cssproxy","doc","trav","doctype","trav","etag","elem","trav","elements","encodingerror","error","leaf","trav","name","node","procins","trav","text","trav","traverse","xhtmlstrict","xhtmltransitional","xmldecl","trav","kernel","object","%()","%()","/()","/()","<<()","hpricot()","xml()","[]()","[]=()","add_child()","add_class()","after()","after()","append()","at()","at()","attr()","author()","before()","before()","bogusetag?()","build()","build()","children_of_type()","classes()","clean_path()","comment?()","concat()","containers()","copy_node()","css_path()","doc?()","doctype()","doctype?()","each_child()","each_child_with_index()","each_hyperlink()","each_hyperlink_attribute()","each_hyperlink_uri()","each_uri()","elem?()","empty()","expand()","filter()","filter()","filter()","filter()","find_element()","following()","following_siblings()","get_attribute()","get_element_by_id()","get_elements_by_tag_name()","get_subnode()","has_attribute?()","head()","hide()","hpricot_slate_method_added()","hpricot_slate_method_added()","html()","html()","html=()","html_tag()","index()","innerhtml()","innerhtml()","innerhtml=()","innerhtml=()","innertext()","inner_html()","inner_html()","inner_html=()","inner_html=()","inner_text()","inner_text()","insert_after()","insert_before()","make()","method_added()","method_added()","method_missing()","new()","next()","next_node()","next_sibling()","node_position()","nodes_at()","not()","parse()","position()","preceding()","preceding_siblings()","prepend()","previous()","previous_node()","previous_sibling()","procins?()","remove()","remove_attr()","remove_attribute()","remove_class()","reparent()","replace_child()","root()","search()","search()","set()","set()","set_attribute()","siblings_at()","swap()","tag!()","text()","text()","text!()","text?()","title()","to_html()","to_html()","to_original_html()","to_plain_text()","to_s()","to_s()","traverse_element()","traverse_text()","uxs()","uxs()","wrap()","xchr()","xhtml_html()","xhtml_strict()","xhtml_transitional()","xmldecl?()","xpath()","xs()","changelog","copying","readme.md","hpricot.rb","blankslate.rb","builder.rb","elements.rb","htmlinfo.rb","inspect.rb","modules.rb","parse.rb","tag.rb","tags.rb","traverse.rb","xchar.rb"],"longSearchIndex":["lib/hpricot/xchar.rb","hpricot","hpricot","hpricot::bogusetag","hpricot","hpricot","hpricot::cdata","hpricot","hpricot::comment","hpricot","hpricot::container","hpricot","hpricot","hpricot","hpricot::doc","hpricot","hpricot::doctype","hpricot","hpricot","hpricot::elem","hpricot","hpricot","hpricot","hpricot","hpricot::leaf","hpricot","hpricot","hpricot","hpricot::procins","hpricot","hpricot::text","hpricot","hpricot","hpricot","hpricot","hpricot::xmldecl","lib/hpricot/blankslate.rb","lib/hpricot/blankslate.rb","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::builder","object","hpricot","hpricot::elem::trav","hpricot::elem::trav","hpricot::builder","hpricot::elements","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::doc::trav","hpricot::elements","hpricot::traverse","hpricot::traverse","hpricot","hpricot::builder","hpricot::traverse","hpricot::container::trav","hpricot::traverse","hpricot::traverse","hpricot::builder","hpricot::container::trav","hpricot::elements","hpricot::traverse","hpricot::traverse","hpricot::builder","hpricot::traverse","hpricot::container::trav","hpricot::container::trav","hpricot::container::trav","hpricot::container::trav","hpricot::container::trav","hpricot::container::trav","hpricot::traverse","hpricot::elements","hpricot::elements","hpricot::container::trav","hpricot::elements","hpricot::elements","hpricot::traverse","hpricot::container::trav","hpricot::traverse","hpricot::container::trav","hpricot::elem::trav","hpricot::container::trav","hpricot::container::trav","hpricot::traverse","hpricot::elem::trav","hpricot::builder","hpricot::blankslate","kernel","object","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::builder","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::container::trav","hpricot::container::trav","hpricot::traverse","kernel","object","hpricot::cssproxy","hpricot::cssproxy","hpricot::traverse","hpricot::traverse","hpricot::container::trav","hpricot::traverse","hpricot::traverse","hpricot::elements","hpricot","hpricot::traverse","hpricot::traverse","hpricot::container::trav","hpricot::elements","hpricot::traverse","hpricot::traverse","hpricot::container::trav","hpricot::traverse","hpricot::elements","hpricot::elements","hpricot::elem::trav","hpricot::elements","hpricot::traverse","hpricot::container::trav","hpricot::doc::trav","hpricot::elements","hpricot::traverse","hpricot::builder","hpricot::elements","hpricot::elem::trav","hpricot::container::trav","hpricot::traverse","hpricot::builder","hpricot::builder","hpricot::elements","hpricot::builder","hpricot::traverse","hpricot::doc::trav","hpricot::elements","hpricot::traverse","hpricot::traverse","hpricot::traverse","hpricot::elements","hpricot::traverse","hpricot::traverse","hpricot::traverse","hpricot","hpricot","hpricot::elements","hpricot","hpricot::builder","hpricot::builder","hpricot::builder","hpricot::traverse","hpricot::traverse","hpricot","files/changelog.html","files/copying.html","files/readme_md.html","files/lib/hpricot_rb.html","files/lib/hpricot/blankslate_rb.html","files/lib/hpricot/builder_rb.html","files/lib/hpricot/elements_rb.html","files/lib/hpricot/htmlinfo_rb.html","files/lib/hpricot/inspect_rb.html","files/lib/hpricot/modules_rb.html","files/lib/hpricot/parse_rb.html","files/lib/hpricot/tag_rb.html","files/lib/hpricot/tags_rb.html","files/lib/hpricot/traverse_rb.html","files/lib/hpricot/xchar_rb.html"]}}