var search_data = {"index":{"longSearchIndex":["lib/fspath/xattr.rb","fspath","fspath::xattr","fspath::xattr","files/license_txt.html","files/readme_markdown.html","files/lib/fspath/xattr_rb.html"],"info":[["FSPath","lib/fspath/xattr.rb","classes/FSPath.html"," < Object","",1],["Xattr","FSPath","classes/FSPath/Xattr.html"," < ","",1],["lxattr","FSPath::Xattr","classes/FSPath/Xattr.html#M000001","()","Xattr instance for path which doesn't follow symlinks ",2],["xattr","FSPath::Xattr","classes/FSPath/Xattr.html#M000000","()","Xattr instance for path ",2],["LICENSE.txt","files/LICENSE_txt.html","files/LICENSE_txt.html","","Copyright (c) 2010-2011 Ivan Kuchin  Permission is hereby granted, free of charge, to any person obtaining",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","# fspath  Better than Pathname  ### Extended attributes (using xattr gem)  Get extended attribute:  ",3],["xattr.rb","files/lib/fspath/xattr_rb.html","files/lib/fspath/xattr_rb.html","","",3]],"searchIndex":["fspath","xattr","lxattr()","xattr()","license.txt","readme.markdown","xattr.rb"]}}