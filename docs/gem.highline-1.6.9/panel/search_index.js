var search_data = {"index":{"info":[["HighLine","lib/highline/color_scheme.rb","classes/HighLine.html"," < Object","A HighLine object is a \"high-level line oriented\" shell over an input and an  output stream.  HighLine",1],["ColorScheme","HighLine","classes/HighLine/ColorScheme.html"," < Object","ColorScheme objects encapsulate a named set of colors to be used in the HighLine.colors() method call.",1],["Menu","HighLine","classes/HighLine/Menu.html"," < Question","Menu objects encapsulate all the details of a call to HighLine.choose(). Using the accessors and Menu.choice()",1],["Question","HighLine","classes/HighLine/Question.html"," < Object","Question objects contain all the details of a single invocation of HighLine.ask().  The object is initialized",1],["NoAutoCompleteMatch","HighLine::Question","classes/HighLine/Question/NoAutoCompleteMatch.html"," < StandardError","An internal HighLine error.  User code does not need to trap this. ",1],["QuestionError","HighLine","classes/HighLine/QuestionError.html"," < StandardError","An internal HighLine error.  User code does not need to trap this. ",1],["SampleColorScheme","HighLine","classes/HighLine/SampleColorScheme.html"," < ColorScheme","A sample ColorScheme. ",1],["String","HighLine","classes/HighLine/String.html"," < ::String","",1],["StringExtensions","HighLine","classes/HighLine/StringExtensions.html"," < ","",1],["Style","HighLine","classes/HighLine/Style.html"," < Object","",1],["SystemExtensions","HighLine","classes/HighLine/SystemExtensions.html"," < ","",1],["IO","lib/highline/compatibility.rb","classes/IO.html"," < Object","",1],["Kernel","lib/highline/import.rb","classes/Kernel.html"," < ","<tt>require \"highline/import\"</tt> adds shortcut methods to Kernel, making agree(), ask(), choose() and",1],["Object","lib/highline/import.rb","classes/Object.html"," < Object","",1],["String","lib/highline/compatibility.rb","classes/String.html"," < Object","Not a perfect translation, but sufficient for our needs. ",1],["StringIO","lib/highline/compatibility.rb","classes/StringIO.html"," < Object","",1],["String","HighLine","classes/HighLine.html#M000036","(s)","",2],["Style","HighLine","classes/HighLine.html#M000048","(*args)","",2],["[]","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000003","( color_tag )","Allow the scheme to be accessed like a Hash. ",2],["[]=","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000006","( color_tag, constants )","Allow the scheme to be set like a Hash. ",2],["actual_length","HighLine","classes/HighLine.html#M000111","( string_with_escapes )","Returns the length of the passed +string_with_escapes+, minus and color sequence escapes. ",2],["agree","HighLine","classes/HighLine.html#M000088","( yes_or_no_question, character = nil )","A shortcut to HighLine.ask() a question that only accepts \"yes\" or \"no\" answers (\"y\" and \"n\" are allowed)",2],["ansi_rgb_to_hex","HighLine::Style","classes/HighLine/Style.html#M000056","(ansi_number)","",2],["answer_or_default","HighLine::Question","classes/HighLine/Question.html#M000020","( answer_string )","Returns the provided _answer_string_ or the default answer for this Question if a default was set and",2],["append_default","HighLine::Question","classes/HighLine/Question.html#M000042","( )","Adds the default choice to the end of question between <tt>|...|</tt>. Trailing whitespace is preserved",2],["ask","HighLine","classes/HighLine.html#M000089","( question, answer_type = String )","This method is the primary interface for user input.  Just provide a _question_ to ask the user, the",2],["blue","HighLine::Style","classes/HighLine/Style.html#M000069","()","",2],["bright","HighLine::Style","classes/HighLine/Style.html#M000075","()","",2],["build_responses","HighLine::Question","classes/HighLine/Question.html#M000021","( )","Called late in the initialization process to build intelligent responses based on the details of this",2],["change_case","HighLine::Question","classes/HighLine/Question.html#M000024","( answer_string )","Returns the provided _answer_string_ after changing character case by the rules of this Question.  Valid",2],["choice","HighLine::Menu","classes/HighLine/Menu.html#M000014","( name, help = nil, &action )","Adds _name_ to the list of available menu items.  Menu items will be displayed in the order they are",2],["choices","HighLine::Menu","classes/HighLine/Menu.html#M000015","( *names, &action )","A shortcut for multiple calls to the sister method choice().  <b>Be warned:</b>  An _action_ set here",2],["choose","HighLine","classes/HighLine.html#M000090","( *items, &details )","This method is HighLine's menu handler.  For simple usage, you can just pass all the menu items you wish",2],["code","HighLine::Style","classes/HighLine/Style.html#M000065","()","",2],["code_index","HighLine::Style","classes/HighLine/Style.html#M000058","()","",2],["color","HighLine","classes/HighLine.html#M000094","(*args)","Works as an instance method, same as the class method ",2],["color","HighLine","classes/HighLine.html#M000091","( string, *colors )","This method provides easy access to ANSI color sequences, without the user needing to remember to CLEAR",2],["color","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000040","(*args)","",2],["color","HighLine::Style","classes/HighLine/Style.html#M000064","(string)","",2],["color_code","HighLine","classes/HighLine.html#M000093","(*colors)","Works as an instance method, same as the class method ",2],["color_code","HighLine","classes/HighLine.html#M000092","(*colors)","In case you just want the color code, without the embedding and the CLEAR ",2],["color_scheme","HighLine","classes/HighLine.html#M000084","()","Returns the current color scheme. ",2],["color_scheme=","HighLine","classes/HighLine.html#M000083","( setting )","Pass ColorScheme to _setting_ to turn set a HighLine color scheme. ",2],["colorize_strings","HighLine","classes/HighLine.html#M000047","()","",2],["const_missing","HighLine","classes/HighLine.html#M000086","(name)","For RGB colors: ",2],["continue_paging?","HighLine","classes/HighLine.html#M000109","()","Ask user if they wish to continue paging output. Allows them to type \"q\" to cancel the paging process.",2],["convert","HighLine::Question","classes/HighLine/Question.html#M000026","( answer_string )","Transforms the given _answer_string_ into the expected type for this Question.  Currently supported conversions",2],["definition","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000004","( color_tag )","Retrieve the original form of the scheme ",2],["dup","HighLine::Style","classes/HighLine/Style.html#M000062","()","",2],["expected_range","HighLine::Question","classes/HighLine/Question.html#M000028","( )","Returns a english explination of the current range settings. ",2],["explain_error","HighLine","classes/HighLine.html#M000103","( error )","A helper method for sending the output stream and error and repeat of the question. ",2],["first_answer","HighLine::Question","classes/HighLine/Question.html#M000030","( )","Returns _first_answer_, which will be unset following this call. ",2],["first_answer?","HighLine::Question","classes/HighLine/Question.html#M000031","( )","Returns true if _first_answer_ is set. ",2],["gather","HighLine","classes/HighLine.html#M000104","( )","Collects an Array/Hash full of answers as described in  HighLine::Question.gather(). Raises EOFError",2],["get_character","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000066","( input = STDIN )","ncurses savvy getc(). ",2],["get_character","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000061","( input = STDIN )","Unix savvy getc().  (First choice.) *WARNING*:  This method requires the \"termios\" library! ",2],["get_character","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000071","( input = STDIN )","Unix savvy getc().  (Second choice.) *WARNING*:  This method requires the external \"stty\" program! ",2],["get_character","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000054","( input = STDIN )","Windows savvy getc(). *WARNING*:  This method ignores <tt>input</tt> and reads one character from +STDIN+!",2],["get_line","HighLine","classes/HighLine.html#M000105","( )","Read a line of input from the input stream and process whitespace as requested by the Question object.",2],["get_response","HighLine","classes/HighLine.html#M000107","( )","Return a line or character of input, as requested for this question. Character input will be returned",2],["get_single_character","HighLine","classes/HighLine.html#M000106","(is_stty)","",2],["green","HighLine::Style","classes/HighLine/Style.html#M000068","()","",2],["help","HighLine::Menu","classes/HighLine/Menu.html#M000019","( topic, help )","Used to set help for arbitrary topics.  Use the topic <tt>\"help\"</tt> to override the default message.",2],["hidden","HighLine::Menu","classes/HighLine/Menu.html#M000016","( name, help = nil, &action )","Identical to choice(), but the item will not be listed for the user. ",2],["in_range?","HighLine::Question","classes/HighLine/Question.html#M000033","( answer_object )","Returns +true+ if the _answer_object_ is greater than the _above_ attribute, less than the _below_ attribute",2],["include?","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000002","( color_tag )","Does this color scheme include the given tag name? ",2],["included","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000037","(base)","",2],["index","HighLine::Style","classes/HighLine/Style.html#M000049","(style)","",2],["index=","HighLine::Menu","classes/HighLine/Menu.html#M000017","( style )","Sets the indexing style for this Menu object.  Indexes are appended to menu items, when displayed in",2],["init_help","HighLine::Menu","classes/HighLine/Menu.html#M000018","( )","Initializes the help system by adding a <tt>:help</tt> choice, some action code, and the default help",2],["keys","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000005","()","Retrieve the keys in the scheme ",2],["layout=","HighLine::Menu","classes/HighLine/Menu.html#M000022","( new_layout )","Setting a _layout_ with this method also adjusts some other attributes of the Menu object, to ideal defaults",2],["list","HighLine","classes/HighLine.html#M000097","( items, mode = :rows, option = nil )","This method is a utility for quickly and easily laying out lists.  It can be accessed within ERb replacements",2],["list","HighLine::Style","classes/HighLine/Style.html#M000057","()","",2],["load_from_hash","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000001","( h )","Load multiple colors from key/value pairs. ",2],["method_missing","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000046","(method, *args, &blk)","TODO Chain existing method_missing ",2],["new","HighLine","classes/HighLine.html#M000087","( input = $stdin, output = $stdout, wrap_at = nil, page_at = nil )","Create an instance of HighLine, connected to the streams _input_ and _output_. ",2],["new","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000000","( h = nil )","Create an instance of HighLine::ColorScheme. The customization can happen as a passed in Hash or via",2],["new","HighLine::Menu","classes/HighLine/Menu.html#M000012","( )","Create an instance of HighLine::Menu.  All customization is done through the passed block, which should",2],["new","HighLine::Question","classes/HighLine/Question.html#M000013","( question, answer_type )","Create an instance of HighLine::Question.  Expects a _question_ to ask (can be <tt>\"\"</tt>) and an _answer_type_",2],["new","HighLine::SampleColorScheme","classes/HighLine/SampleColorScheme.html#M000010","( h = nil )","Builds the sample scheme with settings for <tt>:critical</tt>, <tt>:error</tt>, <tt>:warning</tt>, <tt>:notice</tt>,",2],["new","HighLine::Style","classes/HighLine/Style.html#M000060","(defn = {})","Single color/styles have :name, :code, :rgb (possibly), :builtin Compound styles have :name, :list, :builtin",2],["on","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000041","(arg)","",2],["on","HighLine::Style","classes/HighLine/Style.html#M000074","()","",2],["on_rgb","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000045","(*colors)","",2],["options","HighLine::Menu","classes/HighLine/Menu.html#M000023","( )","This method returns all possible options for auto-completion, based on the settings of _index_ and _select_by_.",2],["or_ask","Object","classes/Object.html#M000011","( *args, &details )","Tries this object as a _first_answer_ for a HighLine::Question.  See that attribute for details. *Warning*:",2],["output_cols","HighLine","classes/HighLine.html#M000101","()","Returns the number of columns for the console, or a default it they cannot be determined. ",2],["output_rows","HighLine","classes/HighLine.html#M000102","()","Returns the number of rows for the console, or a default if they cannot be determined. ",2],["page_at=","HighLine","classes/HighLine.html#M000100","( setting )","Set to an integer value to cause HighLine to page output lines over the indicated line limit.  When +nil+,",2],["page_print","HighLine","classes/HighLine.html#M000108","( output )","Page print a series of at most _page_at_ lines for _output_.  After each page is printed, HighLine will",2],["raw_no_echo_mode","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000072","()","Switched the input mode to raw and disables echo. *WARNING*:  This method requires the external \"stty\"",2],["red","HighLine::Style","classes/HighLine/Style.html#M000067","()","",2],["remove_whitespace","HighLine::Question","classes/HighLine/Question.html#M000034","( answer_string )","Returns the provided _answer_string_ after processing whitespace by the rules of this Question.  Valid",2],["restore_mode","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000073","()","Restores a previously saved input mode. *WARNING*:  This method requires the external \"stty\" program!",2],["rgb","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000044","(*colors)","",2],["rgb","HighLine::Style","classes/HighLine/Style.html#M000052","(*colors)","",2],["rgb_hex","HighLine::Style","classes/HighLine/Style.html#M000050","(*colors)","",2],["rgb_number","HighLine::Style","classes/HighLine/Style.html#M000053","(*parts)","",2],["rgb_parts","HighLine::Style","classes/HighLine/Style.html#M000051","(hex)","",2],["say","HighLine","classes/HighLine.html#M000098","( statement )","The basic output method for HighLine objects.  If the provided _statement_ ends with a space or tab character,",2],["select","HighLine::Menu","classes/HighLine/Menu.html#M000025","( highline_context, selection, details = nil )","This method processes the auto-completed user selection, based on the rules for this Menu object.  If",2],["selection","HighLine::Question","classes/HighLine/Question.html#M000035","( )","Returns an Array of valid answers to this question.  These answers are only known when _answer_type_",2],["supports_rgb_color?","HighLine","classes/HighLine.html#M000080","()","For checking if the current version of HighLine supports RGB colors Usage: HighLine.supports_rgb_color?",2],["terminal_size","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000076","()","A ncurses savvy method to fetch the console columns, and rows. ",2],["terminal_size","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000055","()","A Windows savvy method to fetch the console columns, and rows. ",2],["terminal_size","HighLine::SystemExtensions","classes/HighLine/SystemExtensions.html#M000077","()","A Unix savvy method using stty that to fetch the console columns, and rows. ... stty does not work in",2],["to_ary","HighLine::Menu","classes/HighLine/Menu.html#M000027","( )","Allows Menu objects to pass as Arrays, for use with HighLine.list(). This method returns all menu items",2],["to_constant","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000009","( v )","Return a normalized representation of a color setting. ",2],["to_hash","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000007","()","Retrieve the color scheme hash (in original definition format) ",2],["to_hash","HighLine::Style","classes/HighLine/Style.html#M000063","()","",2],["to_str","HighLine::Menu","classes/HighLine/Menu.html#M000029","( )","Allows Menu to behave as a String, just like Question.  Returns the _layout_ to be rendered, which is",2],["to_str","HighLine::Question","classes/HighLine/Question.html#M000038","( )","Stringifies the question to be asked. ",2],["to_symbol","HighLine::ColorScheme","classes/HighLine/ColorScheme.html#M000008","( t )","Return a normalized representation of a color name. ",2],["track_eof=","HighLine","classes/HighLine.html#M000081","( setting )","Pass +false+ to _setting_ to turn off HighLine's EOF tracking. ",2],["track_eof?","HighLine","classes/HighLine.html#M000082","()","Returns true if HighLine is currently tracking EOF for input. ",2],["uncolor","HighLine","classes/HighLine.html#M000096","(string)","Works as an instance method, same as the class method ",2],["uncolor","HighLine","classes/HighLine.html#M000095","(string)","Remove color codes from a string ",2],["uncolor","HighLine::StringExtensions","classes/HighLine/StringExtensions.html#M000043","()","",2],["uncolor","HighLine::Style","classes/HighLine/Style.html#M000059","(string)","",2],["update_responses","HighLine::Menu","classes/HighLine/Menu.html#M000032","( )","This method will update the intelligent responses to account for Menu specific differences.  This overrides",2],["use_color=","HighLine","classes/HighLine.html#M000078","( setting )","Pass +false+ to _setting_ to turn off HighLine's color escapes. ",2],["use_color?","HighLine","classes/HighLine.html#M000079","()","Returns true if HighLine is currently using color escapes. ",2],["using_color_scheme?","HighLine","classes/HighLine.html#M000085","()","Returns +true+ if HighLine is currently using a color scheme. ",2],["valid_answer?","HighLine::Question","classes/HighLine/Question.html#M000039","( answer_string )","Returns +true+ if the provided _answer_string_ is accepted by the  _validate_ attribute or +false+ if",2],["variant","HighLine::Style","classes/HighLine/Style.html#M000070","(new_name, options={})","",2],["wrap","HighLine","classes/HighLine.html#M000110","( text )","Wrap a sequence of _lines_ at _wrap_at_ characters per line.  Existing newlines will not be affected",2],["wrap_at=","HighLine","classes/HighLine.html#M000099","( setting )","Set to an integer value to cause HighLine to wrap output lines at the indicated character limit.  When",2],["CHANGELOG","files/CHANGELOG.html","files/CHANGELOG.html","","= Change Log  Below is a complete listing of changes for each revision of HighLine.  == 1.6.9  * The",3],["COPYING","files/COPYING.html","files/COPYING.html","","\t\t    GNU GENERAL PUBLIC LICENSE \t\t       Version 2, June 1991   Copyright (C) 1989, 1991 Free Software",3],["INSTALL","files/INSTALL.html","files/INSTALL.html","","= Installing HighLine  RubyGems is the preferred easy install method for HighLine.  However, you can",3],["LICENSE","files/LICENSE.html","files/LICENSE.html","","= License Terms  Distributed under the user's choice of the {GPL Version 2}[http://www.gnu.org/licenses/old-licenses/gpl-2.0.html]",3],["README","files/README.html","files/README.html","","= Read Me  by James Edward Gray II  == Description  Welcome to HighLine.  HighLine was designed to ease",3],["TODO","files/TODO.html","files/TODO.html","","= To Do List  The following is a list of planned expansions for HighLine, in no particular order.  *",3],["highline.rb","files/lib/highline_rb.html","files/lib/highline_rb.html","","highline.rb Created by James Edward Gray II on 2005-04-26. Copyright 2005 Gray Productions. All rights",3],["color_scheme.rb","files/lib/highline/color_scheme_rb.html","files/lib/highline/color_scheme_rb.html","","color_scheme.rb Created by Jeremy Hinegardner on 2007-01-24 Copyright 2007.  All rights reserved This",3],["compatibility.rb","files/lib/highline/compatibility_rb.html","files/lib/highline/compatibility_rb.html","","",3],["import.rb","files/lib/highline/import_rb.html","files/lib/highline/import_rb.html","","import.rb Created by James Edward Gray II on 2005-04-26. Copyright 2005 Gray Productions. All rights",3],["menu.rb","files/lib/highline/menu_rb.html","files/lib/highline/menu_rb.html","","menu.rb Created by Gregory Thomas Brown on 2005-05-10. Copyright 2005. All rights reserved. This is Free",3],["question.rb","files/lib/highline/question_rb.html","files/lib/highline/question_rb.html","","question.rb Created by James Edward Gray II on 2005-04-26. Copyright 2005 Gray Productions. All rights",3],["string_extensions.rb","files/lib/highline/string_extensions_rb.html","files/lib/highline/string_extensions_rb.html","","Extensions for class String HighLine::String is a subclass of String with convenience methods added for",3],["style.rb","files/lib/highline/style_rb.html","files/lib/highline/style_rb.html","","color_scheme.rb Created by Richard LeBer on 2011-06-27. Copyright 2011.  All rights reserved This is",3],["system_extensions.rb","files/lib/highline/system_extensions_rb.html","files/lib/highline/system_extensions_rb.html","","system_extensions.rb Created by James Edward Gray II on 2006-06-14. Copyright 2006 Gray Productions.",3]],"searchIndex":["highline","colorscheme","menu","question","noautocompletematch","questionerror","samplecolorscheme","string","stringextensions","style","systemextensions","io","kernel","object","string","stringio","string()","style()","[]()","[]=()","actual_length()","agree()","ansi_rgb_to_hex()","answer_or_default()","append_default()","ask()","blue()","bright()","build_responses()","change_case()","choice()","choices()","choose()","code()","code_index()","color()","color()","color()","color()","color_code()","color_code()","color_scheme()","color_scheme=()","colorize_strings()","const_missing()","continue_paging?()","convert()","definition()","dup()","expected_range()","explain_error()","first_answer()","first_answer?()","gather()","get_character()","get_character()","get_character()","get_character()","get_line()","get_response()","get_single_character()","green()","help()","hidden()","in_range?()","include?()","included()","index()","index=()","init_help()","keys()","layout=()","list()","list()","load_from_hash()","method_missing()","new()","new()","new()","new()","new()","new()","on()","on()","on_rgb()","options()","or_ask()","output_cols()","output_rows()","page_at=()","page_print()","raw_no_echo_mode()","red()","remove_whitespace()","restore_mode()","rgb()","rgb()","rgb_hex()","rgb_number()","rgb_parts()","say()","select()","selection()","supports_rgb_color?()","terminal_size()","terminal_size()","terminal_size()","to_ary()","to_constant()","to_hash()","to_hash()","to_str()","to_str()","to_symbol()","track_eof=()","track_eof?()","uncolor()","uncolor()","uncolor()","uncolor()","update_responses()","use_color=()","use_color?()","using_color_scheme?()","valid_answer?()","variant()","wrap()","wrap_at=()","changelog","copying","install","license","readme","todo","highline.rb","color_scheme.rb","compatibility.rb","import.rb","menu.rb","question.rb","string_extensions.rb","style.rb","system_extensions.rb"],"longSearchIndex":["lib/highline.rb","highline","highline","highline","highline::question","highline","highline","highline","highline","highline","highline","lib/highline/compatibility.rb","lib/highline/import.rb","lib/highline/import.rb","lib/highline/compatibility.rb","lib/highline/compatibility.rb","highline","highline","highline::colorscheme","highline::colorscheme","highline","highline","highline::style","highline::question","highline::question","highline","highline::style","highline::style","highline::question","highline::question","highline::menu","highline::menu","highline","highline::style","highline::style","highline","highline","highline::stringextensions","highline::style","highline","highline","highline","highline","highline","highline","highline","highline::question","highline::colorscheme","highline::style","highline::question","highline","highline::question","highline::question","highline","highline::systemextensions","highline::systemextensions","highline::systemextensions","highline::systemextensions","highline","highline","highline","highline::style","highline::menu","highline::menu","highline::question","highline::colorscheme","highline::stringextensions","highline::style","highline::menu","highline::menu","highline::colorscheme","highline::menu","highline","highline::style","highline::colorscheme","highline::stringextensions","highline","highline::colorscheme","highline::menu","highline::question","highline::samplecolorscheme","highline::style","highline::stringextensions","highline::style","highline::stringextensions","highline::menu","object","highline","highline","highline","highline","highline::systemextensions","highline::style","highline::question","highline::systemextensions","highline::stringextensions","highline::style","highline::style","highline::style","highline::style","highline","highline::menu","highline::question","highline","highline::systemextensions","highline::systemextensions","highline::systemextensions","highline::menu","highline::colorscheme","highline::colorscheme","highline::style","highline::menu","highline::question","highline::colorscheme","highline","highline","highline","highline","highline::stringextensions","highline::style","highline::menu","highline","highline","highline","highline::question","highline::style","highline","highline","files/changelog.html","files/copying.html","files/install.html","files/license.html","files/readme.html","files/todo.html","files/lib/highline_rb.html","files/lib/highline/color_scheme_rb.html","files/lib/highline/compatibility_rb.html","files/lib/highline/import_rb.html","files/lib/highline/menu_rb.html","files/lib/highline/question_rb.html","files/lib/highline/string_extensions_rb.html","files/lib/highline/style_rb.html","files/lib/highline/system_extensions_rb.html"]}}