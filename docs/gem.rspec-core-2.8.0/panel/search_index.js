var search_data = {"index":{"longSearchIndex":["lib/autotest/rspec2.rb","autotest","lib/rspec/core/extensions/kernel.rb","lib/rspec/core.rb","lib/rspec/core.rb","rspec","rspec::core","rspec::core","rspec::core::configuration","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core::example","rspec::core::example","rspec::core","rspec::core","rspec::core::extensions","rspec::core::extensions","rspec::core::extensions","rspec::core","rspec::core::filtermanager","rspec::core::filtermanager","rspec::core","rspec::core::formatters","rspec::core::formatters","rspec::core::formatters","rspec::core::formatters","rspec::core::formatters","rspec::core::formatters","rspec::core::formatters","rspec::core::formatters::snippetextractor","rspec::core::formatters","rspec::core","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core","rspec::core::let","rspec::core::let","rspec::core","rspec::core::metadata","rspec::core::metadata","rspec::core::metadata","rspec::core","rspec::core::metadatahashbuilder","rspec::core::metadatahashbuilder","rspec::core::metadatahashbuilder","rspec::core","rspec::core","rspec::core","rspec::core::pending","rspec::core::pending","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core","rspec::core::subject","rspec::core::subject","rspec::core","rspec::core","rspec","rspec","rspec","lib/rspec/monkey/spork/test_framework/rspec.rb","spork","spork::testframework","rspec::core::metadata::metadatahash","rspec::hashwithdeprecationnotice","rspec::core::let::examplemethods","rspec::core::sharedcontext","rspec::core::filtermanager::backwardcompatibility","rspec::core::filtermanager::backwardcompatibility","rspec::core::reporter","rspec::core::rubyproject","rspec::core::rubyproject","rspec::core::drboptions","rspec::core::drboptions","rspec::core::configuration","rspec::core::drboptions","rspec::core::drboptions","rspec::core::drboptions","rspec::core::drboptions","rspec::core::filtermanager","rspec::core::drboptions","rspec::core::configuration","rspec::core::configuration","rspec::core::metadatahashbuilder::common","rspec::core::rubyproject","rspec::core::rubyproject","rspec::core::hooks","rspec::core::configuration","rspec::core::configuration","rspec::core::example","rspec::core::examplegroup","rspec::core::metadata","rspec::core::configurationoptions","rspec::core::filtermanager","rspec::core::examplegroup","rspec::core::world","rspec::core::world","rspec::core::world","rspec::core::example","rspec::core::examplegroup","rspec::core::metadata","rspec::core::configurationoptions","rspec::core::hooks","rspec::core::example","rspec::core::examplegroup","rspec::core::rubyproject","rspec::core::rubyproject","rspec::core::configuration","rspec::core::example","rspec::core::examplegroup","rspec::core::runner","rspec::core::runner","rspec::core::formatters::baseformatter","rspec::core::formatters::textmateformatter","rspec::core::hooks","rspec::core::examplegroup","rspec::core::raketask","rspec::core::examplegroup","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::metadata::metadatahash","rspec::core::metadatahashbuilder::common","rspec::core::configuration","rspec::core::hooks::aroundhook","rspec::core::hooks::hook","rspec::core::examplegroup","rspec::core::configuration","rspec","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::configuration","rspec::core::formatters::basetextformatter","rspec::core::configuration","rspec::core::configuration","rspec::core::configuration","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::configuration","rspec::core::configurationoptions","rspec","rspec::core::formatters::baseformatter","rspec","rspec::core::configurationoptions","rspec::runner","rspec::core::configuration","rspec::core::metadata","rspec::core::configuration","rspec::core::world","rspec::core::configuration","autotest::rspec2","rspec::core::constmissing","rspec::rake","rspec::core::metadata::groupmetadatahash","rspec::core::sharedcontext","rspec::core::formatters::snippetextractor::nullconverter","rspec::core::projectinitializer","rspec::core::projectinitializer","rspec::core::sharedexamplegroup","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::configuration","rspec::core::configurationoptions","rspec::core::configurationoptions","rspec::core::formatters::basetextformatter","rspec::core::configuration","kernel","rspec::core::examplegroup","rspec::core::world","rspec::core::configuration","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::configuration","rspec::core::configuration","rspec::core::example","rspec::core::examplegroup","rspec::core::projectinitializer","rspec","rspec::core::configuration","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::dsl","rspec::core::examplegroup","rspec::core::sharedcontext","rspec::core::examplegroup","rspec::core::metadata::examplemetadatahash","rspec::core::metadata::groupmetadatahash","rspec::core::examplegroup","rspec::core::filtermanager::describable","rspec::core::rubyproject","rspec::core::rubyproject","rspec::core::runner","rspec::core::hooks::hook","rspec::core::configurationoptions","rspec::core::drbcommandline","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::htmlformatter","rspec::core::filtermanager","rspec::core::filtermanager::describable","rspec::core::examplegroup","rspec::core::sharedexamplegroup","rspec::core::metadata","rspec::core::configurationoptions","rspec::core::world","rspec::core::world","rspec::core::formatters::baseformatter","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::progressformatter","rspec::core::reporter","rspec::core::example","rspec::core::formatters::documentationformatter","rspec::core::metadata","rspec::core::formatters::baseformatter","rspec::core::formatters::documentationformatter","rspec::core::reporter","rspec::core::formatters::htmlformatter","rspec::core::formatters::baseformatter","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::reporter","rspec::core::formatters::htmlformatter","rspec::core::formatters::baseformatter","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::progressformatter","rspec::core::reporter","rspec::core::formatters::baseformatter","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::progressformatter","rspec::core::reporter","rspec::core::formatters::baseformatter","rspec::core::formatters::htmlformatter","rspec::core::reporter","rspec::core::examplegroup","rspec::core::filtermanager","rspec::core::filtermanager","rspec::core::filtermanager","rspec::core::filtermanager","rspec::core::configuration","rspec::core::world","rspec::core::configuration","rspec::core::configuration","rspec::core::configuration","rspec::core::configuration","rspec::core::subject::examplegroupmethods","rspec::core::configuration","rspec::core::example::procsy","rspec::core::formatters::htmlformatter","rspec::core::formatters::textmateformatter","rspec::core::configurationoptions","rspec::core::configuration","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::example","rspec::core::formatters::documentationformatter","rspec::core::metadata::metadatahash","rspec::core::configuration","rspec::core::configurationoptions","rspec::core::configuration","rspec::core::raketask","rspec::core::configuration","rspec::core::configuration","rspec::core::metadata","rspec::core::metadata","rspec::core::configurationoptions","rspec::core::world","rspec::core::configuration","rspec::core::configuration","rspec::core::configuration","rspec::core::examplegroup","rspec::core::metadata","rspec::core::examplegroup","rspec::core::formatters::baseformatter","rspec::core::rubyproject","rspec::core::rubyproject","rspec::core::hooks","rspec::core::world","rspec::core::hooks::hookcollection","rspec::core::formatters::basetextformatter","rspec::core::example","rspec::core::reporter","rspec::core::metadata::metadatahash","rspec::core::metadata","rspec::core::configuration","rspec::core::configurationoptions","rspec::core::formatters::baseformatter","rspec::core::formatters::textmateformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::helpers","rspec::core::configuration","rspec::core::configuration","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::configuration","rspec::core::metadata::examplemetadatahash","rspec::core::metadata::groupmetadatahash","rspec::core::configuration","rspec::core::configuration","rspec::core::raketask","autotest::rspec2","rspec::core::configuration","rspec::core::configurationoptions","rspec::core::configurationoptions","rspec::core::formatters::htmlformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","rspec::core::hooks","rspec::core::formatters::htmlformatter","rspec::core::subject::examplegroupmethods","rspec::core::configuration","rspec::core::filtermanager","rspec::core::filtermanager","rspec::core::filtermanager","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::filtermanager","rspec::core::let","rspec::core::sharedcontext","rspec::core::sharedexamplegroup","rspec::core::configuration","rspec::core::world","rspec::core::configuration","rspec::core::runner","rspec::core::extensions::instanceevalwithargs","rspec::core::examplegroup","rspec::core::filtermanager","rspec::core::subject::examplegroupmethods","rspec::core::let::examplegroupmethods","rspec::core::let::examplegroupmethods","rspec::core::configuration","rspec::core::metadata","rspec::core::configuration","rspec::core::formatters::snippetextractor","rspec::core::configuration","rspec::core::configurationoptions","rspec::core::configurationoptions","rspec::core::metadata::metadatahash","rspec::core::metadata","rspec::core::formatters::basetextformatter","rspec::core::formatters::basetextformatter","autotest::rspec2","rspec::core::filtermanager","rspec::core::filtermanager::backwardcompatibility","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::htmlformatter","rspec::core::reporter","rspec::core::examplegroup","rspec::core::formatters::htmlformatter","rspec::core::configuration","rspec::core::configuration","rspec::core::configuration","rspec::core::extensions::moduleevalwithargs","rspec::core::formatters::htmlformatter","autotest::rspec2","rspec::core::commandline","rspec::core::configuration","rspec::core::configurationoptions","rspec::core::drbcommandline","rspec::core::drboptions","rspec::core::example","rspec::core::filtermanager","rspec::core::formatters::baseformatter","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::hooks::hook","rspec::core::metadata","rspec::core::projectinitializer","rspec::core::raketask","rspec::core::reporter","rspec::core::world","rspec::hashwithdeprecationnotice","rspec::core::formatters::documentationformatter","autotest::rspec2","rspec::core::reporter","rspec::core::drboptions","rspec::core::example","rspec::core::hooks::hook","rspec::core::configurationoptions","rspec::core::configurationoptions","rspec::core::configurationoptions","rspec::core::configuration","rspec::core::configuration","rspec::core::configuration","rspec::core::extensions::ordered","rspec::core::formatters::baseformatter","rspec::core::configuration","rspec::core::parser","rspec::core::parser","rspec::core::parser","rspec::core::parser","rspec::core::configurationoptions","rspec::core::parser","rspec::core::formatters::documentationformatter","rspec::core::configuration","rspec::core::pending","rspec::core::example::notpendingexamplefixed","rspec::core::formatters::basetextformatter","rspec::core::pending::pendingexamplefixederror","rspec::core::formatters::documentationformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::basetextformatter","rspec::core::formatters::snippetextractor","rspec::core::world","rspec::core::metadata","rspec::core::example","rspec::core::formatters::baseformatter","rspec::core::filtermanager","rspec::core::configuration","rspec::core::sharedexamplegroup","rspec::core::configuration","rspec::core::formatters::baseformatter","rspec::core::example","rspec::core::example","rspec::core::formatters::basetextformatter","rspec::core::examplegroup","rspec::core::world","rspec::core::formatters::baseformatter","rspec::core::metadata","rspec::core::filtermanager","rspec::core::reporter","rspec::core::projectinitializer","rspec::core::projectinitializer","rspec::core::formatters::htmlformatter","rspec::core::configuration","rspec::core::world","object","object","rspec::core::configuration","rspec","rspec::core::configuration","rspec::core::world","rspec::core::formatters::baseformatter","rspec::core::filtermanager","rspec::core::filtermanager::backwardcompatibility","rspec::core::rubyproject","rspec::core::rubyproject","rspec::core::commandline","rspec::core::drbcommandline","rspec::core::example","rspec::core::examplegroup","rspec::core::projectinitializer","rspec::core::runner","rspec::core::examplegroup","rspec::core::example","rspec::core::examplegroup","rspec::core::hooks::afterhooks","rspec::core::hooks::beforehooks","rspec::core::hooks::afterhooks","rspec::core::hooks::beforehooks","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::example","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks","rspec::core::hooks::afterhook","rspec::core::hooks::beforehook","rspec::core::runner","rspec::core::runner","spork::testframework::rspec","rspec::core::raketask","rspec::core::examplegroup","rspec::core::runner","rspec::core::hooks","rspec::core::formatters::baseformatter","rspec::core::formatters::basetextformatter","rspec::core::configuration","rspec::core::example","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::configuration","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","autotest::rspec2","rspec::core::sharedexamplegroup","rspec::core::sharedexamplegroup","rspec::core::sharedexamplegroup","rspec::core::world","rspec::core::sharedexamplegroup","rspec::core::sharedexamplegroup","rspec::core::formatters::basetextformatter","rspec::core::subject::examplemethods","rspec::core::subject::examplemethods","rspec::core::raketask","rspec::core::formatters::snippetextractor","rspec::core::formatters::snippetextractor","rspec::core::raketask","rspec::core::raketask","rspec::core::example","rspec::core::formatters::baseformatter","rspec::core::formatters::htmlformatter","rspec::core::reporter","rspec::core::formatters::baseformatter","rspec::core::formatters::htmlformatter","rspec::core::formatters::progressformatter","rspec::core::formatters::baseformatter","rspec::core::formatters::baseformatter","rspec::core::reporter","rspec::core::examplegroup","rspec::core::configuration","rspec::core::formatters::helpers","rspec::core::examplegroup","rspec::core::subject::examplegroupmethods","rspec::core::subject::examplemethods","autotest::rspec2","rspec::core::formatters::basetextformatter","rspec::core::examplegroup","rspec::core::metadatahashbuilder::withconfigwarning","rspec::core::metadatahashbuilder::withdeprecationwarning","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::hooks::hook","rspec::core::examplegroup","rspec::core::examplegroup","rspec::core::runner","rspec::core::configuration","rspec::core::configuration","rspec::core::filtermanager","autotest::rspec2","rspec::core::configuration","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec::core::mockframeworkadapter","rspec","rspec","rspec::core::metadatahashbuilder::common","rspec","rspec::core::raketask","rspec::core::formatters::basetextformatter","rspec::core::example::procsy","rspec::core::example","rspec::core::hooks::hookcollection","rspec","rspec::core::examplegroup","rspec::core::formatters::basetextformatter","files/license_txt.html","files/readme_md.html","files/lib/autotest/discover_rb.html","files/lib/autotest/rspec2_rb.html","files/lib/rspec/autorun_rb.html","files/lib/rspec/core_rb.html","files/lib/rspec/core/backward_compatibility_rb.html","files/lib/rspec/core/command_line_rb.html","files/lib/rspec/core/configuration_rb.html","files/lib/rspec/core/configuration_options_rb.html","files/lib/rspec/core/deprecation_rb.html","files/lib/rspec/core/drb_command_line_rb.html","files/lib/rspec/core/drb_options_rb.html","files/lib/rspec/core/dsl_rb.html","files/lib/rspec/core/example_rb.html","files/lib/rspec/core/example_group_rb.html","files/lib/rspec/core/extensions_rb.html","files/lib/rspec/core/extensions/instance_eval_with_args_rb.html","files/lib/rspec/core/extensions/kernel_rb.html","files/lib/rspec/core/extensions/module_eval_with_args_rb.html","files/lib/rspec/core/extensions/ordered_rb.html","files/lib/rspec/core/filter_manager_rb.html","files/lib/rspec/core/formatters/base_formatter_rb.html","files/lib/rspec/core/formatters/base_text_formatter_rb.html","files/lib/rspec/core/formatters/documentation_formatter_rb.html","files/lib/rspec/core/formatters/helpers_rb.html","files/lib/rspec/core/formatters/html_formatter_rb.html","files/lib/rspec/core/formatters/progress_formatter_rb.html","files/lib/rspec/core/formatters/snippet_extractor_rb.html","files/lib/rspec/core/formatters/text_mate_formatter_rb.html","files/lib/rspec/core/hooks_rb.html","files/lib/rspec/core/let_rb.html","files/lib/rspec/core/load_path_rb.html","files/lib/rspec/core/metadata_rb.html","files/lib/rspec/core/metadata_hash_builder_rb.html","files/lib/rspec/core/mocking/with_absolutely_nothing_rb.html","files/lib/rspec/core/mocking/with_flexmock_rb.html","files/lib/rspec/core/mocking/with_mocha_rb.html","files/lib/rspec/core/mocking/with_rr_rb.html","files/lib/rspec/core/mocking/with_rspec_rb.html","files/lib/rspec/core/option_parser_rb.html","files/lib/rspec/core/pending_rb.html","files/lib/rspec/core/project_initializer_rb.html","files/lib/rspec/core/rake_task_rb.html","files/lib/rspec/core/reporter_rb.html","files/lib/rspec/core/ruby_project_rb.html","files/lib/rspec/core/runner_rb.html","files/lib/rspec/core/shared_context_rb.html","files/lib/rspec/core/shared_example_group_rb.html","files/lib/rspec/core/subject_rb.html","files/lib/rspec/core/version_rb.html","files/lib/rspec/core/world_rb.html","files/lib/rspec/monkey_rb.html","files/lib/rspec/monkey/spork/test_framework/rspec_rb.html"],"info":[["Autotest","lib/autotest/rspec2.rb","classes/Autotest.html"," < ","",1],["Rspec2","Autotest","classes/Autotest/Rspec2.html"," < Autotest","Derived from the `Autotest` class, extends the `autotest` command to work with RSpec. @note this will",1],["Kernel","lib/rspec/core/extensions/kernel.rb","classes/Kernel.html"," < ","",1],["Object","lib/rspec/core.rb","classes/Object.html"," < Object","",1],["RSpec","lib/rspec/core/backward_compatibility.rb","classes/RSpec.html"," < ","",1],["Core","RSpec","classes/RSpec/Core.html"," < ","Builds command line arguments to pass to the rspec command over DRb ",1],["CommandLine","RSpec::Core","classes/RSpec/Core/CommandLine.html"," < Object","",1],["Configuration","RSpec::Core","classes/RSpec/Core/Configuration.html"," < Object","Stores runtime configuration information. @example Standard settings RSpec.configure do |c| c.drb   ",1],["MustBeConfiguredBeforeExampleGroupsError","RSpec::Core::Configuration","classes/RSpec/Core/Configuration/MustBeConfiguredBeforeExampleGroupsError.html"," < StandardError","",1],["ConfigurationOptions","RSpec::Core","classes/RSpec/Core/ConfigurationOptions.html"," < Object","@private ",1],["ConstMissing","RSpec::Core","classes/RSpec/Core/ConstMissing.html"," < ","@private ",1],["DRbCommandLine","RSpec::Core","classes/RSpec/Core/DRbCommandLine.html"," < Object","",1],["DSL","RSpec::Core","classes/RSpec/Core/DSL.html"," < ","Adds the `describe` method to the top-level namespace. ",1],["DrbOptions","RSpec::Core","classes/RSpec/Core/DrbOptions.html"," < Object","@private ",1],["Example","RSpec::Core","classes/RSpec/Core/Example.html"," < Object","Wrapper for an instance of a subclass of [ExampleGroup](ExampleGroup). An instance of `Example` is returned",1],["NotPendingExampleFixed","RSpec::Core::Example","classes/RSpec/Core/Example/NotPendingExampleFixed.html"," < ","@private ",1],["Procsy","RSpec::Core::Example","classes/RSpec/Core/Example/Procsy.html"," < ","@private ",1],["ExampleGroup","RSpec::Core","classes/RSpec/Core/ExampleGroup.html"," < Object","ExampleGroup and Example are the main structural elements of rspec-core. Consider this example: describe",1],["Extensions","RSpec::Core","classes/RSpec/Core/Extensions.html"," < ","@private ",1],["InstanceEvalWithArgs","RSpec::Core::Extensions","classes/RSpec/Core/Extensions/InstanceEvalWithArgs.html"," < ","@private ",1],["ModuleEvalWithArgs","RSpec::Core::Extensions","classes/RSpec/Core/Extensions/ModuleEvalWithArgs.html"," < ","@private ",1],["Ordered","RSpec::Core::Extensions","classes/RSpec/Core/Extensions/Ordered.html"," < ","@private Used to extend lists of examples and groups to support ordering strategies like randomization.",1],["FilterManager","RSpec::Core","classes/RSpec/Core/FilterManager.html"," < Object","Manages the filtering of examples and groups by matching tags declared on the command line or options",1],["BackwardCompatibility","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager/BackwardCompatibility.html"," < ","",1],["Describable","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager/Describable.html"," < ","",1],["Formatters","RSpec::Core","classes/RSpec/Core/Formatters.html"," < ","",1],["BaseFormatter","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/BaseFormatter.html"," < Object","",1],["BaseTextFormatter","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/BaseTextFormatter.html"," < BaseFormatter","",1],["DocumentationFormatter","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/DocumentationFormatter.html"," < BaseTextFormatter","",1],["Helpers","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/Helpers.html"," < ","",1],["HtmlFormatter","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/HtmlFormatter.html"," < BaseTextFormatter","",1],["ProgressFormatter","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/ProgressFormatter.html"," < BaseTextFormatter","",1],["SnippetExtractor","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/SnippetExtractor.html"," < Object","This class extracts code snippets by looking at the backtrace of the passed error ",1],["NullConverter","RSpec::Core::Formatters::SnippetExtractor","classes/RSpec/Core/Formatters/SnippetExtractor/NullConverter.html"," < Object","",1],["TextMateFormatter","RSpec::Core::Formatters","classes/RSpec/Core/Formatters/TextMateFormatter.html"," < HtmlFormatter","Formats backtraces so they're clickable by TextMate ",1],["Hooks","RSpec::Core","classes/RSpec/Core/Hooks.html"," < ","",1],["AfterHook","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/AfterHook.html"," < Hook","",1],["AfterHooks","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/AfterHooks.html"," < HookCollection","",1],["AroundHook","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/AroundHook.html"," < Hook","",1],["AroundHooks","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/AroundHooks.html"," < HookCollection","",1],["BeforeHook","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/BeforeHook.html"," < Hook","",1],["BeforeHooks","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/BeforeHooks.html"," < HookCollection","",1],["Hook","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/Hook.html"," < Object","",1],["HookCollection","RSpec::Core::Hooks","classes/RSpec/Core/Hooks/HookCollection.html"," < Array","",1],["Let","RSpec::Core","classes/RSpec/Core/Let.html"," < ","",1],["ExampleGroupMethods","RSpec::Core::Let","classes/RSpec/Core/Let/ExampleGroupMethods.html"," < ","",1],["ExampleMethods","RSpec::Core::Let","classes/RSpec/Core/Let/ExampleMethods.html"," < ","@private ",1],["Metadata","RSpec::Core","classes/RSpec/Core/Metadata.html"," < Hash","Each ExampleGroup class and Example instance owns an instance of Metadata, which is Hash extended to",1],["ExampleMetadataHash","RSpec::Core::Metadata","classes/RSpec/Core/Metadata/ExampleMetadataHash.html"," < ","Mixed in to Metadata for an Example (extends MetadataHash) to support lazy evaluation of some values.",1],["GroupMetadataHash","RSpec::Core::Metadata","classes/RSpec/Core/Metadata/GroupMetadataHash.html"," < ","Mixed in to Metadata for an ExampleGroup (extends MetadataHash) to support lazy evaluation of some values.",1],["MetadataHash","RSpec::Core::Metadata","classes/RSpec/Core/Metadata/MetadataHash.html"," < ","@private ",1],["MetadataHashBuilder","RSpec::Core","classes/RSpec/Core/MetadataHashBuilder.html"," < ","@private ",1],["Common","RSpec::Core::MetadataHashBuilder","classes/RSpec/Core/MetadataHashBuilder/Common.html"," < ","@private ",1],["WithConfigWarning","RSpec::Core::MetadataHashBuilder","classes/RSpec/Core/MetadataHashBuilder/WithConfigWarning.html"," < ","@private ",1],["WithDeprecationWarning","RSpec::Core::MetadataHashBuilder","classes/RSpec/Core/MetadataHashBuilder/WithDeprecationWarning.html"," < ","@private ",1],["MockFrameworkAdapter","RSpec::Core","classes/RSpec/Core/MockFrameworkAdapter.html"," < ","",1],["Parser","RSpec::Core","classes/RSpec/Core/Parser.html"," < Object","",1],["Pending","RSpec::Core","classes/RSpec/Core/Pending.html"," < ","",1],["PendingDeclaredInExample","RSpec::Core::Pending","classes/RSpec/Core/Pending/PendingDeclaredInExample.html"," < StandardError","",1],["PendingExampleFixedError","RSpec::Core::Pending","classes/RSpec/Core/Pending/PendingExampleFixedError.html"," < Test::Unit::AssertionFailedError","",1],["ProjectInitializer","RSpec::Core","classes/RSpec/Core/ProjectInitializer.html"," < Object","",1],["RakeTask","RSpec::Core","classes/RSpec/Core/RakeTask.html"," < ::Rake::TaskLib","",1],["Reporter","RSpec::Core","classes/RSpec/Core/Reporter.html"," < Object","",1],["RubyProject","RSpec::Core","classes/RSpec/Core/RubyProject.html"," < ","",1],["Runner","RSpec::Core","classes/RSpec/Core/Runner.html"," < Object","",1],["SharedContext","RSpec::Core","classes/RSpec/Core/SharedContext.html"," < ","Exposes [ExampleGroup](ExampleGroup)-level methods to a module, so you can include that module in an",1],["SharedExampleGroup","RSpec::Core","classes/RSpec/Core/SharedExampleGroup.html"," < ","",1],["Subject","RSpec::Core","classes/RSpec/Core/Subject.html"," < ","",1],["ExampleGroupMethods","RSpec::Core::Subject","classes/RSpec/Core/Subject/ExampleGroupMethods.html"," < ","",1],["ExampleMethods","RSpec::Core::Subject","classes/RSpec/Core/Subject/ExampleMethods.html"," < ","",1],["Version","RSpec::Core","classes/RSpec/Core/Version.html"," < ","",1],["World","RSpec::Core","classes/RSpec/Core/World.html"," < Object","",1],["HashWithDeprecationNotice","RSpec","classes/RSpec/HashWithDeprecationNotice.html"," < Hash","@private ",1],["Rake","RSpec","classes/RSpec/Rake.html"," < ","@private ",1],["Runner","RSpec","classes/RSpec/Runner.html"," < ","",1],["Spork","lib/rspec/monkey/spork/test_framework/rspec.rb","classes/Spork.html"," < ","",1],["TestFramework","Spork","classes/Spork/TestFramework.html"," < ","",1],["RSpec","Spork::TestFramework","classes/Spork/TestFramework/RSpec.html"," < Spork::TestFramework","@private ",1],["[]","RSpec::Core::Metadata::MetadataHash","classes/RSpec/Core/Metadata/MetadataHash.html#M000349","(key)","@private Supports lazy evaluation of some values. Extended by ExampleMetadataHash and GroupMetadataHash,",2],["[]=","RSpec::HashWithDeprecationNotice","classes/RSpec/HashWithDeprecationNotice.html#M000046","(k,v)","",2],["__memoized","RSpec::Core::Let::ExampleMethods","classes/RSpec/Core/Let/ExampleMethods.html#M000338","()","@private ",2],["_nested_group_declarations","RSpec::Core::SharedContext","classes/RSpec/Core/SharedContext.html#M000449","()","",2],["_warn_deprecated_key","RSpec::Core::FilterManager::BackwardCompatibility","classes/RSpec/Core/FilterManager/BackwardCompatibility.html#M000198","(key, updates)","Emits a deprecation warning for keys that will not be supported in the future. ",2],["_warn_deprecated_keys","RSpec::Core::FilterManager::BackwardCompatibility","classes/RSpec/Core/FilterManager/BackwardCompatibility.html#M000197","(updates)","Supports a use case that probably doesn't exist: overriding the if/unless procs. ",2],["abort","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000424","(seed)","Alias for #finish",2],["add_dir_to_load_path","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000432","(dir)","",2],["add_dir_to_load_path","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000432","(dir)","",2],["add_failure_exit_code","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000080","(argv)","",2],["add_filter","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000086","(argv, name, hash)","",2],["add_formatter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000067","(formatter_to_use, path=nil)","@overload add_formatter(formatter) Adds a formatter to the formatters collection. `formatter` can be",2],["add_formatters","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000088","(argv)","",2],["add_full_description","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000081","(argv)","",2],["add_libs","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000090","(argv)","",2],["add_line_numbers","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000085","(argv)","",2],["add_location","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000204","(file_path, line_numbers)","",2],["add_requires","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000091","(argv)","",2],["add_setting","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000043","(name, opts={})","@overload add_setting(name) @overload add_setting(name, opts) @option opts [Symbol] :default set a default",2],["add_setting","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000024","(name, opts={})","@private Invoked by the `add_setting` instance method. Use that method on a `Configuration` instance",2],["add_symbols_to_hash","RSpec::Core::MetadataHashBuilder::Common","classes/RSpec/Core/MetadataHashBuilder/Common.html#M000359","(hash, args)","",2],["add_to_load_path","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000431","(*dirs)","",2],["add_to_load_path","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000431","(*dirs)","",2],["after","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000342","(*args, &block)","@api public @overload after(&block) @overload after(scope, &block) @overload after(scope, conditions,",2],["alias_example_to","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000072","(new_name, *args)","Creates a method that delegates to `example` including the submitted `args`. Used internally to add variants",2],["alias_it_should_behave_like_to","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000075","(new_name, report_label = '')","Define an alias for it_should_behave_like that allows different language (like \"it_has_behavior\" or \"it_behaves_like\")",2],["all_apply?","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000130","(filters)","@private ",2],["all_apply?","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000182","(filters)","@private ",2],["all_apply?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000368","(filters)","@private ",2],["all_configs","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000026","()","",2],["already_set_standalone_filter?","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000240","()","",2],["ancestors","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000162","()","@private ",2],["announce_exclusion_filter","RSpec::Core::World","classes/RSpec/Core/World.html#M000487","(announcements)","",2],["announce_filters","RSpec::Core::World","classes/RSpec/Core/World.html#M000477","()","",2],["announce_inclusion_filter","RSpec::Core::World","classes/RSpec/Core/World.html#M000486","(announcements)","",2],["any_apply?","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000129","(filters)","@private ",2],["any_apply?","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000181","(filters)","@private ",2],["any_apply?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000367","(filters)","@private ",2],["args_from_options_file","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000034","(path)","",2],["around","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000343","(*args, &block)","@api public @overload around(&block) @overload around(scope, &block) @overload around(scope, conditions,",2],["around_hooks","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000131","()","@private ",2],["around_hooks_for","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000175","(example)","@private ",2],["ascend_until","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000436","()","",2],["ascend_until","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000436","()","",2],["assert_no_example_groups_defined","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000107","(config_option)","",2],["assign_auto_description","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000146","()","",2],["assign_before_all_ivars","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000168","(ivars, example_group_instance)","@private ",2],["autorun","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000437","()","Register an at_exit hook that runs the suite. ",2],["autorun_disabled?","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000439","()","",2],["backtrace_line","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000227","(line)","",2],["backtrace_line","RSpec::Core::Formatters::TextMateFormatter","classes/RSpec/Core/Formatters/TextMateFormatter.html#M000319","(line, skip_textmate_conversion=false)","",2],["before","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000341","(*args, &block)","@api public @overload before(&block) @overload before(scope, &block) @overload before(scope, conditions,",2],["before_all_ivars","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000166","()","@private ",2],["blank","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000430","()","",2],["block_not_supported","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000150","(label)","@private ",2],["blue","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000269","(text)","",2],["bold","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000265","(text)","",2],["build_description_from","RSpec::Core::Metadata::MetadataHash","classes/RSpec/Core/Metadata/MetadataHash.html#M000353","(*parts)","",2],["build_metadata_hash_from","RSpec::Core::MetadataHashBuilder::Common","classes/RSpec/Core/MetadataHashBuilder/Common.html#M000358","(args)","",2],["built_in_formatter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000110","(key)","",2],["call","RSpec::Core::Hooks::AroundHook","classes/RSpec/Core/Hooks/AroundHook.html#M000329","(wrapped_example)","",2],["call","RSpec::Core::Hooks::Hook","classes/RSpec/Core/Hooks/Hook.html#M000325","()","",2],["children","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000160","()","@private ",2],["cleaned_from_backtrace?","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000047","(line)","Used by formatters to ask whether a backtrace line should be displayed or not, based on the line matching",2],["clear_remaining_example_groups","RSpec","classes/RSpec.html#M000490","()","@private Used internally to clear remaining groups when fail_fast is set ",2],["close","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000217","()","This method is invoked at the very end. Allows the formatter to clean up, like closing open streams.",2],["close","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000263","()","",2],["color","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000058","()","",2],["color","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000264","(text, color_code)","",2],["color=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000059","(bool)","",2],["color_enabled","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000060","()","Alias for #color",2],["color_enabled=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000061","(bool)","Alias for #color=",2],["color_enabled?","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000239","()","",2],["colorise_summary","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000247","(summary)","",2],["command","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000105","()","",2],["command_line_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000029","()","",2],["configuration","RSpec","classes/RSpec.html#M000484","()","Returns the global [Configuration](RSpec/Core/Configuration) object. While you _can_ use this method",2],["configuration","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000226","()","",2],["configure","RSpec","classes/RSpec.html#M000489","()","Yields the global configuration to a block. @yield [Configuration] global configuration @example RSpec.configure",2],["configure","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000014","(config)","",2],["configure","RSpec::Runner","classes/RSpec/Runner.html#M000009","(&block)","@deprecated use RSpec.configure instead. ",2],["configure_expectation_framework","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000096","()","@private ",2],["configure_for_example","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000377","(description, user_metadata)","",2],["configure_group","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000094","(group)","@private Used internally to extend a group with modules using `include` and/or `extend`. ",2],["configure_group","RSpec::Core::World","classes/RSpec/Core/World.html#M000472","(group)","",2],["configure_mock_framework","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000095","()","@private ",2],["consolidate_failures","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000002","(failed)","Overrides Autotest's implementation to read rspec output ",2],["const_missing","RSpec::Core::ConstMissing","classes/RSpec/Core/ConstMissing.html#M000008","(name)","Used to print deprecation warnings for Rspec and Spec constants (use RSpec instead) ",2],["const_missing","RSpec::Rake","classes/RSpec/Rake.html#M000010","(name)","Used to print deprecation warnings for Rake::SpecTask constant (use RSpec::Core::RakeTask instead) ",2],["container_stack","RSpec::Core::Metadata::GroupMetadataHash","classes/RSpec/Core/Metadata/GroupMetadataHash.html#M000360","()","",2],["context","RSpec::Core::SharedContext","classes/RSpec/Core/SharedContext.html#M000448","(name, *args, &block)","Alias for #describe",2],["convert","RSpec::Core::Formatters::SnippetExtractor::NullConverter","classes/RSpec/Core/Formatters/SnippetExtractor/NullConverter.html#M000303","(code, pre)","",2],["create_dot_rspec_file","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000403","()","",2],["create_spec_helper_file","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000404","()","",2],["created_from_caller","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000457","(other_caller)","",2],["current_indentation","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000258","()","",2],["current_indentation","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000314","()","",2],["custom_formatter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000111","(formatter_ref)","",2],["custom_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000030","()","",2],["custom_options_file","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000036","()","",2],["cyan","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000271","(text)","",2],["debug=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000064","(bool)","",2],["debugger","Kernel","classes/Kernel.html#M000174","(*args)","If not already defined by ruby-debug, this implementation prints helpful message to STDERR when ruby-debug",2],["declaration_line_numbers","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000183","()","@private ",2],["declaration_line_numbers","RSpec::Core::World","classes/RSpec/Core/World.html#M000491","()","",2],["define_aliases","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000022","(name, alias_name)","@private ",2],["define_example_method","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000141","(name, extra_options={})","@private ",2],["define_nested_shared_group_method","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000143","(new_name, report_label=nil)","@private ",2],["define_predicate_for","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000023","(*names)","@private ",2],["define_reader","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000016","(name)","@private ",2],["delegate_to_metadata","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000119","(*keys)","@private Used to define methods that delegate to this example's metadata ",2],["delegate_to_metadata","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000138","(*names)","@private ",2],["delete_if_confirmed","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000405","(path, message)","",2],["deprecate","RSpec","classes/RSpec.html#M000042","(method, alternate_method=nil, version=nil)","@private Used internally to print deprecation warnings ",2],["deprecate_alias_key","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000017","()","@private ",2],["descendant_filtered_examples","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000154","()","@private ",2],["descendants","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000161","()","@private ",2],["describe","RSpec::Core::DSL","classes/RSpec/Core/DSL.html#M000102","(*args, &example_group_block)","Generates a subclass of [ExampleGroup](ExampleGroup) ## Examples: describe \"something\" do it \"does something\"",2],["describe","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000157","(*args, &example_group_block)","Generates a subclass of this example group which inherits everything except the examples themselves.",2],["describe","RSpec::Core::SharedContext","classes/RSpec/Core/SharedContext.html#M000447","(name, *args, &block)","",2],["described_class","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000187","()","Returns the class or module passed to the `describe` method (or alias). Returns nil if the subject is",2],["described_class","RSpec::Core::Metadata::ExampleMetadataHash","classes/RSpec/Core/Metadata/ExampleMetadataHash.html#M000354","()","",2],["described_class","RSpec::Core::Metadata::GroupMetadataHash","classes/RSpec/Core/Metadata/GroupMetadataHash.html#M000356","()","",2],["describes","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000188","()","Alias for #described_class",2],["description","RSpec::Core::FilterManager::Describable","classes/RSpec/Core/FilterManager/Describable.html#M000192","()","",2],["determine_root","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000434","()","",2],["determine_root","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000434","()","",2],["disable_autorun!","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000438","()","",2],["display_name","RSpec::Core::Hooks::Hook","classes/RSpec/Core/Hooks/Hook.html#M000326","()","",2],["drb_argv","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000018","()","",2],["drb_port","RSpec::Core::DRbCommandLine","classes/RSpec/Core/DRbCommandLine.html#M000055","()","",2],["dump_backtrace","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000279","(example)","",2],["dump_commands_to_rerun_failed_examples","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000254","()","",2],["dump_failure","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000282","(example, index)","",2],["dump_failure_info","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000283","(example)","",2],["dump_failures","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000211","()","Dumps detailed information about each example failure. ",2],["dump_failures","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000243","()","",2],["dump_failures","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000310","()","",2],["dump_pending","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000215","()","This gets invoked after the summary if option is set to do so. ",2],["dump_pending","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000261","()","",2],["dump_pending","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000311","()","",2],["dump_pending_fixed","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000280","(example, index)","",2],["dump_profile","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000255","()","",2],["dump_shared_failure_info","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000284","(group)","",2],["dump_summary","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000214","(duration, example_count, failure_count, pending_count)","This method is invoked after the dumping of examples and failures. ",2],["dump_summary","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000248","(duration, example_count, failure_count, pending_count)","",2],["dump_summary","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000312","(duration, example_count, failure_count, pending_count)","",2],["empty?","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000212","()","",2],["empty_without_conditional_filters?","RSpec::Core::FilterManager::Describable","classes/RSpec/Core/FilterManager/Describable.html#M000193","()","",2],["ensure_example_groups_are_configured","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000164","()","@private ",2],["ensure_shared_example_group_name_not_taken","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000461","(name)","",2],["ensure_valid_keys","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000378","(user_metadata)","",2],["env_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000028","()","",2],["everything_filtered_message","RSpec::Core::World","classes/RSpec/Core/World.html#M000485","()","",2],["example_count","RSpec::Core::World","classes/RSpec/Core/World.html#M000474","()","",2],["example_failed","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000207","(example)","",2],["example_failed","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000251","(example)","",2],["example_failed","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000301","(example)","",2],["example_failed","RSpec::Core::Formatters::ProgressFormatter","classes/RSpec/Core/Formatters/ProgressFormatter.html#M000289","(example)","",2],["example_failed","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000421","(example)","",2],["example_group","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000123","()","Returns the example group class that provides the context for running this example. ",2],["example_group_chain","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000259","()","",2],["example_group_declaration_line","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000379","(locations)","",2],["example_group_finished","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000201","(example_group)","This method is invoked at the end of the execution of each example group. +example_group+ is the example_group.",2],["example_group_finished","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000246","(example_group)","",2],["example_group_finished","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000416","(group)","",2],["example_group_number","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000294","()","The number of the currently running example_group ",2],["example_group_started","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000200","(example_group)","This method is invoked at the beginning of the execution of each example group. +example_group+ is the",2],["example_group_started","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000245","(example_group)","",2],["example_group_started","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000297","(example_group)","",2],["example_group_started","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000415","(group)","",2],["example_number","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000295","()","The number of the currently running example (a global counter) ",2],["example_passed","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000205","(example)","",2],["example_passed","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000249","(example)","",2],["example_passed","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000300","(example)","",2],["example_passed","RSpec::Core::Formatters::ProgressFormatter","classes/RSpec/Core/Formatters/ProgressFormatter.html#M000287","(example)","",2],["example_passed","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000418","(example)","",2],["example_pending","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000206","(example)","",2],["example_pending","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000250","(example)","",2],["example_pending","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000302","(example)","",2],["example_pending","RSpec::Core::Formatters::ProgressFormatter","classes/RSpec/Core/Formatters/ProgressFormatter.html#M000288","(example)","",2],["example_pending","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000422","(example)","",2],["example_started","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000202","(example)","",2],["example_started","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000299","(example)","",2],["example_started","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000417","(example)","",2],["examples","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000152","()","@private ",2],["exclude","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000218","(*args)","",2],["exclude!","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000219","(*args)","",2],["exclude?","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000222","(example)","",2],["exclude_with_low_priority","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000220","(*args)","",2],["exclusion_filter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000089","()","Returns the `exclusion_filter`. If none has been set, returns an empty hash. ",2],["exclusion_filter","RSpec::Core::World","classes/RSpec/Core/World.html#M000471","()","",2],["exclusion_filter=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000087","(filter)","Clears and reassigns the `exclusion_filter`. Set to `nil` if you don't want any exclusion filter at all.",2],["expect_with","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000053","(*frameworks)","Sets the expectation framework module(s). `frameworks` can be :rspec, :stdlib, or both Given :rspec,",2],["expectation_framework=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000052","(framework)","Delegates to expect_with(framework) ",2],["expectation_frameworks","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000051","()","Returns the configured expectation framework adapter module(s) ",2],["explicit_subject","RSpec::Core::Subject::ExampleGroupMethods","classes/RSpec/Core/Subject/ExampleGroupMethods.html#M000464","()","",2],["extend","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000093","(mod, *filters)","Tells RSpec to extend example groups with `mod`.  Methods defined in `mod` are exposed to example groups",2],["extended","RSpec::Core::Example::Procsy","classes/RSpec/Core/Example/Procsy.html#M000126","(object)","@private @param [Proc] Adds a `run` method to the extended Proc, allowing it to be invoked in an [around](../Hooks#around-instance_method)",2],["extra_failure_content","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000304","(exception)","Override this method if you wish to output extra HTML for a failed spec. For example, you could output",2],["extra_failure_content","RSpec::Core::Formatters::TextMateFormatter","classes/RSpec/Core/Formatters/TextMateFormatter.html#M000321","(exception)","",2],["extract_filters_from","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000025","(*configs)","",2],["extract_location","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000104","(path)","",2],["fail_fast?","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000180","()","@private ",2],["fail_filtered_examples","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000178","(exception, reporter)","@private ",2],["fail_with_exception","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000133","(reporter, exception)","@private Used internally to set an exception and fail without actually executing the example when an",2],["failure_output","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000252","(example, exception)","",2],["file_and_line_number","RSpec::Core::Metadata::MetadataHash","classes/RSpec/Core/Metadata/MetadataHash.html#M000351","()","",2],["file_at","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000116","(path)","",2],["file_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000027","()","",2],["files_or_directories_to_run=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000071","(*files)","@private ",2],["files_to_run","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000427","()","",2],["filter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000083","()","Alias for #inclusion_filter",2],["filter=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000079","(filter)","Alias for #inclusion_filter=",2],["filter_applies?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000369","(key, value, metadata=self)","@private ",2],["filter_applies_to_any_value?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000371","(key, value)","@private ",2],["filter_manager","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000019","()","",2],["filter_manager","RSpec::Core::World","classes/RSpec/Core/World.html#M000468","()","",2],["filter_run","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000077","(*args)","Alias for #filter_run_including",2],["filter_run_excluding","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000084","(*args)","Adds key/value pairs to the `exclusion_filter`. If the `treat_symbols_as_metadata_keys_with_true_values`",2],["filter_run_including","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000076","(*args)","Adds key/value pairs to the `inclusion_filter`. If the `treat_symbols_as_metadata_keys_with_true_values`",2],["filtered_examples","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000153","()","@private ",2],["filters_apply?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000370","(key, value)","@private ",2],["find_and_eval_shared","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000151","(label, name, *args, &customization_block)","@private ",2],["find_failed_line","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000232","(backtrace, path)","",2],["find_first_parent_containing","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000435","(dir)","",2],["find_first_parent_containing","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000435","(dir)","",2],["find_hook","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000347","(hook, scope, example_group_class, example = nil)","@private ",2],["find_hook","RSpec::Core::World","classes/RSpec/Core/World.html#M000488","(hook, scope, group, example = nil)","",2],["find_hooks_for","RSpec::Core::Hooks::HookCollection","classes/RSpec/Core/Hooks/HookCollection.html#M000330","(example_or_group)","",2],["find_shared_group","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000285","(example)","",2],["finish","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000140","(reporter)","",2],["finish","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000423","(seed)","",2],["first_caller_from_outside_rspec","RSpec::Core::Metadata::MetadataHash","classes/RSpec/Core/Metadata/MetadataHash.html#M000352","()","",2],["for_example","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000366","(description, user_metadata)","@private ",2],["force","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000040","(hash)","@private Used to set higher priority option values from the command line. ",2],["force?","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000020","(key)","",2],["format_backtrace","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000221","(backtrace, example)","",2],["format_backtrace_line_for_textmate","RSpec::Core::Formatters::TextMateFormatter","classes/RSpec/Core/Formatters/TextMateFormatter.html#M000320","(line)","",2],["format_caller","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000276","(caller_info)","",2],["format_seconds","RSpec::Core::Formatters::Helpers","classes/RSpec/Core/Formatters/Helpers.html#M000277","(float)","",2],["formatter=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000068","(formatter_to_use, path=nil)","Alias for #add_formatter",2],["formatters","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000069","()","",2],["framework_name","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000385","()","",2],["framework_name","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000390","()","",2],["framework_name","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000386","()","",2],["framework_name","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000381","()","",2],["full_backtrace=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000057","(true_or_false)","",2],["full_description","RSpec::Core::Metadata::ExampleMetadataHash","classes/RSpec/Core/Metadata/ExampleMetadataHash.html#M000355","()","",2],["full_description","RSpec::Core::Metadata::GroupMetadataHash","classes/RSpec/Core/Metadata/GroupMetadataHash.html#M000357","()","",2],["full_description=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000066","(description)","",2],["gather_directories","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000103","(path, patterns)","",2],["gemfile=","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000412","(*)","@deprecated Has no effect. The rake task now checks ENV['BUNDLE_GEMFILE'] instead. ",2],["gemfile?","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000007","()","",2],["get_files_to_run","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000101","(paths)","",2],["global_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000032","()","",2],["global_options_file","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000038","()","",2],["global_scripts","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000317","()","",2],["global_styles","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000318","()","",2],["green","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000267","(text)","",2],["group_and_ancestors","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000286","(example)","",2],["hooks","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000339","()","@private ",2],["html_header","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000315","()","",2],["implicit_subject","RSpec::Core::Subject::ExampleGroupMethods","classes/RSpec/Core/Subject/ExampleGroupMethods.html#M000465","()","",2],["include","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000092","(mod, *filters)","Tells RSpec to include `mod` in example groups. Methods defined in `mod` are exposed to examples (not",2],["include","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000223","(*args)","",2],["include!","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000224","(*args)","",2],["include?","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000229","(example)","",2],["include_context","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000147","(name, *args)","Includes shared content declared with `name`. @see SharedExampleGroup ",2],["include_examples","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000149","(name, *args)","Includes shared content declared with `name`. @see SharedExampleGroup ",2],["include_with_low_priority","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000225","(*args)","",2],["included","RSpec::Core::Let","classes/RSpec/Core/Let.html#M000340","(mod)","",2],["included","RSpec::Core::SharedContext","classes/RSpec/Core/SharedContext.html#M000446","(group)","",2],["included","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000458","(kls)","",2],["inclusion_filter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000082","()","Returns the `inclusion_filter`. If none has been set, returns an empty hash. ",2],["inclusion_filter","RSpec::Core::World","classes/RSpec/Core/World.html#M000470","()","",2],["inclusion_filter=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000078","(filter)","Clears and reassigns the `inclusion_filter`. Set to `nil` if you don't want any inclusion filter at all.",2],["installed_at_exit?","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000440","()","",2],["instance_eval_with_args","RSpec::Core::Extensions::InstanceEvalWithArgs","classes/RSpec/Core/Extensions/InstanceEvalWithArgs.html#M000159","(*args, &block)","@private Used internally to support `instance_exec` in Ruby 1.8.6. based on Bounded Spec InstanceExec",2],["instance_eval_with_rescue","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000189","(&hook)","@private instance_evals the block, capturing and reporting an exception if raised ",2],["is_standalone_filter?","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000241","(filter)","",2],["its","RSpec::Core::Subject::ExampleGroupMethods","classes/RSpec/Core/Subject/ExampleGroupMethods.html#M000462","(attribute, &block)","Creates a nested example group named by the submitted +attribute+, and then generates an example using",2],["let","RSpec::Core::Let::ExampleGroupMethods","classes/RSpec/Core/Let/ExampleGroupMethods.html#M000331","(name, &block)","Generates a method whose return value is memoized after the first call. @example describe Thing do let(:thing)",2],["let!","RSpec::Core::Let::ExampleGroupMethods","classes/RSpec/Core/Let/ExampleGroupMethods.html#M000337","(name, &block)","Just like <tt>let()</tt>, except the block is invoked by an implicit <tt>before</tt> hook. This serves",2],["libs=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000062","(libs)","",2],["line_number_filter_applies?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000373","(line_numbers)","@private ",2],["line_numbers=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000065","(line_numbers)","Run examples defined on `line_numbers` in all files to run. ",2],["lines_around","RSpec::Core::Formatters::SnippetExtractor","classes/RSpec/Core/Formatters/SnippetExtractor.html#M000307","(file, line)","",2],["load_spec_files","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000097","()","@private ",2],["local_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000031","()","",2],["local_options_file","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000037","()","",2],["location","RSpec::Core::Metadata::MetadataHash","classes/RSpec/Core/Metadata/MetadataHash.html#M000350","()","",2],["location_filter_applies?","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000372","(locations)","@private ",2],["long_padding","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000274","()","",2],["magenta","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000270","(text)","",2],["make_test_cmd","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000003","(files_to_test)","Overrides Autotest's implementation to generate the rspec command to run ",2],["merge","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000231","(orig, opposite, *updates)","",2],["merge","RSpec::Core::FilterManager::BackwardCompatibility","classes/RSpec/Core/FilterManager/BackwardCompatibility.html#M000195","(orig, opposite, *updates)","",2],["message","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000208","(message)","",2],["message","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000242","(message)","",2],["message","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000293","(message)","",2],["message","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000414","(message)","",2],["metadata","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000155","()","The [Metadata](Metadata) object associated with this group. @see Metadata ",2],["method_missing","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000292","(m, *a, &b)","",2],["mock_framework","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000048","()","Returns the configured mock framework adapter module ",2],["mock_framework=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000049","(framework)","Delegates to mock_framework=(framework) ",2],["mock_with","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000050","(framework)","Sets the mock framework adapter module. `framework` can be a Symbol or a Module. Given any of :rspec,",2],["module_eval_with_args","RSpec::Core::Extensions::ModuleEvalWithArgs","classes/RSpec/Core/Extensions/ModuleEvalWithArgs.html#M000179","(*args, &block)","@private Used internally to support `module_exec` in Ruby 1.8.6. ",2],["move_progress","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000308","()","",2],["new","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000000","()","",2],["new","RSpec::Core::CommandLine","classes/RSpec/Core/CommandLine.html#M000011","(options, configuration=RSpec::configuration, world=RSpec::world)","",2],["new","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000039","()","",2],["new","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000013","(args)","",2],["new","RSpec::Core::DRbCommandLine","classes/RSpec/Core/DRbCommandLine.html#M000054","(options)","",2],["new","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000073","(submitted_options, filter_manager)","",2],["new","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000121","(example_group_class, description, metadata, example_block=nil)","Creates a new instance of Example. @param example_group_class the subclass of ExampleGroup in which this",2],["new","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000203","()","",2],["new","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000194","(output)","",2],["new","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000244","(output)","",2],["new","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000291","(output)","",2],["new","RSpec::Core::Hooks::Hook","classes/RSpec/Core/Hooks/Hook.html#M000322","(options, &block)","",2],["new","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000361","(parent_group_metadata=nil)","",2],["new","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000401","(arg=nil)","",2],["new","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000420","(*args)","",2],["new","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000408","(*formatters)","",2],["new","RSpec::Core::World","classes/RSpec/Core/World.html#M000466","(configuration=RSpec.configuration)","",2],["new","RSpec::HashWithDeprecationNotice","classes/RSpec/HashWithDeprecationNotice.html#M000045","(method, alternate_method=nil)","",2],["next_failure_index","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000253","()","",2],["normalize","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000004","(files_to_test)","Generates a map of filenames to Arrays for Autotest ",2],["notify","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000426","(method, *args, &block)","",2],["options","RSpec::Core::DrbOptions","classes/RSpec/Core/DrbOptions.html#M000074","()","",2],["options","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000122","()","@deprecated access options via metadata instead ",2],["options_apply?","RSpec::Core::Hooks::Hook","classes/RSpec/Core/Hooks/Hook.html#M000323","(example_or_group)","",2],["options_file_as_erb_string","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000035","(path)","",2],["options_from","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000033","(path)","",2],["order","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000021","(keys, *ordered)","",2],["order=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000099","(type)","@api Sets the order and, if order is `'rand:<seed>'`, also sets the seed. ",2],["order_and_seed_from_order","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000120","(type)","",2],["order_and_seed_from_seed","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000117","(value)","",2],["ordered","RSpec::Core::Extensions::Ordered","classes/RSpec/Core/Extensions/Ordered.html#M000190","()","@private ",2],["output_supports_sync","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000237","()","",2],["output_to_tty?","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000109","()","",2],["parse","RSpec::Core::Parser","classes/RSpec/Core/Parser.html#M000398","(args)","Alias for #parse!",2],["parse","RSpec::Core::Parser","classes/RSpec/Core/Parser.html#M000396","(args)","Alias for #parse!",2],["parse!","RSpec::Core::Parser","classes/RSpec/Core/Parser.html#M000395","(args)","",2],["parse!","RSpec::Core::Parser","classes/RSpec/Core/Parser.html#M000394","(args)","",2],["parse_options","RSpec::Core::ConfigurationOptions","classes/RSpec/Core/ConfigurationOptions.html#M000015","()","",2],["parser","RSpec::Core::Parser","classes/RSpec/Core/Parser.html#M000399","(options)","",2],["passed_output","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000256","(example)","",2],["path_for","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000113","(const_ref)","",2],["pending","RSpec::Core::Pending","classes/RSpec/Core/Pending.html#M000400","(*args)","@overload pending() @overload pending(message) @overload pending(message, &block) Stops execution of",2],["pending_fixed?","RSpec::Core::Example::NotPendingExampleFixed","classes/RSpec/Core/Example/NotPendingExampleFixed.html#M000139","()","",2],["pending_fixed?","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000281","(example)","",2],["pending_fixed?","RSpec::Core::Pending::PendingExampleFixedError","classes/RSpec/Core/Pending/PendingExampleFixedError.html#M000397","()","",2],["pending_output","RSpec::Core::Formatters::DocumentationFormatter","classes/RSpec/Core/Formatters/DocumentationFormatter.html#M000257","(example, message)","",2],["percent_done","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000309","()","",2],["pluralize","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000275","(count, string)","",2],["post_process","RSpec::Core::Formatters::SnippetExtractor","classes/RSpec/Core/Formatters/SnippetExtractor.html#M000313","(highlighted, offending_line)","",2],["preceding_declaration_line","RSpec::Core::World","classes/RSpec/Core/World.html#M000475","(filter_line)","",2],["process","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000364","(*args)","@private ",2],["procsy","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000125","(metadata, &proc)","@private Wraps the example block in a Proc so it can invoked using `run` or `call` in [around](../Hooks#around-instance_method)",2],["profile_examples?","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000238","()","",2],["prune","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000213","(examples)","",2],["raise_if_rspec_1_is_loaded","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000108","()","",2],["raise_name_error","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000460","()","",2],["randomize?","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000100","()","",2],["read_failed_line","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000228","(exception, example)","",2],["record","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000148","(results={})","",2],["record_finished","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000142","(status, results={})","",2],["red","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000266","(text)","",2],["register","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000137","()","@private ",2],["register","RSpec::Core::World","classes/RSpec/Core/World.html#M000469","(example_group)","",2],["relative_path","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000191","(line)","",2],["relevant_line_numbers","RSpec::Core::Metadata","classes/RSpec/Core/Metadata.html#M000380","(metadata=self)","TODO - make this a method on metadata - the problem is metadata[:example_group] is not always a kind",2],["replace","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000235","(orig, opposite, *updates)","",2],["report","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000410","(expected_example_count, seed=nil)","@api @overload report(count, &block) @overload report(count, seed, &block) @param [Integer] count the",2],["report_creating","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000407","(file)","",2],["report_exists","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000406","(file)","",2],["report_header","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000316","()","",2],["reporter","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000070","()","",2],["reporter","RSpec::Core::World","classes/RSpec/Core/World.html#M000476","()","",2],["require_rspec","Object","classes/Object.html#M000478","(path)","@private ",2],["require_rspec","Object","classes/Object.html#M000479","(path)","@private ",2],["requires=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000063","(paths)","",2],["reset","RSpec","classes/RSpec.html#M000483","()","@private Used internally to ensure examples get reloaded between multiple runs in the same process. ",2],["reset","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000041","()","@private ",2],["reset","RSpec::Core::World","classes/RSpec/Core/World.html#M000467","()","",2],["restore_sync_output","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000234","()","",2],["reverse_merge","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000236","(orig, opposite, *updates)","",2],["reverse_merge","RSpec::Core::FilterManager::BackwardCompatibility","classes/RSpec/Core/FilterManager/BackwardCompatibility.html#M000196","(orig, opposite, *updates)","",2],["root","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000433","()","",2],["root","RSpec::Core::RubyProject","classes/RSpec/Core/RubyProject.html#M000433","()","",2],["run","RSpec::Core::CommandLine","classes/RSpec/Core/CommandLine.html#M000012","(err, out)","Configures and runs a suite @param [IO] err @param [IO] out ",2],["run","RSpec::Core::DRbCommandLine","classes/RSpec/Core/DRbCommandLine.html#M000056","(err, out)","",2],["run","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000124","(example_group_instance, reporter)","@api private @param example_group_instance the instance of an ExampleGroup subclass instance_evals the",2],["run","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000176","(reporter)","Runs all the examples in this group ",2],["run","RSpec::Core::ProjectInitializer","classes/RSpec/Core/ProjectInitializer.html#M000402","()","",2],["run","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000443","(args, err=$stderr, out=$stdout)","Run a suite of RSpec examples. This is used internally by RSpec to run a suite, but is available for",2],["run_after_all_hooks","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000173","(example_group_instance)","@private ",2],["run_after_each","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000145","()","",2],["run_after_each_hooks","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000172","(example)","@private ",2],["run_all","RSpec::Core::Hooks::AfterHooks","classes/RSpec/Core/Hooks/AfterHooks.html#M000335","(example_group_instance)","",2],["run_all","RSpec::Core::Hooks::BeforeHooks","classes/RSpec/Core/Hooks/BeforeHooks.html#M000333","(example_group_instance)","",2],["run_all!","RSpec::Core::Hooks::AfterHooks","classes/RSpec/Core/Hooks/AfterHooks.html#M000336","(example_group_instance)","",2],["run_all!","RSpec::Core::Hooks::BeforeHooks","classes/RSpec/Core/Hooks/BeforeHooks.html#M000334","(example_group_instance)","",2],["run_around_each_hooks","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000170","(example, initial_procsy)","@private ",2],["run_before_all_hooks","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000169","(example_group_instance)","@private ",2],["run_before_each","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000144","()","",2],["run_before_each_hooks","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000171","(example)","@private ",2],["run_examples","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000177","(reporter)","@private ",2],["run_hook","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000344","(hook, scope, example_group_instance=nil)","@private Runs all of the blocks stored with the hook in the context of the example. If no example is",2],["run_hook!","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000345","(hook, scope, example_group_instance)","@private Just like run_hook, except it removes the blocks as it evalutes them, ensuring that they will",2],["run_hook_filtered","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000346","(hook, scope, group, example_group_instance, example = nil)","@private ",2],["run_in","RSpec::Core::Hooks::AfterHook","classes/RSpec/Core/Hooks/AfterHook.html#M000328","(example_group_instance)","",2],["run_in","RSpec::Core::Hooks::BeforeHook","classes/RSpec/Core/Hooks/BeforeHook.html#M000327","(example_group_instance)","",2],["run_in_process","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000445","(options, err, out)","",2],["run_over_drb","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000444","(options, err, out)","",2],["run_tests","Spork::TestFramework::RSpec","classes/Spork/TestFramework/RSpec.html#M000492","(argv, err, out)","@private ",2],["runner","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000429","()","",2],["running_example","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000186","()","@deprecated use [example](ExampleGroup#example-instance_method) ",2],["running_in_drb?","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000441","()","",2],["scope_and_options_from","RSpec::Core::Hooks","classes/RSpec/Core/Hooks.html#M000348","(*args)","",2],["seed","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000216","(number)","",2],["seed","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000262","(number)","",2],["seed=","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000098","(seed)","@api Sets the seed value and sets `order='rand'` ",2],["set_exception","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000132","(exception)","@private Used internally to set an exception in an after hook, which captures the exception but doesn't",2],["set_it_up","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000165","(*args)","@private ",2],["set_ivars","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000185","(instance, ivars)","@private ",2],["set_order_and_seed","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000118","(hash)","",2],["setup_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000382","()","",2],["setup_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000391","()","",2],["setup_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000374","()","",2],["setup_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000387","()","",2],["setup_rspec_project_mappings","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000001","()","Adds conventional spec-to-file mappings to Autotest configuation. ",2],["share_as","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000455","(name, &block)","",2],["share_examples_for","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000453","(*args, &block)","Alias for #shared_examples",2],["shared_context","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000452","(*args, &block)","Alias for #shared_examples",2],["shared_example_groups","RSpec::Core::World","classes/RSpec/Core/World.html#M000473","()","",2],["shared_examples","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000450","(*args, &block)","@overload shared_examples(name, &block) @overload shared_examples(name, tags, &block) Creates and stores",2],["shared_examples_for","RSpec::Core::SharedExampleGroup","classes/RSpec/Core/SharedExampleGroup.html#M000454","(*args, &block)","Alias for #shared_examples",2],["short_padding","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000273","()","",2],["should","RSpec::Core::Subject::ExampleMethods","classes/RSpec/Core/Subject/ExampleMethods.html#M000456","(matcher=nil, message=nil)","When +should+ is called with no explicit receiver, the call is delegated to the object returned by +subject+.",2],["should_not","RSpec::Core::Subject::ExampleMethods","classes/RSpec/Core/Subject/ExampleMethods.html#M000459","(matcher=nil, message=nil)","Just like +should+, +should_not+ delegates to the subject (implicit or explicit) of the example group.",2],["skip_bundler=","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000409","(*)","@deprecated Has no effect. The rake task now checks ENV['BUNDLE_GEMFILE'] instead. ",2],["snippet","RSpec::Core::Formatters::SnippetExtractor","classes/RSpec/Core/Formatters/SnippetExtractor.html#M000305","(backtrace)","",2],["snippet_for","RSpec::Core::Formatters::SnippetExtractor","classes/RSpec/Core/Formatters/SnippetExtractor.html#M000306","(error_line)","",2],["spec_command","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000428","()","",2],["spec_opts=","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000419","(opts)","@deprecated Use rspec_opts instead. Command line options to pass to rspec. default: nil ",2],["start","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000135","(reporter)","",2],["start","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000199","(example_count)","This method is invoked before any examples are run, right after they have all been collected. This can",2],["start","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000296","(example_count)","",2],["start","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000411","(expected_example_count)","",2],["start_dump","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000210","()","This method is invoked after all of the examples have executed. The next method to be invoked after this",2],["start_dump","RSpec::Core::Formatters::HtmlFormatter","classes/RSpec/Core/Formatters/HtmlFormatter.html#M000298","()","",2],["start_dump","RSpec::Core::Formatters::ProgressFormatter","classes/RSpec/Core/Formatters/ProgressFormatter.html#M000290","()","",2],["start_sync_output","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000233","()","",2],["stop","RSpec::Core::Formatters::BaseFormatter","classes/RSpec/Core/Formatters/BaseFormatter.html#M000209","()","",2],["stop","RSpec::Core::Reporter","classes/RSpec/Core/Reporter.html#M000425","()","",2],["store_before_all_ivars","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000167","(example_group_instance)","@private ",2],["string_const?","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000112","(str)","",2],["strip_trailing_zeroes","RSpec::Core::Formatters::Helpers","classes/RSpec/Core/Formatters/Helpers.html#M000278","(string)","",2],["subclass","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000158","(parent, args, &example_group_block)","@private ",2],["subject","RSpec::Core::Subject::ExampleGroupMethods","classes/RSpec/Core/Subject/ExampleGroupMethods.html#M000463","(&block)","Defines an explicit subject for an example group which can then be the implicit receiver (through delegation)",2],["subject","RSpec::Core::Subject::ExampleMethods","classes/RSpec/Core/Subject/ExampleMethods.html#M000451","()","Returns the subject defined by the example group. The subject block is only executed once per example,",2],["suffix","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000005","()","",2],["summary_line","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000260","(example_count, failure_count, pending_count)","",2],["superclass_metadata","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000156","()","@private @return [Metadata] belonging to the parent of a nested [ExampleGroup](ExampleGroup) ",2],["symbol_metadata_warning","RSpec::Core::MetadataHashBuilder::WithConfigWarning","classes/RSpec/Core/MetadataHashBuilder/WithConfigWarning.html#M000363","(symbols)","",2],["symbol_metadata_warning","RSpec::Core::MetadataHashBuilder::WithDeprecationWarning","classes/RSpec/Core/MetadataHashBuilder/WithDeprecationWarning.html#M000365","(symbols)","",2],["teardown_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000393","()","",2],["teardown_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000389","()","",2],["teardown_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000376","()","",2],["teardown_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000384","()","",2],["to_proc","RSpec::Core::Hooks::Hook","classes/RSpec/Core/Hooks/Hook.html#M000324","()","",2],["top_level?","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000163","()","@private ",2],["top_level_description","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000184","()","@private ",2],["trap_interrupt","RSpec::Core::Runner","classes/RSpec/Core/Runner.html#M000442","()","",2],["underscore","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000115","(camel_cased_word)","activesupport/lib/active_support/inflector/methods.rb, line 48 ",2],["underscore_with_fix_for_non_standard_rspec_naming","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000114","(string)","",2],["unless_standalone","RSpec::Core::FilterManager","classes/RSpec/Core/FilterManager.html#M000230","(*args)","",2],["using_bundler?","Autotest::Rspec2","classes/Autotest/Rspec2.html#M000006","()","",2],["value_for","RSpec::Core::Configuration","classes/RSpec/Core/Configuration.html#M000106","(key, default=nil)","",2],["verify_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000388","()","",2],["verify_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000392","()","",2],["verify_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000383","()","",2],["verify_mocks_for_rspec","RSpec::Core::MockFrameworkAdapter","classes/RSpec/Core/MockFrameworkAdapter.html#M000375","()","",2],["wants_to_quit","RSpec","classes/RSpec.html#M000480","()","@private ",2],["wants_to_quit=","RSpec","classes/RSpec.html#M000481","(maybe)","@private Used internally to determine what to do when a SIGINT is received ",2],["warn_about_symbol_usage","RSpec::Core::MetadataHashBuilder::Common","classes/RSpec/Core/MetadataHashBuilder/Common.html#M000362","(args)","",2],["warn_deprecation","RSpec","classes/RSpec.html#M000044","(message)","@private Used internally to print deprecation warnings ",2],["warning=","RSpec::Core::RakeTask","classes/RSpec/Core/RakeTask.html#M000413","(true_or_false)","@deprecated Use ruby_opts=\"-w\" instead. When true, requests that the specs be run with the warning flag",2],["white","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000272","(text)","",2],["with","RSpec::Core::Example::Procsy","classes/RSpec/Core/Example/Procsy.html#M000128","(metadata)","@private ",2],["with_around_hooks","RSpec::Core::Example","classes/RSpec/Core/Example.html#M000134","(&block)","",2],["without_hooks_for","RSpec::Core::Hooks::HookCollection","classes/RSpec/Core/Hooks/HookCollection.html#M000332","(example_or_group)","",2],["world","RSpec","classes/RSpec.html#M000482","()","@private Internal container for global non-configuration data ",2],["world","RSpec::Core::ExampleGroup","classes/RSpec/Core/ExampleGroup.html#M000136","()","@private ",2],["yellow","RSpec::Core::Formatters::BaseTextFormatter","classes/RSpec/Core/Formatters/BaseTextFormatter.html#M000268","(text)","",2],["License.txt","files/License_txt.html","files/License_txt.html","","(The MIT License)  Copyright (c) 2009 Chad Humphries, David Chelimsky Copyright (c) 2006 David Chelimsky,",3],["README.md","files/README_md.html","files/README_md.html","","# rspec-core  ``` gem install rspec      # for rspec-core, rspec-expectations, rspec-mocks gem install",3],["discover.rb","files/lib/autotest/discover_rb.html","files/lib/autotest/discover_rb.html","","",3],["rspec2.rb","files/lib/autotest/rspec2_rb.html","files/lib/autotest/rspec2_rb.html","","",3],["autorun.rb","files/lib/rspec/autorun_rb.html","files/lib/rspec/autorun_rb.html","","",3],["core.rb","files/lib/rspec/core_rb.html","files/lib/rspec/core_rb.html","","",3],["backward_compatibility.rb","files/lib/rspec/core/backward_compatibility_rb.html","files/lib/rspec/core/backward_compatibility_rb.html","","",3],["command_line.rb","files/lib/rspec/core/command_line_rb.html","files/lib/rspec/core/command_line_rb.html","","",3],["configuration.rb","files/lib/rspec/core/configuration_rb.html","files/lib/rspec/core/configuration_rb.html","","",3],["configuration_options.rb","files/lib/rspec/core/configuration_options_rb.html","files/lib/rspec/core/configuration_options_rb.html","","",3],["deprecation.rb","files/lib/rspec/core/deprecation_rb.html","files/lib/rspec/core/deprecation_rb.html","","",3],["drb_command_line.rb","files/lib/rspec/core/drb_command_line_rb.html","files/lib/rspec/core/drb_command_line_rb.html","","",3],["drb_options.rb","files/lib/rspec/core/drb_options_rb.html","files/lib/rspec/core/drb_options_rb.html","","Builds command line arguments to pass to the rspec command over DRb ",3],["dsl.rb","files/lib/rspec/core/dsl_rb.html","files/lib/rspec/core/dsl_rb.html","","",3],["example.rb","files/lib/rspec/core/example_rb.html","files/lib/rspec/core/example_rb.html","","",3],["example_group.rb","files/lib/rspec/core/example_group_rb.html","files/lib/rspec/core/example_group_rb.html","","",3],["extensions.rb","files/lib/rspec/core/extensions_rb.html","files/lib/rspec/core/extensions_rb.html","","",3],["instance_eval_with_args.rb","files/lib/rspec/core/extensions/instance_eval_with_args_rb.html","files/lib/rspec/core/extensions/instance_eval_with_args_rb.html","","",3],["kernel.rb","files/lib/rspec/core/extensions/kernel_rb.html","files/lib/rspec/core/extensions/kernel_rb.html","","",3],["module_eval_with_args.rb","files/lib/rspec/core/extensions/module_eval_with_args_rb.html","files/lib/rspec/core/extensions/module_eval_with_args_rb.html","","",3],["ordered.rb","files/lib/rspec/core/extensions/ordered_rb.html","files/lib/rspec/core/extensions/ordered_rb.html","","",3],["filter_manager.rb","files/lib/rspec/core/filter_manager_rb.html","files/lib/rspec/core/filter_manager_rb.html","","",3],["base_formatter.rb","files/lib/rspec/core/formatters/base_formatter_rb.html","files/lib/rspec/core/formatters/base_formatter_rb.html","","",3],["base_text_formatter.rb","files/lib/rspec/core/formatters/base_text_formatter_rb.html","files/lib/rspec/core/formatters/base_text_formatter_rb.html","","",3],["documentation_formatter.rb","files/lib/rspec/core/formatters/documentation_formatter_rb.html","files/lib/rspec/core/formatters/documentation_formatter_rb.html","","",3],["helpers.rb","files/lib/rspec/core/formatters/helpers_rb.html","files/lib/rspec/core/formatters/helpers_rb.html","","",3],["html_formatter.rb","files/lib/rspec/core/formatters/html_formatter_rb.html","files/lib/rspec/core/formatters/html_formatter_rb.html","","",3],["progress_formatter.rb","files/lib/rspec/core/formatters/progress_formatter_rb.html","files/lib/rspec/core/formatters/progress_formatter_rb.html","","",3],["snippet_extractor.rb","files/lib/rspec/core/formatters/snippet_extractor_rb.html","files/lib/rspec/core/formatters/snippet_extractor_rb.html","","",3],["text_mate_formatter.rb","files/lib/rspec/core/formatters/text_mate_formatter_rb.html","files/lib/rspec/core/formatters/text_mate_formatter_rb.html","","",3],["hooks.rb","files/lib/rspec/core/hooks_rb.html","files/lib/rspec/core/hooks_rb.html","","",3],["let.rb","files/lib/rspec/core/let_rb.html","files/lib/rspec/core/let_rb.html","","",3],["load_path.rb","files/lib/rspec/core/load_path_rb.html","files/lib/rspec/core/load_path_rb.html","","",3],["metadata.rb","files/lib/rspec/core/metadata_rb.html","files/lib/rspec/core/metadata_rb.html","","",3],["metadata_hash_builder.rb","files/lib/rspec/core/metadata_hash_builder_rb.html","files/lib/rspec/core/metadata_hash_builder_rb.html","","",3],["with_absolutely_nothing.rb","files/lib/rspec/core/mocking/with_absolutely_nothing_rb.html","files/lib/rspec/core/mocking/with_absolutely_nothing_rb.html","","",3],["with_flexmock.rb","files/lib/rspec/core/mocking/with_flexmock_rb.html","files/lib/rspec/core/mocking/with_flexmock_rb.html","","Created by Jim Weirich on 2007-04-10. Copyright (c) 2007. All rights reserved. ",3],["with_mocha.rb","files/lib/rspec/core/mocking/with_mocha_rb.html","files/lib/rspec/core/mocking/with_mocha_rb.html","","",3],["with_rr.rb","files/lib/rspec/core/mocking/with_rr_rb.html","files/lib/rspec/core/mocking/with_rr_rb.html","","",3],["with_rspec.rb","files/lib/rspec/core/mocking/with_rspec_rb.html","files/lib/rspec/core/mocking/with_rspec_rb.html","","",3],["option_parser.rb","files/lib/rspec/core/option_parser_rb.html","files/lib/rspec/core/option_parser_rb.html","","http://www.ruby-doc.org/stdlib/libdoc/optparse/rdoc/classes/OptionParser.html ",3],["pending.rb","files/lib/rspec/core/pending_rb.html","files/lib/rspec/core/pending_rb.html","","",3],["project_initializer.rb","files/lib/rspec/core/project_initializer_rb.html","files/lib/rspec/core/project_initializer_rb.html","","",3],["rake_task.rb","files/lib/rspec/core/rake_task_rb.html","files/lib/rspec/core/rake_task_rb.html","","",3],["reporter.rb","files/lib/rspec/core/reporter_rb.html","files/lib/rspec/core/reporter_rb.html","","",3],["ruby_project.rb","files/lib/rspec/core/ruby_project_rb.html","files/lib/rspec/core/ruby_project_rb.html","","This is borrowed (slightly modified) from Scott Taylor's project_path project: http://github.com/smtlaissezfaire/project_path",3],["runner.rb","files/lib/rspec/core/runner_rb.html","files/lib/rspec/core/runner_rb.html","","",3],["shared_context.rb","files/lib/rspec/core/shared_context_rb.html","files/lib/rspec/core/shared_context_rb.html","","",3],["shared_example_group.rb","files/lib/rspec/core/shared_example_group_rb.html","files/lib/rspec/core/shared_example_group_rb.html","","",3],["subject.rb","files/lib/rspec/core/subject_rb.html","files/lib/rspec/core/subject_rb.html","","",3],["version.rb","files/lib/rspec/core/version_rb.html","files/lib/rspec/core/version_rb.html","","",3],["world.rb","files/lib/rspec/core/world_rb.html","files/lib/rspec/core/world_rb.html","","",3],["monkey.rb","files/lib/rspec/monkey_rb.html","files/lib/rspec/monkey_rb.html","","",3],["rspec.rb","files/lib/rspec/monkey/spork/test_framework/rspec_rb.html","files/lib/rspec/monkey/spork/test_framework/rspec_rb.html","","TODO (2011-05-08) - remove this as soon as spork 0.9.0 is released ",3]],"searchIndex":["autotest","rspec2","kernel","object","rspec","core","commandline","configuration","mustbeconfiguredbeforeexamplegroupserror","configurationoptions","constmissing","drbcommandline","dsl","drboptions","example","notpendingexamplefixed","procsy","examplegroup","extensions","instanceevalwithargs","moduleevalwithargs","ordered","filtermanager","backwardcompatibility","describable","formatters","baseformatter","basetextformatter","documentationformatter","helpers","htmlformatter","progressformatter","snippetextractor","nullconverter","textmateformatter","hooks","afterhook","afterhooks","aroundhook","aroundhooks","beforehook","beforehooks","hook","hookcollection","let","examplegroupmethods","examplemethods","metadata","examplemetadatahash","groupmetadatahash","metadatahash","metadatahashbuilder","common","withconfigwarning","withdeprecationwarning","mockframeworkadapter","parser","pending","pendingdeclaredinexample","pendingexamplefixederror","projectinitializer","raketask","reporter","rubyproject","runner","sharedcontext","sharedexamplegroup","subject","examplegroupmethods","examplemethods","version","world","hashwithdeprecationnotice","rake","runner","spork","testframework","rspec","[]()","[]=()","__memoized()","_nested_group_declarations()","_warn_deprecated_key()","_warn_deprecated_keys()","abort()","add_dir_to_load_path()","add_dir_to_load_path()","add_failure_exit_code()","add_filter()","add_formatter()","add_formatters()","add_full_description()","add_libs()","add_line_numbers()","add_location()","add_requires()","add_setting()","add_setting()","add_symbols_to_hash()","add_to_load_path()","add_to_load_path()","after()","alias_example_to()","alias_it_should_behave_like_to()","all_apply?()","all_apply?()","all_apply?()","all_configs()","already_set_standalone_filter?()","ancestors()","announce_exclusion_filter()","announce_filters()","announce_inclusion_filter()","any_apply?()","any_apply?()","any_apply?()","args_from_options_file()","around()","around_hooks()","around_hooks_for()","ascend_until()","ascend_until()","assert_no_example_groups_defined()","assign_auto_description()","assign_before_all_ivars()","autorun()","autorun_disabled?()","backtrace_line()","backtrace_line()","before()","before_all_ivars()","blank()","block_not_supported()","blue()","bold()","build_description_from()","build_metadata_hash_from()","built_in_formatter()","call()","call()","children()","cleaned_from_backtrace?()","clear_remaining_example_groups()","close()","close()","color()","color()","color=()","color_enabled()","color_enabled=()","color_enabled?()","colorise_summary()","command()","command_line_options()","configuration()","configuration()","configure()","configure()","configure()","configure_expectation_framework()","configure_for_example()","configure_group()","configure_group()","configure_mock_framework()","consolidate_failures()","const_missing()","const_missing()","container_stack()","context()","convert()","create_dot_rspec_file()","create_spec_helper_file()","created_from_caller()","current_indentation()","current_indentation()","custom_formatter()","custom_options()","custom_options_file()","cyan()","debug=()","debugger()","declaration_line_numbers()","declaration_line_numbers()","define_aliases()","define_example_method()","define_nested_shared_group_method()","define_predicate_for()","define_reader()","delegate_to_metadata()","delegate_to_metadata()","delete_if_confirmed()","deprecate()","deprecate_alias_key()","descendant_filtered_examples()","descendants()","describe()","describe()","describe()","described_class()","described_class()","described_class()","describes()","description()","determine_root()","determine_root()","disable_autorun!()","display_name()","drb_argv()","drb_port()","dump_backtrace()","dump_commands_to_rerun_failed_examples()","dump_failure()","dump_failure_info()","dump_failures()","dump_failures()","dump_failures()","dump_pending()","dump_pending()","dump_pending()","dump_pending_fixed()","dump_profile()","dump_shared_failure_info()","dump_summary()","dump_summary()","dump_summary()","empty?()","empty_without_conditional_filters?()","ensure_example_groups_are_configured()","ensure_shared_example_group_name_not_taken()","ensure_valid_keys()","env_options()","everything_filtered_message()","example_count()","example_failed()","example_failed()","example_failed()","example_failed()","example_failed()","example_group()","example_group_chain()","example_group_declaration_line()","example_group_finished()","example_group_finished()","example_group_finished()","example_group_number()","example_group_started()","example_group_started()","example_group_started()","example_group_started()","example_number()","example_passed()","example_passed()","example_passed()","example_passed()","example_passed()","example_pending()","example_pending()","example_pending()","example_pending()","example_pending()","example_started()","example_started()","example_started()","examples()","exclude()","exclude!()","exclude?()","exclude_with_low_priority()","exclusion_filter()","exclusion_filter()","exclusion_filter=()","expect_with()","expectation_framework=()","expectation_frameworks()","explicit_subject()","extend()","extended()","extra_failure_content()","extra_failure_content()","extract_filters_from()","extract_location()","fail_fast?()","fail_filtered_examples()","fail_with_exception()","failure_output()","file_and_line_number()","file_at()","file_options()","files_or_directories_to_run=()","files_to_run()","filter()","filter=()","filter_applies?()","filter_applies_to_any_value?()","filter_manager()","filter_manager()","filter_run()","filter_run_excluding()","filter_run_including()","filtered_examples()","filters_apply?()","find_and_eval_shared()","find_failed_line()","find_first_parent_containing()","find_first_parent_containing()","find_hook()","find_hook()","find_hooks_for()","find_shared_group()","finish()","finish()","first_caller_from_outside_rspec()","for_example()","force()","force?()","format_backtrace()","format_backtrace_line_for_textmate()","format_caller()","format_seconds()","formatter=()","formatters()","framework_name()","framework_name()","framework_name()","framework_name()","full_backtrace=()","full_description()","full_description()","full_description=()","gather_directories()","gemfile=()","gemfile?()","get_files_to_run()","global_options()","global_options_file()","global_scripts()","global_styles()","green()","group_and_ancestors()","hooks()","html_header()","implicit_subject()","include()","include()","include!()","include?()","include_context()","include_examples()","include_with_low_priority()","included()","included()","included()","inclusion_filter()","inclusion_filter()","inclusion_filter=()","installed_at_exit?()","instance_eval_with_args()","instance_eval_with_rescue()","is_standalone_filter?()","its()","let()","let!()","libs=()","line_number_filter_applies?()","line_numbers=()","lines_around()","load_spec_files()","local_options()","local_options_file()","location()","location_filter_applies?()","long_padding()","magenta()","make_test_cmd()","merge()","merge()","message()","message()","message()","message()","metadata()","method_missing()","mock_framework()","mock_framework=()","mock_with()","module_eval_with_args()","move_progress()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_failure_index()","normalize()","notify()","options()","options()","options_apply?()","options_file_as_erb_string()","options_from()","order()","order=()","order_and_seed_from_order()","order_and_seed_from_seed()","ordered()","output_supports_sync()","output_to_tty?()","parse()","parse()","parse!()","parse!()","parse_options()","parser()","passed_output()","path_for()","pending()","pending_fixed?()","pending_fixed?()","pending_fixed?()","pending_output()","percent_done()","pluralize()","post_process()","preceding_declaration_line()","process()","procsy()","profile_examples?()","prune()","raise_if_rspec_1_is_loaded()","raise_name_error()","randomize?()","read_failed_line()","record()","record_finished()","red()","register()","register()","relative_path()","relevant_line_numbers()","replace()","report()","report_creating()","report_exists()","report_header()","reporter()","reporter()","require_rspec()","require_rspec()","requires=()","reset()","reset()","reset()","restore_sync_output()","reverse_merge()","reverse_merge()","root()","root()","run()","run()","run()","run()","run()","run()","run_after_all_hooks()","run_after_each()","run_after_each_hooks()","run_all()","run_all()","run_all!()","run_all!()","run_around_each_hooks()","run_before_all_hooks()","run_before_each()","run_before_each_hooks()","run_examples()","run_hook()","run_hook!()","run_hook_filtered()","run_in()","run_in()","run_in_process()","run_over_drb()","run_tests()","runner()","running_example()","running_in_drb?()","scope_and_options_from()","seed()","seed()","seed=()","set_exception()","set_it_up()","set_ivars()","set_order_and_seed()","setup_mocks_for_rspec()","setup_mocks_for_rspec()","setup_mocks_for_rspec()","setup_mocks_for_rspec()","setup_rspec_project_mappings()","share_as()","share_examples_for()","shared_context()","shared_example_groups()","shared_examples()","shared_examples_for()","short_padding()","should()","should_not()","skip_bundler=()","snippet()","snippet_for()","spec_command()","spec_opts=()","start()","start()","start()","start()","start_dump()","start_dump()","start_dump()","start_sync_output()","stop()","stop()","store_before_all_ivars()","string_const?()","strip_trailing_zeroes()","subclass()","subject()","subject()","suffix()","summary_line()","superclass_metadata()","symbol_metadata_warning()","symbol_metadata_warning()","teardown_mocks_for_rspec()","teardown_mocks_for_rspec()","teardown_mocks_for_rspec()","teardown_mocks_for_rspec()","to_proc()","top_level?()","top_level_description()","trap_interrupt()","underscore()","underscore_with_fix_for_non_standard_rspec_naming()","unless_standalone()","using_bundler?()","value_for()","verify_mocks_for_rspec()","verify_mocks_for_rspec()","verify_mocks_for_rspec()","verify_mocks_for_rspec()","wants_to_quit()","wants_to_quit=()","warn_about_symbol_usage()","warn_deprecation()","warning=()","white()","with()","with_around_hooks()","without_hooks_for()","world()","world()","yellow()","license.txt","readme.md","discover.rb","rspec2.rb","autorun.rb","core.rb","backward_compatibility.rb","command_line.rb","configuration.rb","configuration_options.rb","deprecation.rb","drb_command_line.rb","drb_options.rb","dsl.rb","example.rb","example_group.rb","extensions.rb","instance_eval_with_args.rb","kernel.rb","module_eval_with_args.rb","ordered.rb","filter_manager.rb","base_formatter.rb","base_text_formatter.rb","documentation_formatter.rb","helpers.rb","html_formatter.rb","progress_formatter.rb","snippet_extractor.rb","text_mate_formatter.rb","hooks.rb","let.rb","load_path.rb","metadata.rb","metadata_hash_builder.rb","with_absolutely_nothing.rb","with_flexmock.rb","with_mocha.rb","with_rr.rb","with_rspec.rb","option_parser.rb","pending.rb","project_initializer.rb","rake_task.rb","reporter.rb","ruby_project.rb","runner.rb","shared_context.rb","shared_example_group.rb","subject.rb","version.rb","world.rb","monkey.rb","rspec.rb"]}}