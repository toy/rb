var search_data = {"index":{"longSearchIndex":["lib/spruz/xt/uniq_by.rb","lib/spruz/xt/uniq_by.rb","lib/spruz/xt/file_binary.rb","lib/spruz/xt/round.rb","lib/spruz/xt/subhash.rb","lib/spruz/xt/write.rb","lib/spruz/xt/irb.rb","lib/spruz/xt/round.rb","lib/spruz/xt/partial_application.rb","lib/spruz/xt/named.rb","lib/spruz/xt/p.rb","lib/spruz/xt/partial_application.rb","lib/spruz/xt/range_plus.rb","lib/spruz.rb","spruz","spruz","spruz","spruz::blank","spruz::blank","spruz::blank","spruz::blank","spruz::blank","spruz::blank","spruz::blank","spruz::blank","spruz","spruz","spruz","spruz::filebinary","spruz::filebinary","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz::linesfile","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz","spruz::stringversion","spruz","spruz","spruz::timedummy","spruz","spruz","spruz","lib/spruz/xt/string_version.rb","lib/spruz/xt/symbol_to_proc.rb","lib/spruz/xt/time_dummy.rb","spruz::rangeplus","spruz::rangeplus","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::bijection","spruz::bijection","spruz::generator","spruz::generator","spruz::modulegroup","spruz::modulegroup","spruz::stringversion::version","spruz::stringversion::version","spruz::bijection","spruz::bijection","spruz::stringversion::version","spruz::stringversion::version","module","module","module","module","module","module","spruz::generator","spruz::generator","spruz::stringversion::version","spruz::stringversion::version","spruz::filebinary","spruz::filebinary","spruz::filebinary::classmethods","spruz::filebinary::classmethods","spruz::attempt","spruz::attempt","spruz::filebinary","spruz::filebinary","spruz::filebinary::classmethods","spruz::filebinary::classmethods","spruz::blank::falseclass","spruz::blank::falseclass","spruz::blank::nilclass","spruz::blank::nilclass","spruz::blank::numeric","spruz::blank::numeric","spruz::blank::object","spruz::blank::object","spruz::blank::string","spruz::blank::string","spruz::blank::trueclass","spruz::blank::trueclass","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::stringcamelize","spruz::stringcamelize","spruz::stringcamelize","spruz::stringcamelize","spruz::null","spruz::null","spruz::countby","spruz::countby","spruz::deepdup","spruz::deepdup","spruz::generator","spruz::generator","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","irb","irb","spruz::limited","spruz::limited","spruz::write","spruz::write","spruz::linesfile","spruz::linesfile","spruz::linesfile::lineextension","spruz::linesfile::lineextension","spruz::bijection","spruz::bijection","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::bijection","spruz::bijection","spruz::full","spruz::full","spruz::go","spruz::go","spruz::blank::array","spruz::blank::array","spruz::blank::hash","spruz::blank::hash","spruz::filebinary","spruz::filebinary","spruz::partialapplication","spruz::partialapplication","spruz::round","spruz::round","spruz::timedummy","spruz::timedummy","spruz::linesfile","spruz::linesfile","spruz::null","spruz::null","spruz::stringversion::version","spruz::stringversion::version","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::linesfile","spruz::linesfile","spruz::linesfile","spruz::linesfile","module","module","module","module","module","module","spruz::null","spruz::null","spruz::minimize","spruz::minimize","spruz::minimize","spruz::minimize","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","module","module","module","module","object","object","object","object","spruz::bijection","spruz::bijection","spruz::generator","spruz::generator","spruz::limited","spruz::limited","spruz::linesfile","spruz::linesfile","spruz::stringversion::version","spruz::stringversion::version","spruz::timedummy::classmethods","spruz::timedummy::classmethods","spruz::linesfile","spruz::linesfile","spruz::timedummy::classmethods","spruz::timedummy::classmethods","spruz::once","spruz::once","spruz::p","spruz::p","spruz::partialapplication","spruz::partialapplication","spruz::p","spruz::p","spruz::stringversion::version","spruz::stringversion::version","spruz::blank::object","spruz::blank::object","spruz::linesfile","spruz::linesfile","spruz::generator","spruz::generator","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::stringversion::version","spruz::linesfile","spruz::linesfile","spruz::round","spruz::round","spruz::securewrite","spruz::securewrite","spruz::shuffle","spruz::shuffle","spruz::shuffle","spruz::shuffle","spruz::generator","spruz::generator","spruz::attempt","spruz::attempt","spruz::subhash","spruz::subhash","hash","hash","spruz::stringversion::version","spruz::stringversion::version","spruz::hashsymbolizekeysrecursive","spruz::hashsymbolizekeysrecursive","spruz::hashsymbolizekeysrecursive","spruz::hashsymbolizekeysrecursive","spruz::stringversion::version","spruz::stringversion::version","spruz::toproc","spruz::toproc","spruz::linesfile","spruz::linesfile","spruz::null","spruz::null","spruz::stringversion::version","spruz::stringversion::version","spruz::once","spruz::once","spruz::stringunderscore","spruz::stringunderscore","spruz::uniqby","spruz::uniqby","array","array","spruz::minimize","spruz::minimize","spruz::minimize","spruz::minimize","spruz::stringversion","spruz::stringversion","spruz::stringversion::version","spruz::stringversion::version","spruz::hashunion","spruz::hashunion","files/license.html","files/readme_rdoc.html","files/todo.html","files/lib/spruz_rb.html","files/lib/spruz_rb.html","files/lib/spruz/attempt_rb.html","files/lib/spruz/attempt_rb.html","files/lib/spruz/bijection_rb.html","files/lib/spruz/bijection_rb.html","files/lib/spruz/count_by_rb.html","files/lib/spruz/count_by_rb.html","files/lib/spruz/deep_dup_rb.html","files/lib/spruz/deep_dup_rb.html","files/lib/spruz/file_binary_rb.html","files/lib/spruz/file_binary_rb.html","files/lib/spruz/generator_rb.html","files/lib/spruz/generator_rb.html","files/lib/spruz/go_rb.html","files/lib/spruz/go_rb.html","files/lib/spruz/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/hash_union_rb.html","files/lib/spruz/hash_union_rb.html","files/lib/spruz/limited_rb.html","files/lib/spruz/limited_rb.html","files/lib/spruz/lines_file_rb.html","files/lib/spruz/lines_file_rb.html","files/lib/spruz/memoize_rb.html","files/lib/spruz/memoize_rb.html","files/lib/spruz/minimize_rb.html","files/lib/spruz/minimize_rb.html","files/lib/spruz/module_group_rb.html","files/lib/spruz/module_group_rb.html","files/lib/spruz/null_rb.html","files/lib/spruz/null_rb.html","files/lib/spruz/once_rb.html","files/lib/spruz/once_rb.html","files/lib/spruz/p_rb.html","files/lib/spruz/p_rb.html","files/lib/spruz/partial_application_rb.html","files/lib/spruz/partial_application_rb.html","files/lib/spruz/range_plus_rb.html","files/lib/spruz/range_plus_rb.html","files/lib/spruz/round_rb.html","files/lib/spruz/round_rb.html","files/lib/spruz/secure_write_rb.html","files/lib/spruz/secure_write_rb.html","files/lib/spruz/shuffle_rb.html","files/lib/spruz/shuffle_rb.html","files/lib/spruz/string_camelize_rb.html","files/lib/spruz/string_camelize_rb.html","files/lib/spruz/string_underscore_rb.html","files/lib/spruz/string_underscore_rb.html","files/lib/spruz/string_version_rb.html","files/lib/spruz/string_version_rb.html","files/lib/spruz/subhash_rb.html","files/lib/spruz/subhash_rb.html","files/lib/spruz/time_dummy_rb.html","files/lib/spruz/time_dummy_rb.html","files/lib/spruz/to_proc_rb.html","files/lib/spruz/to_proc_rb.html","files/lib/spruz/uniq_by_rb.html","files/lib/spruz/uniq_by_rb.html","files/lib/spruz/version_rb.html","files/lib/spruz/version_rb.html","files/lib/spruz/write_rb.html","files/lib/spruz/write_rb.html","files/lib/spruz/xt_rb.html","files/lib/spruz/xt_rb.html","files/lib/spruz/xt/attempt_rb.html","files/lib/spruz/xt/attempt_rb.html","files/lib/spruz/xt/blank_rb.html","files/lib/spruz/xt/blank_rb.html","files/lib/spruz/xt/count_by_rb.html","files/lib/spruz/xt/count_by_rb.html","files/lib/spruz/xt/deep_dup_rb.html","files/lib/spruz/xt/deep_dup_rb.html","files/lib/spruz/xt/file_binary_rb.html","files/lib/spruz/xt/file_binary_rb.html","files/lib/spruz/xt/full_rb.html","files/lib/spruz/xt/full_rb.html","files/lib/spruz/xt/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/xt/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/xt/hash_union_rb.html","files/lib/spruz/xt/hash_union_rb.html","files/lib/spruz/xt/irb_rb.html","files/lib/spruz/xt/irb_rb.html","files/lib/spruz/xt/named_rb.html","files/lib/spruz/xt/named_rb.html","files/lib/spruz/xt/null_rb.html","files/lib/spruz/xt/null_rb.html","files/lib/spruz/xt/p_rb.html","files/lib/spruz/xt/p_rb.html","files/lib/spruz/xt/partial_application_rb.html","files/lib/spruz/xt/partial_application_rb.html","files/lib/spruz/xt/range_plus_rb.html","files/lib/spruz/xt/range_plus_rb.html","files/lib/spruz/xt/round_rb.html","files/lib/spruz/xt/round_rb.html","files/lib/spruz/xt/secure_write_rb.html","files/lib/spruz/xt/secure_write_rb.html","files/lib/spruz/xt/shuffle_rb.html","files/lib/spruz/xt/shuffle_rb.html","files/lib/spruz/xt/string_rb.html","files/lib/spruz/xt/string_rb.html","files/lib/spruz/xt/string_camelize_rb.html","files/lib/spruz/xt/string_camelize_rb.html","files/lib/spruz/xt/string_underscore_rb.html","files/lib/spruz/xt/string_underscore_rb.html","files/lib/spruz/xt/string_version_rb.html","files/lib/spruz/xt/string_version_rb.html","files/lib/spruz/xt/subhash_rb.html","files/lib/spruz/xt/subhash_rb.html","files/lib/spruz/xt/symbol_to_proc_rb.html","files/lib/spruz/xt/symbol_to_proc_rb.html","files/lib/spruz/xt/time_dummy_rb.html","files/lib/spruz/xt/time_dummy_rb.html","files/lib/spruz/xt/uniq_by_rb.html","files/lib/spruz/xt/uniq_by_rb.html","files/lib/spruz/xt/write_rb.html","files/lib/spruz/xt/write_rb.html"],"info":[["Array","lib/spruz/xt/shuffle.rb","classes/Array.html"," < Object","",1],["Enumerable","lib/spruz/xt/count_by.rb","classes/Enumerable.html"," < ","",1],["File","lib/spruz/xt/file_binary.rb","classes/File.html"," < Object","",1],["Float","lib/spruz/xt/round.rb","classes/Float.html"," < Object","",1],["Hash","lib/spruz/xt/hash_symbolize_keys_recursive.rb","classes/Hash.html"," < Object","",1],["IO","lib/spruz/xt/write.rb","classes/IO.html"," < Object","class ::Object include Spruz::Write end ",1],["IRB","lib/spruz/xt/irb.rb","classes/IRB.html"," < ","",1],["Integer","lib/spruz/xt/round.rb","classes/Integer.html"," < Object","",1],["Method","lib/spruz/xt/partial_application.rb","classes/Method.html"," < Object","",1],["Module","lib/spruz/memoize.rb","classes/Module.html"," < Object","",1],["Object","lib/spruz/xt/named.rb","classes/Object.html"," < Object","",1],["Proc","lib/spruz/xt/partial_application.rb","classes/Proc.html"," < Object","",1],["Range","lib/spruz/xt/range_plus.rb","classes/Range.html"," < Object","",1],["Spruz","lib/spruz.rb","classes/Spruz.html"," < ","",1],["Attempt","Spruz","classes/Spruz/Attempt.html"," < ","",1],["Bijection","Spruz","classes/Spruz/Bijection.html"," < Hash","",1],["Blank","Spruz","classes/Spruz/Blank.html"," < ","",1],["Array","Spruz::Blank","classes/Spruz/Blank/Array.html"," < ","",1],["FalseClass","Spruz::Blank","classes/Spruz/Blank/FalseClass.html"," < ","",1],["Hash","Spruz::Blank","classes/Spruz/Blank/Hash.html"," < ","",1],["NilClass","Spruz::Blank","classes/Spruz/Blank/NilClass.html"," < ","",1],["Numeric","Spruz::Blank","classes/Spruz/Blank/Numeric.html"," < ","",1],["Object","Spruz::Blank","classes/Spruz/Blank/Object.html"," < ","",1],["String","Spruz::Blank","classes/Spruz/Blank/String.html"," < ","",1],["TrueClass","Spruz::Blank","classes/Spruz/Blank/TrueClass.html"," < ","",1],["CountBy","Spruz","classes/Spruz/CountBy.html"," < ","",1],["DeepDup","Spruz","classes/Spruz/DeepDup.html"," < ","",1],["FileBinary","Spruz","classes/Spruz/FileBinary.html"," < ","",1],["ClassMethods","Spruz::FileBinary","classes/Spruz/FileBinary/ClassMethods.html"," < ","",1],["Constants","Spruz::FileBinary","classes/Spruz/FileBinary/Constants.html"," < ","",1],["Full","Spruz","classes/Spruz/Full.html"," < ","",1],["GO","Spruz","classes/Spruz/GO.html"," < ","",1],["Generator","Spruz","classes/Spruz/Generator.html"," < Object","This class can create generator objects, that can produce all tuples, that would be created by as many",1],["HashSymbolizeKeysRecursive","Spruz","classes/Spruz/HashSymbolizeKeysRecursive.html"," < ","",1],["HashUnion","Spruz","classes/Spruz/HashUnion.html"," < ","",1],["Limited","Spruz","classes/Spruz/Limited.html"," < Object","",1],["LinesFile","Spruz","classes/Spruz/LinesFile.html"," < Object","",1],["LineExtension","Spruz::LinesFile","classes/Spruz/LinesFile/LineExtension.html"," < ","",1],["Memoize","Spruz","classes/Spruz/Memoize.html"," < ","",1],["Minimize","Spruz","classes/Spruz/Minimize.html"," < ","This module can be mixed into all classes, whose instances respond to the [] and size-methods, like for",1],["ModuleGroup","Spruz","classes/Spruz/ModuleGroup.html"," < ","",1],["Null","Spruz","classes/Spruz/Null.html"," < ","Implementation of the null object pattern in Ruby. --- Implementation of the null object pattern in Ruby.",1],["Once","Spruz","classes/Spruz/Once.html"," < ","",1],["P","Spruz","classes/Spruz/P.html"," < ","",1],["PartialApplication","Spruz","classes/Spruz/PartialApplication.html"," < ","",1],["RangePlus","Spruz","classes/Spruz/RangePlus.html"," < ","",1],["Round","Spruz","classes/Spruz/Round.html"," < ","A bit more versatile rounding for Ruby --- A bit more versatile rounding for Ruby ",1],["SecureWrite","Spruz","classes/Spruz/SecureWrite.html"," < ","",1],["Shuffle","Spruz","classes/Spruz/Shuffle.html"," < ","",1],["StringCamelize","Spruz","classes/Spruz/StringCamelize.html"," < ","",1],["StringUnderscore","Spruz","classes/Spruz/StringUnderscore.html"," < ","",1],["StringVersion","Spruz","classes/Spruz/StringVersion.html"," < ","",1],["Version","Spruz::StringVersion","classes/Spruz/StringVersion/Version.html"," < Object","",1],["Subhash","Spruz","classes/Spruz/Subhash.html"," < ","",1],["TimeDummy","Spruz","classes/Spruz/TimeDummy.html"," < ","",1],["ClassMethods","Spruz::TimeDummy","classes/Spruz/TimeDummy/ClassMethods.html"," < ","",1],["ToProc","Spruz","classes/Spruz/ToProc.html"," < ","",1],["UniqBy","Spruz","classes/Spruz/UniqBy.html"," < ","",1],["Write","Spruz","classes/Spruz/Write.html"," < ","",1],["String","lib/spruz/xt/string_underscore.rb","classes/String.html"," < Object","",1],["Symbol","lib/spruz/xt/symbol_to_proc.rb","classes/Symbol.html"," < Object","",1],["Time","lib/spruz/xt/time_dummy.rb","classes/Time.html"," < Object","",1],["+","Spruz::RangePlus","classes/Spruz/RangePlus.html#M000184","(other)","",2],["+","Spruz::RangePlus","classes/Spruz/RangePlus.html#M000116","(other)","",2],["<=>","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000206","(other)","",2],["<=>","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000078","(other)","",2],["==","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000081","(other)","",2],["==","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000207","(other)","",2],["[]","Spruz::Bijection","classes/Spruz/Bijection.html#M000121","(*pairs)","",2],["[]","Spruz::Bijection","classes/Spruz/Bijection.html#M000044","(*pairs)","",2],["[]","Spruz::Generator","classes/Spruz/Generator.html#M000008","(*enums)","Create a new Generator object from the enumberables _enums_. ",2],["[]","Spruz::Generator","classes/Spruz/Generator.html#M000133","(*enums)","Create a new Generator object from the enumberables _enums_. ",2],["[]","Spruz::ModuleGroup","classes/Spruz/ModuleGroup.html#M000053","(*modules)","",2],["[]","Spruz::ModuleGroup","classes/Spruz/ModuleGroup.html#M000173","(*modules)","",2],["[]","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000074","(index)","",2],["[]","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000202","(index)","",2],["[]=","Spruz::Bijection","classes/Spruz/Bijection.html#M000048","(key, value)","",2],["[]=","Spruz::Bijection","classes/Spruz/Bijection.html#M000125","(key, value)","",2],["[]=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000203","(index, value)","",2],["[]=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000075","(index, value)","",2],["__memoize_cache__","Module","classes/Module.html#M000028","()","Returns the current memoize cache for this Module. ",2],["__memoize_cache__","Module","classes/Module.html#M000166","()","Returns the current memoize cache for this Module. ",2],["__memoize_cache__","Module","classes/Module.html#M000163","()","Returns the current memoize cache for all the stored objects and method call results. ",2],["__memoize_cache__","Module","classes/Module.html#M000019","()","Returns the current memoize cache for all the stored objects and method call results. ",2],["__memoize_cache_delete__","Module","classes/Module.html#M000020","()","Finalizer to delete the stored result for a garbage collected object. ",2],["__memoize_cache_delete__","Module","classes/Module.html#M000164","()","Finalizer to delete the stored result for a garbage collected object. ",2],["add_dimension","Spruz::Generator","classes/Spruz/Generator.html#M000137","(enum, iterator = :each)","Add another dimension to this generator. _enum_ is an object, that ought to respond to the _iterator_",2],["add_dimension","Spruz::Generator","classes/Spruz/Generator.html#M000012","(enum, iterator = :each)","Add another dimension to this generator. _enum_ is an object, that ought to respond to the _iterator_",2],["array","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000082","()","",2],["array","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000208","()","",2],["ascii?","Spruz::FileBinary","classes/Spruz/FileBinary.html#M000129","(options = {})","Returns true if FileBinary#binary? returns false, false if FileBinary#binary? returns true, and nil otherwise.",2],["ascii?","Spruz::FileBinary","classes/Spruz/FileBinary.html#M000061","(options = {})","Returns true if FileBinary#binary? returns false, false if FileBinary#binary? returns true, and nil otherwise.",2],["ascii?","Spruz::FileBinary::ClassMethods","classes/Spruz/FileBinary/ClassMethods.html#M000064","(name, options = {})","Returns true if the file with name +name+ is considered to be ascii using the FileBinary#ascii? method.",2],["ascii?","Spruz::FileBinary::ClassMethods","classes/Spruz/FileBinary/ClassMethods.html#M000132","(name, options = {})","Returns true if the file with name +name+ is considered to be ascii using the FileBinary#ascii? method.",2],["attempt","Spruz::Attempt","classes/Spruz/Attempt.html#M000049","(opts = {}, &block)","",2],["attempt","Spruz::Attempt","classes/Spruz/Attempt.html#M000119","(opts = {}, &block)","",2],["binary?","Spruz::FileBinary","classes/Spruz/FileBinary.html#M000128","(options = {})","Returns true if this file is considered to be binary, false if it is not considered to be binary, and",2],["binary?","Spruz::FileBinary","classes/Spruz/FileBinary.html#M000060","(options = {})","Returns true if this file is considered to be binary, false if it is not considered to be binary, and",2],["binary?","Spruz::FileBinary::ClassMethods","classes/Spruz/FileBinary/ClassMethods.html#M000131","(name, options = {})","Returns true if the file with name +name+ is considered to be binary using the FileBinary#binary? method.",2],["binary?","Spruz::FileBinary::ClassMethods","classes/Spruz/FileBinary/ClassMethods.html#M000063","(name, options = {})","Returns true if the file with name +name+ is considered to be binary using the FileBinary#binary? method.",2],["blank?","Spruz::Blank::FalseClass","classes/Spruz/Blank/FalseClass.html#M000224","()","",2],["blank?","Spruz::Blank::FalseClass","classes/Spruz/Blank/FalseClass.html#M000098","()","",2],["blank?","Spruz::Blank::NilClass","classes/Spruz/Blank/NilClass.html#M000223","()","",2],["blank?","Spruz::Blank::NilClass","classes/Spruz/Blank/NilClass.html#M000097","()","",2],["blank?","Spruz::Blank::Numeric","classes/Spruz/Blank/Numeric.html#M000103","()","",2],["blank?","Spruz::Blank::Numeric","classes/Spruz/Blank/Numeric.html#M000229","()","",2],["blank?","Spruz::Blank::Object","classes/Spruz/Blank/Object.html#M000095","()","",2],["blank?","Spruz::Blank::Object","classes/Spruz/Blank/Object.html#M000221","()","",2],["blank?","Spruz::Blank::String","classes/Spruz/Blank/String.html#M000102","()","",2],["blank?","Spruz::Blank::String","classes/Spruz/Blank/String.html#M000228","()","",2],["blank?","Spruz::Blank::TrueClass","classes/Spruz/Blank/TrueClass.html#M000099","()","",2],["blank?","Spruz::Blank::TrueClass","classes/Spruz/Blank/TrueClass.html#M000225","()","",2],["build","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000070","()","",2],["build","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000198","()","",2],["build=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000071","(number)","",2],["build=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000199","(number)","",2],["camelcase","Spruz::StringCamelize","classes/Spruz/StringCamelize.html#M000191","(first_letter = :upper)","Alias for #camelize",2],["camelcase","Spruz::StringCamelize","classes/Spruz/StringCamelize.html#M000015","(first_letter = :upper)","Alias for #camelize",2],["camelize","Spruz::StringCamelize","classes/Spruz/StringCamelize.html#M000014","(first_letter = :upper)","",2],["camelize","Spruz::StringCamelize","classes/Spruz/StringCamelize.html#M000190","(first_letter = :upper)","",2],["const_missing","Spruz::Null","classes/Spruz/Null.html#M000056","(*)","",2],["const_missing","Spruz::Null","classes/Spruz/Null.html#M000175","(*)","",2],["count_by","Spruz::CountBy","classes/Spruz/CountBy.html#M000126","(&b)","",2],["count_by","Spruz::CountBy","classes/Spruz/CountBy.html#M000117","(&b)","",2],["deep_dup","Spruz::DeepDup","classes/Spruz/DeepDup.html#M000127","()","",2],["deep_dup","Spruz::DeepDup","classes/Spruz/DeepDup.html#M000018","()","",2],["each","Spruz::Generator","classes/Spruz/Generator.html#M000135","()","Iterate over all tuples produced by this generator and yield to them. ",2],["each","Spruz::Generator","classes/Spruz/Generator.html#M000010","()","Iterate over all tuples produced by this generator and yield to them. ",2],["each","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000036","(&block)","",2],["each","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000156","(&block)","",2],["empty?","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000155","()","",2],["empty?","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000035","()","",2],["examine","IRB","classes/IRB.html#M000231","(binding = TOPLEVEL_BINDING)","",2],["examine","IRB","classes/IRB.html#M000092","(binding = TOPLEVEL_BINDING)","",2],["execute","Spruz::Limited","classes/Spruz/Limited.html#M000144","()","Execute _maximum_ number of threads in parallel. ",2],["execute","Spruz::Limited","classes/Spruz/Limited.html#M000051","()","Execute _maximum_ number of threads in parallel. ",2],["extended","Spruz::Write","classes/Spruz/Write.html#M000220","(modul)","",2],["extended","Spruz::Write","classes/Spruz/Write.html#M000004","(modul)","",2],["file_linenumber","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000038","()","",2],["file_linenumber","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000158","()","",2],["filename","Spruz::LinesFile::LineExtension","classes/Spruz/LinesFile/LineExtension.html#M000022","()","",2],["filename","Spruz::LinesFile::LineExtension","classes/Spruz/LinesFile/LineExtension.html#M000145","()","",2],["fill","Spruz::Bijection","classes/Spruz/Bijection.html#M000046","()","",2],["fill","Spruz::Bijection","classes/Spruz/Bijection.html#M000123","()","",2],["for_file","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000024","(file, line_number = nil)","",2],["for_file","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000147","(file, line_number = nil)","",2],["for_filename","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000146","(filename, line_number = nil)","",2],["for_filename","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000023","(filename, line_number = nil)","",2],["for_lines","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000148","(lines, line_number = nil)","",2],["for_lines","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000025","(lines, line_number = nil)","",2],["freeze","Spruz::Bijection","classes/Spruz/Bijection.html#M000047","()","",2],["freeze","Spruz::Bijection","classes/Spruz/Bijection.html#M000124","()","",2],["full?","Spruz::Full","classes/Spruz/Full.html#M000230","(dispatch = nil, *args)","Returns the object if it isn't blank (as in Object#blank?), otherwise it returns nil. If a block was",2],["full?","Spruz::Full","classes/Spruz/Full.html#M000094","(dispatch = nil, *args)","Returns the object if it isn't blank (as in Object#blank?), otherwise it returns nil. If a block was",2],["go","Spruz::GO","classes/Spruz/GO.html#M000139","(s, args = ARGV)","Parses the argument array _args_, according to the pattern _s_, to retrieve the single character command",2],["go","Spruz::GO","classes/Spruz/GO.html#M000007","(s, args = ARGV)","Parses the argument array _args_, according to the pattern _s_, to retrieve the single character command",2],["included","Spruz::Blank::Array","classes/Spruz/Blank/Array.html#M000226","(modul)","",2],["included","Spruz::Blank::Array","classes/Spruz/Blank/Array.html#M000100","(modul)","",2],["included","Spruz::Blank::Hash","classes/Spruz/Blank/Hash.html#M000101","(modul)","",2],["included","Spruz::Blank::Hash","classes/Spruz/Blank/Hash.html#M000227","(modul)","",2],["included","Spruz::FileBinary","classes/Spruz/FileBinary.html#M000062","(modul)","",2],["included","Spruz::FileBinary","classes/Spruz/FileBinary.html#M000130","(modul)","",2],["included","Spruz::PartialApplication","classes/Spruz/PartialApplication.html#M000109","(modul)","If this module is included into a Proc (or similar object), it tampers with its Proc#arity method. ",2],["included","Spruz::PartialApplication","classes/Spruz/PartialApplication.html#M000182","(modul)","If this module is included into a Proc (or similar object), it tampers with its Proc#arity method. ",2],["included","Spruz::Round","classes/Spruz/Round.html#M000185","(klass)","",2],["included","Spruz::Round","classes/Spruz/Round.html#M000005","(klass)","",2],["included","Spruz::TimeDummy","classes/Spruz/TimeDummy.html#M000215","(modul)","",2],["included","Spruz::TimeDummy","classes/Spruz/TimeDummy.html#M000113","(modul)","",2],["inspect","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000162","()","",2],["inspect","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000042","()","",2],["inspect","Spruz::Null","classes/Spruz/Null.html#M000059","()","",2],["inspect","Spruz::Null","classes/Spruz/Null.html#M000177","()","",2],["inspect","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000085","()","Alias for #to_s",2],["inspect","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000211","()","Alias for #to_s",2],["last_line_number","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000034","()","",2],["last_line_number","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000154","()","",2],["line","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000037","()","",2],["line","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000157","()","",2],["line_number=","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000032","(number)","",2],["line_number=","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000153","(number)","",2],["major","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000194","()","",2],["major","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000066","()","",2],["major=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000195","(number)","",2],["major=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000067","(number)","",2],["match_backward","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000159","(regexp, previous_after_match = false)","",2],["match_backward","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000039","(regexp, previous_after_match = false)","",2],["match_forward","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000160","(regexp, next_after_match = false)","",2],["match_forward","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000040","(regexp, next_after_match = false)","",2],["memoize_cache_clear","Module","classes/Module.html#M000033","()","Clear cached values for all methods and functions. ",2],["memoize_cache_clear","Module","classes/Module.html#M000169","()","Clear cached values for all methods and functions. ",2],["memoize_function","Module","classes/Module.html#M000167","(*function_ids)","Automatically memoize calls of the functions +function_ids+. The memoized result does ONLY depend on",2],["memoize_function","Module","classes/Module.html#M000029","(*function_ids)","Automatically memoize calls of the functions +function_ids+. The memoized result does ONLY depend on",2],["memoize_method","Module","classes/Module.html#M000021","(*method_ids)","Automatically memoize calls of the the methods +method_ids+. The memoized results do NOT ONLY depend",2],["memoize_method","Module","classes/Module.html#M000165","(*method_ids)","Automatically memoize calls of the the methods +method_ids+. The memoized results do NOT ONLY depend",2],["method_missing","Spruz::Null","classes/Spruz/Null.html#M000174","(*)","",2],["method_missing","Spruz::Null","classes/Spruz/Null.html#M000055","(*)","",2],["minimize","Spruz::Minimize","classes/Spruz/Minimize.html#M000107","()","Returns a minimized version of this object, that is successive elements are substituted with ranges a..b.",2],["minimize","Spruz::Minimize","classes/Spruz/Minimize.html#M000168","()","Returns a minimized version of this object, that is successive elements are substituted with ranges a..b.",2],["minimize!","Spruz::Minimize","classes/Spruz/Minimize.html#M000170","()","First minimizes this object, then calls the replace method with the result. ",2],["minimize!","Spruz::Minimize","classes/Spruz/Minimize.html#M000108","()","First minimizes this object, then calls the replace method with the result. ",2],["minor","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000068","()","",2],["minor","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000196","()","",2],["minor=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000197","(number)","",2],["minor=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000069","(number)","",2],["named","Module","classes/Module.html#M000235","(name, method, *args, &block)","",2],["named","Module","classes/Module.html#M000090","(name, method, *args, &named_block)","",2],["named","Module","classes/Module.html#M000091","(name, method, *args, &block)","",2],["named","Module","classes/Module.html#M000234","(name, method, *args, &named_block)","",2],["named","Object","classes/Object.html#M000089","(name, method, *args, &block)","",2],["named","Object","classes/Object.html#M000232","(name, method, *args, &named_block)","",2],["named","Object","classes/Object.html#M000088","(name, method, *args, &named_block)","",2],["named","Object","classes/Object.html#M000233","(name, method, *args, &block)","",2],["new","Spruz::Bijection","classes/Spruz/Bijection.html#M000122","(inverted = Bijection.new(self))","",2],["new","Spruz::Bijection","classes/Spruz/Bijection.html#M000045","(inverted = Bijection.new(self))","",2],["new","Spruz::Generator","classes/Spruz/Generator.html#M000134","(enums)","Create a new Generator instance. Use the objects in the Array _enums_ as dimensions. The should all respond",2],["new","Spruz::Generator","classes/Spruz/Generator.html#M000009","(enums)","Create a new Generator instance. Use the objects in the Array _enums_ as dimensions. The should all respond",2],["new","Spruz::Limited","classes/Spruz/Limited.html#M000143","(maximum)","Create a Limited instance, that runs _maximum_ threads at most. ",2],["new","Spruz::Limited","classes/Spruz/Limited.html#M000050","(maximum)","Create a Limited instance, that runs _maximum_ threads at most. ",2],["new","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000026","(lines, line_number = nil)","",2],["new","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000149","(lines, line_number = nil)","",2],["new","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000193","(string)","",2],["new","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000065","(string)","",2],["new","Spruz::TimeDummy::ClassMethods","classes/Spruz/TimeDummy/ClassMethods.html#M000216","()","",2],["new","Spruz::TimeDummy::ClassMethods","classes/Spruz/TimeDummy/ClassMethods.html#M000114","()","",2],["next!","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000151","()","",2],["next!","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000030","()","",2],["now","Spruz::TimeDummy::ClassMethods","classes/Spruz/TimeDummy/ClassMethods.html#M000217","()","Alias for #new",2],["now","Spruz::TimeDummy::ClassMethods","classes/Spruz/TimeDummy/ClassMethods.html#M000115","()","Alias for #new",2],["only_once","Spruz::Once","classes/Spruz/Once.html#M000079","(lock_filename = nil, locking_constant = nil)","",2],["only_once","Spruz::Once","classes/Spruz/Once.html#M000178","(lock_filename = nil, locking_constant = nil)","",2],["p!","Spruz::P","classes/Spruz/P.html#M000105","(*objs)","Raise a runtime error with the inspected objects +objs+ (obtained by calling the #inspect method) as",2],["p!","Spruz::P","classes/Spruz/P.html#M000180","(*objs)","Raise a runtime error with the inspected objects +objs+ (obtained by calling the #inspect method) as",2],["partial","Spruz::PartialApplication","classes/Spruz/PartialApplication.html#M000183","(*args)","Create a partial application of this Proc (or similar object) using _args_ as the already applied arguments.",2],["partial","Spruz::PartialApplication","classes/Spruz/PartialApplication.html#M000112","(*args)","Create a partial application of this Proc (or similar object) using _args_ as the already applied arguments.",2],["pp!","Spruz::P","classes/Spruz/P.html#M000181","(*objs)","Raise a runtime error with the inspected objects +objs+ (obtained by calling the #pretty_inspect method)",2],["pp!","Spruz::P","classes/Spruz/P.html#M000106","(*objs)","Raise a runtime error with the inspected objects +objs+ (obtained by calling the #pretty_inspect method)",2],["pred!","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000205","()","",2],["pred!","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000077","()","",2],["present?","Spruz::Blank::Object","classes/Spruz/Blank/Object.html#M000222","()","",2],["present?","Spruz::Blank::Object","classes/Spruz/Blank/Object.html#M000096","()","",2],["previous!","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000031","()","",2],["previous!","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000152","()","",2],["recurse","Spruz::Generator","classes/Spruz/Generator.html#M000011","(tuple = [ nil ] * @n, i = 0, &block)","",2],["recurse","Spruz::Generator","classes/Spruz/Generator.html#M000136","(tuple = [ nil ] * @n, i = 0, &block)","",2],["revision","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000072","()","",2],["revision","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000200","()","",2],["revision=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000073","(number)","",2],["revision=","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000201","(number)","",2],["rewind","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000027","()","",2],["rewind","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000150","()","",2],["round","Spruz::Round","classes/Spruz/Round.html#M000006","(places = nil)","",2],["round","Spruz::Round","classes/Spruz/Round.html#M000187","(places = nil)","",2],["secure_write","Spruz::SecureWrite","classes/Spruz/SecureWrite.html#M000186","(filename, content = nil, mode = 'w')","Write to a file atomically ",2],["secure_write","Spruz::SecureWrite","classes/Spruz/SecureWrite.html#M000057","(filename, content = nil, mode = 'w')","Write to a file atomically ",2],["shuffle","Spruz::Shuffle","classes/Spruz/Shuffle.html#M000017","()","",2],["shuffle","Spruz::Shuffle","classes/Spruz/Shuffle.html#M000189","()","",2],["shuffle!","Spruz::Shuffle","classes/Spruz/Shuffle.html#M000188","()","",2],["shuffle!","Spruz::Shuffle","classes/Spruz/Shuffle.html#M000016","()","",2],["size","Spruz::Generator","classes/Spruz/Generator.html#M000013","()","Return the size of this generator, that is the number of its dimensions. ",2],["size","Spruz::Generator","classes/Spruz/Generator.html#M000138","()","Return the size of this generator, that is the number of its dimensions. ",2],["sleep_duration","Spruz::Attempt","classes/Spruz/Attempt.html#M000052","(duration, count)","",2],["sleep_duration","Spruz::Attempt","classes/Spruz/Attempt.html#M000120","(duration, count)","",2],["subhash","Spruz::Subhash","classes/Spruz/Subhash.html#M000214","(*patterns)","Create a subhash from this hash, that only contains key-value pairs matching +patterns+ and return it.",2],["subhash","Spruz::Subhash","classes/Spruz/Subhash.html#M000043","(*patterns)","Create a subhash from this hash, that only contains key-value pairs matching +patterns+ and return it.",2],["subhash!","Hash","classes/Hash.html#M000093","(*patterns)","",2],["subhash!","Hash","classes/Hash.html#M000236","(*patterns)","",2],["succ!","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000076","()","",2],["succ!","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000204","()","",2],["symbolize_keys_recursive","Spruz::HashSymbolizeKeysRecursive","classes/Spruz/HashSymbolizeKeysRecursive.html#M000140","()","",2],["symbolize_keys_recursive","Spruz::HashSymbolizeKeysRecursive","classes/Spruz/HashSymbolizeKeysRecursive.html#M000001","()","",2],["symbolize_keys_recursive!","Spruz::HashSymbolizeKeysRecursive","classes/Spruz/HashSymbolizeKeysRecursive.html#M000142","()","",2],["symbolize_keys_recursive!","Spruz::HashSymbolizeKeysRecursive","classes/Spruz/HashSymbolizeKeysRecursive.html#M000002","()","",2],["to_a","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000209","()","Alias for #array",2],["to_a","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000083","()","Alias for #array",2],["to_proc","Spruz::ToProc","classes/Spruz/ToProc.html#M000054","()","",2],["to_proc","Spruz::ToProc","classes/Spruz/ToProc.html#M000218","()","",2],["to_s","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000161","()","",2],["to_s","Spruz::LinesFile","classes/Spruz/LinesFile.html#M000041","()","",2],["to_s","Spruz::Null","classes/Spruz/Null.html#M000058","()","",2],["to_s","Spruz::Null","classes/Spruz/Null.html#M000176","()","",2],["to_s","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000084","()","",2],["to_s","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000210","()","",2],["try_only_once","Spruz::Once","classes/Spruz/Once.html#M000080","(lock_filename = nil, locking_constant = nil, &block)","",2],["try_only_once","Spruz::Once","classes/Spruz/Once.html#M000179","(lock_filename = nil, locking_constant = nil, &block)","",2],["underscore","Spruz::StringUnderscore","classes/Spruz/StringUnderscore.html#M000000","()","",2],["underscore","Spruz::StringUnderscore","classes/Spruz/StringUnderscore.html#M000192","()","",2],["uniq_by","Spruz::UniqBy","classes/Spruz/UniqBy.html#M000219","(&b)","",2],["uniq_by","Spruz::UniqBy","classes/Spruz/UniqBy.html#M000118","(&b)","",2],["uniq_by!","Array","classes/Array.html#M000237","(&b)","",2],["uniq_by!","Array","classes/Array.html#M000104","(&b)","",2],["unminimize","Spruz::Minimize","classes/Spruz/Minimize.html#M000171","()","Invert a minimized version of an object. Some small examples: [ 'A'..'C', 'G'..'G', 'K'..'M' ].unminimize",2],["unminimize","Spruz::Minimize","classes/Spruz/Minimize.html#M000110","()","Invert a minimized version of an object. Some small examples: [ 'A'..'C', 'G'..'G', 'K'..'M' ].unminimize",2],["unminimize!","Spruz::Minimize","classes/Spruz/Minimize.html#M000172","()","Invert a minimized version of this object in place. ",2],["unminimize!","Spruz::Minimize","classes/Spruz/Minimize.html#M000111","()","Invert a minimized version of this object in place. ",2],["version","Spruz::StringVersion","classes/Spruz/StringVersion.html#M000087","()","",2],["version","Spruz::StringVersion","classes/Spruz/StringVersion.html#M000213","()","",2],["version","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000212","()","",2],["version","Spruz::StringVersion::Version","classes/Spruz/StringVersion/Version.html#M000086","()","",2],["|","Spruz::HashUnion","classes/Spruz/HashUnion.html#M000003","(other)","",2],["|","Spruz::HashUnion","classes/Spruz/HashUnion.html#M000141","(other)","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2010 Florian Frank  Permission is hereby granted, free of charge, to any person obtaining",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Spruz - Useful tools library in Ruby  == Description  Non yet.  == Download  The homepage of this library",3],["TODO","files/TODO.html","files/TODO.html","","- Ruby1.9 has File.write method now, that conflicts with Spruz::Write module's and has to be fixed in",3],["spruz.rb","files/lib/spruz_rb.html","files/lib/spruz_rb.html","","",3],["spruz.rb","files/lib/spruz_rb.html","files/lib/spruz_rb.html","","",3],["attempt.rb","files/lib/spruz/attempt_rb.html","files/lib/spruz/attempt_rb.html","","",3],["attempt.rb","files/lib/spruz/attempt_rb.html","files/lib/spruz/attempt_rb.html","","",3],["bijection.rb","files/lib/spruz/bijection_rb.html","files/lib/spruz/bijection_rb.html","","",3],["bijection.rb","files/lib/spruz/bijection_rb.html","files/lib/spruz/bijection_rb.html","","",3],["count_by.rb","files/lib/spruz/count_by_rb.html","files/lib/spruz/count_by_rb.html","","",3],["count_by.rb","files/lib/spruz/count_by_rb.html","files/lib/spruz/count_by_rb.html","","",3],["deep_dup.rb","files/lib/spruz/deep_dup_rb.html","files/lib/spruz/deep_dup_rb.html","","",3],["deep_dup.rb","files/lib/spruz/deep_dup_rb.html","files/lib/spruz/deep_dup_rb.html","","",3],["file_binary.rb","files/lib/spruz/file_binary_rb.html","files/lib/spruz/file_binary_rb.html","","",3],["file_binary.rb","files/lib/spruz/file_binary_rb.html","files/lib/spruz/file_binary_rb.html","","",3],["generator.rb","files/lib/spruz/generator_rb.html","files/lib/spruz/generator_rb.html","","",3],["generator.rb","files/lib/spruz/generator_rb.html","files/lib/spruz/generator_rb.html","","",3],["go.rb","files/lib/spruz/go_rb.html","files/lib/spruz/go_rb.html","","",3],["go.rb","files/lib/spruz/go_rb.html","files/lib/spruz/go_rb.html","","",3],["hash_symbolize_keys_recursive.rb","files/lib/spruz/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/hash_symbolize_keys_recursive_rb.html","","",3],["hash_symbolize_keys_recursive.rb","files/lib/spruz/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/hash_symbolize_keys_recursive_rb.html","","",3],["hash_union.rb","files/lib/spruz/hash_union_rb.html","files/lib/spruz/hash_union_rb.html","","",3],["hash_union.rb","files/lib/spruz/hash_union_rb.html","files/lib/spruz/hash_union_rb.html","","",3],["limited.rb","files/lib/spruz/limited_rb.html","files/lib/spruz/limited_rb.html","","",3],["limited.rb","files/lib/spruz/limited_rb.html","files/lib/spruz/limited_rb.html","","",3],["lines_file.rb","files/lib/spruz/lines_file_rb.html","files/lib/spruz/lines_file_rb.html","","",3],["lines_file.rb","files/lib/spruz/lines_file_rb.html","files/lib/spruz/lines_file_rb.html","","",3],["memoize.rb","files/lib/spruz/memoize_rb.html","files/lib/spruz/memoize_rb.html","","",3],["memoize.rb","files/lib/spruz/memoize_rb.html","files/lib/spruz/memoize_rb.html","","",3],["minimize.rb","files/lib/spruz/minimize_rb.html","files/lib/spruz/minimize_rb.html","","",3],["minimize.rb","files/lib/spruz/minimize_rb.html","files/lib/spruz/minimize_rb.html","","",3],["module_group.rb","files/lib/spruz/module_group_rb.html","files/lib/spruz/module_group_rb.html","","",3],["module_group.rb","files/lib/spruz/module_group_rb.html","files/lib/spruz/module_group_rb.html","","",3],["null.rb","files/lib/spruz/null_rb.html","files/lib/spruz/null_rb.html","","",3],["null.rb","files/lib/spruz/null_rb.html","files/lib/spruz/null_rb.html","","",3],["once.rb","files/lib/spruz/once_rb.html","files/lib/spruz/once_rb.html","","",3],["once.rb","files/lib/spruz/once_rb.html","files/lib/spruz/once_rb.html","","",3],["p.rb","files/lib/spruz/p_rb.html","files/lib/spruz/p_rb.html","","",3],["p.rb","files/lib/spruz/p_rb.html","files/lib/spruz/p_rb.html","","",3],["partial_application.rb","files/lib/spruz/partial_application_rb.html","files/lib/spruz/partial_application_rb.html","","",3],["partial_application.rb","files/lib/spruz/partial_application_rb.html","files/lib/spruz/partial_application_rb.html","","",3],["range_plus.rb","files/lib/spruz/range_plus_rb.html","files/lib/spruz/range_plus_rb.html","","",3],["range_plus.rb","files/lib/spruz/range_plus_rb.html","files/lib/spruz/range_plus_rb.html","","",3],["round.rb","files/lib/spruz/round_rb.html","files/lib/spruz/round_rb.html","","",3],["round.rb","files/lib/spruz/round_rb.html","files/lib/spruz/round_rb.html","","",3],["secure_write.rb","files/lib/spruz/secure_write_rb.html","files/lib/spruz/secure_write_rb.html","","",3],["secure_write.rb","files/lib/spruz/secure_write_rb.html","files/lib/spruz/secure_write_rb.html","","",3],["shuffle.rb","files/lib/spruz/shuffle_rb.html","files/lib/spruz/shuffle_rb.html","","",3],["shuffle.rb","files/lib/spruz/shuffle_rb.html","files/lib/spruz/shuffle_rb.html","","",3],["string_camelize.rb","files/lib/spruz/string_camelize_rb.html","files/lib/spruz/string_camelize_rb.html","","",3],["string_camelize.rb","files/lib/spruz/string_camelize_rb.html","files/lib/spruz/string_camelize_rb.html","","",3],["string_underscore.rb","files/lib/spruz/string_underscore_rb.html","files/lib/spruz/string_underscore_rb.html","","",3],["string_underscore.rb","files/lib/spruz/string_underscore_rb.html","files/lib/spruz/string_underscore_rb.html","","",3],["string_version.rb","files/lib/spruz/string_version_rb.html","files/lib/spruz/string_version_rb.html","","",3],["string_version.rb","files/lib/spruz/string_version_rb.html","files/lib/spruz/string_version_rb.html","","",3],["subhash.rb","files/lib/spruz/subhash_rb.html","files/lib/spruz/subhash_rb.html","","",3],["subhash.rb","files/lib/spruz/subhash_rb.html","files/lib/spruz/subhash_rb.html","","",3],["time_dummy.rb","files/lib/spruz/time_dummy_rb.html","files/lib/spruz/time_dummy_rb.html","","",3],["time_dummy.rb","files/lib/spruz/time_dummy_rb.html","files/lib/spruz/time_dummy_rb.html","","",3],["to_proc.rb","files/lib/spruz/to_proc_rb.html","files/lib/spruz/to_proc_rb.html","","",3],["to_proc.rb","files/lib/spruz/to_proc_rb.html","files/lib/spruz/to_proc_rb.html","","",3],["uniq_by.rb","files/lib/spruz/uniq_by_rb.html","files/lib/spruz/uniq_by_rb.html","","",3],["uniq_by.rb","files/lib/spruz/uniq_by_rb.html","files/lib/spruz/uniq_by_rb.html","","",3],["version.rb","files/lib/spruz/version_rb.html","files/lib/spruz/version_rb.html","","",3],["version.rb","files/lib/spruz/version_rb.html","files/lib/spruz/version_rb.html","","",3],["write.rb","files/lib/spruz/write_rb.html","files/lib/spruz/write_rb.html","","",3],["write.rb","files/lib/spruz/write_rb.html","files/lib/spruz/write_rb.html","","",3],["xt.rb","files/lib/spruz/xt_rb.html","files/lib/spruz/xt_rb.html","","",3],["xt.rb","files/lib/spruz/xt_rb.html","files/lib/spruz/xt_rb.html","","",3],["attempt.rb","files/lib/spruz/xt/attempt_rb.html","files/lib/spruz/xt/attempt_rb.html","","",3],["attempt.rb","files/lib/spruz/xt/attempt_rb.html","files/lib/spruz/xt/attempt_rb.html","","",3],["blank.rb","files/lib/spruz/xt/blank_rb.html","files/lib/spruz/xt/blank_rb.html","","",3],["blank.rb","files/lib/spruz/xt/blank_rb.html","files/lib/spruz/xt/blank_rb.html","","",3],["count_by.rb","files/lib/spruz/xt/count_by_rb.html","files/lib/spruz/xt/count_by_rb.html","","",3],["count_by.rb","files/lib/spruz/xt/count_by_rb.html","files/lib/spruz/xt/count_by_rb.html","","",3],["deep_dup.rb","files/lib/spruz/xt/deep_dup_rb.html","files/lib/spruz/xt/deep_dup_rb.html","","",3],["deep_dup.rb","files/lib/spruz/xt/deep_dup_rb.html","files/lib/spruz/xt/deep_dup_rb.html","","",3],["file_binary.rb","files/lib/spruz/xt/file_binary_rb.html","files/lib/spruz/xt/file_binary_rb.html","","",3],["file_binary.rb","files/lib/spruz/xt/file_binary_rb.html","files/lib/spruz/xt/file_binary_rb.html","","",3],["full.rb","files/lib/spruz/xt/full_rb.html","files/lib/spruz/xt/full_rb.html","","",3],["full.rb","files/lib/spruz/xt/full_rb.html","files/lib/spruz/xt/full_rb.html","","",3],["hash_symbolize_keys_recursive.rb","files/lib/spruz/xt/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/xt/hash_symbolize_keys_recursive_rb.html","","",3],["hash_symbolize_keys_recursive.rb","files/lib/spruz/xt/hash_symbolize_keys_recursive_rb.html","files/lib/spruz/xt/hash_symbolize_keys_recursive_rb.html","","",3],["hash_union.rb","files/lib/spruz/xt/hash_union_rb.html","files/lib/spruz/xt/hash_union_rb.html","","",3],["hash_union.rb","files/lib/spruz/xt/hash_union_rb.html","files/lib/spruz/xt/hash_union_rb.html","","",3],["irb.rb","files/lib/spruz/xt/irb_rb.html","files/lib/spruz/xt/irb_rb.html","","",3],["irb.rb","files/lib/spruz/xt/irb_rb.html","files/lib/spruz/xt/irb_rb.html","","",3],["named.rb","files/lib/spruz/xt/named_rb.html","files/lib/spruz/xt/named_rb.html","","",3],["named.rb","files/lib/spruz/xt/named_rb.html","files/lib/spruz/xt/named_rb.html","","",3],["null.rb","files/lib/spruz/xt/null_rb.html","files/lib/spruz/xt/null_rb.html","","",3],["null.rb","files/lib/spruz/xt/null_rb.html","files/lib/spruz/xt/null_rb.html","","",3],["p.rb","files/lib/spruz/xt/p_rb.html","files/lib/spruz/xt/p_rb.html","","",3],["p.rb","files/lib/spruz/xt/p_rb.html","files/lib/spruz/xt/p_rb.html","","",3],["partial_application.rb","files/lib/spruz/xt/partial_application_rb.html","files/lib/spruz/xt/partial_application_rb.html","","",3],["partial_application.rb","files/lib/spruz/xt/partial_application_rb.html","files/lib/spruz/xt/partial_application_rb.html","","",3],["range_plus.rb","files/lib/spruz/xt/range_plus_rb.html","files/lib/spruz/xt/range_plus_rb.html","","",3],["range_plus.rb","files/lib/spruz/xt/range_plus_rb.html","files/lib/spruz/xt/range_plus_rb.html","","",3],["round.rb","files/lib/spruz/xt/round_rb.html","files/lib/spruz/xt/round_rb.html","","",3],["round.rb","files/lib/spruz/xt/round_rb.html","files/lib/spruz/xt/round_rb.html","","",3],["secure_write.rb","files/lib/spruz/xt/secure_write_rb.html","files/lib/spruz/xt/secure_write_rb.html","","",3],["secure_write.rb","files/lib/spruz/xt/secure_write_rb.html","files/lib/spruz/xt/secure_write_rb.html","","",3],["shuffle.rb","files/lib/spruz/xt/shuffle_rb.html","files/lib/spruz/xt/shuffle_rb.html","","",3],["shuffle.rb","files/lib/spruz/xt/shuffle_rb.html","files/lib/spruz/xt/shuffle_rb.html","","",3],["string.rb","files/lib/spruz/xt/string_rb.html","files/lib/spruz/xt/string_rb.html","","",3],["string.rb","files/lib/spruz/xt/string_rb.html","files/lib/spruz/xt/string_rb.html","","",3],["string_camelize.rb","files/lib/spruz/xt/string_camelize_rb.html","files/lib/spruz/xt/string_camelize_rb.html","","",3],["string_camelize.rb","files/lib/spruz/xt/string_camelize_rb.html","files/lib/spruz/xt/string_camelize_rb.html","","",3],["string_underscore.rb","files/lib/spruz/xt/string_underscore_rb.html","files/lib/spruz/xt/string_underscore_rb.html","","",3],["string_underscore.rb","files/lib/spruz/xt/string_underscore_rb.html","files/lib/spruz/xt/string_underscore_rb.html","","",3],["string_version.rb","files/lib/spruz/xt/string_version_rb.html","files/lib/spruz/xt/string_version_rb.html","","",3],["string_version.rb","files/lib/spruz/xt/string_version_rb.html","files/lib/spruz/xt/string_version_rb.html","","",3],["subhash.rb","files/lib/spruz/xt/subhash_rb.html","files/lib/spruz/xt/subhash_rb.html","","",3],["subhash.rb","files/lib/spruz/xt/subhash_rb.html","files/lib/spruz/xt/subhash_rb.html","","",3],["symbol_to_proc.rb","files/lib/spruz/xt/symbol_to_proc_rb.html","files/lib/spruz/xt/symbol_to_proc_rb.html","","",3],["symbol_to_proc.rb","files/lib/spruz/xt/symbol_to_proc_rb.html","files/lib/spruz/xt/symbol_to_proc_rb.html","","",3],["time_dummy.rb","files/lib/spruz/xt/time_dummy_rb.html","files/lib/spruz/xt/time_dummy_rb.html","","",3],["time_dummy.rb","files/lib/spruz/xt/time_dummy_rb.html","files/lib/spruz/xt/time_dummy_rb.html","","",3],["uniq_by.rb","files/lib/spruz/xt/uniq_by_rb.html","files/lib/spruz/xt/uniq_by_rb.html","","",3],["uniq_by.rb","files/lib/spruz/xt/uniq_by_rb.html","files/lib/spruz/xt/uniq_by_rb.html","","",3],["write.rb","files/lib/spruz/xt/write_rb.html","files/lib/spruz/xt/write_rb.html","","",3],["write.rb","files/lib/spruz/xt/write_rb.html","files/lib/spruz/xt/write_rb.html","","",3]],"searchIndex":["array","enumerable","file","float","hash","io","irb","integer","method","module","object","proc","range","spruz","attempt","bijection","blank","array","falseclass","hash","nilclass","numeric","object","string","trueclass","countby","deepdup","filebinary","classmethods","constants","full","go","generator","hashsymbolizekeysrecursive","hashunion","limited","linesfile","lineextension","memoize","minimize","modulegroup","null","once","p","partialapplication","rangeplus","round","securewrite","shuffle","stringcamelize","stringunderscore","stringversion","version","subhash","timedummy","classmethods","toproc","uniqby","write","string","symbol","time","+()","+()","<=>()","<=>()","==()","==()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","__memoize_cache__()","__memoize_cache__()","__memoize_cache__()","__memoize_cache__()","__memoize_cache_delete__()","__memoize_cache_delete__()","add_dimension()","add_dimension()","array()","array()","ascii?()","ascii?()","ascii?()","ascii?()","attempt()","attempt()","binary?()","binary?()","binary?()","binary?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","build()","build()","build=()","build=()","camelcase()","camelcase()","camelize()","camelize()","const_missing()","const_missing()","count_by()","count_by()","deep_dup()","deep_dup()","each()","each()","each()","each()","empty?()","empty?()","examine()","examine()","execute()","execute()","extended()","extended()","file_linenumber()","file_linenumber()","filename()","filename()","fill()","fill()","for_file()","for_file()","for_filename()","for_filename()","for_lines()","for_lines()","freeze()","freeze()","full?()","full?()","go()","go()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","included()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","last_line_number()","last_line_number()","line()","line()","line_number=()","line_number=()","major()","major()","major=()","major=()","match_backward()","match_backward()","match_forward()","match_forward()","memoize_cache_clear()","memoize_cache_clear()","memoize_function()","memoize_function()","memoize_method()","memoize_method()","method_missing()","method_missing()","minimize()","minimize()","minimize!()","minimize!()","minor()","minor()","minor=()","minor=()","named()","named()","named()","named()","named()","named()","named()","named()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next!()","next!()","now()","now()","only_once()","only_once()","p!()","p!()","partial()","partial()","pp!()","pp!()","pred!()","pred!()","present?()","present?()","previous!()","previous!()","recurse()","recurse()","revision()","revision()","revision=()","revision=()","rewind()","rewind()","round()","round()","secure_write()","secure_write()","shuffle()","shuffle()","shuffle!()","shuffle!()","size()","size()","sleep_duration()","sleep_duration()","subhash()","subhash()","subhash!()","subhash!()","succ!()","succ!()","symbolize_keys_recursive()","symbolize_keys_recursive()","symbolize_keys_recursive!()","symbolize_keys_recursive!()","to_a()","to_a()","to_proc()","to_proc()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","try_only_once()","try_only_once()","underscore()","underscore()","uniq_by()","uniq_by()","uniq_by!()","uniq_by!()","unminimize()","unminimize()","unminimize!()","unminimize!()","version()","version()","version()","version()","|()","|()","license","readme.rdoc","todo","spruz.rb","spruz.rb","attempt.rb","attempt.rb","bijection.rb","bijection.rb","count_by.rb","count_by.rb","deep_dup.rb","deep_dup.rb","file_binary.rb","file_binary.rb","generator.rb","generator.rb","go.rb","go.rb","hash_symbolize_keys_recursive.rb","hash_symbolize_keys_recursive.rb","hash_union.rb","hash_union.rb","limited.rb","limited.rb","lines_file.rb","lines_file.rb","memoize.rb","memoize.rb","minimize.rb","minimize.rb","module_group.rb","module_group.rb","null.rb","null.rb","once.rb","once.rb","p.rb","p.rb","partial_application.rb","partial_application.rb","range_plus.rb","range_plus.rb","round.rb","round.rb","secure_write.rb","secure_write.rb","shuffle.rb","shuffle.rb","string_camelize.rb","string_camelize.rb","string_underscore.rb","string_underscore.rb","string_version.rb","string_version.rb","subhash.rb","subhash.rb","time_dummy.rb","time_dummy.rb","to_proc.rb","to_proc.rb","uniq_by.rb","uniq_by.rb","version.rb","version.rb","write.rb","write.rb","xt.rb","xt.rb","attempt.rb","attempt.rb","blank.rb","blank.rb","count_by.rb","count_by.rb","deep_dup.rb","deep_dup.rb","file_binary.rb","file_binary.rb","full.rb","full.rb","hash_symbolize_keys_recursive.rb","hash_symbolize_keys_recursive.rb","hash_union.rb","hash_union.rb","irb.rb","irb.rb","named.rb","named.rb","null.rb","null.rb","p.rb","p.rb","partial_application.rb","partial_application.rb","range_plus.rb","range_plus.rb","round.rb","round.rb","secure_write.rb","secure_write.rb","shuffle.rb","shuffle.rb","string.rb","string.rb","string_camelize.rb","string_camelize.rb","string_underscore.rb","string_underscore.rb","string_version.rb","string_version.rb","subhash.rb","subhash.rb","symbol_to_proc.rb","symbol_to_proc.rb","time_dummy.rb","time_dummy.rb","uniq_by.rb","uniq_by.rb","write.rb","write.rb"]}}