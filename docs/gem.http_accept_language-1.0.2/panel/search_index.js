var search_data = {"index":{"longSearchIndex":["lib/http_accept_language.rb","httpacceptlanguage","httpacceptlanguage","httpacceptlanguage","httpacceptlanguage","files/readme_rdoc.html","files/lib/http_accept_language_rb.html"],"info":[["HttpAcceptLanguage","lib/http_accept_language.rb","classes/HttpAcceptLanguage.html"," < ","",1],["compatible_language_from","HttpAcceptLanguage","classes/HttpAcceptLanguage.html#M000003","(available_languages)","Returns the first of the user_preferred_languages that is compatible with the available locales. Ignores",2],["preferred_language_from","HttpAcceptLanguage","classes/HttpAcceptLanguage.html#M000002","(array)","Finds the locale specifically requested by the browser. Example: request.preferred_language_from I18n.available_locales",2],["user_preferred_languages","HttpAcceptLanguage","classes/HttpAcceptLanguage.html#M000000","()","Returns a sorted array based on user preference in HTTP_ACCEPT_LANGUAGE. Browsers send this HTTP header,",2],["user_preferred_languages=","HttpAcceptLanguage","classes/HttpAcceptLanguage.html#M000001","(languages)","Sets the user languages preference, overiding the browser ",2],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= HttpAcceptLanguage  A small effort in making a plugin which helps you detect the users preferred language,",3],["http_accept_language.rb","files/lib/http_accept_language_rb.html","files/lib/http_accept_language_rb.html","","",3]],"searchIndex":["httpacceptlanguage","compatible_language_from()","preferred_language_from()","user_preferred_languages()","user_preferred_languages=()","readme.rdoc","http_accept_language.rb"]}}