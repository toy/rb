var search_data = {"index":{"longSearchIndex":["lib/parallel.rb","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel::exceptionwrapper","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","parallel","files/readme_md.html","files/lib/parallel_rb.html"],"info":[["Parallel","lib/parallel.rb","classes/Parallel.html"," < Object","",1],["ExceptionWrapper","Parallel","classes/Parallel/ExceptionWrapper.html"," < Object","",1],["call_with_index","Parallel","classes/Parallel.html#M000023","(array, index, options, &block)","",2],["close_pipes","Parallel","classes/Parallel.html#M000014","(worker)","",2],["create_workers","Parallel","classes/Parallel.html#M000012","(items, options, &block)","",2],["decode","Parallel","classes/Parallel.html#M000020","(str)","",2],["each","Parallel","classes/Parallel.html#M000002","(array, options={}, &block)","",2],["each_with_index","Parallel","classes/Parallel.html#M000003","(array, options={}, &block)","",2],["encode","Parallel","classes/Parallel.html#M000019","(obj)","",2],["extract_count_from_options","Parallel","classes/Parallel.html#M000021","(options)","options is either a Integer or a Hash with :count ",2],["hwprefs_available?","Parallel","classes/Parallel.html#M000009","()","",2],["in_processes","Parallel","classes/Parallel.html#M000001","(options = {}, &block)","",2],["in_threads","Parallel","classes/Parallel.html#M000000","(options={:count => 2})","",2],["kill_on_ctrl_c","Parallel","classes/Parallel.html#M000022","(pids)","kill all these processes (children) if user presses Ctrl+c ",2],["map","Parallel","classes/Parallel.html#M000004","(array, options = {}, &block)","",2],["map_with_index","Parallel","classes/Parallel.html#M000005","(array, options={}, &block)","",2],["new","Parallel::ExceptionWrapper","classes/Parallel/ExceptionWrapper.html#M000024","(exception)","",2],["physical_processor_count","Parallel","classes/Parallel.html#M000007","()","",2],["process_incoming_jobs","Parallel","classes/Parallel.html#M000015","(read, write, items, options, &block)","",2],["processor_count","Parallel","classes/Parallel.html#M000006","()","",2],["wait_for_process","Parallel","classes/Parallel.html#M000018","(pid)","",2],["wait_for_threads","Parallel","classes/Parallel.html#M000017","(threads)","",2],["work_direct","Parallel","classes/Parallel.html#M000008","(array, options)","",2],["work_in_processes","Parallel","classes/Parallel.html#M000011","(items, options, &blk)","",2],["work_in_threads","Parallel","classes/Parallel.html#M000010","(items, options, &block)","",2],["worker","Parallel","classes/Parallel.html#M000013","(items, options, &block)","",2],["write_to_pipe","Parallel","classes/Parallel.html#M000016","(pipe, item)","",2],["Readme.md","files/Readme_md.html","files/Readme_md.html","","Run any code in parallel Processes(> use all CPUs) or Threads(> speedup blocking operations).<br/> Best",3],["parallel.rb","files/lib/parallel_rb.html","files/lib/parallel_rb.html","","",3]],"searchIndex":["parallel","exceptionwrapper","call_with_index()","close_pipes()","create_workers()","decode()","each()","each_with_index()","encode()","extract_count_from_options()","hwprefs_available?()","in_processes()","in_threads()","kill_on_ctrl_c()","map()","map_with_index()","new()","physical_processor_count()","process_incoming_jobs()","processor_count()","wait_for_process()","wait_for_threads()","work_direct()","work_in_processes()","work_in_threads()","worker()","write_to_pipe()","readme.md","parallel.rb"]}}