var search_data = {"index":{"info":[["Gems","lib/gems/configuration.rb","classes/Gems.html"," < ","",1],["Client","Gems","classes/Gems/Client.html"," < Object","",1],["Configuration","Gems","classes/Gems/Configuration.html"," < ","",1],["Request","Gems","classes/Gems/Request.html"," < ","",1],["add_owner","Gems::Client","classes/Gems/Client.html#M000020","(gem_name, owner)","Add an owner to a RubyGem you own, giving that user permission to manage it @authenticated true @param",2],["add_web_hook","Gems::Client","classes/Gems/Client.html#M000023","(gem_name, url)","Create a webhook @authenticated true @param gem_name [String] The name of a gem. Specify \"*\" to add the",2],["api_key","Gems::Client","classes/Gems/Client.html#M000016","()","Retrieve your API key using HTTP basic auth @authenticated true @return [String] @example Gems.configure",2],["configure","Gems::Configuration","classes/Gems/Configuration.html#M000001","()","Convenience method to allow configuration options to be set in a block ",2],["delete","Gems::Request","classes/Gems/Request.html#M000008","(path, data={}, content_type='application/x-www-form-urlencoded')","",2],["dependencies","Gems::Client","classes/Gems/Client.html#M000015","(*gems)","Returns an array of hashes for all versions of given gems @authenticated false @param gems [Array] A",2],["downloads","Gems::Client","classes/Gems/Client.html#M000012","(gem_name, gem_version=nil, from=nil, to=Date.today)","Returns the number of downloads by day for a particular gem version @authenticated false @param gem_name",2],["extended","Gems::Configuration","classes/Gems/Configuration.html#M000000","(base)","When this module is extended, set all configuration options to their default values ",2],["fire_web_hook","Gems::Client","classes/Gems/Client.html#M000025","(gem_name, url)","Test fire a webhook @authenticated true @param gem_name [String] The name of a gem. Specify \"*\" to fire",2],["gems","Gems::Client","classes/Gems/Client.html#M000017","()","List all gems that you own @authenticated true @return [Array] @example Gems.gems ",2],["get","Gems::Request","classes/Gems/Request.html#M000009","(path, data={}, content_type='application/x-www-form-urlencoded')","",2],["hash_to_query_string","Gems::Request","classes/Gems/Request.html#M000019","(hash)","",2],["info","Gems::Client","classes/Gems/Client.html#M000005","(gem_name)","Returns some basic information about the given gem @authenticated false @param gem_name [String] The",2],["method_missing","Gems","classes/Gems.html#M000030","(method, *args, &block)","Delegate to Gems::Client ",2],["new","Gems","classes/Gems.html#M000029","(options={})","Alias for Gems::Client.new @return [Gems::Client] ",2],["new","Gems::Client","classes/Gems/Client.html#M000004","(options={})","",2],["options","Gems::Configuration","classes/Gems/Configuration.html#M000002","()","Create a hash of options and their values ",2],["owners","Gems::Client","classes/Gems/Client.html#M000018","(gem_name)","View all owners of a gem that you own @authenticated true @param gem_name [String] The name of a gem.",2],["post","Gems::Request","classes/Gems/Request.html#M000010","(path, data={}, content_type='application/x-www-form-urlencoded')","",2],["push","Gems::Client","classes/Gems/Client.html#M000026","(gem)","Submit a gem to RubyGems.org @authenticated true @param gem [File] A built gem. @return [String] @example",2],["put","Gems::Request","classes/Gems/Request.html#M000013","(path, data={}, content_type='application/x-www-form-urlencoded')","",2],["remove_owner","Gems::Client","classes/Gems/Client.html#M000021","(gem_name, owner)","Remove a user's permission to manage a RubyGem you own @authenticated true @param gem_name [String] The",2],["remove_web_hook","Gems::Client","classes/Gems/Client.html#M000024","(gem_name, url)","Remove a webhook @authenticated true @param gem_name [String] The name of a gem. Specify \"*\" to remove",2],["request","Gems::Request","classes/Gems/Request.html#M000014","(method, path, data, content_type)","",2],["reset","Gems::Configuration","classes/Gems/Configuration.html#M000003","()","Reset all configuration options to defaults ",2],["respond_to?","Gems","classes/Gems.html#M000031","(method, include_private=false)","",2],["search","Gems::Client","classes/Gems/Client.html#M000006","(query)","Returns an array of active gems that match the query @authenticated false @param query [String] A term",2],["total_downloads","Gems::Client","classes/Gems/Client.html#M000011","(gem_name=nil, gem_version=nil)","Returns the total number of downloads for a particular gem @authenticated false @param gem_name [String]",2],["unyank","Gems::Client","classes/Gems/Client.html#M000028","(gem_name, gem_version=nil, options={})","Update a previously yanked gem back into RubyGems.org's index @authenticated true @param gem_name [String]",2],["versions","Gems::Client","classes/Gems/Client.html#M000007","(gem_name)","Returns an array of gem version details @authenticated false @param gem_name [String] The name of a gem.",2],["web_hooks","Gems::Client","classes/Gems/Client.html#M000022","()","List the webhooks registered under your account @authenticated true @return [Hash] @example Gems.web_hooks",2],["yank","Gems::Client","classes/Gems/Client.html#M000027","(gem_name, gem_version=nil, options={})","Remove a gem from RubyGems.org's index @authenticated true @param gem_name [String] The name of a gem.",2],["LICENSE.md","files/LICENSE_md.html","files/LICENSE_md.html","","Copyright (c) 2011 Erik Michaels-Ober  Permission is hereby granted, free of charge, to any person obtaining",3],["README.md","files/README_md.html","files/README_md.html","","# Gems Ruby wrapper for the RubyGems.org API.  ## <a name=\"installation\">Installation</a>     gem install",3],["gems.rb","files/lib/gems_rb.html","files/lib/gems_rb.html","","",3],["client.rb","files/lib/gems/client_rb.html","files/lib/gems/client_rb.html","","",3],["configuration.rb","files/lib/gems/configuration_rb.html","files/lib/gems/configuration_rb.html","","",3],["request.rb","files/lib/gems/request_rb.html","files/lib/gems/request_rb.html","","",3],["version.rb","files/lib/gems/version_rb.html","files/lib/gems/version_rb.html","","",3]],"searchIndex":["gems","client","configuration","request","add_owner()","add_web_hook()","api_key()","configure()","delete()","dependencies()","downloads()","extended()","fire_web_hook()","gems()","get()","hash_to_query_string()","info()","method_missing()","new()","new()","options()","owners()","post()","push()","put()","remove_owner()","remove_web_hook()","request()","reset()","respond_to?()","search()","total_downloads()","unyank()","versions()","web_hooks()","yank()","license.md","readme.md","gems.rb","client.rb","configuration.rb","request.rb","version.rb"],"longSearchIndex":["lib/gems.rb","gems","gems","gems","gems::client","gems::client","gems::client","gems::configuration","gems::request","gems::client","gems::client","gems::configuration","gems::client","gems::client","gems::request","gems::request","gems::client","gems","gems","gems::client","gems::configuration","gems::client","gems::request","gems::client","gems::request","gems::client","gems::client","gems::request","gems::configuration","gems","gems::client","gems::client","gems::client","gems::client","gems::client","gems::client","files/license_md.html","files/readme_md.html","files/lib/gems_rb.html","files/lib/gems/client_rb.html","files/lib/gems/configuration_rb.html","files/lib/gems/request_rb.html","files/lib/gems/version_rb.html"]}}