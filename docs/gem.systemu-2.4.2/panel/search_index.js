var search_data = {"index":{"info":[["Object","lib/systemu.rb","classes/Object.html"," < Object","",1],["SystemUniversal","lib/systemu.rb","classes/SystemUniversal.html"," < Object","",1],["StreamReader","SystemUniversal","classes/SystemUniversal/StreamReader.html"," < Object","",1],["child_program","SystemUniversal","classes/SystemUniversal.html#M000010","(config)","",2],["child_setup","SystemUniversal","classes/SystemUniversal.html#M000008","(tmp)","",2],["getopts","SystemUniversal","classes/SystemUniversal.html#M000013","(opts = {})","",2],["join","SystemUniversal::StreamReader","classes/SystemUniversal/StreamReader.html#M000016","()","",2],["new","SystemUniversal","classes/SystemUniversal.html#M000004","(argv, opts = {})","instance methods ",2],["new","SystemUniversal::StreamReader","classes/SystemUniversal/StreamReader.html#M000015","(stream)","",2],["new_thread","SystemUniversal","classes/SystemUniversal.html#M000007","(cid, block)","",2],["quietly","SystemUniversal","classes/SystemUniversal.html#M000009","()","",2],["quote","SystemUniversal","classes/SystemUniversal.html#M000006","(*args, &block)","",2],["quote","SystemUniversal","classes/SystemUniversal.html#M000003","(*words)","",2],["relay","SystemUniversal","classes/SystemUniversal.html#M000011","(srcdst)","",2],["systemu","Object","classes/Object.html#M000000","(*a, &b)","",2],["systemu","SystemUniversal","classes/SystemUniversal.html#M000014","()","",2],["systemu","SystemUniversal","classes/SystemUniversal.html#M000005","()","",2],["tmpdir","SystemUniversal","classes/SystemUniversal.html#M000012","(d = Dir.tmpdir, max = 42, &b)","",2],["version","SystemUniversal","classes/SystemUniversal.html#M000001","()","",2],["version","SystemUniversal","classes/SystemUniversal.html#M000002","()","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","same as Ruby's  http://www.ruby-lang.org/en/LICENSE.txt ",3],["README","files/README.html","files/README.html","","NAME    systemu  SYNOPSIS    univeral capture of stdout and stderr and handling of child process pid",3],["README.erb","files/README_erb.html","files/README_erb.html","","NAME    systemu  SYNOPSIS    univeral capture of stdout and stderr and handling of child process pid",3],["systemu.rb","files/lib/systemu_rb.html","files/lib/systemu_rb.html","","vim: ts=2:sw=2:sts=2:et:fdm=marker ",3]],"searchIndex":["object","systemuniversal","streamreader","child_program()","child_setup()","getopts()","join()","new()","new()","new_thread()","quietly()","quote()","quote()","relay()","systemu()","systemu()","systemu()","tmpdir()","version()","version()","license","readme","readme.erb","systemu.rb"],"longSearchIndex":["lib/systemu.rb","lib/systemu.rb","systemuniversal","systemuniversal","systemuniversal","systemuniversal","systemuniversal::streamreader","systemuniversal","systemuniversal::streamreader","systemuniversal","systemuniversal","systemuniversal","systemuniversal","systemuniversal","object","systemuniversal","systemuniversal","systemuniversal","systemuniversal","systemuniversal","files/license.html","files/readme.html","files/readme_erb.html","files/lib/systemu_rb.html"]}}