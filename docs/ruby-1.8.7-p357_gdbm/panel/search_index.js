var search_data = {"index":{"info":[["GDBM","ext/gdbm/gdbm.c","classes/GDBM.html"," < Object","      == Summary       Ruby extension for GNU dbm (gdbm) -- a simple database engine for storing    key-value",1],["GDBMError","ext/gdbm/gdbm.c","classes/GDBMError.html"," < StandardError","      call-seq:         gdbm.reject { |key, value| block } -> hash       Returns a hash copy of _gdbm_",1],["GDBMFatalError","ext/gdbm/gdbm.c","classes/GDBMFatalError.html"," < Exception","      call-seq:         gdbm.reject { |key, value| block } -> hash       Returns a hash copy of _gdbm_",1],["[]","GDBM","classes/GDBM.html#M000004","(p1)","          Retrieves the _value_ corresponding to _key_.     ",2],["[]=","GDBM","classes/GDBM.html#M000006","(p1, p2)","          Associates the value _value_ with the specified _key_.     ",2],["cachesize=","GDBM","classes/GDBM.html#M000034","(p1)","          Sets the size of the internal bucket cache to _size_.     ",2],["clear","GDBM","classes/GDBM.html#M000027","()","          Removes all the key-value pairs within _gdbm_.     ",2],["close","GDBM","classes/GDBM.html#M000002","()","          Closes the associated database file.     ",2],["closed?","GDBM","classes/GDBM.html#M000003","()","          Returns true if the associated database file has been closed.     ",2],["delete","GDBM","classes/GDBM.html#M000023","(p1)","          Removes the key-value-pair with the specified _key_ from this database and    returns the corresponding",2],["delete_if","GDBM","classes/GDBM.html#M000024","()","          Deletes every key-value pair from _gdbm_ for which _block_ evaluates to true.     ",2],["each","GDBM","classes/GDBM.html#M000016","()","          Executes _block_ for each key in the database, passing the _key_ and the    correspoding _value_",2],["each_key","GDBM","classes/GDBM.html#M000018","()","          Executes _block_ for each key in the database, passing the    _key_ as a parameter.     ",2],["each_pair","GDBM","classes/GDBM.html#M000019","()","          Executes _block_ for each key in the database, passing the _key_ and the    correspoding _value_",2],["each_value","GDBM","classes/GDBM.html#M000017","()","          Executes _block_ for each key in the database, passing the corresponding    _value_ as a parameter.",2],["empty?","GDBM","classes/GDBM.html#M000015","()","          Returns true if the database is empty.     ",2],["fastmode=","GDBM","classes/GDBM.html#M000035","(p1)","          Turns the database's fast mode on or off. If fast mode is turned on, gdbm    does not wait",2],["fetch","GDBM","classes/GDBM.html#M000005","(...)","          Retrieves the _value_ corresponding to _key_. If there is no value    associated with _key_,",2],["has_key?","GDBM","classes/GDBM.html#M000038","(p1)","          Returns true if the given key _k_ exists within the database.    Returns false otherwise. ",2],["has_value?","GDBM","classes/GDBM.html#M000040","(p1)","          Returns true if the given value _v_ exists within the database.    Returns false otherwise.",2],["include?","GDBM","classes/GDBM.html#M000037","(p1)","          Returns true if the given key _k_ exists within the database.    Returns false otherwise. ",2],["index","GDBM","classes/GDBM.html#M000008","(p1)","          Returns the _key_ for a given _value_. If several keys may map to the    same value, the key",2],["invert","GDBM","classes/GDBM.html#M000028","()","          Returns a hash created by using _gdbm_'s values as keys, and the keys    as values.     ",2],["key?","GDBM","classes/GDBM.html#M000041","(p1)","          Returns true if the given key _k_ exists within the database.    Returns false otherwise. ",2],["keys","GDBM","classes/GDBM.html#M000020","()","          Returns an array of all keys of this database.     ",2],["length","GDBM","classes/GDBM.html#M000013","()","          Returns the number of key-value pairs in this database.     ",2],["member?","GDBM","classes/GDBM.html#M000039","(p1)","          Returns true if the given key _k_ exists within the database.    Returns false otherwise. ",2],["new","GDBM","classes/GDBM.html#M000001","(...)","          Creates a new GDBM instance by opening a gdbm file named _filename_.    If the file does not",2],["open","GDBM","classes/GDBM.html#M000000","(...)","          If called without a block, this is synonymous to GDBM::new.    If a block is given, the new",2],["reject","GDBM","classes/GDBM.html#M000026","()","          Returns a hash copy of _gdbm_ where all key-value pairs from _gdbm_ for    which _block_ evaluates",2],["reject!","GDBM","classes/GDBM.html#M000025","()","          Deletes every key-value pair from _gdbm_ for which _block_ evaluates to true.     ",2],["reorganize","GDBM","classes/GDBM.html#M000031","()","          Reorganizes the database file. This operation removes reserved space of    elements that have",2],["replace","GDBM","classes/GDBM.html#M000030","(p1)","          Replaces the content of _gdbm_ with the key-value pairs of _other_.    _other_ must have an",2],["select","GDBM","classes/GDBM.html#M000011","(...)","          Returns a new array of all values of the database for which _block_    evaluates to true. ",2],["shift","GDBM","classes/GDBM.html#M000022","()","          Removes a key-value-pair from this database and returns it as a     two-item array [ _key_,",2],["size","GDBM","classes/GDBM.html#M000014","()","          Returns the number of key-value pairs in this database.     ",2],["store","GDBM","classes/GDBM.html#M000007","(p1, p2)","          Associates the value _value_ with the specified _key_.     ",2],["sync","GDBM","classes/GDBM.html#M000032","()","          Unless the _gdbm_ object has been opened with the *SYNC* flag, it is not    guarenteed that",2],["syncmode=","GDBM","classes/GDBM.html#M000036","(p1)","          Turns the database's synchronization mode on or off. If the synchronization    mode is turned",2],["to_a","GDBM","classes/GDBM.html#M000043","()","          Returns an array of all key-value pairs contained in the database.     ",2],["to_hash","GDBM","classes/GDBM.html#M000044","()","          Returns a hash of all key-value pairs contained in the database.     ",2],["update","GDBM","classes/GDBM.html#M000029","(p1)","          Adds the key-value pairs of _other_ to _gdbm_, overwriting entries with    duplicate keys with",2],["value?","GDBM","classes/GDBM.html#M000042","(p1)","          Returns true if the given value _v_ exists within the database.    Returns false otherwise.",2],["values","GDBM","classes/GDBM.html#M000021","()","          Returns an array of all values of this database.     ",2],["values_at","GDBM","classes/GDBM.html#M000012","(...)","          Returns an array of the values associated with each specified _key_.     ",2],["README","files/ext/gdbm/README.html","files/ext/gdbm/README.html","","gdbm ext-library for Ruby 1.3 or later ",3],["gdbm.c","files/ext/gdbm/gdbm_c.html","files/ext/gdbm/gdbm_c.html","","",3]],"searchIndex":["gdbm","gdbmerror","gdbmfatalerror","[]()","[]=()","cachesize=()","clear()","close()","closed?()","delete()","delete_if()","each()","each_key()","each_pair()","each_value()","empty?()","fastmode=()","fetch()","has_key?()","has_value?()","include?()","index()","invert()","key?()","keys()","length()","member?()","new()","open()","reject()","reject!()","reorganize()","replace()","select()","shift()","size()","store()","sync()","syncmode=()","to_a()","to_hash()","update()","value?()","values()","values_at()","readme","gdbm.c"],"longSearchIndex":["ext/gdbm/gdbm.c","ext/gdbm/gdbm.c","ext/gdbm/gdbm.c","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","gdbm","files/ext/gdbm/readme.html","files/ext/gdbm/gdbm_c.html"]}}