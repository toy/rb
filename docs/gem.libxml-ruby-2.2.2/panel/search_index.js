var search_data = {"index":{"info":[["LibXML","lib/libxml/attr.rb","classes/LibXML.html"," < ","encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8\r",1],["XML","LibXML","classes/LibXML/XML.html"," < ","",1],["Attr","LibXML::XML","classes/LibXML/XML/Attr.html"," < Object","",1],["AttrDecl","LibXML::XML","classes/LibXML/XML/AttrDecl.html"," < Object","",1],["Attributes","LibXML::XML","classes/LibXML/XML/Attributes.html"," < Object","",1],["Document","LibXML::XML","classes/LibXML/XML/Document.html"," < Object","",1],["Error","LibXML::XML","classes/LibXML/XML/Error.html"," < Object","",1],["HTMLParser","LibXML::XML","classes/LibXML/XML/HTMLParser.html"," < Object","",1],["Namespace","LibXML::XML","classes/LibXML/XML/Namespace.html"," < Object","",1],["Namespaces","LibXML::XML","classes/LibXML/XML/Namespaces.html"," < Object","",1],["Node","LibXML::XML","classes/LibXML/XML/Node.html"," < Object","",1],["Parser","LibXML::XML","classes/LibXML/XML/Parser.html"," < Object","",1],["Reader","LibXML::XML","classes/LibXML/XML/Reader.html"," < Object","",1],["SaxParser","LibXML::XML","classes/LibXML/XML/SaxParser.html"," < Object","",1],["Callbacks","LibXML::XML::SaxParser","classes/LibXML/XML/SaxParser/Callbacks.html"," < ","",1],["VerboseCallbacks","LibXML::XML::SaxParser","classes/LibXML/XML/SaxParser/VerboseCallbacks.html"," < ","",1],["XPath","LibXML::XML","classes/LibXML/XML/XPath.html"," < ","",1],["Object","LibXML::XML::XPath","classes/LibXML/XML/XPath/Object.html"," < Object","",1],["<=>","LibXML::XML::Namespace","classes/LibXML/XML/Namespace.html#M000042","(other)","Compares two namespace objects.  Namespace objects are considered equal if their prefixes and hrefs",2],["==","LibXML::XML::Error","classes/LibXML/XML/Error.html#M000027","(other)","",2],["attribute?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000064","()","Specifies if this is an attribute node ",2],["attribute_decl?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000065","()","Specifies if this is an attribute declaration node ",2],["attributes?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000047","()","Determines whether this node has attributes ",2],["cdata?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000066","()","Specifies if this is an CDATA node ",2],["child","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000004","()","Obtain this attribute declaration's child attribute(s). It will always be nil. ",2],["child?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000000","()","Returns whether this attribute has child attributes. ",2],["child?","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000005","()","Returns whether this attribute declaration has child attributes. ",2],["child?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000087","()","Alias for #first?",2],["children","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000059","()","Returns this node's children as an array. ",2],["children?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000088","()","Alias for #first?",2],["clone","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000048","()","Create a shallow copy of the node.  To create a deep copy call Node#copy(true) ",2],["code_to_s","LibXML::XML::Error","classes/LibXML/XML/Error.html#M000034","()","",2],["comment?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000068","()","Specifies if this is an comment node ",2],["context","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000031","(nslist = nil)","Returns a new XML::XPathContext for the document. Namespaces is an optional array of XML::NS objects",2],["context","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000051","(nslist = nil)","Returns a new XML::XPathContext for the current node. Namespaces is an optional array of XML::NS objects",2],["create_string_io","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000091","(xml)","",2],["default","LibXML::XML::Namespaces","classes/LibXML/XML/Namespaces.html#M000045","()","Returns the default namespace for this node or nil. Usage: doc = XML::Document.string('<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"/>')",2],["default_prefix=","LibXML::XML::Namespaces","classes/LibXML/XML/Namespaces.html#M000046","(prefix)","Assigns a name (prefix) to the default namespace. This makes it much easier to perform XML::XPath searches.",2],["doc?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000001","()","Determine whether this attribute is associated with an XML::Document. ",2],["doc?","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000009","()","Determine whether this attribute declaration is associated with an XML::Document. ",2],["docbook_doc?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000069","()","Specifies if this is an docbook node ",2],["doctype?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000070","()","Specifies if this is an doctype node ",2],["document","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000025","(value)","Creates a new document based on the specified document. Parameters: document - A preparsed document.",2],["document","LibXML::XML::Parser","classes/LibXML/XML/Parser.html#M000067","(doc)","Creates a new parser for the specified document. Parameters: document - A preparsed document. ",2],["document?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000071","()","Specifies if this is an document node ",2],["domain_to_s","LibXML::XML::Error","classes/LibXML/XML/Error.html#M000033","()","",2],["dtd?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000072","()","Specifies if this is an DTD node ",2],["dup","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000050","()","Create a shallow copy of the node.  To create a deep copy call Node#copy(true) ",2],["each","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000020","(&blk)","Alias for #each_sibling",2],["each","LibXML::XML::Namespace","classes/LibXML/XML/Namespace.html#M000043","()","libxml stores namespaces in memory as a linked list. Use the each method to iterate over the list. ",2],["each_attr","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000019","(&blk)","Alias for #each_sibling",2],["each_attr","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000055","()","-------  Traversal  ---------------- Iterates over this node's attributes. doc = XML::Document.new('model/books.xml')",2],["each_element","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000056","()","Iterates over this node's child elements (nodes that have a node_type == ELEMENT_NODE). doc = XML::Document.new('model/books.xml')",2],["each_sibling","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000018","(&blk)","",2],["element?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000073","()","Specifies if this is an element node ",2],["element_decl?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000076","()","Specifies if this is an element declaration node ",2],["entity?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000075","()","Specifies if this is an entity node ",2],["entity_ref?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000078","()","Specifies if this is an entity reference node ",2],["eql?","LibXML::XML::Error","classes/LibXML/XML/Error.html#M000028","(other)","",2],["file","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000026","(value, options = {})","Creates a new document from the specified file or uri. You may provide an optional hash table to control",2],["file","LibXML::XML::HTMLParser","classes/LibXML/XML/HTMLParser.html#M000039","(path, options = {})","Creates a new parser by parsing the specified file or uri. You may provide an optional hash table to",2],["file","LibXML::XML::Parser","classes/LibXML/XML/Parser.html#M000074","(path, options = {})","Creates a new parser for the specified file or uri. You may provide an optional hash table to control",2],["file","LibXML::XML::SaxParser","classes/LibXML/XML/SaxParser.html#M000100","(path)","Creates a new parser by parsing the specified file or uri. ",2],["find","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000035","(xpath, nslist = nil)","Return the nodes matching the specified xpath expression,  optionally using the specified namespace.",2],["find","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000052","(xpath, nslist = nil)","Return nodes matching the specified xpath expression. For more information, please refer to the documentation",2],["find_first","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000037","(xpath, nslist = nil)","Return the first node matching the specified xpath expression. For more information, please refer to",2],["find_first","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000053","(xpath, nslist = nil)","Return the first node matching the specified xpath expression. For more information, please refer to",2],["first?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000058","()","Determines whether this node has a first node ",2],["fragment?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000079","()","Specifies if this is a fragment node ",2],["html_doc?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000080","()","Specifies if this is a html document node ",2],["inner_xml","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000049","(options = Hash.new)","Converts a node's children, to a string representation.  To include the node, use XML::Node#to_s.  For",2],["io","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000029","(value, options = {})","Creates a new document from the specified io object. Parameters: io - io object that contains the xml",2],["io","LibXML::XML::HTMLParser","classes/LibXML/XML/HTMLParser.html#M000040","(io, options = {})","Creates a new reader by parsing the specified io object. Parameters: io - io object that contains the",2],["io","LibXML::XML::Parser","classes/LibXML/XML/Parser.html#M000077","(io, options = {})","Creates a new parser for the specified io object. Parameters: io - io object that contains the xml",2],["io","LibXML::XML::SaxParser","classes/LibXML/XML/SaxParser.html#M000109","(io, options = {})","Creates a new reader by parsing the specified io object. Parameters: encoding - The document encoding,",2],["last?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000002","()","Determine whether this is the last attribute. ",2],["last?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000062","()","Determines whether this node has a last node ",2],["level_to_s","LibXML::XML::Error","classes/LibXML/XML/Error.html#M000032","()","",2],["namespace?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000081","()","Specifies if this is a namespace node (not if it has a namepsace) ",2],["namespaces","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000007","()","Returns this node's XML::Namespaces object, which is used to access the namespaces associated with",2],["namespaces","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000054","()","Returns this node's XML::Namespaces object, which is used to access the namespaces associated with",2],["next?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000003","()","Determine whether there is a next attribute. ",2],["next?","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000010","()","Determine whether there is a next attribute declaration. ",2],["next?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000060","()","Determines whether this node has a next node ",2],["node_type_name","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000014","()","Returns this node's type name ",2],["node_type_name","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000016","()","Returns this attribute declaration's node type name. ",2],["node_type_name","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000038","()","Returns this node's type name     ",2],["node_type_name","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000063","()","Returns this node's type name     ",2],["notation?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000082","()","Specifies if this is a notation node ",2],["ns?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000006","()","Determine whether this attribute has an associated namespace. ",2],["on_cdata_block","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000097","(cdata)","Called for a CDATA block event. ",2],["on_cdata_block","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000115","(cdata)","Called for a CDATA block event. ",2],["on_characters","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000098","(chars)","Called for a characters event. ",2],["on_characters","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000116","(chars)","Called for a characters event. ",2],["on_comment","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000099","(msg)","Called for a comment event. ",2],["on_comment","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000117","(comment)","Called for a comment event. ",2],["on_end_document","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000101","()","Called for a end document event. ",2],["on_end_document","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000118","()","Called for a end document event. ",2],["on_end_element_ns","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000102","(name, prefix, uri)","Called for a end element event. ",2],["on_end_element_ns","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000119","(name, prefix, uri)","Called for a end element event. ",2],["on_error","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000103","(msg)","Called for parser errors. ",2],["on_error","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000120","(error)","Called for parser errors. ",2],["on_external_subset","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000104","(name, external_id, system_id)","Called for an external subset event. ",2],["on_external_subset","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000121","(name, external_id, system_id)","Called for an external subset event. ",2],["on_has_external_subset","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000105","()","Called for an external subset notification event. ",2],["on_has_external_subset","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000122","()","Called for an external subset notification event. ",2],["on_has_internal_subset","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000106","()","Called for an internal subset notification event. ",2],["on_has_internal_subset","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000123","()","Called for an internal subset notification event. ",2],["on_internal_subset","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000107","(name, external_id, system_id)","Called for an internal subset event. ",2],["on_internal_subset","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000124","(name, external_id, system_id)","Called for an internal subset event. ",2],["on_is_standalone","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000108","()","Called for 'is standalone' event. ",2],["on_is_standalone","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000125","()","Called for 'is standalone' event. ",2],["on_processing_instruction","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000111","(target, data)","Called for an processing instruction event. ",2],["on_processing_instruction","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000126","(target, data)","Called for an processing instruction event. ",2],["on_reference","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000112","(name)","Called for a reference event. ",2],["on_reference","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000127","(name)","Called for a reference event. ",2],["on_start_document","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000113","()","Called for a start document event. ",2],["on_start_document","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000128","()","Called for a start document event. ",2],["on_start_element_ns","LibXML::XML::SaxParser::Callbacks","classes/LibXML/XML/SaxParser/Callbacks.html#M000114","(name, attributes, prefix, uri, namespaces)","Called for a start element event. ",2],["on_start_element_ns","LibXML::XML::SaxParser::VerboseCallbacks","classes/LibXML/XML/SaxParser/VerboseCallbacks.html#M000129","(name, attributes, prefix, uri, namespaces)","Called for a start element event. ",2],["parent?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000008","()","Determine whether this attribute has a parent. ",2],["parent?","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000011","()","Determine whether this attribute declaration has a parent . ",2],["parent?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000057","()","Determines whether this node has a parent node ",2],["pi?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000083","()","Specifies if this is a processiong instruction node ",2],["prev?","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000013","()","Determine whether there is a previous attribute. ",2],["prev?","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000012","()","Determine whether there is a previous attribute declaration. ",2],["prev?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000061","()","Determines whether this node has a previous node ",2],["properties","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000093","()","",2],["properties?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000096","()","",2],["property","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000092","(name)","",2],["register_error_handler","LibXML::XML::Parser","classes/LibXML/XML/Parser.html#M000090","(proc)","",2],["reset_error_handler","LibXML::XML::Reader","classes/LibXML/XML/Reader.html#M000094","()","",2],["set","LibXML::XML::XPath::Object","classes/LibXML/XML/XPath/Object.html#M000130","()","",2],["set_error_handler","LibXML::XML::Reader","classes/LibXML/XML/Reader.html#M000095","(&block)","",2],["siblings","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000015","(node, &blk)","Iterates nodes and attributes ",2],["string","LibXML::XML::Document","classes/LibXML/XML/Document.html#M000030","(value, options = {})","Creates a new document from the specified string. You may provide an optional hash table to control",2],["string","LibXML::XML::HTMLParser","classes/LibXML/XML/HTMLParser.html#M000041","(string, options = {})","Creates a new parser by parsing the specified string. You may provide an optional hash table to control",2],["string","LibXML::XML::Parser","classes/LibXML/XML/Parser.html#M000089","(string, options = {})","Creates a new parser by parsing the specified string. You may provide an optional hash table to control",2],["string","LibXML::XML::SaxParser","classes/LibXML/XML/SaxParser.html#M000110","(string)","Creates a new parser by parsing the specified string. ",2],["text?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000084","()","Specifies if this is a text node ",2],["to_a","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000022","()","",2],["to_h","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000021","()","",2],["to_h","LibXML::XML::Attributes","classes/LibXML/XML/Attributes.html#M000024","()","",2],["to_s","LibXML::XML::Attr","classes/LibXML/XML/Attr.html#M000023","()","",2],["to_s","LibXML::XML::AttrDecl","classes/LibXML/XML/AttrDecl.html#M000017","()","Returns a string representation of this attribute declaration. ",2],["to_s","LibXML::XML::Error","classes/LibXML/XML/Error.html#M000036","()","",2],["to_s","LibXML::XML::Namespace","classes/LibXML/XML/Namespace.html#M000044","()","Returns the string represenation of a namespace. Usage: namespace.to_s ",2],["xinclude_end?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000085","()","Specifies if this is an xinclude end node ",2],["xinclude_start?","LibXML::XML::Node","classes/LibXML/XML/Node.html#M000086","()","Specifies if this is an xinclude start node ",2],["HISTORY","files/HISTORY.html","files/HISTORY.html","","= Release History  == 2.2.2 / 2011-08-13 Charlie Savage  * ++API CHANGE+++  Reader#relax_ng_validate",3],["LICENSE","files/LICENSE.html","files/LICENSE.html","","  Copyright (c) 2008-2011 Charlie Savage and contributors   Copyright (c) 2002-2007 Sean Chittenden and",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= LibXML Ruby  == Overview The libxml gem provides Ruby language bindings for GNOME's Libxml2 XML toolkit.",3],["libxml.rb","files/lib/libxml_rb.html","files/lib/libxml_rb.html","","encoding: UTF-8 ",3],["attr.rb","files/lib/libxml/attr_rb.html","files/lib/libxml/attr_rb.html","","encoding: UTF-8 ",3],["attr_decl.rb","files/lib/libxml/attr_decl_rb.html","files/lib/libxml/attr_decl_rb.html","","encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8 --- encoding: UTF-8\r",3],["attributes.rb","files/lib/libxml/attributes_rb.html","files/lib/libxml/attributes_rb.html","","encoding: UTF-8 ",3],["document.rb","files/lib/libxml/document_rb.html","files/lib/libxml/document_rb.html","","encoding: UTF-8 ",3],["error.rb","files/lib/libxml/error_rb.html","files/lib/libxml/error_rb.html","","encoding: UTF-8 ",3],["hpricot.rb","files/lib/libxml/hpricot_rb.html","files/lib/libxml/hpricot_rb.html","","encoding: UTF-8 ",3],["html_parser.rb","files/lib/libxml/html_parser_rb.html","files/lib/libxml/html_parser_rb.html","","encoding: UTF-8 ",3],["namespace.rb","files/lib/libxml/namespace_rb.html","files/lib/libxml/namespace_rb.html","","encoding: UTF-8 ",3],["namespaces.rb","files/lib/libxml/namespaces_rb.html","files/lib/libxml/namespaces_rb.html","","encoding: UTF-8 ",3],["node.rb","files/lib/libxml/node_rb.html","files/lib/libxml/node_rb.html","","encoding: UTF-8 ",3],["ns.rb","files/lib/libxml/ns_rb.html","files/lib/libxml/ns_rb.html","","encoding: UTF-8 ",3],["parser.rb","files/lib/libxml/parser_rb.html","files/lib/libxml/parser_rb.html","","encoding: UTF-8 ",3],["properties.rb","files/lib/libxml/properties_rb.html","files/lib/libxml/properties_rb.html","","encoding: UTF-8 ",3],["reader.rb","files/lib/libxml/reader_rb.html","files/lib/libxml/reader_rb.html","","encoding: UTF-8 ",3],["sax_callbacks.rb","files/lib/libxml/sax_callbacks_rb.html","files/lib/libxml/sax_callbacks_rb.html","","encoding: UTF-8 ",3],["sax_parser.rb","files/lib/libxml/sax_parser_rb.html","files/lib/libxml/sax_parser_rb.html","","encoding: UTF-8 ",3],["tree.rb","files/lib/libxml/tree_rb.html","files/lib/libxml/tree_rb.html","","encoding: UTF-8 ",3],["xpath_object.rb","files/lib/libxml/xpath_object_rb.html","files/lib/libxml/xpath_object_rb.html","","encoding: UTF-8 ",3],["xml.rb","files/lib/xml_rb.html","files/lib/xml_rb.html","","encoding: UTF-8 ",3],["libxml.rb","files/lib/xml/libxml_rb.html","files/lib/xml/libxml_rb.html","","encoding: UTF-8 ",3]],"searchIndex":["libxml","xml","attr","attrdecl","attributes","document","error","htmlparser","namespace","namespaces","node","parser","reader","saxparser","callbacks","verbosecallbacks","xpath","object","<=>()","==()","attribute?()","attribute_decl?()","attributes?()","cdata?()","child()","child?()","child?()","child?()","children()","children?()","clone()","code_to_s()","comment?()","context()","context()","create_string_io()","default()","default_prefix=()","doc?()","doc?()","docbook_doc?()","doctype?()","document()","document()","document?()","domain_to_s()","dtd?()","dup()","each()","each()","each_attr()","each_attr()","each_element()","each_sibling()","element?()","element_decl?()","entity?()","entity_ref?()","eql?()","file()","file()","file()","file()","find()","find()","find_first()","find_first()","first?()","fragment?()","html_doc?()","inner_xml()","io()","io()","io()","io()","last?()","last?()","level_to_s()","namespace?()","namespaces()","namespaces()","next?()","next?()","next?()","node_type_name()","node_type_name()","node_type_name()","node_type_name()","notation?()","ns?()","on_cdata_block()","on_cdata_block()","on_characters()","on_characters()","on_comment()","on_comment()","on_end_document()","on_end_document()","on_end_element_ns()","on_end_element_ns()","on_error()","on_error()","on_external_subset()","on_external_subset()","on_has_external_subset()","on_has_external_subset()","on_has_internal_subset()","on_has_internal_subset()","on_internal_subset()","on_internal_subset()","on_is_standalone()","on_is_standalone()","on_processing_instruction()","on_processing_instruction()","on_reference()","on_reference()","on_start_document()","on_start_document()","on_start_element_ns()","on_start_element_ns()","parent?()","parent?()","parent?()","pi?()","prev?()","prev?()","prev?()","properties()","properties?()","property()","register_error_handler()","reset_error_handler()","set()","set_error_handler()","siblings()","string()","string()","string()","string()","text?()","to_a()","to_h()","to_h()","to_s()","to_s()","to_s()","to_s()","xinclude_end?()","xinclude_start?()","history","license","readme.rdoc","libxml.rb","attr.rb","attr_decl.rb","attributes.rb","document.rb","error.rb","hpricot.rb","html_parser.rb","namespace.rb","namespaces.rb","node.rb","ns.rb","parser.rb","properties.rb","reader.rb","sax_callbacks.rb","sax_parser.rb","tree.rb","xpath_object.rb","xml.rb","libxml.rb"],"longSearchIndex":["lib/libxml/xpath_object.rb","libxml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml","libxml::xml::saxparser","libxml::xml::saxparser","libxml::xml","libxml::xml::xpath","libxml::xml::namespace","libxml::xml::error","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::attrdecl","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::error","libxml::xml::node","libxml::xml::document","libxml::xml::node","libxml::xml::node","libxml::xml::namespaces","libxml::xml::namespaces","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::node","libxml::xml::node","libxml::xml::document","libxml::xml::parser","libxml::xml::node","libxml::xml::error","libxml::xml::node","libxml::xml::node","libxml::xml::attr","libxml::xml::namespace","libxml::xml::attr","libxml::xml::node","libxml::xml::node","libxml::xml::attr","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::error","libxml::xml::document","libxml::xml::htmlparser","libxml::xml::parser","libxml::xml::saxparser","libxml::xml::document","libxml::xml::node","libxml::xml::document","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::document","libxml::xml::htmlparser","libxml::xml::parser","libxml::xml::saxparser","libxml::xml::attr","libxml::xml::node","libxml::xml::error","libxml::xml::node","libxml::xml::attr","libxml::xml::node","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::node","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::document","libxml::xml::node","libxml::xml::node","libxml::xml::attr","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::saxparser::callbacks","libxml::xml::saxparser::verbosecallbacks","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::node","libxml::xml::node","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::node","libxml::xml::parser","libxml::xml::reader","libxml::xml::xpath::object","libxml::xml::reader","libxml::xml::attr","libxml::xml::document","libxml::xml::htmlparser","libxml::xml::parser","libxml::xml::saxparser","libxml::xml::node","libxml::xml::attr","libxml::xml::attr","libxml::xml::attributes","libxml::xml::attr","libxml::xml::attrdecl","libxml::xml::error","libxml::xml::namespace","libxml::xml::node","libxml::xml::node","files/history.html","files/license.html","files/readme_rdoc.html","files/lib/libxml_rb.html","files/lib/libxml/attr_rb.html","files/lib/libxml/attr_decl_rb.html","files/lib/libxml/attributes_rb.html","files/lib/libxml/document_rb.html","files/lib/libxml/error_rb.html","files/lib/libxml/hpricot_rb.html","files/lib/libxml/html_parser_rb.html","files/lib/libxml/namespace_rb.html","files/lib/libxml/namespaces_rb.html","files/lib/libxml/node_rb.html","files/lib/libxml/ns_rb.html","files/lib/libxml/parser_rb.html","files/lib/libxml/properties_rb.html","files/lib/libxml/reader_rb.html","files/lib/libxml/sax_callbacks_rb.html","files/lib/libxml/sax_parser_rb.html","files/lib/libxml/tree_rb.html","files/lib/libxml/xpath_object_rb.html","files/lib/xml_rb.html","files/lib/xml/libxml_rb.html"]}}