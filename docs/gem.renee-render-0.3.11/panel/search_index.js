var search_data = {"index":{"info":[["Renee","lib/renee_render/version.rb","classes/Renee.html"," < ","Top-level Renee constant ",1],["Render","Renee","classes/Renee/Render.html"," < ","This module is responsible for handling the rendering of templates using Tilt supporting all included",1],["ClassMethods","Renee::Render","classes/Renee/Render/ClassMethods.html"," < ","Class-methods included by this module. ",1],["TemplateNotFound","Renee::Render","classes/Renee/Render/TemplateNotFound.html"," < RuntimeError","Exception responsible for when an expected template does not exist. ",1],["default_encoding","Renee::Render::ClassMethods","classes/Renee/Render/ClassMethods.html#M000002","(encoding = nil)","Gets or sets the default encoding used. @param [String] encoding The encoding to use. e.g. \"utf-8\" ",2],["default_layout","Renee::Render::ClassMethods","classes/Renee/Render/ClassMethods.html#M000003","(*args)","Gets or sets the default layout used. @param [String] layout The layout to use. e.g. \"application.haml\"",2],["find_template","Renee::Render","classes/Renee/Render.html#M000010","(views, name, engine=nil)","Searches view paths for template based on data and engine with rendering options. Supports finding a",2],["included","Renee::Render","classes/Renee/Render.html#M000000","(o)","",2],["inline","Renee::Render","classes/Renee/Render.html#M000007","(data, engine, options = nil, &block)","Renders a string given the engine and the content. @param [String] data The string data to render. @param",2],["inline!","Renee::Render","classes/Renee/Render.html#M000005","(data, engine, options = {}, &blk)","Same as inline but automatically halts. @param  (see #inline) @return (see #inline) @see #inline ",2],["partial","Renee::Render","classes/Renee/Render.html#M000008","(template, options={})","Render a partials with collections support @return [String] The html generated from this partial. @example",2],["render","Renee::Render","classes/Renee/Render.html#M000006","(file, engine = nil, options = nil, &block)","Renders a file given the engine and the content. @param [String] file The path to the file to render",2],["render!","Renee::Render","classes/Renee/Render.html#M000004","(file, engine = nil, options = nil, &blk)","Same as render but automatically halts. @param  (see #render) @return (see #render) @see #render ",2],["render_setup","Renee::Render","classes/Renee/Render.html#M000009","(engine, options, block)","",2],["template_cache","Renee::Render","classes/Renee/Render.html#M000011","()","Maintain Tilt::Cache of the templates. ",2],["views_path","Renee::Render::ClassMethods","classes/Renee/Render/ClassMethods.html#M000001","(path = nil)","Gets or sets the views_path for an application. @param [String] path The path to the view files. @example",2],["README.md","files/README_md.html","files/README_md.html","","# Renee Render  Rendering templates in Renee should be familiar and intuitive using the `render` command:",3],["renee_render.rb","files/lib/renee_render_rb.html","files/lib/renee_render_rb.html","","",3],["version.rb","files/lib/renee_render/version_rb.html","files/lib/renee_render/version_rb.html","","",3]],"searchIndex":["renee","render","classmethods","templatenotfound","default_encoding()","default_layout()","find_template()","included()","inline()","inline!()","partial()","render()","render!()","render_setup()","template_cache()","views_path()","readme.md","renee_render.rb","version.rb"],"longSearchIndex":["lib/renee_render.rb","renee","renee::render","renee::render","renee::render::classmethods","renee::render::classmethods","renee::render","renee::render","renee::render","renee::render","renee::render","renee::render","renee::render","renee::render","renee::render","renee::render::classmethods","files/readme_md.html","files/lib/renee_render_rb.html","files/lib/renee_render/version_rb.html"]}}