var search_data = {"index":{"info":[["Dante","lib/dante/runner.rb","classes/Dante.html"," < ","",1],["Runner","Dante","classes/Dante/Runner.html"," < Object","",1],["daemon_running?","Dante::Runner","classes/Dante/Runner.html#M000011","()","Returns running for the daemonized process self.daemon_running? ",2],["daemon_stopped?","Dante::Runner","classes/Dante/Runner.html#M000010","()","Returns true if process is not running ",2],["daemonize","Dante::Runner","classes/Dante/Runner.html#M000004","()","",2],["execute","Dante::Runner","classes/Dante/Runner.html#M000003","(opts={}, &block)","Executes the runner based on options @runner.execute @runner.execute { ... } ",2],["interrupt","Dante::Runner","classes/Dante/Runner.html#M000009","()","",2],["kill_pid","Dante::Runner","classes/Dante/Runner.html#M000014","(k='*')","",2],["log","Dante::Runner","classes/Dante/Runner.html#M000016","(message)","",2],["new","Dante::Runner","classes/Dante/Runner.html#M000001","(name, defaults={}, &block)","",2],["parse_options","Dante::Runner","classes/Dante/Runner.html#M000012","()","",2],["restart","Dante::Runner","classes/Dante/Runner.html#M000008","()","",2],["run","Dante","classes/Dante.html#M000007","(name, options={}, &blk)","Forks a process and handles option parsing and start/stopping. @example Dante.run(\"process-name\") { Server.run!",2],["run","Dante::Runner","classes/Dante/Runner.html#M000000","(*args, &block)","",2],["start","Dante::Runner","classes/Dante/Runner.html#M000005","()","",2],["stop","Dante::Runner","classes/Dante/Runner.html#M000006","(kill_arg=nil)","Stops a daemonized process ",2],["store_pid","Dante::Runner","classes/Dante/Runner.html#M000013","(pid)","",2],["until_true","Dante::Runner","classes/Dante/Runner.html#M000015","(timeout_seconds, interval=1, &block)","Runs until the block condition is met or the timeout_seconds is exceeded until_true(10) { ...return_condition...",2],["with_options","Dante::Runner","classes/Dante/Runner.html#M000002","(&block)","Accepts options for the process @runner.with_options { |opts| opts.on(...) } ",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2011 Miso  Permission is hereby granted, free of charge, to any person obtaining a copy",3],["README.md","files/README_md.html","files/README_md.html","","# Dante  Turn any ruby into a daemon.  ## Description  Dante is the simplest possible thing that will",3],["dante.rb","files/lib/dante_rb.html","files/lib/dante_rb.html","","",3],["runner.rb","files/lib/dante/runner_rb.html","files/lib/dante/runner_rb.html","","",3],["version.rb","files/lib/dante/version_rb.html","files/lib/dante/version_rb.html","","",3]],"searchIndex":["dante","runner","daemon_running?()","daemon_stopped?()","daemonize()","execute()","interrupt()","kill_pid()","log()","new()","parse_options()","restart()","run()","run()","start()","stop()","store_pid()","until_true()","with_options()","license","readme.md","dante.rb","runner.rb","version.rb"],"longSearchIndex":["lib/dante.rb","dante","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","dante::runner","files/license.html","files/readme_md.html","files/lib/dante_rb.html","files/lib/dante/runner_rb.html","files/lib/dante/version_rb.html"]}}