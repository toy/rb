var tree = [["","","files",[["License.txt","files/License_txt.html","",[]],["README.md","files/README_md.html","",[]],["","","lib",[["","","rspec",[["","","mocks",[["","","any_instance",[["chain.rb","files/lib/rspec/mocks/any_instance/chain_rb.html","",[]],["message_chains.rb","files/lib/rspec/mocks/any_instance/message_chains_rb.html","",[]],["recorder.rb","files/lib/rspec/mocks/any_instance/recorder_rb.html","",[]]]],["any_instance.rb","files/lib/rspec/mocks/any_instance_rb.html","",[]],["argument_expectation.rb","files/lib/rspec/mocks/argument_expectation_rb.html","",[]],["argument_matchers.rb","files/lib/rspec/mocks/argument_matchers_rb.html","",[]],["error_generator.rb","files/lib/rspec/mocks/error_generator_rb.html","",[]],["errors.rb","files/lib/rspec/mocks/errors_rb.html","",[]],["example_methods.rb","files/lib/rspec/mocks/example_methods_rb.html","",[]],["","","extensions",[["instance_exec.rb","files/lib/rspec/mocks/extensions/instance_exec_rb.html","",[]],["marshal.rb","files/lib/rspec/mocks/extensions/marshal_rb.html","",[]],["psych.rb","files/lib/rspec/mocks/extensions/psych_rb.html","",[]]]],["framework.rb","files/lib/rspec/mocks/framework_rb.html","",[]],["message_expectation.rb","files/lib/rspec/mocks/message_expectation_rb.html","",[]],["method_double.rb","files/lib/rspec/mocks/method_double_rb.html","",[]],["methods.rb","files/lib/rspec/mocks/methods_rb.html","",[]],["mock.rb","files/lib/rspec/mocks/mock_rb.html","",[]],["order_group.rb","files/lib/rspec/mocks/order_group_rb.html","",[]],["proxy.rb","files/lib/rspec/mocks/proxy_rb.html","",[]],["serialization.rb","files/lib/rspec/mocks/serialization_rb.html","",[]],["space.rb","files/lib/rspec/mocks/space_rb.html","",[]],["standalone.rb","files/lib/rspec/mocks/standalone_rb.html","",[]],["version.rb","files/lib/rspec/mocks/version_rb.html","",[]]]],["mocks.rb","files/lib/rspec/mocks_rb.html","",[]]]],["","","spec",[["mocks.rb","files/lib/spec/mocks_rb.html","",[]]]]]]]],["Marshal","classes/Marshal.html","",[]],["Psych","classes/Psych.html","",[]],["RSpec","classes/RSpec.html","",[["Mocks","classes/RSpec/Mocks.html","",[["AmbiguousReturnError","classes/RSpec/Mocks/AmbiguousReturnError.html"," < StandardError",[]],["AnyInstance","classes/RSpec/Mocks/AnyInstance.html","",[["Chain","classes/RSpec/Mocks/AnyInstance/Chain.html"," < Object",[]],["ExpectationChain","classes/RSpec/Mocks/AnyInstance/ExpectationChain.html"," < Chain",[]],["MessageChains","classes/RSpec/Mocks/AnyInstance/MessageChains.html"," < Hash",[]],["Recorder","classes/RSpec/Mocks/AnyInstance/Recorder.html"," < Object",[]],["StubChain","classes/RSpec/Mocks/AnyInstance/StubChain.html"," < Chain",[]],["StubChainChain","classes/RSpec/Mocks/AnyInstance/StubChainChain.html"," < StubChain",[]]]],["ArgumentExpectation","classes/RSpec/Mocks/ArgumentExpectation.html"," < Object",[]],["ArgumentMatchers","classes/RSpec/Mocks/ArgumentMatchers.html","",[["AnyArgMatcher","classes/RSpec/Mocks/ArgumentMatchers/AnyArgMatcher.html"," < Object",[]],["AnyArgsMatcher","classes/RSpec/Mocks/ArgumentMatchers/AnyArgsMatcher.html"," < Object",[]],["BooleanMatcher","classes/RSpec/Mocks/ArgumentMatchers/BooleanMatcher.html"," < Object",[]],["DuckTypeMatcher","classes/RSpec/Mocks/ArgumentMatchers/DuckTypeMatcher.html"," < Object",[]],["EqualityProxy","classes/RSpec/Mocks/ArgumentMatchers/EqualityProxy.html"," < Object",[]],["HashExcludingMatcher","classes/RSpec/Mocks/ArgumentMatchers/HashExcludingMatcher.html"," < Object",[]],["HashIncludingMatcher","classes/RSpec/Mocks/ArgumentMatchers/HashIncludingMatcher.html"," < Object",[]],["InstanceOf","classes/RSpec/Mocks/ArgumentMatchers/InstanceOf.html"," < Object",[]],["KindOf","classes/RSpec/Mocks/ArgumentMatchers/KindOf.html"," < Object",[]],["MatcherMatcher","classes/RSpec/Mocks/ArgumentMatchers/MatcherMatcher.html"," < Object",[]],["NoArgsMatcher","classes/RSpec/Mocks/ArgumentMatchers/NoArgsMatcher.html"," < Object",[]],["RegexpMatcher","classes/RSpec/Mocks/ArgumentMatchers/RegexpMatcher.html"," < Object",[]]]],["ErrorGenerator","classes/RSpec/Mocks/ErrorGenerator.html"," < Object",[]],["ExampleMethods","classes/RSpec/Mocks/ExampleMethods.html","",[]],["InstanceExec","classes/RSpec/Mocks/InstanceExec.html","",[]],["MessageExpectation","classes/RSpec/Mocks/MessageExpectation.html"," < Object",[]],["MethodDouble","classes/RSpec/Mocks/MethodDouble.html"," < Hash",[]],["Methods","classes/RSpec/Mocks/Methods.html","",[]],["Mock","classes/RSpec/Mocks/Mock.html"," < Object",[]],["MockExpectationError","classes/RSpec/Mocks/MockExpectationError.html"," < Exception",[]],["NegativeMessageExpectation","classes/RSpec/Mocks/NegativeMessageExpectation.html"," < MessageExpectation",[]],["OrderGroup","classes/RSpec/Mocks/OrderGroup.html"," < Object",[]],["Proxy","classes/RSpec/Mocks/Proxy.html"," < Object",[]],["Serialization","classes/RSpec/Mocks/Serialization.html","",[["YAML","classes/RSpec/Mocks/Serialization/YAML.html","",[]]]],["Space","classes/RSpec/Mocks/Space.html"," < Object",[]],["Version","classes/RSpec/Mocks/Version.html","",[]]]]]]]