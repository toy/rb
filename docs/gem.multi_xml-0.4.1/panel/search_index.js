var search_data = {"index":{"info":[["MultiXml","lib/multi_xml/parsers/libxml.rb","classes/MultiXml.html"," < ","Each MultiXml parser is expected to parse an XML document into a Hash. The conversion rules are: - Each",1],["ParseError","MultiXml","classes/MultiXml/ParseError.html"," < StandardError","",1],["Parsers","MultiXml","classes/MultiXml/Parsers.html"," < ","",1],["Handler","MultiXml::Parsers::Ox","classes/MultiXml/Parsers/Ox/Handler.html"," < Object","",1],["append","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000008","(key, value)","",2],["attr","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000002","(name, value)","",2],["cdata","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000004","(value)","",2],["default_parser","MultiXml","classes/MultiXml.html#M000010","()","The default parser based on what you currently have loaded and installed. First checks to see if any",2],["doc","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000001","()","",2],["end_element","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000006","(name)","",2],["error","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000007","(message, line, column)","",2],["new","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000000","()","",2],["parse","MultiXml","classes/MultiXml.html#M000012","(xml, options={})","Parse an XML string or IO into Ruby. <b>Options</b> <tt>:symbolize_keys</tt> :: If true, will use symbols",2],["parse_file","MultiXml","classes/MultiXml.html#M000014","(file, entity)","",2],["parser","MultiXml","classes/MultiXml.html#M000009","()","Get the current parser class. ",2],["parser=","MultiXml","classes/MultiXml.html#M000011","(new_parser)","Set the XML parser utilizing a symbol, string, or class. Supported by default are: * <tt>:libxml</tt>",2],["start_element","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000005","(name)","",2],["symbolize_keys","MultiXml","classes/MultiXml.html#M000015","(hash)","",2],["text","MultiXml::Parsers::Ox::Handler","classes/MultiXml/Parsers/Ox/Handler.html#M000003","(value)","",2],["typecast_xml_value","MultiXml","classes/MultiXml.html#M000017","(value)","",2],["undasherize_keys","MultiXml","classes/MultiXml.html#M000016","(params)","",2],["LICENSE.md","files/LICENSE_md.html","files/LICENSE_md.html","","Copyright (c) 2010 Erik Michaels-Ober  Permission is hereby granted, free of charge, to any person obtaining",3],["README.md","files/README_md.html","files/README_md.html","","# MultiXML A generic swappable back-end for XML parsing  ## <a name=\"installation\">Installation</a> ",3],["multi_xml.rb","files/lib/multi_xml_rb.html","files/lib/multi_xml_rb.html","","",3],["libxml.rb","files/lib/multi_xml/parsers/libxml_rb.html","files/lib/multi_xml/parsers/libxml_rb.html","","",3],["libxml2_parser.rb","files/lib/multi_xml/parsers/libxml2_parser_rb.html","files/lib/multi_xml/parsers/libxml2_parser_rb.html","","",3],["nokogiri.rb","files/lib/multi_xml/parsers/nokogiri_rb.html","files/lib/multi_xml/parsers/nokogiri_rb.html","","",3],["ox.rb","files/lib/multi_xml/parsers/ox_rb.html","files/lib/multi_xml/parsers/ox_rb.html","","",3],["rexml.rb","files/lib/multi_xml/parsers/rexml_rb.html","files/lib/multi_xml/parsers/rexml_rb.html","","",3],["version.rb","files/lib/multi_xml/version_rb.html","files/lib/multi_xml/version_rb.html","","",3]],"searchIndex":["multixml","parseerror","parsers","handler","append()","attr()","cdata()","default_parser()","doc()","end_element()","error()","new()","parse()","parse_file()","parser()","parser=()","start_element()","symbolize_keys()","text()","typecast_xml_value()","undasherize_keys()","license.md","readme.md","multi_xml.rb","libxml.rb","libxml2_parser.rb","nokogiri.rb","ox.rb","rexml.rb","version.rb"],"longSearchIndex":["lib/multi_xml.rb","multixml","multixml","multixml::parsers::ox","multixml::parsers::ox::handler","multixml::parsers::ox::handler","multixml::parsers::ox::handler","multixml","multixml::parsers::ox::handler","multixml::parsers::ox::handler","multixml::parsers::ox::handler","multixml::parsers::ox::handler","multixml","multixml","multixml","multixml","multixml::parsers::ox::handler","multixml","multixml::parsers::ox::handler","multixml","multixml","files/license_md.html","files/readme_md.html","files/lib/multi_xml_rb.html","files/lib/multi_xml/parsers/libxml_rb.html","files/lib/multi_xml/parsers/libxml2_parser_rb.html","files/lib/multi_xml/parsers/nokogiri_rb.html","files/lib/multi_xml/parsers/ox_rb.html","files/lib/multi_xml/parsers/rexml_rb.html","files/lib/multi_xml/version_rb.html"]}}