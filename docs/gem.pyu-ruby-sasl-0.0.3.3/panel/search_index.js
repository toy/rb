var search_data = {"index":{"info":[["Base64","lib/sasl/base64.rb","classes/Base64.html"," < ","Ruby 1.9 has dropped the Base64 module, this is a replacement We could replace all call by Array#pack('m')",1],["SASL","lib/sasl/anonymous.rb","classes/SASL.html"," < ","RFC 4422: http://tools.ietf.org/html/rfc4422 ",1],["Anonymous","SASL","classes/SASL/Anonymous.html"," < Mechanism","SASL ANONYMOUS where you only send a username that may not get evaluated by the server. RFC 4505: http://tools.ietf.org/html/rfc4505",1],["DigestMD5","SASL","classes/SASL/DigestMD5.html"," < Mechanism","RFC 2831: http://tools.ietf.org/html/rfc2831 ",1],["Mechanism","SASL","classes/SASL/Mechanism.html"," < Object","Common functions for mechanisms Mechanisms implement handling of methods start and receive. They return:",1],["Plain","SASL","classes/SASL/Plain.html"," < Mechanism","RFC 4616: http://tools.ietf.org/html/rfc4616 ",1],["Preferences","SASL","classes/SASL/Preferences.html"," < Object","You must derive from class Preferences and overwrite methods you want to implement. ",1],["UnknownMechanism","SASL","classes/SASL/UnknownMechanism.html"," < RuntimeError","Will be raised by SASL.new_mechanism if mechanism passed to the constructor is not known. ",1],["decode64","Base64","classes/Base64.html#M000002","(data64)","Decode a Base64-encoded String data64:: [String] Binary in Base64 result:: [String] Binary ",2],["decode_challenge","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000017","(text)","",2],["encode64","Base64","classes/Base64.html#M000001","(data)","Encode a String data:: [String] Binary result:: [String] Binary in Base64 ",2],["encode_response","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000019","(response)","",2],["failure?","SASL::Mechanism","classes/SASL/Mechanism.html#M000014","()","",2],["generate_nonce","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000020","()","",2],["h","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000021","(s)","Function from RFC2831 ",2],["hh","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000022","(s)","Function from RFC2831 ",2],["method_missing","SASL::Preferences","classes/SASL/Preferences.html#M000004","(sym, *args, &block)","",2],["new","SASL","classes/SASL.html#M000007","(mechanisms, preferences)","",2],["new","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000009","(*a)","",2],["new","SASL::Mechanism","classes/SASL/Mechanism.html#M000011","(mechanism, preferences)","",2],["new","SASL::Preferences","classes/SASL/Preferences.html#M000003","(config)","key in config hash authzid: Authorization identitiy ('username@domain' in XMPP) realm: Realm ('domain'",2],["new","SASL::UnknownMechanism","classes/SASL/UnknownMechanism.html#M000005","(mechanism)","",2],["new_mechanism","SASL","classes/SASL.html#M000008","(mechanism, preferences)","Create a SASL Mechanism for the named mechanism mechanism:: [String] mechanism name ",2],["next_nc","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000024","()","",2],["receive","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000012","(message_name, content)","",2],["receive","SASL::Mechanism","classes/SASL/Mechanism.html#M000016","(message_name, content)","",2],["response_value","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000023","(nonce, nc, cnonce, qop, realm, a2_prefix='AUTHENTICATE')","Calculate the value for the response field ",2],["start","SASL::Anonymous","classes/SASL/Anonymous.html#M000000","()","",2],["start","SASL::DigestMD5","classes/SASL/DigestMD5.html#M000010","()","",2],["start","SASL::Mechanism","classes/SASL/Mechanism.html#M000015","()","",2],["start","SASL::Plain","classes/SASL/Plain.html#M000018","()","",2],["success?","SASL::Mechanism","classes/SASL/Mechanism.html#M000013","()","",2],["to_s","SASL::UnknownMechanism","classes/SASL/UnknownMechanism.html#M000006","()","",2],["README.markdown","files/README_markdown.html","files/README_markdown.html","","Simple Authentication and Security Layer (RFC 4422) for Ruby ============================================================",3],["sasl.rb","files/lib/sasl_rb.html","files/lib/sasl_rb.html","","",3],["anonymous.rb","files/lib/sasl/anonymous_rb.html","files/lib/sasl/anonymous_rb.html","","",3],["base.rb","files/lib/sasl/base_rb.html","files/lib/sasl/base_rb.html","","RFC 4422: http://tools.ietf.org/html/rfc4422 ",3],["base64.rb","files/lib/sasl/base64_rb.html","files/lib/sasl/base64_rb.html","","=XMPP4R - XMPP Library for Ruby License:: Ruby's license (see the LICENSE file) or GNU GPL, at your option.",3],["digest_md5.rb","files/lib/sasl/digest_md5_rb.html","files/lib/sasl/digest_md5_rb.html","","",3],["plain.rb","files/lib/sasl/plain_rb.html","files/lib/sasl/plain_rb.html","","",3]],"searchIndex":["base64","sasl","anonymous","digestmd5","mechanism","plain","preferences","unknownmechanism","decode64()","decode_challenge()","encode64()","encode_response()","failure?()","generate_nonce()","h()","hh()","method_missing()","new()","new()","new()","new()","new()","new_mechanism()","next_nc()","receive()","receive()","response_value()","start()","start()","start()","start()","success?()","to_s()","readme.markdown","sasl.rb","anonymous.rb","base.rb","base64.rb","digest_md5.rb","plain.rb"],"longSearchIndex":["lib/sasl/base64.rb","lib/sasl/plain.rb","sasl","sasl","sasl","sasl","sasl","sasl","base64","sasl::digestmd5","base64","sasl::digestmd5","sasl::mechanism","sasl::digestmd5","sasl::digestmd5","sasl::digestmd5","sasl::preferences","sasl","sasl::digestmd5","sasl::mechanism","sasl::preferences","sasl::unknownmechanism","sasl","sasl::digestmd5","sasl::digestmd5","sasl::mechanism","sasl::digestmd5","sasl::anonymous","sasl::digestmd5","sasl::mechanism","sasl::plain","sasl::mechanism","sasl::unknownmechanism","files/readme_markdown.html","files/lib/sasl_rb.html","files/lib/sasl/anonymous_rb.html","files/lib/sasl/base_rb.html","files/lib/sasl/base64_rb.html","files/lib/sasl/digest_md5_rb.html","files/lib/sasl/plain_rb.html"]}}