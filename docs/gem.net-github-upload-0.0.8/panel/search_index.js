var search_data = {"index":{"longSearchIndex":["lib/net/github-upload.rb","net","net::github","net::github::upload","net::github::upload","net::github::upload","net::github::upload","net::github::upload","net::github::upload","net::github::upload","files/readme_rdoc.html","files/lib/net/github-upload_rb.html"],"info":[["Net","lib/net/github-upload.rb","classes/Net.html"," < ","",1],["GitHub","Net","classes/Net/GitHub.html"," < ","",1],["Upload","Net::GitHub","classes/Net/GitHub/Upload.html"," < Object","",1],["delete","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000004","(repos, id)","Delete an individual file (used by #replace when replacing existing files). ",2],["delete_all","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000003","(repos)","Delete all uploaded files. ",2],["extract_error_message","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000006","(stat)","",2],["list_files","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000005","(repos)","List all the files uploaded to a repository. ",2],["new","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000000","(params=nil)","",2],["replace","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000002","(info = {})","Upload a file and replace it if it already exists on the server. @see #upload ",2],["upload","Net::GitHub::Upload","classes/Net/GitHub/Upload.html#M000001","(info)","Upload a file to github. Will fail if the file already exists. To upload, either supply :data and :name",2],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Ruby Net::GitHub::Upload  * http://github.com/Constellation/ruby-net-github-upload * http://rubygems.org/gems/net-github-upload",3],["github-upload.rb","files/lib/net/github-upload_rb.html","files/lib/net/github-upload_rb.html","","",3]],"searchIndex":["net","github","upload","delete()","delete_all()","extract_error_message()","list_files()","new()","replace()","upload()","readme.rdoc","github-upload.rb"]}}