var search_data = {"index":{"info":[["ColorDebugMessages","lib/color_debug_messages.rb","classes/ColorDebugMessages.html"," < ","Include this module into your class to get access to the debug helper functions. ",1],["bold","ColorDebugMessages","classes/ColorDebugMessages.html#M000005","(string_to_bold)","returns a string with the ANSI *bold* flag set, for usage in the middle of debug statements. debug \"This",2],["color_debug_message_type","ColorDebugMessages","classes/ColorDebugMessages.html#M000006","(name, prefix_char, color)","Meta-generator for the actual debug message calls. At the core, these are all just a fancy wrapper around",2],["debug_flag_active?","ColorDebugMessages","classes/ColorDebugMessages.html#M000003","(name)","returns +true+ if the flag is true in either the local instance or the global hash. ",2],["debug_flags","ColorDebugMessages","classes/ColorDebugMessages.html#M000002","(new_flags=nil)","This is the same as ColorDebugMessages#debug_flags but on a per-instance level, if you need to locally",2],["debug_message_prefix","ColorDebugMessages","classes/ColorDebugMessages.html#M000004","()","returns the prefix to tag on debug messages for a class. This normally reflects the class name itself,",2],["global_debug_flags","ColorDebugMessages","classes/ColorDebugMessages.html#M000000","(new_flags=nil)","You can change the option flags globally by setting this to a hash of flags. For example, to only have",2],["global_flag_active?","ColorDebugMessages","classes/ColorDebugMessages.html#M000001","(name)","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2009 Brent Sanders  Permission is hereby granted, free of charge, to any person obtaining",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= NAME  Color Debug Messages - A way to add nicer output to your script.  = DESCRIPTION  I got tired",3],["color_debug_messages.rb","files/lib/color_debug_messages_rb.html","files/lib/color_debug_messages_rb.html","","",3]],"searchIndex":["colordebugmessages","bold()","color_debug_message_type()","debug_flag_active?()","debug_flags()","debug_message_prefix()","global_debug_flags()","global_flag_active?()","license","readme.rdoc","color_debug_messages.rb"],"longSearchIndex":["lib/color_debug_messages.rb","colordebugmessages","colordebugmessages","colordebugmessages","colordebugmessages","colordebugmessages","colordebugmessages","colordebugmessages","files/license.html","files/readme_rdoc.html","files/lib/color_debug_messages_rb.html"]}}