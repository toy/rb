var search_data = {"index":{"info":[["Rack","lib/rack/mock_session.rb","classes/Rack.html"," < ","",1],["Test","Rack","classes/Rack/Test.html"," < ","",1],["Error","Rack::Test","classes/Rack/Test/Error.html"," < StandardError","The common base class for exceptions raised by Rack::Test ",1],["Methods","Rack::Test","classes/Rack/Test/Methods.html"," < ","This module serves as the primary integration point for using Rack::Test in a testing environment. It",1],["Session","Rack::Test","classes/Rack/Test/Session.html"," < Object","This class represents a series of requests issued to a Rack app, sharing a single cookie jar Rack::Test::Session's",1],["UploadedFile","Rack::Test","classes/Rack/Test/UploadedFile.html"," < Object","Wraps a Tempfile with a content type. Including one or more UploadedFile's in the params causes Rack::Test",1],["authorize","Rack::Test::Session","classes/Rack/Test/Session.html#M000022","(username, password)","Alias for #basic_authorize",2],["basic_authorize","Rack::Test::Session","classes/Rack/Test/Session.html#M000021","(username, password)","Set the username and password for HTTP Basic authorization, to be included in subsequent requests in",2],["default_env","Rack::Test::Session","classes/Rack/Test/Session.html#M000030","()","",2],["delete","Rack::Test::Session","classes/Rack/Test/Session.html#M000016","(uri, params = {}, env = {}, &block)","Issue a DELETE request for the given URI. See #get Example: delete \"/\" ",2],["digest_auth_configured?","Rack::Test::Session","classes/Rack/Test/Session.html#M000029","()","",2],["digest_auth_header","Rack::Test::Session","classes/Rack/Test/Session.html#M000027","()","",2],["digest_authorize","Rack::Test::Session","classes/Rack/Test/Session.html#M000023","(username, password)","Set the username and password for HTTP Digest authorization, to be included in subsequent requests in",2],["encoding_aware_strings?","Rack::Test","classes/Rack/Test.html#M000033","()","",2],["env_for","Rack::Test::Session","classes/Rack/Test/Session.html#M000025","(path, env)","",2],["follow_redirect!","Rack::Test::Session","classes/Rack/Test/Session.html#M000024","()","Rack::Test will not follow any redirects automatically. This method will follow the redirect returned",2],["get","Rack::Test::Session","classes/Rack/Test/Session.html#M000013","(uri, params = {}, env = {}, &block)","Issue a GET request for the given URI with the given params and Rack environment. Stores the issues request",2],["head","Rack::Test::Session","classes/Rack/Test/Session.html#M000018","(uri, params = {}, env = {}, &block)","Issue a HEAD request for the given URI. See #get Example: head \"/\" ",2],["header","Rack::Test::Session","classes/Rack/Test/Session.html#M000020","(name, value)","Set a header to be included on all subsequent requests through the session. Use a value of nil to remove",2],["headers_for_env","Rack::Test::Session","classes/Rack/Test/Session.html#M000031","()","",2],["local_path","Rack::Test::UploadedFile","classes/Rack/Test/UploadedFile.html#M000009","()","Alias for #path",2],["new","Rack::Test::Session","classes/Rack/Test/Session.html#M000012","(mock_session)","Creates a Rack::Test::Session for a given Rack app or Rack::MockSession. Note: Generally, you won't need",2],["new","Rack::Test::UploadedFile","classes/Rack/Test/UploadedFile.html#M000007","(path, content_type = \"text/plain\", binary = false)","",2],["options","Rack::Test::Session","classes/Rack/Test/Session.html#M000017","(uri, params = {}, env = {}, &block)","Issue an OPTIONS request for the given URI. See #get Example: options \"/\" ",2],["params_to_string","Rack::Test::Session","classes/Rack/Test/Session.html#M000032","(params)","",2],["path","Rack::Test::UploadedFile","classes/Rack/Test/UploadedFile.html#M000008","()","",2],["post","Rack::Test::Session","classes/Rack/Test/Session.html#M000014","(uri, params = {}, env = {}, &block)","Issue a POST request for the given URI. See #get Example: post \"/signup\", \"name\" => \"Bryan\" ",2],["process_request","Rack::Test::Session","classes/Rack/Test/Session.html#M000026","(uri, env)","",2],["put","Rack::Test::Session","classes/Rack/Test/Session.html#M000015","(uri, params = {}, env = {}, &block)","Issue a PUT request for the given URI. See #get Example: put \"/\" ",2],["request","Rack::Test::Session","classes/Rack/Test/Session.html#M000019","(uri, env = {}, &block)","Issue a request to the Rack app for the given URI and optional Rack environment. Stores the issues request",2],["retry_with_digest_auth?","Rack::Test::Session","classes/Rack/Test/Session.html#M000028","(env)","",2],["History.txt","files/History_txt.html","files/History_txt.html","","== 0.6.1 / 2011-07-27  * Bug fixes    * Fix support for params with arrays in multipart forms (Joel Chippindale)",3],["MIT-LICENSE.txt","files/MIT-LICENSE_txt.html","files/MIT-LICENSE_txt.html","","Copyright (c) 2008-2009 Bryan Helmkamp, Engine Yard Inc.  Permission is hereby granted, free of charge,",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= Rack::Test  - Code: http://github.com/brynary/rack-test - Build: http://runcoderun.com/brynary/rack-test",3],["mock_session.rb","files/lib/rack/mock_session_rb.html","files/lib/rack/mock_session_rb.html","","",3],["test.rb","files/lib/rack/test_rb.html","files/lib/rack/test_rb.html","","",3],["cookie_jar.rb","files/lib/rack/test/cookie_jar_rb.html","files/lib/rack/test/cookie_jar_rb.html","","",3],["methods.rb","files/lib/rack/test/methods_rb.html","files/lib/rack/test/methods_rb.html","","",3],["mock_digest_request.rb","files/lib/rack/test/mock_digest_request_rb.html","files/lib/rack/test/mock_digest_request_rb.html","","",3],["uploaded_file.rb","files/lib/rack/test/uploaded_file_rb.html","files/lib/rack/test/uploaded_file_rb.html","","",3],["utils.rb","files/lib/rack/test/utils_rb.html","files/lib/rack/test/utils_rb.html","","",3]],"searchIndex":["rack","test","error","methods","session","uploadedfile","authorize()","basic_authorize()","default_env()","delete()","digest_auth_configured?()","digest_auth_header()","digest_authorize()","encoding_aware_strings?()","env_for()","follow_redirect!()","get()","head()","header()","headers_for_env()","local_path()","new()","new()","options()","params_to_string()","path()","post()","process_request()","put()","request()","retry_with_digest_auth?()","history.txt","mit-license.txt","readme.rdoc","mock_session.rb","test.rb","cookie_jar.rb","methods.rb","mock_digest_request.rb","uploaded_file.rb","utils.rb"],"longSearchIndex":["lib/rack/test.rb","rack","rack::test","rack::test","rack::test","rack::test","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::uploadedfile","rack::test::session","rack::test::uploadedfile","rack::test::session","rack::test::session","rack::test::uploadedfile","rack::test::session","rack::test::session","rack::test::session","rack::test::session","rack::test::session","files/history_txt.html","files/mit-license_txt.html","files/readme_rdoc.html","files/lib/rack/mock_session_rb.html","files/lib/rack/test_rb.html","files/lib/rack/test/cookie_jar_rb.html","files/lib/rack/test/methods_rb.html","files/lib/rack/test/mock_digest_request_rb.html","files/lib/rack/test/uploaded_file_rb.html","files/lib/rack/test/utils_rb.html"]}}