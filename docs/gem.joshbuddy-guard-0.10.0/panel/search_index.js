var search_data = {"index":{"info":[["FChange","lib/vendor/windows/lib/rb-fchange/event.rb","classes/FChange.html"," < ","The root module of the library, which is laid out as so: * {Notifier} -- The main class, where the notifications",1],["Event","FChange","classes/FChange/Event.html"," < Object","An event caused by a change on the filesystem. Each {Watcher} can fire many events, which are passed",1],["Native","FChange","classes/FChange/Native.html"," < ","This module contains the low-level foreign-function. It's an implementation detail, and not meant for",1],["Flags","FChange::Native","classes/FChange/Native/Flags.html"," < ","A module containing all the flags to be passed to {Notifier#watch}. @see http://msdn.microsoft.com/en-us/library/aa364417(v=VS.85).aspx",1],["Notifier","FChange","classes/FChange/Notifier.html"," < Object","Notifier wraps a single instance of FChange. It's possible to have more than one instance, but usually",1],["Watcher","FChange","classes/FChange/Watcher.html"," < Object","Watchers monitor a single path for changes, specified by {FChange::Notifier#watch event flags}. A watcher",1],["FSEvent","lib/vendor/darwin/lib/rb-fsevent/fsevent.rb","classes/FSEvent.html"," < Object","",1],["Guard","lib/guard/cli.rb","classes/Guard.html"," < ","Guard is the main module for all Guard related modules and classes. Also other Guard implementation should",1],["CLI","Guard","classes/Guard/CLI.html"," < Thor","Facade for the Guard command line interface managed by [Thor](https://github.com/wycats/thor). This is",1],["Darwin","Guard","classes/Guard/Darwin.html"," < Listener","Listener implementation for Mac OS X `FSEvents`. ",1],["Dsl","Guard","classes/Guard/Dsl.html"," < Object","The DSL class provides the methods that are used in each `Guardfile` to describe the behaviour of Guard.",1],["DslDescriber","Guard","classes/Guard/DslDescriber.html"," < Dsl","The DslDescriber overrides methods to create an internal structure of the Guardfile that is used in some",1],["Group","Guard","classes/Guard/Group.html"," < Object","A group of Guards. There are two reasons why you want to group your guards: - You can start only certain",1],["Guard","Guard","classes/Guard/Guard.html"," < Object","Base class that every Guard implementation must inherit from. Guard will trigger the `start`, `stop`,",1],["Hook","Guard","classes/Guard/Hook.html"," < ","Guard has a hook mechanism that allows you to insert callbacks for individual Guards. By default, each",1],["InstanceMethods","Guard::Hook","classes/Guard/Hook/InstanceMethods.html"," < ","Instance methods that gets included in the base class. ",1],["Interactor","Guard","classes/Guard/Interactor.html"," < Object","The interactor reads user input and triggers specific action upon them unless its locked. Currently the",1],["Linux","Guard","classes/Guard/Linux.html"," < Listener","Listener implementation for Linux `inotify`. ",1],["Listener","Guard","classes/Guard/Listener.html"," < Object","The Listener is the base class for all listener implementations. @abstract ",1],["Notifier","Guard","classes/Guard/Notifier.html"," < ","The notifier class handles cross-platform system notifications that supports: - Growl on Mac OS X - Libnotify",1],["Polling","Guard","classes/Guard/Polling.html"," < Listener","Polling listener that works cross-platform and has no dependencies. This is the listener that uses the",1],["UI","Guard","classes/Guard/UI.html"," < ","The UI class helps to format messages for the user. Everything that is logged through this class is considered",1],["Watcher","Guard","classes/Guard/Watcher.html"," < Object","The watcher defines a RegExp that will be matched against file system modifications. When a watcher matches",1],["Windows","Guard","classes/Guard/Windows.html"," < Listener","Listener implementation for Windows `fchange`. ",1],["INotify","lib/vendor/linux/lib/rb-inotify/event.rb","classes/INotify.html"," < ","The root module of the library, which is laid out as so: * {Notifier} -- The main class, where the notifications",1],["Event","INotify","classes/INotify/Event.html"," < Object","An event caused by a change on the filesystem. Each {Watcher} can fire many events, which are passed",1],["Native","INotify","classes/INotify/Native.html"," < ","This module contains the low-level foreign-function interface code for dealing with the inotify C APIs.",1],["Event","INotify::Native","classes/INotify/Native/Event.html"," < FFI::Struct","The C struct describing an inotify event. @private ",1],["Flags","INotify::Native","classes/INotify/Native/Flags.html"," < ","A module containing all the inotify flags to be passed to {Notifier#watch}. @private ",1],["Notifier","INotify","classes/INotify/Notifier.html"," < Object","Notifier wraps a single instance of inotify. It's possible to have more than one instance, but usually",1],["Watcher","INotify","classes/INotify/Watcher.html"," < Object","Watchers monitor a single path for changes, specified by {INotify::Notifier#watch event flags}. A watcher",1],["Object","lib/vendor/darwin/spec/rb-fsevent/fsevent_spec.rb","classes/Object.html"," < Object","",1],["absolute_name","INotify::Event","classes/INotify/Event.html#M000170","()","The absolute path of the file that the event occurred on. This is actually only as absolute as the path",2],["action_from_entry","Guard::Interactor","classes/Guard/Interactor.html#M000051","(entry)","Extract action from entry if an existing action is present @param [String] Interactor entry gets from",2],["add_callback","Guard::Hook","classes/Guard/Hook.html#M000035","(listener, guard_class, events)","Add a callback. @param [Block] listener the listener to notify @param [Guard::Guard] guard_class the",2],["add_group","Guard","classes/Guard.html#M000153","(name, options = {})","Add a Guard group. @param [String] name the group name @option options [Boolean] halt_on_fail if a task",2],["add_guard","Guard","classes/Guard.html#M000152","(name, watchers = [], callbacks = [], options = {})","Add a Guard to use. @param [String] name the Guard name @param [Array<Watcher>] watchers the list of",2],["add_watcher","FChange::Notifier","classes/FChange/Notifier.html#M000196","(watcher)","Adds a new {Watcher} to the queue. ",2],["all_files","Guard::Listener","classes/Guard/Listener.html#M000070","()","Get all files that are in the watched directory. @return [Array<String>] the list of files ",2],["call_action","Guard::Watcher","classes/Guard/Watcher.html#M000133","(matches)","Executes a watcher action. @param [String, MatchData] the matched path or the match from the Regex @return",2],["callback","Guard::Dsl","classes/Guard/Dsl.html#M000029","(*args, &listener)","Define a callback to execute arbitrary code before or after any of the `start`, `stop`, `reload`, `run_all`",2],["callback!","FChange::Event","classes/FChange/Event.html#M000192","()","Calls the callback of the watcher that fired this event, passing in the event itself. @private ",2],["callback!","FChange::Watcher","classes/FChange/Watcher.html#M000203","(event)","Calls this Watcher's callback with the given {Event}. @private @param event [Event] ",2],["callback!","INotify::Event","classes/INotify/Event.html#M000175","()","Calls the callback of the watcher that fired this event, passing in the event itself. @private ",2],["callback!","INotify::Watcher","classes/INotify/Watcher.html#M000181","(event)","Calls this Watcher's callback with the given {Event}. @private @param event [Event] ",2],["callbacks","Guard::Hook","classes/Guard/Hook.html#M000034","()","Get all callbacks. ",2],["changed_paths","Guard","classes/Guard.html#M000148","(paths)","Detects the paths that have changed. Deleted paths are prefixed by an exclamation point. @see Guard::Listener#modified_files",2],["clear","Guard::UI","classes/Guard/UI.html#M000124","()","Clear the output. ",2],["clear_changed_files","Guard::Listener","classes/Guard/Listener.html#M000059","()","Clear the list of changed files. ",2],["close","FChange::Notifier","classes/FChange/Notifier.html#M000202","()","",2],["close","FChange::Watcher","classes/FChange/Watcher.html#M000204","()","Disables this Watcher, so that it doesn't fire any more events. @raise [SystemCallError] if the watch",2],["close","INotify::Notifier","classes/INotify/Notifier.html#M000188","()","Close the notifier. @raise [SystemCallError] if closing the underlying file descriptor fails. ",2],["close","INotify::Watcher","classes/INotify/Watcher.html#M000182","()","Disables this Watcher, so that it doesn't fire any more events. @raise [SystemCallError] if the watch",2],["color","Guard::UI","classes/Guard/UI.html#M000127","(text, *color_options)","Colorizes a text message. See the constant in the UI class for possible color_options parameters. You",2],["color_enabled?","Guard::UI","classes/Guard/UI.html#M000126","()","Checks if color output can be enabled. @return [Boolean] whether color is enabled or not ",2],["consume","INotify::Event","classes/INotify/Event.html#M000172","(data, notifier)","Constructs an {Event} object from a string of binary data, and destructively modifies the string to get",2],["debug","Guard::UI","classes/Guard/UI.html#M000122","(message, options = { })","Show a debug message that is prefixed with DEBUG and a timestamp. @param [String] message the message",2],["debug_command_execution","Guard","classes/Guard.html#M000157","()","Adds a command logger in debug mode. This wraps common command execution functions and logs the executed",2],["deleted_paths","Guard","classes/Guard.html#M000149","(paths)","Detects the paths that have been deleted. Deleted paths are prefixed by an exclamation point. @see Guard::Listener#modified_files",2],["deprecation","Guard::UI","classes/Guard/UI.html#M000118","(message, options = { })","Show a red deprecation message that is prefixed with DEPRECATION. @param [String] message the message",2],["enabled?","Guard::Notifier","classes/Guard/Notifier.html#M000107","()","Test if the notifications are enabled and available. @return [Boolean] whether the notifications are",2],["error","Guard::UI","classes/Guard/UI.html#M000117","(message, options = { })","Show a red error message that is prefixed with ERROR. @param [String] message the message to show @option",2],["evaluate_guardfile","Guard::Dsl","classes/Guard/Dsl.html#M000007","(options = {})","Evaluate the DSL methods in the `Guardfile`. @option options [Array<Symbol,String>] groups the groups",2],["evaluate_guardfile","Guard::DslDescriber","classes/Guard/DslDescriber.html#M000005","(options = {})","Evaluate the DSL methods in the `Guardfile`. @option options [Array<Symbol,String>] groups the groups",2],["exclude_ignored_paths","Guard::Listener","classes/Guard/Listener.html#M000074","(dirs, ignore_paths = self.ignore_paths)","Removes the ignored paths from the directory list. @param [Array<String>] dirs the directory to listen",2],["extract_scopes_and_action","Guard::Interactor","classes/Guard/Interactor.html#M000048","(entry)","Extract guard or group scope and action from Interactor entry @example `spork reload` will only reload",2],["fetch_guardfile_contents","Guard::Dsl","classes/Guard/Dsl.html#M000015","()","Get the content to evaluate and stores it into the options as `:guardfile_contents`. ",2],["file_content_modified?","Guard::Listener","classes/Guard/Listener.html#M000077","(path, sha1_checksum)","Tests if the file content has been modified by comparing the SHA1 checksum. @param [String] path the",2],["file_modified?","Guard::Listener","classes/Guard/Listener.html#M000076","(path, last_event)","Test if the file content has changed. Depending on the filesystem, mtime/ctime is probably only precise",2],["file_timestamp","Guard::Listener","classes/Guard/Listener.html#M000083","(path)","Gets a files modified timestamp @path [String] path the file path @return [Int] file modified timestamp",2],["flags","INotify::Event","classes/INotify/Event.html#M000171","()","Returns the flags that describe this event. This is generally similar to the input to {Notifier#watch},",2],["from_mask","FChange::Native::Flags","classes/FChange/Native/Flags.html#M000194","(mask)","Converts a bitmask from the C API into a list of flags. @param mask [Fixnum] @return [Array<Symbol>]",2],["from_mask","INotify::Native::Flags","classes/INotify/Native/Flags.html#M000177","(mask)","Converts a bitmask from the C API into a list of flags. @param mask [Fixnum] @return [Array<Symbol>]",2],["get_guard_class","Guard","classes/Guard.html#M000154","(name)","Tries to load the Guard main class. @param [String] name the name of the Guard @return [Class, nil] the",2],["group","Guard::Dsl","classes/Guard/Dsl.html#M000025","(name, options = {})","Declares a group of guards to be run with `guard start --group group_name`. @example Declare two groups",2],["group","Guard::DslDescriber","classes/Guard/DslDescriber.html#M000012","(name)","Declares a group of guards. @param [String] name the group's name called from the CLI @yield a block",2],["groups","Guard","classes/Guard.html#M000137","(filter = nil)","Smart accessor for retrieving a specific group or several groups at once. @param [NilClass] filter returns",2],["guard","Guard::Dsl","classes/Guard/Dsl.html#M000027","(name, options = {})","Declare a guard to be used when running `guard start`. The name parameter is usually the name of the",2],["guard","Guard::DslDescriber","classes/Guard/DslDescriber.html#M000016","(name, options = { })","Declares a Guard. @param [String] name the Guard name @param [Hash] options the options accepted by the",2],["guard_gem_names","Guard","classes/Guard.html#M000156","()","Returns a list of guard Gem names installed locally. @return [Array<String>] a list of guard gem names",2],["guard_symbol","Guard","classes/Guard.html#M000151","(guard)","Get the symbol we have to catch when running a supervised task. If we are within a Guard group that has",2],["guardfile_contents","Guard::Dsl","classes/Guard/Dsl.html#M000017","()","Get the content of the `Guardfile`. @return [String] the Guardfile content ",2],["guardfile_contents_usable?","Guard::Dsl","classes/Guard/Dsl.html#M000020","()","Tests if the current `Guardfile` content is usable. @return [Boolean] if the Guardfile is usable ",2],["guardfile_contents_with_user_config","Guard::Dsl","classes/Guard/Dsl.html#M000018","()","Get the content of the `Guardfile` and the global user configuration file. @see #user_config_path @return",2],["guardfile_default_path","Guard::Dsl","classes/Guard/Dsl.html#M000021","()","Gets the default path of the `Guardfile`. This returns the `Guardfile` from the current directory when",2],["guardfile_include?","Guard::Dsl","classes/Guard/Dsl.html#M000013","(guard_name)","Test if the current `Guardfile` contains a specific Guard. @param [String] guard_name the name of the",2],["guardfile_path","Guard::Dsl","classes/Guard/Dsl.html#M000019","()","Get the file path to the project `Guardfile`. @return [String] the path to the Guardfile ",2],["guardfile_structure","Guard::DslDescriber","classes/Guard/DslDescriber.html#M000011","()","Get the Guardfile structure. @return [Array<Hash>] the structure ",2],["guards","Guard","classes/Guard.html#M000136","(filter = nil)","Smart accessor for retrieving a specific guard or several guards at once. @param [String, Symbol] filter",2],["has_callback?","Guard::Hook","classes/Guard/Hook.html#M000037","(listener, guard_class, event)","Checks if a callback has been registered. @param [Block] listener the listener to notify @param [Guard::Guard]",2],["home_guardfile_path","Guard::Dsl","classes/Guard/Dsl.html#M000023","()","The path to the `.Guardfile` that is located at the users home directory. @param [String] the path to",2],["hook","Guard::Hook::InstanceMethods","classes/Guard/Hook/InstanceMethods.html#M000032","(event, *args)","When event is a Symbol, {#hook} will generate a hook name by concatenating the method name from where",2],["ignore_paths","Guard::Dsl","classes/Guard/Dsl.html#M000030","(*paths)","Ignore certain paths globally. @example Ignore some paths ignore_paths \".git\", \".svn\" @param [Array]",2],["image_level","Guard::Notifier","classes/Guard/Notifier.html#M000112","(image)","The notification level type for the given image. @param [Symbol] image the image @return [Symbol] the",2],["image_path","Guard::Notifier","classes/Guard/Notifier.html#M000111","(image)","Get the image path for an image symbol. Known symbols are: - failed - pending - success @param [Symbol]",2],["included","Guard::Hook","classes/Guard/Hook.html#M000031","(base)","The Hook module gets included. @param [Class] base the class that includes the module ",2],["info","Guard::UI","classes/Guard/UI.html#M000115","(message, options = { })","Show an info message. @param [String] message the message to show @option options [Boolean] reset whether",2],["init","Guard::CLI","classes/Guard/CLI.html#M000003","(guard_name = nil)","Appends the Guard template to the `Guardfile`, or creates an initial `Guardfile` when no Guard name is",2],["init","Guard::Guard","classes/Guard/Guard.html#M000036","(name)","Initialize the Guard. This will copy the Guardfile template inside the Guard gem. The template Guardfile",2],["initialize_template","Guard","classes/Guard.html#M000134","(guard_name = nil)","Creates the initial Guardfile template or add a Guard implementation Guardfile template to an existing",2],["instance_eval_guardfile","Guard::Dsl","classes/Guard/Dsl.html#M000010","(contents)","Evaluate the content of the `Guardfile`. @param [String] contents the content to evaluate. ",2],["linux?","Guard::Listener","classes/Guard/Listener.html#M000086","()","Test if the OS is Linux. @return [Boolean] Whether the OS is Linux ",2],["list","Guard::CLI","classes/Guard/CLI.html#M000001","()","List the Guards that are available for use in your system and marks those that are currently used in",2],["list","Guard::DslDescriber","classes/Guard/DslDescriber.html#M000006","(options)","List the Guards that are available for use in your system and marks those that are currently used in",2],["local_guardfile_path","Guard::Dsl","classes/Guard/Dsl.html#M000022","()","The path to the `Guardfile` that is located at the directory, where Guard has been started from. @param",2],["locate_guard","Guard","classes/Guard.html#M000155","(name)","Locate a path to a Guard gem. @param [String] name the name of the Guard without the prefix `guard-`",2],["mac?","Guard::Listener","classes/Guard/Listener.html#M000085","()","Test if the OS is Mac OS X. @return [Boolean] Whether the OS is Mac OS X ",2],["match_file?","Guard::Watcher","classes/Guard/Watcher.html#M000131","(file)","Test the watchers pattern against a file. @param [String] file the file to test @return [Boolean] whether",2],["match_files","Guard::Watcher","classes/Guard/Watcher.html#M000129","(guard, files)","Finds the files that matches a Guard. @param [Guard::Guard] guard the guard which watchers are used @param",2],["match_files?","Guard::Watcher","classes/Guard/Watcher.html#M000130","(guards, files)","Test if a file would be matched by any of the Guards watchers. @param [Array<Guard::Guard>] guards the",2],["match_guardfile?","Guard::Watcher","classes/Guard/Watcher.html#M000132","(files)","Test if any of the files is the Guardfile. @param [Array<String>] the files to test @return [Boolean]",2],["modified_files","Guard::Listener","classes/Guard/Listener.html#M000062","(dirs, options = {})","Get the modified files. If the `:watch_all_modifications` option is true, then moved and deleted files",2],["new","FChange::Event","classes/FChange/Event.html#M000191","(watcher)","Creates an event from a string of binary data. Differs from {Event.consume} in that it doesn't modify",2],["new","FChange::Notifier","classes/FChange/Notifier.html#M000195","()","Creates a new {Notifier}. @return [Notifier]  ",2],["new","FChange::Watcher","classes/FChange/Watcher.html#M000206","(notifier, path, recursive, *flags, &callback)","Creates a new {Watcher}. @private @see Notifier#watch ",2],["new","Guard::Darwin","classes/Guard/Darwin.html#M000063","(*)","Initialize the Listener. ",2],["new","Guard::Group","classes/Guard/Group.html#M000026","(name, options = {})","Initialize a Group. @param [String] name the name of the group @param [Hash] options the group options",2],["new","Guard::Guard","classes/Guard/Guard.html#M000033","(watchers = [], options = {})","Initialize a Guard. @param [Array<Guard::Watcher>] watchers the Guard file watchers @param [Hash] options",2],["new","Guard::Linux","classes/Guard/Linux.html#M000080","(*)","Initialize the Listener. ",2],["new","Guard::Listener","classes/Guard/Listener.html#M000053","(directory = Dir.pwd, options = {})","Initialize the listener. @param [String] directory the root directory to listen to @option options [Boolean]",2],["new","Guard::Polling","classes/Guard/Polling.html#M000093","(*)","Initialize the Listener. ",2],["new","Guard::Watcher","classes/Guard/Watcher.html#M000128","(pattern, action = nil)","Initialize a file watcher. @param [String, Regexp] pattern the pattern to be watched by the guard @param",2],["new","Guard::Windows","classes/Guard/Windows.html#M000098","(*)","Initialize the Listener. ",2],["new","INotify::Event","classes/INotify/Event.html#M000173","(data, notifier)","Creates an event from a string of binary data. Differs from {Event.consume} in that it doesn't modify",2],["new","INotify::Notifier","classes/INotify/Notifier.html#M000179","()","Creates a new {Notifier}. @return [Notifier] @raise [SystemCallError] if inotify failed to initialize",2],["new","INotify::Watcher","classes/INotify/Watcher.html#M000183","(notifier, path, *flags, &callback)","Creates a new {Watcher}. @private @see Notifier#watch ",2],["normalize_path","FChange::Watcher","classes/FChange/Watcher.html#M000205","(path)","see http://msdn.microsoft.com/en-us/library/aa365247(v=vs.85).aspx ",2],["notify","Guard::Hook","classes/Guard/Hook.html#M000038","(guard_class, event, *args)","Notify a callback. @param [Guard::Guard] guard_class the Guard class to add the callback @param [Symbol]",2],["notify","Guard::Notifier","classes/Guard/Notifier.html#M000106","(message, options = { })","Show a message with the system notification. @see .image_path @param [String] the message to show @option",2],["notify_linux","Guard::Notifier","classes/Guard/Notifier.html#M000109","(title, message, image, options = { })","Send a message to libnotify. @param [String] title the notification title @param [String] message the",2],["notify_mac","Guard::Notifier","classes/Guard/Notifier.html#M000108","(title, message, image, options = { })","Send a message to Growl either with the `growl` gem or the `growl_notify` gem. @param [String] title",2],["notify_windows","Guard::Notifier","classes/Guard/Notifier.html#M000110","(title, message, image, options = { })","Send a message to notifu. @param [String] title the notification title @param [String] message the message",2],["on_change","Guard::Listener","classes/Guard/Listener.html#M000060","(&callback)","Store a listener callback. @param [Block] callback the callback to store ",2],["options_string","FSEvent","classes/FSEvent.html#M000162","()","",2],["parse_options","FSEvent","classes/FSEvent.html#M000166","(options={})","",2],["pause","Guard","classes/Guard.html#M000143","()","Pause Guard listening to file changes. ",2],["pause","Guard::Listener","classes/Guard/Listener.html#M000057","()","Pause the listener to ignore change events. ",2],["paused?","Guard::Listener","classes/Guard/Listener.html#M000050","()","",2],["pipe","FSEvent","classes/FSEvent.html#M000161","()","",2],["pipe","FSEvent","classes/FSEvent.html#M000165","()","",2],["potentially_modified_files","Guard::Listener","classes/Guard/Listener.html#M000075","(dirs, options = {})","Gets a list of files that are in the modified directories. @param [Array<String>] dirs the list of directories",2],["process","FChange::Notifier","classes/FChange/Notifier.html#M000200","()","Blocks until there are one or more filesystem events that this notifier has watchers registered for.",2],["process","INotify::Notifier","classes/INotify/Notifier.html#M000187","()","Blocks until there are one or more filesystem events that this notifier has watchers registered for.",2],["read_events","FChange::Notifier","classes/FChange/Notifier.html#M000201","()","Blocks until there are one or more filesystem events that this notifier has watchers registered for.",2],["read_events","INotify::Notifier","classes/INotify/Notifier.html#M000189","()","Blocks until there are one or more filesystem events that this notifier has watchers registered for.",2],["read_guardfile","Guard::Dsl","classes/Guard/Dsl.html#M000014","(guardfile_path)","Read the current `Guardfile` content. @param [String] the path to the Guardfile ",2],["readpartial","INotify::Notifier","classes/INotify/Notifier.html#M000190","(size)","Same as IO#readpartial, or as close as we need. ",2],["reevaluate_guardfile","Guard::Dsl","classes/Guard/Dsl.html#M000009","()","Re-evaluate the `Guardfile` to update the current Guard configuration. ",2],["relativize_paths","Guard::Listener","classes/Guard/Listener.html#M000071","(paths)","Scopes all given paths to the current directory. @param [Array<String>] paths the paths to change @return",2],["relativize_paths?","Guard::Listener","classes/Guard/Listener.html#M000072","()","Use paths relative to the current directory. @return [Boolean] whether to use relative or absolute paths",2],["reload","Guard","classes/Guard.html#M000141","(scopes)","Reload all Guards currently enabled. @param [Hash] An hash with a guard or a group scope ",2],["reload","Guard::Guard","classes/Guard/Guard.html#M000041","()","Called when `reload|r|z + enter` is pressed. This method should be mainly used for \"reload\" (really!)",2],["require_growl","Guard::Notifier","classes/Guard/Notifier.html#M000113","()","Try to safely load growl and turns notifications off on load failure. The Guard notifier knows three",2],["require_libnotify","Guard::Notifier","classes/Guard/Notifier.html#M000120","()","Try to safely load libnotify and turns notifications off on load failure. ",2],["require_rbnotifu","Guard::Notifier","classes/Guard/Notifier.html#M000121","()","Try to safely load rb-notifu and turns notifications off on load failure. ",2],["reset_callbacks!","Guard::Hook","classes/Guard/Hook.html#M000042","()","Reset all callbacks. ",2],["reset_color","Guard::UI","classes/Guard/UI.html#M000125","(text)","Reset a color sequence. @deprecated @param [String] text the text ",2],["reset_groups","Guard","classes/Guard.html#M000138","()","Initialize the groups array with the `:default` group. @see Guard.groups ",2],["reset_line","Guard::UI","classes/Guard/UI.html#M000123","()","Reset a line. ",2],["run","FChange::Notifier","classes/FChange/Notifier.html#M000198","()","Starts the notifier watching for filesystem events. Blocks until \\{#stop} is called. @see #process ",2],["run","FSEvent","classes/FSEvent.html#M000159","()","",2],["run","Guard","classes/Guard.html#M000145","()","Run a block where the listener and the interactor is blocked. @yield the block to run ",2],["run","Guard::Listener","classes/Guard/Listener.html#M000058","()","Unpause the listener to listen again to change events. ",2],["run","INotify::Notifier","classes/INotify/Notifier.html#M000185","()","Starts the notifier watching for filesystem events. Blocks until \\{#stop} is called. @see #process ",2],["run","Object","classes/Object.html#M000207","()","it \"should work with none-ANSI path\" do dir = @fixture_path.join(\"../тест\") Dir.mkdir dir unless Dir.exists?",2],["run","Object","classes/Object.html#M000167","()","",2],["run_all","Guard","classes/Guard.html#M000142","(scopes)","Trigger `run_all` on all Guards currently enabled. @param [Hash] An hash with a guard or a group scope",2],["run_all","Guard::Guard","classes/Guard/Guard.html#M000043","()","Called when just `enter` is pressed This method should be principally used for long action like running",2],["run_on_change","Guard","classes/Guard.html#M000144","(files)","Trigger `run_on_change` on all Guards currently enabled. ",2],["run_on_change","Guard::Guard","classes/Guard/Guard.html#M000044","(paths)","Called on file(s) modifications that the Guard watches. @param [Array<String>] paths the changes files",2],["run_on_change_task","Guard","classes/Guard.html#M000147","(files, guard)","Run the `:run_on_change` task. When the option `:watch_all_modifications` is set, the task is split to",2],["run_on_deletion","Guard::Guard","classes/Guard/Guard.html#M000045","(paths)","Called on file(s) deletions that the Guard watches. @param [Array<String>] paths the deleted files or",2],["run_on_guards","Guard","classes/Guard.html#M000146","(scopes = {})","Loop through all groups and run the given task (as block) for each Guard. Stop the task run for the all",2],["run_supervised_task","Guard","classes/Guard.html#M000150","(guard, task, *args)","Run a Guard task, but remove the Guard when his work leads to a system failure. When the Group has `:halt_on_fail`",2],["scopes_from_entry","Guard::Interactor","classes/Guard/Interactor.html#M000049","(entry)","Extract guard or group scope from entry if valid @param [String] Interactor entry gets from $stdin @return",2],["select_and_init","Guard::Listener","classes/Guard/Listener.html#M000052","(watchdir = Dir.pwd, options = nil)","Select the appropriate listener implementation for the current OS and initializes it. @param [Array]",2],["set_file_timestamp_hash","Guard::Listener","classes/Guard/Listener.html#M000078","(path, file_timestamp)","Set save a files current timestamp @param [String] path the file path @param [Int] file_timestamp the",2],["set_sha1_checksums_hash","Guard::Listener","classes/Guard/Listener.html#M000079","(path, sha1_checksum)","Set the current checksum of a file. @param [String] path the file path @param [String] sha1_checksum",2],["setup","Guard","classes/Guard.html#M000135","(options = {})","Initialize the Guard singleton. @option options [Boolean] clear if auto clear the UI should be done @option",2],["sha1_checksum","Guard::Listener","classes/Guard/Listener.html#M000084","(path)","Calculates the SHA1 checksum of a file. @param [String] path the path to the file @return [String] the",2],["shellescape","FSEvent","classes/FSEvent.html#M000164","(str)","for Ruby 1.8.6  support ",2],["shellescaped_paths","FSEvent","classes/FSEvent.html#M000163","()","",2],["show","Guard::CLI","classes/Guard/CLI.html#M000004","()","Shows all Guards and their options that are defined in the `Guardfile`. @see Guard::DslDescriber.show",2],["show","Guard::DslDescriber","classes/Guard/DslDescriber.html#M000008","(options)","Shows all Guards and their options that are defined in the `Guardfile`. @example guard show output (global):",2],["size","INotify::Event","classes/INotify/Event.html#M000176","()","Returns the size of this event object in bytes, including the \\{#name} string. @return [Fixnum] ",2],["start","Guard","classes/Guard.html#M000139","(options = {})","Start Guard by evaluate the `Guardfile`, initialize the declared Guards and start the available file",2],["start","Guard::CLI","classes/Guard/CLI.html#M000000","()","Start Guard by initialize the defined Guards and watch the file system. This is the default task, so",2],["start","Guard::Darwin","classes/Guard/Darwin.html#M000064","()","Start the listener. ",2],["start","Guard::Guard","classes/Guard/Guard.html#M000039","()","Call once when Guard starts. Please override initialize method to init stuff. @raise [:task_has_failed]",2],["start","Guard::Interactor","classes/Guard/Interactor.html#M000046","()","Start the interactor in its own thread. ",2],["start","Guard::Linux","classes/Guard/Linux.html#M000081","()","Start the listener. ",2],["start","Guard::Listener","classes/Guard/Listener.html#M000055","()","Start watching the root directory. ",2],["start","Guard::Polling","classes/Guard/Polling.html#M000094","()","Start the listener. ",2],["start","Guard::Windows","classes/Guard/Windows.html#M000099","()","Start the listener. ",2],["start_reactor","Guard::Listener","classes/Guard/Listener.html#M000054","()","Start the listener thread. ",2],["stop","FChange::Notifier","classes/FChange/Notifier.html#M000199","()","Stop watching for filesystem events. That is, if we're in a \\{#run} loop, exit out as soon as we finish",2],["stop","FSEvent","classes/FSEvent.html#M000160","()","",2],["stop","Guard","classes/Guard.html#M000140","()","Stop Guard listening to file changes ",2],["stop","Guard::Darwin","classes/Guard/Darwin.html#M000065","()","Stop the listener. ",2],["stop","Guard::Guard","classes/Guard/Guard.html#M000040","()","Called when `stop|quit|exit|s|q|e + enter` is pressed (when Guard quits). @raise [:task_has_failed] when",2],["stop","Guard::Interactor","classes/Guard/Interactor.html#M000047","()","Kill interactor thread if not current ",2],["stop","Guard::Linux","classes/Guard/Linux.html#M000082","()","Stop the listener. ",2],["stop","Guard::Listener","classes/Guard/Listener.html#M000056","()","Stop listening for events. ",2],["stop","Guard::Polling","classes/Guard/Polling.html#M000095","()","Stop the listener. ",2],["stop","Guard::Windows","classes/Guard/Windows.html#M000100","()","Stop the listener. ",2],["stop","INotify::Notifier","classes/INotify/Notifier.html#M000186","()","Stop watching for filesystem events. That is, if we're in a \\{#run} loop, exit out as soon as we finish",2],["stop","Object","classes/Object.html#M000168","()","",2],["stop","Object","classes/Object.html#M000208","()","",2],["supports_ruby_io?","INotify::Notifier","classes/INotify/Notifier.html#M000178","()","@return [Boolean] Whether or not this Ruby implementation supports wrapping the native file descriptor",2],["timestamp_files","Guard::Listener","classes/Guard/Listener.html#M000073","()","Populate initial timestamp file hash to watch for deleted or moved files. ",2],["to_io","INotify::Notifier","classes/INotify/Notifier.html#M000180","()","Returns a Ruby IO object wrapping the underlying file descriptor. Since this file descriptor is fully",2],["to_mask","FChange::Native::Flags","classes/FChange/Native/Flags.html#M000193","(flags)","Converts a list of flags to the bitmask that the C API expects. @param flags [Array<Symbol>] @return",2],["to_mask","INotify::Native::Flags","classes/INotify/Native/Flags.html#M000174","(flags)","Converts a list of flags to the bitmask that the C API expects. @param flags [Array<Symbol>] @return",2],["try_growl","Guard::Notifier","classes/Guard/Notifier.html#M000119","()","Try to load the `growl_notify` gem. @return [Symbol, nil] A symbol with the name of the loaded library",2],["try_growl_notify","Guard::Notifier","classes/Guard/Notifier.html#M000114","()","Try to load the `growl_notify` gem. @return [Symbol, nil] A symbol with the name of the loaded library",2],["try_ruby_gntp","Guard::Notifier","classes/Guard/Notifier.html#M000116","()","Try to load the `ruby_gntp` gem and register the available notification channels. @return [Symbol, nil]",2],["turn_off","Guard::Notifier","classes/Guard/Notifier.html#M000104","()","Turn notifications off. ",2],["turn_on","Guard::Notifier","classes/Guard/Notifier.html#M000105","()","Turn notifications on. This tries to load the platform specific notification library. @return [Boolean]",2],["update_last_event","Guard::Listener","classes/Guard/Listener.html#M000061","()","Updates the timestamp of the last event. ",2],["usable?","Guard::Darwin","classes/Guard/Darwin.html#M000066","(no_vendor = false)","Check if the listener is usable on the current OS. @return [Boolean] whether usable or not ",2],["usable?","Guard::Linux","classes/Guard/Linux.html#M000087","(no_vendor = false)","Check if the listener is usable on the current OS. @return [Boolean] whether usable or not ",2],["usable?","Guard::Windows","classes/Guard/Windows.html#M000101","(no_vendor = false)","Check if the listener is usable on the current OS. @return [Boolean] whether usable or not ",2],["user_config_path","Guard::Dsl","classes/Guard/Dsl.html#M000024","()","The path to the user configuration `.guard.rb` that is located at the users home directory. @param [String]",2],["version","Guard::CLI","classes/Guard/CLI.html#M000002","()","Shows the current version of Guard. @see Guard::VERSION ",2],["watch","FChange::Notifier","classes/FChange/Notifier.html#M000197","(path, *flags, &callback)","Watches a file or directory for changes, calling the callback when there are. This is only activated",2],["watch","FSEvent","classes/FSEvent.html#M000158","(watch_paths, options=nil, &block)","",2],["watch","Guard::Darwin","classes/Guard/Darwin.html#M000069","(directory)","Watch the given directory for file changes. @param [String] directory the directory to watch ",2],["watch","Guard::Dsl","classes/Guard/Dsl.html#M000028","(pattern, &action)","Define a pattern to be watched in order to run actions on file modification. @example Declare watchers",2],["watch","Guard::Linux","classes/Guard/Linux.html#M000089","(directory)","Watch the given directory for file changes. @param [String] directory the directory to watch ",2],["watch","Guard::Listener","classes/Guard/Listener.html#M000067","(directory)","Register a directory to watch. Must be implemented by the subclasses. @param [String] directory the directory",2],["watch","Guard::Polling","classes/Guard/Polling.html#M000096","(directory)","Watch the given directory for file changes. @param [String] directory the directory to watch ",2],["watch","Guard::Windows","classes/Guard/Windows.html#M000102","(directory)","Watch the given directory for file changes. @param [String] directory the directory to watch ",2],["watch","INotify::Notifier","classes/INotify/Notifier.html#M000184","(path, *flags, &callback)","Watches a file or directory for changes, calling the callback when there are. This is only activated",2],["watch_change","Guard::Linux","classes/Guard/Linux.html#M000092","()","Watch for file system changes. ",2],["watch_change","Guard::Polling","classes/Guard/Polling.html#M000097","()","Watch for file system changes. ",2],["watch_change?","Guard::Linux","classes/Guard/Linux.html#M000091","()","Test if inotify is watching for changes. @return [Boolean] whether inotify is active or not ",2],["watcher","INotify::Event","classes/INotify/Event.html#M000169","()","Returns the {Watcher} that fired this event. @return [Watcher] ",2],["windows?","Guard::Listener","classes/Guard/Listener.html#M000090","()","Test if the OS is Windows. @return [Boolean] Whether the OS is Windows ",2],["worker","Guard::Darwin","classes/Guard/Darwin.html#M000068","()","Get the listener worker. ",2],["worker","Guard::Linux","classes/Guard/Linux.html#M000088","()","Get the listener worker. ",2],["worker","Guard::Windows","classes/Guard/Windows.html#M000103","()","Get the listener worker. ",2],["CHANGELOG.md","files/CHANGELOG_md.html","files/CHANGELOG_md.html","","## 0.8.8 - October 21, 2011  ### Bug fix  - Fix `guard init` when a guard name is given. ([@rymai][])",3],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2011 Thibaud Guillaume-Gentil  Permission is hereby granted, free of charge, to any person",3],["README.md","files/README_md.html","files/README_md.html","","Guard [![Build Status](https://secure.travis-ci.org/guard/guard.png?branch=master)](http://travis-ci.org/guard/guard)",3],["guard.rb","files/lib/guard_rb.html","files/lib/guard_rb.html","","",3],["cli.rb","files/lib/guard/cli_rb.html","files/lib/guard/cli_rb.html","","",3],["dsl.rb","files/lib/guard/dsl_rb.html","files/lib/guard/dsl_rb.html","","",3],["dsl_describer.rb","files/lib/guard/dsl_describer_rb.html","files/lib/guard/dsl_describer_rb.html","","",3],["group.rb","files/lib/guard/group_rb.html","files/lib/guard/group_rb.html","","",3],["guard.rb","files/lib/guard/guard_rb.html","files/lib/guard/guard_rb.html","","",3],["hook.rb","files/lib/guard/hook_rb.html","files/lib/guard/hook_rb.html","","",3],["interactor.rb","files/lib/guard/interactor_rb.html","files/lib/guard/interactor_rb.html","","",3],["listener.rb","files/lib/guard/listener_rb.html","files/lib/guard/listener_rb.html","","",3],["darwin.rb","files/lib/guard/listeners/darwin_rb.html","files/lib/guard/listeners/darwin_rb.html","","",3],["linux.rb","files/lib/guard/listeners/linux_rb.html","files/lib/guard/listeners/linux_rb.html","","",3],["polling.rb","files/lib/guard/listeners/polling_rb.html","files/lib/guard/listeners/polling_rb.html","","",3],["windows.rb","files/lib/guard/listeners/windows_rb.html","files/lib/guard/listeners/windows_rb.html","","",3],["notifier.rb","files/lib/guard/notifier_rb.html","files/lib/guard/notifier_rb.html","","",3],["Guardfile","files/lib/guard/templates/Guardfile.html","files/lib/guard/templates/Guardfile.html","","A sample Guardfile More info at https://github.com/guard/guard#readme ",3],["ui.rb","files/lib/guard/ui_rb.html","files/lib/guard/ui_rb.html","","",3],["version.rb","files/lib/guard/version_rb.html","files/lib/guard/version_rb.html","","",3],["watcher.rb","files/lib/guard/watcher_rb.html","files/lib/guard/watcher_rb.html","","",3],["Gemfile","files/lib/vendor/darwin/Gemfile.html","files/lib/vendor/darwin/Gemfile.html","","source \"http://rubygems.org\"  gemspec  gem \"rake\"  ",3],["Guardfile","files/lib/vendor/darwin/Guardfile.html","files/lib/vendor/darwin/Guardfile.html","","# A sample Guardfile # More info at http://github.com/guard/guard#readme  guard 'rspec', :version =>",3],["LICENSE","files/lib/vendor/darwin/LICENSE.html","files/lib/vendor/darwin/LICENSE.html","","Copyright (c) 2011 Thibaud Guillaume-Gentil  Permission is hereby granted, free of charge, to any person",3],["README.rdoc","files/lib/vendor/darwin/README_rdoc.html","files/lib/vendor/darwin/README_rdoc.html","","= rb-fsevent  Very simple & usable Mac OSX FSEvents API  - RubyCocoa not required! - Signals are working",3],["Rakefile","files/lib/vendor/darwin/Rakefile.html","files/lib/vendor/darwin/Rakefile.html","","require 'bundler' Bundler::GemHelper.install_tasks  require 'rspec/core/rake_task' RSpec::Core::RakeTask.new(:spec)",3],["extconf.rb","files/lib/vendor/darwin/ext/extconf_rb.html","files/lib/vendor/darwin/ext/extconf_rb.html","","Workaround to make Rubygems believe it builds a native gem ",3],["fsevent_watch.c","files/lib/vendor/darwin/ext/fsevent/fsevent_watch_c.html","files/lib/vendor/darwin/ext/fsevent/fsevent_watch_c.html","","",3],["rb-fsevent.rb","files/lib/vendor/darwin/lib/rb-fsevent_rb.html","files/lib/vendor/darwin/lib/rb-fsevent_rb.html","","",3],["fsevent.rb","files/lib/vendor/darwin/lib/rb-fsevent/fsevent_rb.html","files/lib/vendor/darwin/lib/rb-fsevent/fsevent_rb.html","","",3],["version.rb","files/lib/vendor/darwin/lib/rb-fsevent/version_rb.html","files/lib/vendor/darwin/lib/rb-fsevent/version_rb.html","","",3],["rb-fsevent.gemspec","files/lib/vendor/darwin/rb-fsevent_gemspec.html","files/lib/vendor/darwin/rb-fsevent_gemspec.html","","# -*- encoding: utf-8 -*- $:.push File.expand_path(\"../lib\", __FILE__) require \"rb-fsevent/version\" ",3],["file1.txt","files/lib/vendor/darwin/spec/fixtures/folder1/file1_txt.html","files/lib/vendor/darwin/spec/fixtures/folder1/file1_txt.html","","",3],["file2.txt","files/lib/vendor/darwin/spec/fixtures/folder1/folder2/file2_txt.html","files/lib/vendor/darwin/spec/fixtures/folder1/folder2/file2_txt.html","","",3],["fsevent_spec.rb","files/lib/vendor/darwin/spec/rb-fsevent/fsevent_spec_rb.html","files/lib/vendor/darwin/spec/rb-fsevent/fsevent_spec_rb.html","","",3],["spec_helper.rb","files/lib/vendor/darwin/spec/spec_helper_rb.html","files/lib/vendor/darwin/spec/spec_helper_rb.html","","",3],["MIT-LICENSE","files/lib/vendor/linux/MIT-LICENSE.html","files/lib/vendor/linux/MIT-LICENSE.html","","Copyright (c) 2009 Nathan Weizenbaum  Permission is hereby granted, free of charge, to any person obtaining",3],["README.md","files/lib/vendor/linux/README_md.html","files/lib/vendor/linux/README_md.html","","# rb-inotify  This is a simple wrapper over the [inotify](http://en.wikipedia.org/wiki/Inotify) Linux",3],["Rakefile","files/lib/vendor/linux/Rakefile.html","files/lib/vendor/linux/Rakefile.html","","require 'rubygems' require 'rake'  begin   require 'jeweler'   Jeweler::Tasks.new do |gem|     gem.name",3],["VERSION","files/lib/vendor/linux/VERSION.html","files/lib/vendor/linux/VERSION.html","","0.8.8",3],["rb-inotify.rb","files/lib/vendor/linux/lib/rb-inotify_rb.html","files/lib/vendor/linux/lib/rb-inotify_rb.html","","",3],["event.rb","files/lib/vendor/linux/lib/rb-inotify/event_rb.html","files/lib/vendor/linux/lib/rb-inotify/event_rb.html","","",3],["native.rb","files/lib/vendor/linux/lib/rb-inotify/native_rb.html","files/lib/vendor/linux/lib/rb-inotify/native_rb.html","","",3],["flags.rb","files/lib/vendor/linux/lib/rb-inotify/native/flags_rb.html","files/lib/vendor/linux/lib/rb-inotify/native/flags_rb.html","","",3],["notifier.rb","files/lib/vendor/linux/lib/rb-inotify/notifier_rb.html","files/lib/vendor/linux/lib/rb-inotify/notifier_rb.html","","",3],["watcher.rb","files/lib/vendor/linux/lib/rb-inotify/watcher_rb.html","files/lib/vendor/linux/lib/rb-inotify/watcher_rb.html","","",3],["rb-inotify.gemspec","files/lib/vendor/linux/rb-inotify_gemspec.html","files/lib/vendor/linux/rb-inotify_gemspec.html","","# Generated by jeweler # DO NOT EDIT THIS FILE DIRECTLY # Instead, edit Jeweler::Tasks in Rakefile, and",3],["Gemfile","files/lib/vendor/windows/Gemfile.html","files/lib/vendor/windows/Gemfile.html","","source \"http://rubygems.org\"  # Specify your gem's dependencies in rb-fchange.gemspec gemspec ",3],["README.md","files/lib/vendor/windows/README_md.html","files/lib/vendor/windows/README_md.html","","# rb-fchange  Code is working. But there is still a lot of work. This is a simple wrapper over the Windows",3],["Rakefile","files/lib/vendor/windows/Rakefile.html","files/lib/vendor/windows/Rakefile.html","","require 'bundler' Bundler::GemHelper.install_tasks  require 'rspec/core/rake_task' RSpec::Core::RakeTask.new(:spec)",3],["rb-fchange.rb","files/lib/vendor/windows/lib/rb-fchange_rb.html","files/lib/vendor/windows/lib/rb-fchange_rb.html","","",3],["event.rb","files/lib/vendor/windows/lib/rb-fchange/event_rb.html","files/lib/vendor/windows/lib/rb-fchange/event_rb.html","","",3],["native.rb","files/lib/vendor/windows/lib/rb-fchange/native_rb.html","files/lib/vendor/windows/lib/rb-fchange/native_rb.html","","",3],["flags.rb","files/lib/vendor/windows/lib/rb-fchange/native/flags_rb.html","files/lib/vendor/windows/lib/rb-fchange/native/flags_rb.html","","",3],["notifier.rb","files/lib/vendor/windows/lib/rb-fchange/notifier_rb.html","files/lib/vendor/windows/lib/rb-fchange/notifier_rb.html","","",3],["version.rb","files/lib/vendor/windows/lib/rb-fchange/version_rb.html","files/lib/vendor/windows/lib/rb-fchange/version_rb.html","","",3],["watcher.rb","files/lib/vendor/windows/lib/rb-fchange/watcher_rb.html","files/lib/vendor/windows/lib/rb-fchange/watcher_rb.html","","",3],["rb-fchange.gemspec","files/lib/vendor/windows/rb-fchange_gemspec.html","files/lib/vendor/windows/rb-fchange_gemspec.html","","# -*- encoding: utf-8 -*- $:.push File.expand_path(\"../lib\", __FILE__) require \"rb-fchange/version\" ",3],["file1.txt","files/lib/vendor/windows/spec/fixtures/folder1/file1_txt.html","files/lib/vendor/windows/spec/fixtures/folder1/file1_txt.html","","",3],["file2.txt","files/lib/vendor/windows/spec/fixtures/folder1/folder2/file2_txt.html","files/lib/vendor/windows/spec/fixtures/folder1/folder2/file2_txt.html","","",3],["fchange_spec.rb","files/lib/vendor/windows/spec/rb-fchange/fchange_spec_rb.html","files/lib/vendor/windows/spec/rb-fchange/fchange_spec_rb.html","","",3],["spec_helper.rb","files/lib/vendor/windows/spec/spec_helper_rb.html","files/lib/vendor/windows/spec/spec_helper_rb.html","","",3]],"searchIndex":["fchange","event","native","flags","notifier","watcher","fsevent","guard","cli","darwin","dsl","dsldescriber","group","guard","hook","instancemethods","interactor","linux","listener","notifier","polling","ui","watcher","windows","inotify","event","native","event","flags","notifier","watcher","object","absolute_name()","action_from_entry()","add_callback()","add_group()","add_guard()","add_watcher()","all_files()","call_action()","callback()","callback!()","callback!()","callback!()","callback!()","callbacks()","changed_paths()","clear()","clear_changed_files()","close()","close()","close()","close()","color()","color_enabled?()","consume()","debug()","debug_command_execution()","deleted_paths()","deprecation()","enabled?()","error()","evaluate_guardfile()","evaluate_guardfile()","exclude_ignored_paths()","extract_scopes_and_action()","fetch_guardfile_contents()","file_content_modified?()","file_modified?()","file_timestamp()","flags()","from_mask()","from_mask()","get_guard_class()","group()","group()","groups()","guard()","guard()","guard_gem_names()","guard_symbol()","guardfile_contents()","guardfile_contents_usable?()","guardfile_contents_with_user_config()","guardfile_default_path()","guardfile_include?()","guardfile_path()","guardfile_structure()","guards()","has_callback?()","home_guardfile_path()","hook()","ignore_paths()","image_level()","image_path()","included()","info()","init()","init()","initialize_template()","instance_eval_guardfile()","linux?()","list()","list()","local_guardfile_path()","locate_guard()","mac?()","match_file?()","match_files()","match_files?()","match_guardfile?()","modified_files()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","normalize_path()","notify()","notify()","notify_linux()","notify_mac()","notify_windows()","on_change()","options_string()","parse_options()","pause()","pause()","paused?()","pipe()","pipe()","potentially_modified_files()","process()","process()","read_events()","read_events()","read_guardfile()","readpartial()","reevaluate_guardfile()","relativize_paths()","relativize_paths?()","reload()","reload()","require_growl()","require_libnotify()","require_rbnotifu()","reset_callbacks!()","reset_color()","reset_groups()","reset_line()","run()","run()","run()","run()","run()","run()","run()","run_all()","run_all()","run_on_change()","run_on_change()","run_on_change_task()","run_on_deletion()","run_on_guards()","run_supervised_task()","scopes_from_entry()","select_and_init()","set_file_timestamp_hash()","set_sha1_checksums_hash()","setup()","sha1_checksum()","shellescape()","shellescaped_paths()","show()","show()","size()","start()","start()","start()","start()","start()","start()","start()","start()","start()","start_reactor()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","stop()","supports_ruby_io?()","timestamp_files()","to_io()","to_mask()","to_mask()","try_growl()","try_growl_notify()","try_ruby_gntp()","turn_off()","turn_on()","update_last_event()","usable?()","usable?()","usable?()","user_config_path()","version()","watch()","watch()","watch()","watch()","watch()","watch()","watch()","watch()","watch()","watch_change()","watch_change()","watch_change?()","watcher()","windows?()","worker()","worker()","worker()","changelog.md","license","readme.md","guard.rb","cli.rb","dsl.rb","dsl_describer.rb","group.rb","guard.rb","hook.rb","interactor.rb","listener.rb","darwin.rb","linux.rb","polling.rb","windows.rb","notifier.rb","guardfile","ui.rb","version.rb","watcher.rb","gemfile","guardfile","license","readme.rdoc","rakefile","extconf.rb","fsevent_watch.c","rb-fsevent.rb","fsevent.rb","version.rb","rb-fsevent.gemspec","file1.txt","file2.txt","fsevent_spec.rb","spec_helper.rb","mit-license","readme.md","rakefile","version","rb-inotify.rb","event.rb","native.rb","flags.rb","notifier.rb","watcher.rb","rb-inotify.gemspec","gemfile","readme.md","rakefile","rb-fchange.rb","event.rb","native.rb","flags.rb","notifier.rb","version.rb","watcher.rb","rb-fchange.gemspec","file1.txt","file2.txt","fchange_spec.rb","spec_helper.rb"],"longSearchIndex":["lib/vendor/windows/lib/rb-fchange.rb","fchange","fchange","fchange::native","fchange","fchange","lib/vendor/darwin/lib/rb-fsevent/version.rb","lib/guard.rb","guard","guard","guard","guard","guard","guard","guard","guard::hook","guard","guard","guard","guard","guard","guard","guard","guard","lib/vendor/linux/lib/rb-inotify.rb","inotify","inotify","inotify::native","inotify::native","inotify","inotify","lib/vendor/darwin/spec/rb-fsevent/fsevent_spec.rb","inotify::event","guard::interactor","guard::hook","guard","guard","fchange::notifier","guard::listener","guard::watcher","guard::dsl","fchange::event","fchange::watcher","inotify::event","inotify::watcher","guard::hook","guard","guard::ui","guard::listener","fchange::notifier","fchange::watcher","inotify::notifier","inotify::watcher","guard::ui","guard::ui","inotify::event","guard::ui","guard","guard","guard::ui","guard::notifier","guard::ui","guard::dsl","guard::dsldescriber","guard::listener","guard::interactor","guard::dsl","guard::listener","guard::listener","guard::listener","inotify::event","fchange::native::flags","inotify::native::flags","guard","guard::dsl","guard::dsldescriber","guard","guard::dsl","guard::dsldescriber","guard","guard","guard::dsl","guard::dsl","guard::dsl","guard::dsl","guard::dsl","guard::dsl","guard::dsldescriber","guard","guard::hook","guard::dsl","guard::hook::instancemethods","guard::dsl","guard::notifier","guard::notifier","guard::hook","guard::ui","guard::cli","guard::guard","guard","guard::dsl","guard::listener","guard::cli","guard::dsldescriber","guard::dsl","guard","guard::listener","guard::watcher","guard::watcher","guard::watcher","guard::watcher","guard::listener","fchange::event","fchange::notifier","fchange::watcher","guard::darwin","guard::group","guard::guard","guard::linux","guard::listener","guard::polling","guard::watcher","guard::windows","inotify::event","inotify::notifier","inotify::watcher","fchange::watcher","guard::hook","guard::notifier","guard::notifier","guard::notifier","guard::notifier","guard::listener","fsevent","fsevent","guard","guard::listener","guard::listener","fsevent","fsevent","guard::listener","fchange::notifier","inotify::notifier","fchange::notifier","inotify::notifier","guard::dsl","inotify::notifier","guard::dsl","guard::listener","guard::listener","guard","guard::guard","guard::notifier","guard::notifier","guard::notifier","guard::hook","guard::ui","guard","guard::ui","fchange::notifier","fsevent","guard","guard::listener","inotify::notifier","object","object","guard","guard::guard","guard","guard::guard","guard","guard::guard","guard","guard","guard::interactor","guard::listener","guard::listener","guard::listener","guard","guard::listener","fsevent","fsevent","guard::cli","guard::dsldescriber","inotify::event","guard","guard::cli","guard::darwin","guard::guard","guard::interactor","guard::linux","guard::listener","guard::polling","guard::windows","guard::listener","fchange::notifier","fsevent","guard","guard::darwin","guard::guard","guard::interactor","guard::linux","guard::listener","guard::polling","guard::windows","inotify::notifier","object","object","inotify::notifier","guard::listener","inotify::notifier","fchange::native::flags","inotify::native::flags","guard::notifier","guard::notifier","guard::notifier","guard::notifier","guard::notifier","guard::listener","guard::darwin","guard::linux","guard::windows","guard::dsl","guard::cli","fchange::notifier","fsevent","guard::darwin","guard::dsl","guard::linux","guard::listener","guard::polling","guard::windows","inotify::notifier","guard::linux","guard::polling","guard::linux","inotify::event","guard::listener","guard::darwin","guard::linux","guard::windows","files/changelog_md.html","files/license.html","files/readme_md.html","files/lib/guard_rb.html","files/lib/guard/cli_rb.html","files/lib/guard/dsl_rb.html","files/lib/guard/dsl_describer_rb.html","files/lib/guard/group_rb.html","files/lib/guard/guard_rb.html","files/lib/guard/hook_rb.html","files/lib/guard/interactor_rb.html","files/lib/guard/listener_rb.html","files/lib/guard/listeners/darwin_rb.html","files/lib/guard/listeners/linux_rb.html","files/lib/guard/listeners/polling_rb.html","files/lib/guard/listeners/windows_rb.html","files/lib/guard/notifier_rb.html","files/lib/guard/templates/guardfile.html","files/lib/guard/ui_rb.html","files/lib/guard/version_rb.html","files/lib/guard/watcher_rb.html","files/lib/vendor/darwin/gemfile.html","files/lib/vendor/darwin/guardfile.html","files/lib/vendor/darwin/license.html","files/lib/vendor/darwin/readme_rdoc.html","files/lib/vendor/darwin/rakefile.html","files/lib/vendor/darwin/ext/extconf_rb.html","files/lib/vendor/darwin/ext/fsevent/fsevent_watch_c.html","files/lib/vendor/darwin/lib/rb-fsevent_rb.html","files/lib/vendor/darwin/lib/rb-fsevent/fsevent_rb.html","files/lib/vendor/darwin/lib/rb-fsevent/version_rb.html","files/lib/vendor/darwin/rb-fsevent_gemspec.html","files/lib/vendor/darwin/spec/fixtures/folder1/file1_txt.html","files/lib/vendor/darwin/spec/fixtures/folder1/folder2/file2_txt.html","files/lib/vendor/darwin/spec/rb-fsevent/fsevent_spec_rb.html","files/lib/vendor/darwin/spec/spec_helper_rb.html","files/lib/vendor/linux/mit-license.html","files/lib/vendor/linux/readme_md.html","files/lib/vendor/linux/rakefile.html","files/lib/vendor/linux/version.html","files/lib/vendor/linux/lib/rb-inotify_rb.html","files/lib/vendor/linux/lib/rb-inotify/event_rb.html","files/lib/vendor/linux/lib/rb-inotify/native_rb.html","files/lib/vendor/linux/lib/rb-inotify/native/flags_rb.html","files/lib/vendor/linux/lib/rb-inotify/notifier_rb.html","files/lib/vendor/linux/lib/rb-inotify/watcher_rb.html","files/lib/vendor/linux/rb-inotify_gemspec.html","files/lib/vendor/windows/gemfile.html","files/lib/vendor/windows/readme_md.html","files/lib/vendor/windows/rakefile.html","files/lib/vendor/windows/lib/rb-fchange_rb.html","files/lib/vendor/windows/lib/rb-fchange/event_rb.html","files/lib/vendor/windows/lib/rb-fchange/native_rb.html","files/lib/vendor/windows/lib/rb-fchange/native/flags_rb.html","files/lib/vendor/windows/lib/rb-fchange/notifier_rb.html","files/lib/vendor/windows/lib/rb-fchange/version_rb.html","files/lib/vendor/windows/lib/rb-fchange/watcher_rb.html","files/lib/vendor/windows/rb-fchange_gemspec.html","files/lib/vendor/windows/spec/fixtures/folder1/file1_txt.html","files/lib/vendor/windows/spec/fixtures/folder1/folder2/file2_txt.html","files/lib/vendor/windows/spec/rb-fchange/fchange_spec_rb.html","files/lib/vendor/windows/spec/spec_helper_rb.html"]}}