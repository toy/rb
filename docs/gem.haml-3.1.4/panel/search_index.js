var search_data = {"index":{"info":[["ActionView","lib/haml/helpers/action_view_mods.rb","classes/ActionView.html"," < ","This module refers to the ActionView module that's part of Ruby on Rails. Haml can be used as an alternate",1],["Base","ActionView","classes/ActionView/Base.html"," < Object","",1],["Helpers","ActionView","classes/ActionView/Helpers.html"," < ","",1],["CacheHelper","ActionView::Helpers","classes/ActionView/Helpers/CacheHelper.html"," < ","",1],["CaptureHelper","ActionView::Helpers","classes/ActionView/Helpers/CaptureHelper.html"," < ","",1],["FormHelper","ActionView::Helpers","classes/ActionView/Helpers/FormHelper.html"," < ","",1],["FormTagHelper","ActionView::Helpers","classes/ActionView/Helpers/FormTagHelper.html"," < ","",1],["InstanceTag","ActionView::Helpers","classes/ActionView/Helpers/InstanceTag.html"," < Object","",1],["TagHelper","ActionView::Helpers","classes/ActionView/Helpers/TagHelper.html"," < ","",1],["TextHelper","ActionView::Helpers","classes/ActionView/Helpers/TextHelper.html"," < ","",1],["Haml","lib/haml/buffer.rb","classes/Haml.html"," < ","We keep options in its own self-contained file so that we can load it independently in Rails 3, where",1],["Buffer","Haml","classes/Haml/Buffer.html"," < Object","This class is used only internally. It holds the buffer of HTML that is eventually output as the resulting",1],["Compiler","Haml","classes/Haml/Compiler.html"," < ","",1],["Engine","Haml","classes/Haml/Engine.html"," < Object","This is the frontend for using Haml programmatically. It can be directly used by the user by creating",1],["Error","Haml","classes/Haml/Error.html"," < StandardError","An exception raised by Haml code. ",1],["Exec","Haml","classes/Haml/Exec.html"," < ","This module handles the various Haml executables (`haml` and `haml-convert`). ",1],["Generic","Haml::Exec","classes/Haml/Exec/Generic.html"," < Object","An abstract class that encapsulates the executable code for all three executables. ",1],["HTML2Haml","Haml::Exec","classes/Haml/Exec/HTML2Haml.html"," < Generic","The `html2haml` executable. ",1],["Haml","Haml::Exec","classes/Haml/Exec/Haml.html"," < Generic","The `haml` executable. ",1],["Filters","Haml","classes/Haml/Filters.html"," < ","The module containing the default Haml filters, as well as the base module, {Haml::Filters::Base}. @see",1],["Base","Haml::Filters","classes/Haml/Filters/Base.html"," < ","The base module for Haml filters. User-defined filters should be modules including this module. The name",1],["Cdata","Haml::Filters","classes/Haml/Filters/Cdata.html"," < ","Surrounds the filtered text with CDATA tags. ",1],["Css","Haml::Filters","classes/Haml/Filters/Css.html"," < ","Surrounds the filtered text with `<style>` and CDATA tags. Useful for including inline CSS. ",1],["ERB","Haml::Filters","classes/Haml/Filters/ERB.html"," < ","Parses the filtered text with ERB. Not available if the {file:HAML_REFERENCE.md#suppress_eval-option",1],["Escaped","Haml::Filters","classes/Haml/Filters/Escaped.html"," < ","Works the same as {Plain}, but HTML-escapes the text before placing it in the document. ",1],["Javascript","Haml::Filters","classes/Haml/Filters/Javascript.html"," < ","Surrounds the filtered text with `<script>` and CDATA tags. Useful for including inline Javascript. ",1],["Markdown","Haml::Filters","classes/Haml/Filters/Markdown.html"," < ","Parses the filtered text with [Markdown](http://daringfireball.net/projects/markdown). Only works if",1],["Maruku","Haml::Filters","classes/Haml/Filters/Maruku.html"," < ","Parses the filtered text with [Maruku](http://maruku.rubyforge.org), which has some non-standard extensions",1],["Plain","Haml::Filters","classes/Haml/Filters/Plain.html"," < ","Does not parse the filtered text. This is useful for large blocks of text without HTML tags, when you",1],["Preserve","Haml::Filters","classes/Haml/Filters/Preserve.html"," < ","Inserts the filtered text into the template with whitespace preserved. `preserve`d blocks of text aren't",1],["Ruby","Haml::Filters","classes/Haml/Filters/Ruby.html"," < ","Parses the filtered text with the normal Ruby interpreter. All output sent to `$stdout`, such as with",1],["Sass","Haml::Filters","classes/Haml/Filters/Sass.html"," < ","Parses the filtered text with {Sass} to produce CSS output. ",1],["Textile","Haml::Filters","classes/Haml/Filters/Textile.html"," < ","Parses the filtered text with [Textile](http://www.textism.com/tools/textile). Only works if [RedCloth](http://redcloth.org)",1],["HTML","Haml","classes/Haml/HTML.html"," < Object","Converts HTML documents into Haml templates. Depends on [Hpricot](http://github.com/whymirror/hpricot)",1],["ERB","Haml::HTML","classes/Haml/HTML/ERB.html"," < Erubis::Basic::Engine","A class for converting ERB code into a format that's easier for the {Haml::HTML} Hpricot-based parser",1],["Helpers","Haml","classes/Haml/Helpers.html"," < ","This module contains various helpful methods to make it easier to do various tasks. {Haml::Helpers} is",1],["ActionViewExtensions","Haml::Helpers","classes/Haml/Helpers/ActionViewExtensions.html"," < ","This module contains various useful helper methods that either tie into ActionView or the rest of the",1],["ErrorReturn","Haml::Helpers","classes/Haml/Helpers/ErrorReturn.html"," < Object","An object that raises an error when \\{#to\\_s} is called. It's used to raise an error when the return",1],["XssMods","Haml::Helpers","classes/Haml/Helpers/XssMods.html"," < ","This module overrides Haml helpers to work properly in the context of ActionView. Currently it's only",1],["Parser","Haml","classes/Haml/Parser.html"," < ","",1],["Line","Haml::Parser","classes/Haml/Parser/Line.html"," < Struct.new(:text, :unstripped, :full, :index, :compiler, :eod)","@private ",1],["ParseNode","Haml::Parser","classes/Haml/Parser/ParseNode.html"," < Struct.new(:type, :line, :value, :parent, :children)","@private ",1],["Plugin","Haml","classes/Haml/Plugin.html"," < Haml::Util.av_template_class(:Handlers)::ERB.superclass","In Rails 3.1+, template handlers don't inherit from anything. In <= 3.0, they do. To avoid messy logic",1],["Shared","Haml","classes/Haml/Shared.html"," < ","This module contains functionality that's shared between Haml and Sass. ",1],["SyntaxError","Haml","classes/Haml/SyntaxError.html"," < Haml::Error","SyntaxError is the type of exception raised when Haml encounters an ill-formatted document. It's not",1],["Template","Haml","classes/Haml/Template.html"," < ","The class that keeps track of the global options for Haml within Rails. ",1],["Util","Haml","classes/Haml/Util.html"," < ","A module containing various useful functions. ",1],["Version","Haml","classes/Haml/Version.html"," < ","Handles Haml version-reporting. Haml not only reports the standard three version numbers, but its Git",1],["Hpricot","lib/haml/html.rb","classes/Hpricot.html"," < ","Haml monkeypatches various Hpricot classes to add methods for conversion to Haml. @private ",1],["CData","Hpricot","classes/Hpricot/CData.html"," < Object","@see Hpricot @private ",1],["Comment","Hpricot","classes/Hpricot/Comment.html"," < Object","@see Hpricot @private ",1],["Doc","Hpricot","classes/Hpricot/Doc.html"," < Object","@see Hpricot @private ",1],["DocType","Hpricot","classes/Hpricot/DocType.html"," < Object","@see Hpricot @private ",1],["Elem","Hpricot","classes/Hpricot/Elem.html"," < Object","@see Hpricot @private ",1],["Node","Hpricot","classes/Hpricot/Node.html"," < ","@see Hpricot ",1],["XMLDecl","Hpricot","classes/Hpricot/XMLDecl.html"," < Object","@see Hpricot @private ",1],["Object","lib/haml/helpers.rb","classes/Object.html"," < Object","@private ",1],["StaticConditionalContext","lib/haml/util.rb","classes/StaticConditionalContext.html"," < Object","The context in which the ERB for \\{#def\\_static\\_method} will be run. ",1],["_enc","Haml::Util","classes/Haml/Util.html#M000339","(string, encoding)","@private ",2],["abstract","Haml::Util","classes/Haml/Util.html#M000319","(obj)","Throws a NotImplementedError for an abstract method. @param obj [Object] `self` @raise [NotImplementedError]",2],["action_view?","Haml::Helpers","classes/Haml/Helpers.html#M000168","()","@return [Boolean] Whether or not ActionView is loaded ",2],["active?","Haml::Buffer","classes/Haml/Buffer.html#M000005","()","Whether or not this buffer is currently being used to render a Haml template. Returns `false` if a subtemplate",2],["add_expr_debug","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000179","(src, code)","`html2haml` doesn't support debugging expressions. ",2],["add_expr_literal","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000177","(src, code)","Concatenates a Ruby expression that's printed to the document onto the source buffer. This uses the `<haml:silent>`",2],["add_postamble","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000172","(src)","The ERB-to-Hamlized-HTML conversion has no postamble. ",2],["add_preamble","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000171","(src)","The ERB-to-Hamlized-HTML conversion has no preamble. ",2],["add_stmt","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000176","(src, code)","Concatenates a silent Ruby statement onto the source buffer. This uses the `<haml:silent>` tag, and may",2],["add_text","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000173","(src, text)","Concatenates the text onto the source buffer. @param src [String] The source buffer @param text [String]",2],["adjust_tabs","Haml::Buffer","classes/Haml/Buffer.html#M000014","(tab_change)","Modifies the indentation of the document. @param tab_change [Fixnum] The number of tabs by which to increase",2],["ap_geq?","Haml::Util","classes/Haml/Util.html#M000327","(version)","Returns whether this environment is using ActionPack of a version greater than or equal to that specified.",2],["ap_geq_3?","Haml::Util","classes/Haml/Util.html#M000326","()","Returns whether this environment is using ActionPack version 3.0.0 or greater. @return [Boolean] ",2],["append_if_string=","Haml::Buffer","classes/Haml/Buffer.html#M000293","(value)","",2],["assert_html_safe!","Haml::Util","classes/Haml/Util.html#M000331","(text)","Assert that a given object (usually a String) is HTML safe according to Rails' XSS handling, if it's",2],["attr_hash","Hpricot::Node","classes/Hpricot/Node.html#M000203","()","",2],["attributes","Haml::Buffer","classes/Haml/Buffer.html#M000018","(class_id, obj_ref, *attributes_hashes)","",2],["av_template_class","Haml::Util","classes/Haml/Util.html#M000328","(name)","Returns an ActionView::Template* class. In pre-3.0 versions of Rails, most of these classes were of the",2],["balance","Haml::Parser","classes/Haml/Parser.html#M000286","(*args)","",2],["balance","Haml::Shared","classes/Haml/Shared.html#M000249","(scanner, start, finish, count = 0)","Moves a scanner through a balanced pair of characters. For example: Foo (Bar (Baz bang) bop) (Bang (bop",2],["block_closer?","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000184","(code)","Checks if a string of Ruby code closes a block. This is always `end` followed optionally by some method",2],["block_is_haml?","Haml::Helpers","classes/Haml/Helpers.html#M000211","(block)","Returns whether or not `block` is defined directly in a Haml template. @param block [Proc] A Ruby block",2],["block_keyword","Haml::Parser","classes/Haml/Parser.html#M000239","(text)","",2],["block_opened?","Haml::Parser","classes/Haml/Parser.html#M000288","()","",2],["block_opener?","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000183","(code)","Checks if a string of Ruby code opens a block. This could either be something like `foo do |a|` or a",2],["build_attributes","Haml::Compiler","classes/Haml/Compiler.html#M000043","(is_html, attr_wrapper, escape_attrs, attributes = {})","This is a class method so it can be accessed from Buffer. ",2],["cache_fragment","Haml::Plugin","classes/Haml/Plugin.html#M000285","(block, name = {}, options = nil)","",2],["call","Haml::Plugin","classes/Haml/Plugin.html#M000284","(template)","In Rails 3.1+, #call takes the place of #compile ",2],["caller_info","Haml::Util","classes/Haml/Util.html#M000314","(entry = caller[1])","Returns information about the caller of the previous method. @param entry [String] An entry in the `#caller`",2],["capture","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000111","(*args, &block)","Alias for #capture_with_haml",2],["capture","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000127","(*args, &block)","Alias for #capture_with_haml",2],["capture_erb_with_buffer","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000114","(buffer, *args, &block)","Alias for #capture_erb_with_buffer_with_haml",2],["capture_erb_with_buffer_with_haml","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000113","(buffer, *args, &block)","",2],["capture_erb_with_buffer_without_haml","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000115","(buffer, *args, &block)","Alias for #capture_erb_with_buffer",2],["capture_haml","Haml::Helpers","classes/Haml/Helpers.html#M000195","(*args, &block)","Captures the result of a block of Haml code, gets rid of the excess indentation, and returns it as a",2],["capture_haml_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000117","(*args, &block)","Output is always HTML safe ",2],["capture_with_haml","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000123","(*args, &block)","",2],["capture_with_haml","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000107","(*args, &block)","",2],["capture_without_haml","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000126","(*args, &block)","Alias for #capture",2],["capture_without_haml","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000112","(*args, &block)","Alias for #capture",2],["check_encoding","Haml::Util","classes/Haml/Util.html#M000337","(str)","Checks that the encoding of a string is valid in Ruby 1.9 and cleans up potential encoding gotchas like",2],["check_haml_encoding","Haml::Util","classes/Haml/Util.html#M000338","(str, &block)","Like {\\#check\\_encoding}, but also checks for a Ruby-style `-# coding:` comment at the beginning of the",2],["close","Haml::Parser","classes/Haml/Parser.html#M000255","()","",2],["close_filter","Haml::Parser","classes/Haml/Parser.html#M000256","(_)","",2],["close_haml_comment","Haml::Parser","classes/Haml/Parser.html#M000257","(_)","",2],["close_silent_script","Haml::Parser","classes/Haml/Parser.html#M000258","(node)","",2],["closes_flat?","Haml::Parser","classes/Haml/Parser.html#M000274","(line)","",2],["color","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000073","(color, str)","Wraps the given string in terminal escapes causing it to have the given color. If terminal esapes aren't",2],["comment","Haml::Parser","classes/Haml/Parser.html#M000252","(line)","Renders an XHTML comment. ",2],["compile","Haml::Compiler","classes/Haml/Compiler.html#M000051","(node)","",2],["compile","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000067","(compiler, text)","This should be overridden when a filter needs to have access to the Haml evaluation context. Rather than",2],["compile","Haml::Filters::ERB","classes/Haml/Filters/ERB.html#M000087","(compiler, text)","@see Base#compile ",2],["compile","Haml::Filters::Ruby","classes/Haml/Filters/Ruby.html#M000083","(compiler, text)","@see Base#compile ",2],["compile","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000169","(template)","Compiles an ERB template into a HTML document containing `haml:` tags. @param template [String] The ERB",2],["compile","Haml::Plugin","classes/Haml/Plugin.html#M000279","(template)","",2],["compile_comment","Haml::Compiler","classes/Haml/Compiler.html#M000026","()","",2],["compile_doctype","Haml::Compiler","classes/Haml/Compiler.html#M000027","()","",2],["compile_filter","Haml::Compiler","classes/Haml/Compiler.html#M000028","()","",2],["compile_haml","ActionView::Base","classes/ActionView/Base.html#M000270","(template, file_name, local_assigns)","",2],["compile_haml_comment","Haml::Compiler","classes/Haml/Compiler.html#M000020","()","",2],["compile_plain","Haml::Compiler","classes/Haml/Compiler.html#M000015","()","",2],["compile_root","Haml::Compiler","classes/Haml/Compiler.html#M000013","()","",2],["compile_script","Haml::Compiler","classes/Haml/Compiler.html#M000016","(&block)","",2],["compile_silent_script","Haml::Compiler","classes/Haml/Compiler.html#M000292","(&block)","Alias for #compile_silent_script_with_haml_block_deprecation",2],["compile_silent_script","Haml::Compiler","classes/Haml/Compiler.html#M000017","()","",2],["compile_silent_script_with_haml_block_deprecation","Haml::Compiler","classes/Haml/Compiler.html#M000287","(&block)","",2],["compile_silent_script_without_haml_block_deprecation","Haml::Compiler","classes/Haml/Compiler.html#M000291","()","Alias for #compile_silent_script",2],["compile_tag","Haml::Compiler","classes/Haml/Compiler.html#M000021","()","",2],["compile_template","ActionView::Base","classes/ActionView/Base.html#M000268","(extension, template, file_name, local_assigns)","Alias for #compile_template_with_haml",2],["compile_template","ActionView::Base","classes/ActionView/Base.html#M000294","(handler, template, file_name, local_assigns)","",2],["compile_template_with_haml","ActionView::Base","classes/ActionView/Base.html#M000266","(extension, template, file_name, local_assigns)","",2],["compile_template_without_haml","ActionView::Base","classes/ActionView/Base.html#M000269","(extension, template, file_name, local_assigns)","Alias for #compile_template",2],["concat","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000146","(string)","Alias for #concat_with_haml_xss",2],["concat","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000121","(string, binding = nil)","Alias for #concat_with_haml",2],["concat_merged_text","Haml::Compiler","classes/Haml/Compiler.html#M000032","(text)","Concatenate `text` to `@buffer` without tabulation. ",2],["concat_with_haml","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000116","(string, binding = nil)","",2],["concat_with_haml_xss","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000144","(string)","",2],["concat_without_haml","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000122","(string, binding = nil)","Alias for #concat",2],["concat_without_haml_xss","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000145","(string, binding = nil)","Alias for #concat",2],["contains_interpolation?","Haml::Parser","classes/Haml/Parser.html#M000282","(str)","",2],["content_tag","ActionView::Helpers::InstanceTag","classes/ActionView/Helpers/InstanceTag.html#M000136","(*args, &block)","",2],["content_tag","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000130","(name, *args, &block)","Alias for #content_tag_with_haml",2],["content_tag_with_haml","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000128","(name, *args, &block)","",2],["content_tag_without_haml","ActionView::Helpers::TagHelper","classes/ActionView/Helpers/TagHelper.html#M000131","(name, *args, &block)","Alias for #content_tag",2],["def_method","Haml::Engine","classes/Haml/Engine.html#M000052","(object, name, *local_names)","Defines a method on `object` with the given name that renders the template and returns the result as",2],["def_static_method","Object","classes/Object.html#M000351","(klass, name, args, *vars)","This is used for methods in {Haml::Buffer} that need to be very fast, and take a lot of boolean parameters",2],["defined","Haml::Filters","classes/Haml/Filters.html#M000058","()","@return [{String => Haml::Filters::Base}] a hash of filter names to classes ",2],["delegate_template_exists?","ActionView::Base","classes/ActionView/Base.html#M000264","(template_path)","Alias for #delegate_template_exists_with_haml",2],["delegate_template_exists_with_haml","ActionView::Base","classes/ActionView/Base.html#M000263","(template_path)","",2],["delegate_template_exists_without_haml","ActionView::Base","classes/ActionView/Base.html#M000265","(template_path)","Alias for #delegate_template_exists?",2],["div","Haml::Parser","classes/Haml/Parser.html#M000251","(line)","Renders a line that creates an XHTML tag and has an implicit div because of `.` or `#`. ",2],["doctype","Haml::Parser","classes/Haml/Parser.html#M000253","(line)","Renders an XHTML doctype or XML shebang. ",2],["dump","Haml::Util","classes/Haml/Util.html#M000317","(obj)","A wrapper for `Marshal.dump` that calls `#_before_dump` on the object before dumping it, `#_after_dump`",2],["dynamic_attribute?","Hpricot::Elem","classes/Hpricot/Elem.html#M000229","(name, options)","",2],["dynamic_attributes","Hpricot::Elem","classes/Hpricot/Elem.html#M000225","()","",2],["enum_cons","Object","classes/Object.html#M000342","(enum, n)","A version of `Enumerable#enum_cons` that works in Ruby 1.8 and 1.9. @param enum [Enumerable] The enumerable",2],["enum_slice","Object","classes/Object.html#M000343","(enum, n)","A version of `Enumerable#enum_slice` that works in Ruby 1.8 and 1.9. @param enum [Enumerable] The enumerable",2],["enum_with_index","Object","classes/Object.html#M000341","(enum)","A version of `Enumerable#enum_with_index` that works in Ruby 1.8 and 1.9. @param enum [Enumerable] The",2],["erb_to_interpolation","Hpricot::Node","classes/Hpricot/Node.html#M000200","(text, options)","",2],["escape_once","Haml::Helpers","classes/Haml/Helpers.html#M000208","(text)","Escapes HTML entities in `text`, but without escaping an ampersand that is already part of an escaped",2],["escape_once_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000124","(*args)","Output is always HTML safe ",2],["escaped_expr","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000170","(code)","`html2haml` doesn't support HTML-escaped expressions. ",2],["filter","Haml::Parser","classes/Haml/Parser.html#M000254","(name)","",2],["filter_and_join","Haml::Compiler","classes/Haml/Compiler.html#M000045","(value, separator)","",2],["filter_opened?","Haml::Parser","classes/Haml/Parser.html#M000289","()","Same semantics as block_opened?, except that block_opened? uses Line#tabs, which doesn't interact well",2],["find_and_preserve","Haml::Helpers","classes/Haml/Helpers.html#M000178","(input = nil, tags = haml_buffer.options[:preserve], &block)","Uses \\{#preserve} to convert any newlines inside whitespace-sensitive tags into the HTML entities for",2],["find_and_preserve_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000104","(*args, &block)","Output is always HTML safe ",2],["flat?","Haml::Parser","classes/Haml/Parser.html#M000290","()","",2],["flat_script","Haml::Parser","classes/Haml/Parser.html#M000244","(text, escape_html = nil)","",2],["flatten","Haml::Helpers","classes/Haml/Helpers.html#M000186","(input = nil, &block)","Alias for #preserve",2],["flatten","Object","classes/Object.html#M000345","(arr, n)","Flattens the first `n` nested arrays in a cross-version manner. @param arr [Array] The array to flatten",2],["flush_merged_text","Haml::Compiler","classes/Haml/Compiler.html#M000034","()","",2],["form_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000161","(object_name, *args, &proc)","Alias for #form_for_with_haml",2],["form_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000152","(object_name, *args, &proc)","Alias for #form_for_with_haml",2],["form_for","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000142","(*args, &block)","Alias for #form_for_with_haml_xss",2],["form_for_with_haml","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000150","(object_name, *args, &proc)","",2],["form_for_with_haml","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000159","(object_name, *args, &proc)","",2],["form_for_with_haml_xss","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000140","(*args, &block)","",2],["form_for_without_haml","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000151","(*args, &block)","Alias for #form_for",2],["form_for_without_haml","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000160","(*args, &block)","Alias for #form_for",2],["form_for_without_haml_xss","ActionView::Helpers::FormHelper","classes/ActionView/Helpers/FormHelper.html#M000143","(*args, &block)","Alias for #form_for",2],["form_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000158","(url_for_options = {}, options = {}, *parameters_for_url, &proc)","Alias for #form_tag_with_haml",2],["form_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000138","(*args, &block)","Alias for #form_tag_with_haml_xss",2],["form_tag","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000149","(url_for_options = {}, options = {}, *parameters_for_url, &proc)","Alias for #form_tag_with_haml",2],["form_tag_with_haml","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000141","(url_for_options = {}, options = {}, *parameters_for_url, &proc)","",2],["form_tag_with_haml","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000156","(url_for_options = {}, options = {}, *parameters_for_url, &proc)","",2],["form_tag_with_haml_xss","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000137","(*args, &block)","",2],["form_tag_without_haml","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000148","(*args, &block)","Alias for #form_tag",2],["form_tag_without_haml","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000157","(*args, &block)","Alias for #form_tag",2],["form_tag_without_haml_xss","ActionView::Helpers::FormTagHelper","classes/ActionView/Helpers/FormTagHelper.html#M000139","(*args, &block)","Alias for #form_tag",2],["fragment_for","ActionView::Helpers::CacheHelper","classes/ActionView/Helpers/CacheHelper.html#M000154","(*args, &block)","Alias for #fragment_for_with_haml",2],["fragment_for_with_haml","ActionView::Helpers::CacheHelper","classes/ActionView/Helpers/CacheHelper.html#M000153","(*args, &block)","This is a workaround for a Rails 3 bug that's present at least through beta 3. Their fragment_for assumes",2],["fragment_for_without_haml","ActionView::Helpers::CacheHelper","classes/ActionView/Helpers/CacheHelper.html#M000155","(*args, &block)","Alias for #fragment_for",2],["generate_content_class_names","Haml::Helpers::ActionViewExtensions","classes/Haml/Helpers/ActionViewExtensions.html#M000095","()","Alias for #page_class",2],["get_line","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000063","(exception)","Finds the line of the source template on which an exception was raised. @param exception [Exception]",2],["h","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000180","(text)","HTML-escaped some text (in practice, always Ruby code). A utility method. @param text [String] The text",2],["haml_attributes","Hpricot::Elem","classes/Hpricot/Elem.html#M000233","(options)","Returns a string representation of an attributes hash that's prettier than that produced by Hash#inspect",2],["haml_bind_proc","Haml::Helpers","classes/Haml/Helpers.html#M000220","(&proc)","Gives a proc the same local `_hamlout` and `_erbout` variables that the current template has. @param",2],["haml_buffer","ActionView::Helpers::InstanceTag","classes/ActionView/Helpers/InstanceTag.html#M000134","()","",2],["haml_buffer","Haml::Helpers","classes/Haml/Helpers.html#M000219","()","The current {Haml::Buffer} object. @return [Haml::Buffer] ",2],["haml_comment","Haml::Parser","classes/Haml/Parser.html#M000246","(text)","",2],["haml_concat","Haml::Helpers","classes/Haml/Helpers.html#M000196","(text = \"\")","Outputs text directly to the Haml buffer, with the proper indentation. @param text [#to_s] The text to",2],["haml_concat_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000118","(text = \"\")","Input is escaped ",2],["haml_css_attr?","Hpricot::Elem","classes/Hpricot/Elem.html#M000232","(attr)","",2],["haml_indent","Haml::Helpers","classes/Haml/Helpers.html#M000198","()","@return [String] The indentation string for the current line ",2],["haml_indent_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000119","()","Output is always HTML safe ",2],["haml_tag","Haml::Helpers","classes/Haml/Helpers.html#M000199","(name, *rest, &block)","Creates an HTML tag with the given name and optionally text and attributes. Can take a block that will",2],["haml_tag_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000120","(name, *rest, &block)","Input is escaped, haml_concat'ed output is always HTML safe ",2],["haml_warn","Haml::Util","classes/Haml/Util.html#M000322","(msg)","The same as `Kernel#warn`, but is silenced by \\{#silence\\_haml\\_warnings}. @param msg [String] ",2],["haml_xss_html_escape","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000125","(text)","Escapes the HTML in the text if and only if Rails XSS protection is enabled *and* the `:escape_html`",2],["handle_interpolation","Haml::Shared","classes/Haml/Shared.html#M000248","(str)","Scans through a string looking for the interoplation-opening `#{` and, when it's found, yields the scanner",2],["handle_load_error","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000075","(err)","",2],["handle_multiline","Haml::Parser","classes/Haml/Parser.html#M000276","(line)","",2],["handle_ruby_multiline","Haml::Parser","classes/Haml/Parser.html#M000280","(text)","",2],["handles_encoding?","Haml::Plugin","classes/Haml/Plugin.html#M000278","()","",2],["has?","Object","classes/Object.html#M000340","(attr, klass, method)","Checks to see if a class has a given method. For example: Haml::Util.has?(:public_instance_method, String,",2],["html4?","Haml::Buffer","classes/Haml/Buffer.html#M000002","()","@return [Boolean] Whether or not the format is HTML4 ",2],["html4?","Haml::Engine","classes/Haml/Engine.html#M000037","()","@return [Boolean] Whether or not the format is HTML4. ",2],["html5?","Haml::Buffer","classes/Haml/Buffer.html#M000003","()","@return [Boolean] Whether or not the format is HTML5. ",2],["html5?","Haml::Engine","classes/Haml/Engine.html#M000038","()","@return [Boolean] Whether or not the format is HTML5. ",2],["html?","Haml::Buffer","classes/Haml/Buffer.html#M000001","()","@return [Boolean] Whether or not the format is any flavor of HTML ",2],["html?","Haml::Engine","classes/Haml/Engine.html#M000036","()","@return [Boolean] Whether or not the format is any flavor of HTML. ",2],["html_attrs","Haml::Helpers","classes/Haml/Helpers.html#M000188","(lang = 'en-US')","Returns a hash containing default assignments for the `xmlns`, `lang`, and `xml:lang` attributes of the",2],["html_escape","Haml::Helpers","classes/Haml/Helpers.html#M000207","(text)","Returns a copy of `text` with ampersands, angle brackets and quotes escaped into HTML entities. Note",2],["html_escape_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000103","(text)","Don't escape text that's already safe, output is always HTML safe ",2],["html_safe","Haml::Helpers::ErrorReturn","classes/Haml/Helpers/ErrorReturn.html#M000164","()","Alias for #to_s",2],["html_safe","Haml::Util","classes/Haml/Util.html#M000330","(text)","Returns the given text, marked as being HTML-safe. With older versions of the Rails XSS-safety mechanism,",2],["html_safe!","Haml::Helpers::ErrorReturn","classes/Haml/Helpers/ErrorReturn.html#M000166","()","Alias for #to_s",2],["html_safe?","Haml::Helpers::ErrorReturn","classes/Haml/Helpers/ErrorReturn.html#M000165","()","Alias for #to_s",2],["human_indentation","Haml::Shared","classes/Haml/Shared.html#M000250","(indentation, was = false)","Formats a string for use in error messages about indentation. @param indentation [String] The string",2],["included","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000060","(base)","This method is automatically called when {Base} is included in a module. It automatically defines a filter",2],["included","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000102","(base)","",2],["init_haml_helpers","Haml::Helpers","classes/Haml/Helpers.html#M000174","()","Note: this does **not** need to be called when using Haml helpers normally in Rails. Initializes the",2],["init_rails","Haml","classes/Haml.html#M000311","(binding)","Initializes Haml for Rails. This method is called by `init.rb`, which is run by Rails on startup. We",2],["inspect","Haml::Helpers::ErrorReturn","classes/Haml/Helpers/ErrorReturn.html#M000167","()","@return [String] A human-readable string representation ",2],["inspect","Haml::Parser::ParseNode","classes/Haml/Parser/ParseNode.html#M000235","()","",2],["inspect_obj","Object","classes/Object.html#M000348","(obj)","Like `Object#inspect`, but preserves non-ASCII characters rather than escaping them under Ruby 1.9.2.",2],["internal_compile","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000066","(*args)","Same as \\{#compile}, but requires the necessary files first. *This is used by {Haml::Engine} and is not",2],["intersperse","Haml::Util","classes/Haml/Util.html#M000308","(enum, val)","Intersperses a value in an enumerable, as would be done with `Array#join` but without concatenating the",2],["ironruby?","Haml::Util","classes/Haml/Util.html#M000334","()","Whether or not this is running on IronRuby. @return [Boolean] ",2],["is_haml?","ActionView::Helpers::InstanceTag","classes/ActionView/Helpers/InstanceTag.html#M000135","()","",2],["is_haml?","Haml::Helpers","classes/Haml/Helpers.html#M000210","()","Returns whether or not the current template is a Haml template. This function, unlike other {Haml::Helpers}",2],["is_haml?","Object","classes/Object.html#M000221","()","Haml overrides various `ActionView` helpers, which call an \\{#is\\_haml?} method to determine whether",2],["is_multiline?","Haml::Parser","classes/Haml/Parser.html#M000277","(text)","Checks whether or not `line` is in a multiline sequence. ",2],["is_ruby_multiline?","Haml::Parser","classes/Haml/Parser.html#M000281","(text)","",2],["lazy_require","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000071","(*reqs)","This becomes a class method of modules that include {Base}. It allows the module to specify one or more",2],["lcs","Haml::Util","classes/Haml/Util.html#M000313","(x, y, &block)","Computes a single longest common subsequence for `x` and `y`. If there are more than one longest common",2],["lcs_backtrace","Object","classes/Object.html#M000354","(c, x, y, i, j, &block)","Computes a single longest common subsequence for arrays x and y. Algorithm from [Wikipedia](http://en.wikipedia.org/wiki/Longest_common_subsequence_problem#Reading_out_an_LCS)",2],["lcs_table","Object","classes/Object.html#M000353","(x, y)","Calculates the memoization table for the Least Common Subsequence algorithm. Algorithm from [Wikipedia](http://en.wikipedia.org/wiki/Longest_common_subsequence_problem#Computing_the_length_of_the_LCS)",2],["list_of","Haml::Helpers","classes/Haml/Helpers.html#M000187","(enum, &block)","Takes an `Enumerable` object and a block and iterates over the enum, yielding each element to a Haml",2],["list_of_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000106","(*args, &block)","Output is always HTML safe ",2],["load","Haml::Util","classes/Haml/Util.html#M000318","(data)","A wrapper for `Marshal.load` that calls `#_after_load` on the object after loading it, if it's defined.",2],["locals_code","Haml::Compiler","classes/Haml/Compiler.html#M000012","(names)","",2],["map_hash","Haml::Util","classes/Haml/Util.html#M000304","(hash, &block)","Maps the key-value pairs of a hash according to a block. @example map_hash({:foo => \"bar\", :baz => \"bang\"})",2],["map_keys","Haml::Util","classes/Haml/Util.html#M000302","(hash)","Maps the keys in a hash according to a block. @example map_keys({:foo => \"bar\", :baz => \"bang\"}) {|k|",2],["map_vals","Haml::Util","classes/Haml/Util.html#M000303","(hash)","Maps the values in a hash according to a block. @example map_values({:foo => \"bar\", :baz => \"bang\"})",2],["merge_adjacent_strings","Haml::Util","classes/Haml/Util.html#M000307","(arr)","Concatenates all strings that are adjacent in an array, while leaving other elements as they are. @example",2],["merge_attrs","Haml::Buffer","classes/Haml/Buffer.html#M000022","(to, from)","Merges two attribute hashes. This is the same as `to.merge!(from)`, except that it merges id, class,",2],["merge_name_and_attributes","Haml::Helpers","classes/Haml/Helpers.html#M000212","(name, attributes_hash = {})","Parses the tag name used for \\{#haml\\_tag} and merges it with the Ruby attributes hash. ",2],["method_missing","StaticConditionalContext","classes/StaticConditionalContext.html#M000350","(name, *args, &block)","Checks whether or not a variable is defined for this context. @param name [Symbol] The name of the variable",2],["mid_block?","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000185","(code)","Checks if a string of Ruby code comes in the middle of a block. This could be a keyword like `else`,",2],["mid_block_keyword?","Haml::Parser","classes/Haml/Parser.html#M000240","(text)","",2],["new","Haml::Buffer","classes/Haml/Buffer.html#M000008","(upper = nil, options = {})","@param upper [Buffer] The parent buffer @param options [{Symbol => Object}] An options hash. See {Haml::Engine#options\\_for\\_buffer}",2],["new","Haml::Engine","classes/Haml/Engine.html#M000041","(template, options = {})","Precompiles the Haml template. @param template [String] The Haml template @param options [{Symbol =>",2],["new","Haml::Error","classes/Haml/Error.html#M000055","(message = nil, line = nil)","@param message [String] The error message @param line [Fixnum] See \\{#line} ",2],["new","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000056","(args)","@param args [Array<String>] The command-line arguments ",2],["new","Haml::Exec::HTML2Haml","classes/Haml/Exec/HTML2Haml.html#M000091","(args)","@param args [Array<String>] The command-line arguments ",2],["new","Haml::Exec::Haml","classes/Haml/Exec/Haml.html#M000078","(args)","@param args [Array<String>] The command-line arguments ",2],["new","Haml::HTML","classes/Haml/HTML.html#M000206","(template, options = {})","@param template [String, Hpricot::Node] The HTML template to convert @option options :erb [Boolean] (false)",2],["new","Haml::Helpers::ErrorReturn","classes/Haml/Helpers/ErrorReturn.html#M000162","(method)","@param message [String] The error message to raise when \\{#to\\_s} is called ",2],["new","Haml::Parser::ParseNode","classes/Haml/Parser/ParseNode.html#M000234","(*args)","",2],["new","StaticConditionalContext","classes/StaticConditionalContext.html#M000349","(set)","@param set [#include?] The set of variables that are defined for this context. ",2],["next_line","Haml::Parser","classes/Haml/Parser.html#M000273","()","",2],["non_haml","Haml::Helpers","classes/Haml/Helpers.html#M000175","()","Runs a block of code in a non-Haml context (i.e. \\{#is\\_haml?} will return false). This is mainly useful",2],["open_file","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000074","(filename, flag = 'r')","",2],["options_for_buffer","Haml::Engine","classes/Haml/Engine.html#M000053","()","Returns a subset of \\{#options}: those that {Haml::Buffer} cares about. All of the values here are such",2],["ord","Object","classes/Object.html#M000344","(c)","Returns the ASCII code of the given character. @param c [String] All characters but the first are ignored.",2],["output_buffer_with_haml","ActionView::Base","classes/ActionView/Base.html#M000100","()","",2],["page_class","Haml::Helpers::ActionViewExtensions","classes/Haml/Helpers/ActionViewExtensions.html#M000094","()","Returns a value for the \"class\" attribute unique to this controller/action pair. This can be used to",2],["parse","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000059","()","Parses the command-line arguments and runs the executable. This does not handle exceptions or exit the",2],["parse","Haml::Parser","classes/Haml/Parser.html#M000236","()","",2],["parse!","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000057","()","Parses the command-line arguments and runs the executable. Calls `Kernel#exit` at the end, so it never",2],["parse_class_and_id","Haml::Parser","classes/Haml/Parser.html#M000259","(list)","This is a class method so it can be accessed from {Haml::Helpers}. Iterates through the classes and ids",2],["parse_haml_magic_comment","Object","classes/Object.html#M000355","(str)","Parses a magic comment at the beginning of a Haml file. The parsing rules are basically the same as Ruby's.",2],["parse_new_attribute","Haml::Parser","classes/Haml/Parser.html#M000271","(scanner)","",2],["parse_new_attributes","Haml::Parser","classes/Haml/Parser.html#M000267","(line)","",2],["parse_object_ref","Haml::Buffer","classes/Haml/Buffer.html#M000024","(ref)","Takes an array of objects and uses the class and id of the first one to create an attributes hash. The",2],["parse_old_attributes","Haml::Parser","classes/Haml/Parser.html#M000262","(line)","",2],["parse_static_hash","Haml::Parser","classes/Haml/Parser.html#M000260","(text)","",2],["parse_tag","Haml::Parser","classes/Haml/Parser.html#M000261","(line)","Parses a line into tag_name, attributes, attributes_hash, object_ref, action, value ",2],["parse_text","Hpricot::Node","classes/Hpricot/Node.html#M000204","(text, tabs)","",2],["parse_text_with_interpolation","Hpricot::Node","classes/Hpricot/Node.html#M000205","(text, tabs)","",2],["paths","Haml::Util","classes/Haml/Util.html#M000312","(arrs)","Return an array of all possible paths through the given arrays. @param arrs [Array<Array>] @return [Array<Arrays>]",2],["plain","Haml::Parser","classes/Haml/Parser.html#M000242","(text, escape_html = nil)","",2],["powerset","Haml::Util","classes/Haml/Util.html#M000305","(arr)","Computes the powerset of the given array. This is the set of all subsets of the array. @example powerset([1,",2],["precede","Haml::Helpers","classes/Haml/Helpers.html#M000193","(str, &block)","Prepends a string to the beginning of a Haml block, with no whitespace between. For example: = precede",2],["precede_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000109","(str, &block)","Input is escaped, output is always HTML safe ",2],["precompiled","Haml::Engine","classes/Haml/Engine.html#M000039","()","The source code that is evaluated to produce the Haml document. In Ruby 1.9, this is automatically converted",2],["precompiled_method_return_value","Haml::Compiler","classes/Haml/Compiler.html#M000011","()","Returns the string used as the return value of the precompiled method. This method exists so it can be",2],["precompiled_method_return_value_with_haml_xss","Haml::Template","classes/Haml/Template.html#M000297","()","",2],["precompiled_with_ambles","Haml::Compiler","classes/Haml/Compiler.html#M000009","(local_names)","Returns the precompiled string with the preamble and postamble ",2],["prerender_tag","Haml::Compiler","classes/Haml/Compiler.html#M000046","(name, self_close, attributes)","",2],["preserve","Haml::Helpers","classes/Haml/Helpers.html#M000182","(input = nil, &block)","Takes any string, finds all the newlines, and converts them to HTML entities so they'll render correctly",2],["preserve_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000105","(*args, &block)","Output is always HTML safe ",2],["process_indent","Haml::Parser","classes/Haml/Parser.html#M000237","(line)","Processes and deals with lowering indentation. ",2],["process_line","Haml::Parser","classes/Haml/Parser.html#M000238","(text, index)","Processes a single line of Haml. This method doesn't return anything; it simply processes the line and",2],["process_result","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000068","()","Processes the options set by the command-line arguments. In particular, sets `@options[:input]` and `@options[:output]`",2],["process_result","Haml::Exec::HTML2Haml","classes/Haml/Exec/HTML2Haml.html#M000093","()","Processes the options set by the command-line arguments, and runs the HTML compiler appropriately. ",2],["process_result","Haml::Exec::Haml","classes/Haml/Exec/Haml.html#M000086","()","Processes the options set by the command-line arguments, and runs the Haml compiler appropriately. ",2],["push","Haml::Parser","classes/Haml/Parser.html#M000241","(node)","",2],["push_generated_script","Haml::Compiler","classes/Haml/Compiler.html#M000042","(text)","",2],["push_merged_text","Haml::Compiler","classes/Haml/Compiler.html#M000031","(text, tab_change = 0, indent = true)","Adds `text` to `@buffer` with appropriate tabulation without parsing it. ",2],["push_script","Haml::Compiler","classes/Haml/Compiler.html#M000040","(text, opts = {})","Causes `text` to be evaluated in the context of the scope object and the result to be added to `@buffer`.",2],["push_silent","Haml::Compiler","classes/Haml/Compiler.html#M000030","(text, can_suppress = false)","Evaluates `text` in the context of the scope object, but does not output the result. ",2],["push_text","Haml::Buffer","classes/Haml/Buffer.html#M000010","(text, tab_change, dont_tab_up)","Appends text to the buffer, properly tabulated. Also modifies the document's indentation. @param text",2],["push_text","Haml::Compiler","classes/Haml/Compiler.html#M000033","(text, tab_change = 0)","",2],["puts","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000070","(*args)","Same as \\{Kernel.puts}, but doesn't print anything if the `--quiet` option is set. @param args [Array]",2],["puts_action","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000069","(name, color, arg)","Prints a status message about performing the given action, colored using the given color (via terminal",2],["rails_env","Haml::Util","classes/Haml/Util.html#M000325","()","Returns the environment of the Rails application, if this is running in a Rails context. Returns `nil`",2],["rails_root","Haml::Util","classes/Haml/Util.html#M000324","()","Returns the root of the Rails application, if this is running in a Rails context. Returns `nil` if no",2],["rails_safe_buffer_class","Haml::Util","classes/Haml/Util.html#M000332","()","The class for the Rails SafeBuffer XSS protection class. This varies depending on Rails version. @return",2],["rails_xss_safe?","Haml::Template","classes/Haml/Template.html#M000296","()","",2],["rails_xss_safe?","Haml::Util","classes/Haml/Util.html#M000329","()","Whether or not ActionView's XSS protection is available and enabled, as is the default for Rails 3.0+,",2],["raw_next_line","Haml::Parser","classes/Haml/Parser.html#M000272","()","",2],["render","ActionView::Base","classes/ActionView/Base.html#M000098","(*args, &block)","Alias for #render_with_haml",2],["render","Haml::Engine","classes/Haml/Engine.html#M000044","(scope = Object.new, locals = {}, &block)","Processes the template and returns the result as a string. `scope` is the context in which the template",2],["render","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000061","(text)","Takes the source text that should be passed to the filter and returns the result of running the filter",2],["render","Haml::Filters::Cdata","classes/Haml/Filters/Cdata.html#M000081","(text)","@see Base#render ",2],["render","Haml::Filters::Escaped","classes/Haml/Filters/Escaped.html#M000082","(text)","@see Base#render ",2],["render","Haml::Filters::Markdown","classes/Haml/Filters/Markdown.html#M000089","(text)","@see Base#render ",2],["render","Haml::Filters::Maruku","classes/Haml/Filters/Maruku.html#M000090","(text)","@see Base#render ",2],["render","Haml::Filters::Plain","classes/Haml/Filters/Plain.html#M000076","(text)","@see Base#render ",2],["render","Haml::Filters::Preserve","classes/Haml/Filters/Preserve.html#M000084","(text)","@see Base#render ",2],["render","Haml::Filters::Sass","classes/Haml/Filters/Sass.html#M000085","(text)","@see Base#render ",2],["render","Haml::Filters::Textile","classes/Haml/Filters/Textile.html#M000088","(text)","@see Base#render ",2],["render","Haml::HTML","classes/Haml/HTML.html#M000209","()","Processes the document and returns the result as a string containing the Haml template. ",2],["render_children","Hpricot::Elem","classes/Hpricot/Elem.html#M000224","(so_far, tabs, options)","",2],["render_proc","Haml::Engine","classes/Haml/Engine.html#M000050","(scope = Object.new, *local_names)","Returns a proc that, when called, renders the template and returns the result as a string. `scope` works",2],["render_with_haml","ActionView::Base","classes/ActionView/Base.html#M000097","(*args, &block)","",2],["render_with_options","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000065","(text, options)","Same as \\{#render}, but takes a {Haml::Engine} options hash as well. It's only safe to rely on options",2],["render_with_options","Haml::Filters::Css","classes/Haml/Filters/Css.html#M000080","(text, options)","@see Base#render_with_options ",2],["render_with_options","Haml::Filters::Javascript","classes/Haml/Filters/Javascript.html#M000077","(text, options)","@see Base#render_with_options ",2],["render_without_haml","ActionView::Base","classes/ActionView/Base.html#M000099","(*args, &block)","Alias for #render",2],["resolve_lazy_requires","Haml::Filters::Base","classes/Haml/Filters/Base.html#M000072","()","",2],["resolve_newlines","Haml::Compiler","classes/Haml/Compiler.html#M000047","()","",2],["restrict","Haml::Util","classes/Haml/Util.html#M000306","(value, range)","Restricts a number to falling within a given range. Returns the number if it falls within the range,",2],["revision_number","Haml::Version","classes/Haml/Version.html#M000301","()","",2],["rstrip!","Haml::Buffer","classes/Haml/Buffer.html#M000019","()","Remove the whitespace from the right side of the buffer string. Doesn't do anything if we're at the beginning",2],["rstrip_buffer!","Haml::Compiler","classes/Haml/Compiler.html#M000049","(index = -1)","Get rid of and whitespace at the end of the buffer or the merged text ",2],["ruby1_8?","Haml::Util","classes/Haml/Util.html#M000335","()","Whether or not this is running under Ruby 1.8 or lower. Note that IronRuby counts as Ruby 1.8, because",2],["ruby1_8_6?","Haml::Util","classes/Haml/Util.html#M000336","()","Whether or not this is running under Ruby 1.8.6 or lower. Note that lower versions are not officially",2],["safe_concat_with_haml_xss","ActionView::Helpers::TextHelper","classes/ActionView/Helpers/TextHelper.html#M000147","(string)","",2],["scope","Haml::Util","classes/Haml/Util.html#M000299","(file)","Returns the path of a file relative to the Haml root directory. @param file [String] The filename relative",2],["script","Haml::Parser","classes/Haml/Parser.html#M000243","(text, escape_html = nil, preserve = false)","",2],["set_eql?","Object","classes/Object.html#M000347","(set1, set2)","Tests the hash-equality of two sets in a cross-version manner. Aggravatingly, this is order-dependent",2],["set_hash","Object","classes/Object.html#M000346","(set)","Returns the hash code for a set in a cross-version manner. Aggravatingly, this is order-dependent in",2],["set_locals","Haml::Engine","classes/Haml/Engine.html#M000054","(locals, scope, scope_object)","",2],["set_opts","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000064","(opts)","Tells optparse how to parse the arguments available for all executables. This is meant to be overridden",2],["set_opts","Haml::Exec::HTML2Haml","classes/Haml/Exec/HTML2Haml.html#M000092","(opts)","Tells optparse how to parse the arguments. @param opts [OptionParser] ",2],["set_opts","Haml::Exec::Haml","classes/Haml/Exec/Haml.html#M000079","(opts)","Tells optparse how to parse the arguments. @param opts [OptionParser] ",2],["set_output_buffer_with_haml","ActionView::Base","classes/ActionView/Base.html#M000101","(new)","",2],["silence_haml_warnings","Haml::Util","classes/Haml/Util.html#M000321","()","Silences all Haml warnings within a block. @yield A block in which no Haml warnings will be printed ",2],["silence_warnings","Haml::Util","classes/Haml/Util.html#M000320","()","Silence all output to STDERR within a block. @yield A block in which no output will be printed to STDERR",2],["silent_script","Haml::Parser","classes/Haml/Parser.html#M000245","(text)","",2],["static_attribute?","Hpricot::Elem","classes/Hpricot/Elem.html#M000228","(name, options)","",2],["static_classname?","Hpricot::Elem","classes/Hpricot/Elem.html#M000231","(options)","",2],["static_id?","Hpricot::Elem","classes/Hpricot/Elem.html#M000230","(options)","",2],["static_method_name","Object","classes/Object.html#M000352","(name, *vars)","Computes the name for a method defined via \\{#def\\_static\\_method}. @param name [String] The base name",2],["strip_string_array","Haml::Util","classes/Haml/Util.html#M000310","(arr)","Destructively strips whitespace from the beginning and end of the first and last elements, respectively,",2],["substitute","Haml::Util","classes/Haml/Util.html#M000309","(ary, from, to)","Substitutes a sub-array of one array with another sub-array. @param ary [Array] The array in which to",2],["succeed","Haml::Helpers","classes/Haml/Helpers.html#M000194","(str, &block)","Appends a string to the end of a Haml block, with no whitespace between. For example: click = succeed",2],["succeed_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000110","(str, &block)","Input is escaped, output is always HTML safe ",2],["surround","Haml::Helpers","classes/Haml/Helpers.html#M000192","(front, back = front, &block)","Surrounds a block of Haml code with strings, with no whitespace in between. For example: = surround '(',",2],["surround_with_haml_xss","Haml::Helpers::XssMods","classes/Haml/Helpers/XssMods.html#M000108","(front, back = front, &block)","Input is escaped, output is always HTML safe ",2],["tab_down","Haml::Helpers","classes/Haml/Helpers.html#M000190","(i = 1)","Decrements the number of tabs the buffer automatically adds to the lines of the template. @param i [Fixnum]",2],["tab_up","Haml::Helpers","classes/Haml/Helpers.html#M000189","(i = 1)","Increments the number of tabs the buffer automatically adds to the lines of the template. For example:",2],["tabs","Haml::Buffer","classes/Haml/Buffer.html#M000023","(count = 0)","Gets `count` tabs. Mostly for internal use. ",2],["tabs","Haml::Parser::Line","classes/Haml/Parser/Line.html#M000227","()","@private ",2],["tabulate","Hpricot::Node","classes/Hpricot/Node.html#M000201","(tabs)","",2],["tabulation","Haml::Buffer","classes/Haml/Buffer.html#M000006","()","@return [Fixnum] The current indentation level of the document ",2],["tabulation=","Haml::Buffer","classes/Haml/Buffer.html#M000007","(val)","Sets the current tabulation of the document. @param val [Fixnum] The new tabulation ",2],["tag","Haml::Parser","classes/Haml/Parser.html#M000247","(line)","",2],["text_for_doctype","Haml::Compiler","classes/Haml/Compiler.html#M000029","()","",2],["to_haml","Haml::HTML","classes/Haml/HTML.html#M000213","()","Alias for #render",2],["to_haml","Hpricot::CData","classes/Hpricot/CData.html#M000216","(tabs, options)","@see Haml::HTML::Node#to_haml ",2],["to_haml","Hpricot::Comment","classes/Hpricot/Comment.html#M000222","(tabs, options)","@see Haml::HTML::Node#to_haml ",2],["to_haml","Hpricot::Doc","classes/Hpricot/Doc.html#M000214","(tabs, options)","@see Haml::HTML::Node#to_haml ",2],["to_haml","Hpricot::DocType","classes/Hpricot/DocType.html#M000218","(tabs, options)","@see Haml::HTML::Node#to_haml ",2],["to_haml","Hpricot::Elem","classes/Hpricot/Elem.html#M000223","(tabs, options)","@see Haml::HTML::Node#to_haml ",2],["to_haml","Hpricot::Node","classes/Hpricot/Node.html#M000197","(tabs, options)","Returns the Haml representation of the given node. @param tabs [Fixnum] The indentation level of the",2],["to_haml","Hpricot::XMLDecl","classes/Hpricot/XMLDecl.html#M000215","(tabs, options)","@see Haml::HTML::Node#to_haml ",2],["to_haml_filter","Hpricot::Elem","classes/Hpricot/Elem.html#M000226","(filter, tabs, options)","",2],["to_hash","Haml::Util","classes/Haml/Util.html#M000300","(arr)","Converts an array of `[key, value]` pairs to a hash. @example to_hash([[:foo, \"bar\"], [:baz, \"bang\"]])",2],["to_html","Haml::Engine","classes/Haml/Engine.html#M000048","(scope = Object.new, locals = {}, &block)","Alias for #render",2],["to_s","Haml::Exec::Generic","classes/Haml/Exec/Generic.html#M000062","()","@return [String] A description of the executable ",2],["to_s","Haml::Helpers::ErrorReturn","classes/Haml/Helpers/ErrorReturn.html#M000163","()","Raises an error. @raise [Haml::Error] The error ",2],["toplevel?","Haml::Buffer","classes/Haml/Buffer.html#M000004","()","@return [Boolean] Whether or not this buffer is a top-level template, as opposed to a nested partial",2],["try_enabling_xss_integration","Haml::Template","classes/Haml/Template.html#M000295","()","Enables integration with the Rails 2.2.5+ XSS protection, if it's available and enabled. @return [Boolean]",2],["try_parse_haml_emacs_magic_comment","Object","classes/Object.html#M000356","(scanner)","",2],["try_sass","Haml::Util","classes/Haml/Util.html#M000323","()","Try loading Sass. If the `sass` gem isn't installed, print a warning and load from the vendored gem.",2],["un_next_line","Haml::Parser","classes/Haml/Parser.html#M000275","(line)","",2],["underscore","Haml::Buffer","classes/Haml/Buffer.html#M000025","(camel_cased_word)","Changes a word from camel case to underscores. Based on the method of the same name in Rails' Inflector,",2],["unescape_interpolation","Haml::Parser","classes/Haml/Parser.html#M000283","(str, escape_html = nil)","",2],["uninterp","Hpricot::Node","classes/Hpricot/Node.html#M000202","(text)","",2],["valid_ruby?","Haml::HTML::ERB","classes/Haml/HTML/ERB.html#M000181","(code)","Returns whether the code is valid Ruby code on its own. @param code [String] Ruby code to check @return",2],["version","Haml::Version","classes/Haml/Version.html#M000298","()","Returns a hash representing the version of Haml. The `:major`, `:minor`, and `:teeny` keys have their",2],["version_geq","Haml::Util","classes/Haml/Util.html#M000316","(v1, v2)","Returns whether one version string represents the same or a more recent version than another. @param",2],["version_gt","Haml::Util","classes/Haml/Util.html#M000315","(v1, v2)","Returns whether one version string represents a more recent version than another. @param v1 [String]",2],["windows?","Haml::Util","classes/Haml/Util.html#M000333","()","Whether or not this is running on Windows. @return [Boolean] ",2],["with_haml_buffer","Haml::Helpers","classes/Haml/Helpers.html#M000217","(buffer)","Runs a block of code with the given buffer as the currently active buffer. @param buffer [Haml::Buffer]",2],["with_output_buffer","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000132","(*args, &block)","Alias for #with_output_buffer_with_haml_xss",2],["with_output_buffer_with_haml_xss","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000129","(*args, &block)","",2],["with_output_buffer_without_haml_xss","ActionView::Helpers::CaptureHelper","classes/ActionView/Helpers/CaptureHelper.html#M000133","(*args, &block)","Alias for #with_output_buffer",2],["with_raw_haml_concat","Haml::Helpers::ActionViewExtensions","classes/Haml/Helpers/ActionViewExtensions.html#M000096","()","Treats all input to \\{Haml::Helpers#haml\\_concat} within the block as being HTML safe for Rails' XSS",2],["with_tabs","Haml::Helpers","classes/Haml/Helpers.html#M000191","(i)","Sets the number of tabs the buffer automatically adds to the lines of the template, but only for the",2],["xhtml?","Haml::Buffer","classes/Haml/Buffer.html#M000000","()","@return [Boolean] Whether or not the format is XHTML ",2],["xhtml?","Haml::Engine","classes/Haml/Engine.html#M000035","()","@return [Boolean] Whether or not the format is XHTML. ",2],["MIT-LICENSE","files/MIT-LICENSE.html","files/MIT-LICENSE.html","","Copyright (c) 2006-2009 Hampton Catlin and Nathan Weizenbaum  Permission is hereby granted, free of charge,",3],["README.md","files/README_md.html","files/README_md.html","","# Haml  Haml is a templating engine for HTML. It's are designed to make it both easier and more pleasant",3],["haml.rb","files/lib/haml_rb.html","files/lib/haml_rb.html","","",3],["buffer.rb","files/lib/haml/buffer_rb.html","files/lib/haml/buffer_rb.html","","",3],["compiler.rb","files/lib/haml/compiler_rb.html","files/lib/haml/compiler_rb.html","","",3],["engine.rb","files/lib/haml/engine_rb.html","files/lib/haml/engine_rb.html","","",3],["error.rb","files/lib/haml/error_rb.html","files/lib/haml/error_rb.html","","",3],["exec.rb","files/lib/haml/exec_rb.html","files/lib/haml/exec_rb.html","","",3],["filters.rb","files/lib/haml/filters_rb.html","files/lib/haml/filters_rb.html","","",3],["helpers.rb","files/lib/haml/helpers_rb.html","files/lib/haml/helpers_rb.html","","",3],["action_view_extensions.rb","files/lib/haml/helpers/action_view_extensions_rb.html","files/lib/haml/helpers/action_view_extensions_rb.html","","",3],["action_view_mods.rb","files/lib/haml/helpers/action_view_mods_rb.html","files/lib/haml/helpers/action_view_mods_rb.html","","",3],["xss_mods.rb","files/lib/haml/helpers/xss_mods_rb.html","files/lib/haml/helpers/xss_mods_rb.html","","",3],["html.rb","files/lib/haml/html_rb.html","files/lib/haml/html_rb.html","","",3],["erb.rb","files/lib/haml/html/erb_rb.html","files/lib/haml/html/erb_rb.html","","",3],["parser.rb","files/lib/haml/parser_rb.html","files/lib/haml/parser_rb.html","","",3],["railtie.rb","files/lib/haml/railtie_rb.html","files/lib/haml/railtie_rb.html","","",3],["root.rb","files/lib/haml/root_rb.html","files/lib/haml/root_rb.html","","",3],["shared.rb","files/lib/haml/shared_rb.html","files/lib/haml/shared_rb.html","","",3],["template.rb","files/lib/haml/template_rb.html","files/lib/haml/template_rb.html","","",3],["options.rb","files/lib/haml/template/options_rb.html","files/lib/haml/template/options_rb.html","","We keep options in its own self-contained file so that we can load it independently in Rails 3, where",3],["patch.rb","files/lib/haml/template/patch_rb.html","files/lib/haml/template/patch_rb.html","","This file makes Haml work with Rails by monkeypatching the core template-compilation methods. This is",3],["plugin.rb","files/lib/haml/template/plugin_rb.html","files/lib/haml/template/plugin_rb.html","","This file makes Haml work with Rails using the > 2.0.1 template handler API. ",3],["util.rb","files/lib/haml/util_rb.html","files/lib/haml/util_rb.html","","",3],["version.rb","files/lib/haml/version_rb.html","files/lib/haml/version_rb.html","","",3],["sass.rb","files/lib/sass_rb.html","files/lib/sass_rb.html","","",3],["plugin.rb","files/lib/sass/plugin_rb.html","files/lib/sass/plugin_rb.html","","",3],["rails2_shim.rb","files/lib/sass/rails2_shim_rb.html","files/lib/sass/rails2_shim_rb.html","","",3],["rails3_shim.rb","files/lib/sass/rails3_shim_rb.html","files/lib/sass/rails3_shim_rb.html","","",3]],"searchIndex":["actionview","base","helpers","cachehelper","capturehelper","formhelper","formtaghelper","instancetag","taghelper","texthelper","haml","buffer","compiler","engine","error","exec","generic","html2haml","haml","filters","base","cdata","css","erb","escaped","javascript","markdown","maruku","plain","preserve","ruby","sass","textile","html","erb","helpers","actionviewextensions","errorreturn","xssmods","parser","line","parsenode","plugin","shared","syntaxerror","template","util","version","hpricot","cdata","comment","doc","doctype","elem","node","xmldecl","object","staticconditionalcontext","_enc()","abstract()","action_view?()","active?()","add_expr_debug()","add_expr_literal()","add_postamble()","add_preamble()","add_stmt()","add_text()","adjust_tabs()","ap_geq?()","ap_geq_3?()","append_if_string=()","assert_html_safe!()","attr_hash()","attributes()","av_template_class()","balance()","balance()","block_closer?()","block_is_haml?()","block_keyword()","block_opened?()","block_opener?()","build_attributes()","cache_fragment()","call()","caller_info()","capture()","capture()","capture_erb_with_buffer()","capture_erb_with_buffer_with_haml()","capture_erb_with_buffer_without_haml()","capture_haml()","capture_haml_with_haml_xss()","capture_with_haml()","capture_with_haml()","capture_without_haml()","capture_without_haml()","check_encoding()","check_haml_encoding()","close()","close_filter()","close_haml_comment()","close_silent_script()","closes_flat?()","color()","comment()","compile()","compile()","compile()","compile()","compile()","compile()","compile_comment()","compile_doctype()","compile_filter()","compile_haml()","compile_haml_comment()","compile_plain()","compile_root()","compile_script()","compile_silent_script()","compile_silent_script()","compile_silent_script_with_haml_block_deprecation()","compile_silent_script_without_haml_block_deprecation()","compile_tag()","compile_template()","compile_template()","compile_template_with_haml()","compile_template_without_haml()","concat()","concat()","concat_merged_text()","concat_with_haml()","concat_with_haml_xss()","concat_without_haml()","concat_without_haml_xss()","contains_interpolation?()","content_tag()","content_tag()","content_tag_with_haml()","content_tag_without_haml()","def_method()","def_static_method()","defined()","delegate_template_exists?()","delegate_template_exists_with_haml()","delegate_template_exists_without_haml()","div()","doctype()","dump()","dynamic_attribute?()","dynamic_attributes()","enum_cons()","enum_slice()","enum_with_index()","erb_to_interpolation()","escape_once()","escape_once_with_haml_xss()","escaped_expr()","filter()","filter_and_join()","filter_opened?()","find_and_preserve()","find_and_preserve_with_haml_xss()","flat?()","flat_script()","flatten()","flatten()","flush_merged_text()","form_for()","form_for()","form_for()","form_for_with_haml()","form_for_with_haml()","form_for_with_haml_xss()","form_for_without_haml()","form_for_without_haml()","form_for_without_haml_xss()","form_tag()","form_tag()","form_tag()","form_tag_with_haml()","form_tag_with_haml()","form_tag_with_haml_xss()","form_tag_without_haml()","form_tag_without_haml()","form_tag_without_haml_xss()","fragment_for()","fragment_for_with_haml()","fragment_for_without_haml()","generate_content_class_names()","get_line()","h()","haml_attributes()","haml_bind_proc()","haml_buffer()","haml_buffer()","haml_comment()","haml_concat()","haml_concat_with_haml_xss()","haml_css_attr?()","haml_indent()","haml_indent_with_haml_xss()","haml_tag()","haml_tag_with_haml_xss()","haml_warn()","haml_xss_html_escape()","handle_interpolation()","handle_load_error()","handle_multiline()","handle_ruby_multiline()","handles_encoding?()","has?()","html4?()","html4?()","html5?()","html5?()","html?()","html?()","html_attrs()","html_escape()","html_escape_with_haml_xss()","html_safe()","html_safe()","html_safe!()","html_safe?()","human_indentation()","included()","included()","init_haml_helpers()","init_rails()","inspect()","inspect()","inspect_obj()","internal_compile()","intersperse()","ironruby?()","is_haml?()","is_haml?()","is_haml?()","is_multiline?()","is_ruby_multiline?()","lazy_require()","lcs()","lcs_backtrace()","lcs_table()","list_of()","list_of_with_haml_xss()","load()","locals_code()","map_hash()","map_keys()","map_vals()","merge_adjacent_strings()","merge_attrs()","merge_name_and_attributes()","method_missing()","mid_block?()","mid_block_keyword?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_line()","non_haml()","open_file()","options_for_buffer()","ord()","output_buffer_with_haml()","page_class()","parse()","parse()","parse!()","parse_class_and_id()","parse_haml_magic_comment()","parse_new_attribute()","parse_new_attributes()","parse_object_ref()","parse_old_attributes()","parse_static_hash()","parse_tag()","parse_text()","parse_text_with_interpolation()","paths()","plain()","powerset()","precede()","precede_with_haml_xss()","precompiled()","precompiled_method_return_value()","precompiled_method_return_value_with_haml_xss()","precompiled_with_ambles()","prerender_tag()","preserve()","preserve_with_haml_xss()","process_indent()","process_line()","process_result()","process_result()","process_result()","push()","push_generated_script()","push_merged_text()","push_script()","push_silent()","push_text()","push_text()","puts()","puts_action()","rails_env()","rails_root()","rails_safe_buffer_class()","rails_xss_safe?()","rails_xss_safe?()","raw_next_line()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render()","render_children()","render_proc()","render_with_haml()","render_with_options()","render_with_options()","render_with_options()","render_without_haml()","resolve_lazy_requires()","resolve_newlines()","restrict()","revision_number()","rstrip!()","rstrip_buffer!()","ruby1_8?()","ruby1_8_6?()","safe_concat_with_haml_xss()","scope()","script()","set_eql?()","set_hash()","set_locals()","set_opts()","set_opts()","set_opts()","set_output_buffer_with_haml()","silence_haml_warnings()","silence_warnings()","silent_script()","static_attribute?()","static_classname?()","static_id?()","static_method_name()","strip_string_array()","substitute()","succeed()","succeed_with_haml_xss()","surround()","surround_with_haml_xss()","tab_down()","tab_up()","tabs()","tabs()","tabulate()","tabulation()","tabulation=()","tag()","text_for_doctype()","to_haml()","to_haml()","to_haml()","to_haml()","to_haml()","to_haml()","to_haml()","to_haml()","to_haml_filter()","to_hash()","to_html()","to_s()","to_s()","toplevel?()","try_enabling_xss_integration()","try_parse_haml_emacs_magic_comment()","try_sass()","un_next_line()","underscore()","unescape_interpolation()","uninterp()","valid_ruby?()","version()","version_geq()","version_gt()","windows?()","with_haml_buffer()","with_output_buffer()","with_output_buffer_with_haml_xss()","with_output_buffer_without_haml_xss()","with_raw_haml_concat()","with_tabs()","xhtml?()","xhtml?()","mit-license","readme.md","haml.rb","buffer.rb","compiler.rb","engine.rb","error.rb","exec.rb","filters.rb","helpers.rb","action_view_extensions.rb","action_view_mods.rb","xss_mods.rb","html.rb","erb.rb","parser.rb","railtie.rb","root.rb","shared.rb","template.rb","options.rb","patch.rb","plugin.rb","util.rb","version.rb","sass.rb","plugin.rb","rails2_shim.rb","rails3_shim.rb"],"longSearchIndex":["lib/haml/template/patch.rb","actionview","actionview","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","actionview::helpers","lib/haml.rb","haml","haml","haml","haml","haml","haml::exec","haml::exec","haml::exec","haml","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml::filters","haml","haml::html","haml","haml::helpers","haml::helpers","haml::helpers","haml","haml::parser","haml::parser","haml","haml","haml","haml","haml","haml","lib/haml/html.rb","hpricot","hpricot","hpricot","hpricot","hpricot","hpricot","hpricot","lib/haml/helpers.rb","lib/haml/util.rb","haml::util","haml::util","haml::helpers","haml::buffer","haml::html::erb","haml::html::erb","haml::html::erb","haml::html::erb","haml::html::erb","haml::html::erb","haml::buffer","haml::util","haml::util","haml::buffer","haml::util","hpricot::node","haml::buffer","haml::util","haml::parser","haml::shared","haml::html::erb","haml::helpers","haml::parser","haml::parser","haml::html::erb","haml::compiler","haml::plugin","haml::plugin","haml::util","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::capturehelper","haml::helpers","haml::helpers::xssmods","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::capturehelper","haml::util","haml::util","haml::parser","haml::parser","haml::parser","haml::parser","haml::parser","haml::exec::generic","haml::parser","haml::compiler","haml::filters::base","haml::filters::erb","haml::filters::ruby","haml::html::erb","haml::plugin","haml::compiler","haml::compiler","haml::compiler","actionview::base","haml::compiler","haml::compiler","haml::compiler","haml::compiler","haml::compiler","haml::compiler","haml::compiler","haml::compiler","haml::compiler","actionview::base","actionview::base","actionview::base","actionview::base","actionview::helpers::texthelper","actionview::helpers::texthelper","haml::compiler","actionview::helpers::texthelper","actionview::helpers::texthelper","actionview::helpers::texthelper","actionview::helpers::texthelper","haml::parser","actionview::helpers::instancetag","actionview::helpers::taghelper","actionview::helpers::taghelper","actionview::helpers::taghelper","haml::engine","object","haml::filters","actionview::base","actionview::base","actionview::base","haml::parser","haml::parser","haml::util","hpricot::elem","hpricot::elem","object","object","object","hpricot::node","haml::helpers","haml::helpers::xssmods","haml::html::erb","haml::parser","haml::compiler","haml::parser","haml::helpers","haml::helpers::xssmods","haml::parser","haml::parser","haml::helpers","object","haml::compiler","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formhelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::formtaghelper","actionview::helpers::cachehelper","actionview::helpers::cachehelper","actionview::helpers::cachehelper","haml::helpers::actionviewextensions","haml::exec::generic","haml::html::erb","hpricot::elem","haml::helpers","actionview::helpers::instancetag","haml::helpers","haml::parser","haml::helpers","haml::helpers::xssmods","hpricot::elem","haml::helpers","haml::helpers::xssmods","haml::helpers","haml::helpers::xssmods","haml::util","haml::helpers::xssmods","haml::shared","haml::exec::generic","haml::parser","haml::parser","haml::plugin","object","haml::buffer","haml::engine","haml::buffer","haml::engine","haml::buffer","haml::engine","haml::helpers","haml::helpers","haml::helpers::xssmods","haml::helpers::errorreturn","haml::util","haml::helpers::errorreturn","haml::helpers::errorreturn","haml::shared","haml::filters::base","haml::helpers::xssmods","haml::helpers","haml","haml::helpers::errorreturn","haml::parser::parsenode","object","haml::filters::base","haml::util","haml::util","actionview::helpers::instancetag","haml::helpers","object","haml::parser","haml::parser","haml::filters::base","haml::util","object","object","haml::helpers","haml::helpers::xssmods","haml::util","haml::compiler","haml::util","haml::util","haml::util","haml::util","haml::buffer","haml::helpers","staticconditionalcontext","haml::html::erb","haml::parser","haml::buffer","haml::engine","haml::error","haml::exec::generic","haml::exec::html2haml","haml::exec::haml","haml::html","haml::helpers::errorreturn","haml::parser::parsenode","staticconditionalcontext","haml::parser","haml::helpers","haml::exec::generic","haml::engine","object","actionview::base","haml::helpers::actionviewextensions","haml::exec::generic","haml::parser","haml::exec::generic","haml::parser","object","haml::parser","haml::parser","haml::buffer","haml::parser","haml::parser","haml::parser","hpricot::node","hpricot::node","haml::util","haml::parser","haml::util","haml::helpers","haml::helpers::xssmods","haml::engine","haml::compiler","haml::template","haml::compiler","haml::compiler","haml::helpers","haml::helpers::xssmods","haml::parser","haml::parser","haml::exec::generic","haml::exec::html2haml","haml::exec::haml","haml::parser","haml::compiler","haml::compiler","haml::compiler","haml::compiler","haml::buffer","haml::compiler","haml::exec::generic","haml::exec::generic","haml::util","haml::util","haml::util","haml::template","haml::util","haml::parser","actionview::base","haml::engine","haml::filters::base","haml::filters::cdata","haml::filters::escaped","haml::filters::markdown","haml::filters::maruku","haml::filters::plain","haml::filters::preserve","haml::filters::sass","haml::filters::textile","haml::html","hpricot::elem","haml::engine","actionview::base","haml::filters::base","haml::filters::css","haml::filters::javascript","actionview::base","haml::filters::base","haml::compiler","haml::util","haml::version","haml::buffer","haml::compiler","haml::util","haml::util","actionview::helpers::texthelper","haml::util","haml::parser","object","object","haml::engine","haml::exec::generic","haml::exec::html2haml","haml::exec::haml","actionview::base","haml::util","haml::util","haml::parser","hpricot::elem","hpricot::elem","hpricot::elem","object","haml::util","haml::util","haml::helpers","haml::helpers::xssmods","haml::helpers","haml::helpers::xssmods","haml::helpers","haml::helpers","haml::buffer","haml::parser::line","hpricot::node","haml::buffer","haml::buffer","haml::parser","haml::compiler","haml::html","hpricot::cdata","hpricot::comment","hpricot::doc","hpricot::doctype","hpricot::elem","hpricot::node","hpricot::xmldecl","hpricot::elem","haml::util","haml::engine","haml::exec::generic","haml::helpers::errorreturn","haml::buffer","haml::template","object","haml::util","haml::parser","haml::buffer","haml::parser","hpricot::node","haml::html::erb","haml::version","haml::util","haml::util","haml::util","haml::helpers","actionview::helpers::capturehelper","actionview::helpers::capturehelper","actionview::helpers::capturehelper","haml::helpers::actionviewextensions","haml::helpers","haml::buffer","haml::engine","files/mit-license.html","files/readme_md.html","files/lib/haml_rb.html","files/lib/haml/buffer_rb.html","files/lib/haml/compiler_rb.html","files/lib/haml/engine_rb.html","files/lib/haml/error_rb.html","files/lib/haml/exec_rb.html","files/lib/haml/filters_rb.html","files/lib/haml/helpers_rb.html","files/lib/haml/helpers/action_view_extensions_rb.html","files/lib/haml/helpers/action_view_mods_rb.html","files/lib/haml/helpers/xss_mods_rb.html","files/lib/haml/html_rb.html","files/lib/haml/html/erb_rb.html","files/lib/haml/parser_rb.html","files/lib/haml/railtie_rb.html","files/lib/haml/root_rb.html","files/lib/haml/shared_rb.html","files/lib/haml/template_rb.html","files/lib/haml/template/options_rb.html","files/lib/haml/template/patch_rb.html","files/lib/haml/template/plugin_rb.html","files/lib/haml/util_rb.html","files/lib/haml/version_rb.html","files/lib/sass_rb.html","files/lib/sass/plugin_rb.html","files/lib/sass/rails2_shim_rb.html","files/lib/sass/rails3_shim_rb.html"]}}