var search_data = {"index":{"longSearchIndex":["lib/deadlock_retry.rb","deadlockretry","deadlockretry::classmethods","deadlockretry::classmethods","deadlockretry::classmethods","deadlockretry","deadlockretry::classmethods","deadlockretry::classmethods","deadlockretry::classmethods","files/changelog.html","files/license.html","files/readme.html","files/lib/deadlock_retry_rb.html","files/lib/deadlock_retry/version_rb.html"],"info":[["DeadlockRetry","lib/deadlock_retry/version.rb","classes/DeadlockRetry.html"," < ","",1],["ClassMethods","DeadlockRetry","classes/DeadlockRetry/ClassMethods.html"," < ","",1],["check_innodb_status_available","DeadlockRetry::ClassMethods","classes/DeadlockRetry/ClassMethods.html#M000005","()","Should we try to log innodb status -- if we don't have permission to, we actually break in-flight transactions,",2],["exponential_pause","DeadlockRetry::ClassMethods","classes/DeadlockRetry/ClassMethods.html#M000002","(count)","",2],["in_nested_transaction?","DeadlockRetry::ClassMethods","classes/DeadlockRetry/ClassMethods.html#M000003","()","",2],["included","DeadlockRetry","classes/DeadlockRetry.html#M000000","(base)","",2],["log_innodb_status","DeadlockRetry::ClassMethods","classes/DeadlockRetry/ClassMethods.html#M000006","()","",2],["show_innodb_status","DeadlockRetry::ClassMethods","classes/DeadlockRetry/ClassMethods.html#M000004","()","",2],["transaction_with_deadlock_handling","DeadlockRetry::ClassMethods","classes/DeadlockRetry/ClassMethods.html#M000001","(*objects, &block)","",2],["CHANGELOG","files/CHANGELOG.html","files/CHANGELOG.html","","deadlock_retry changes  == v1.2.0  * Support for postgres (tomhughes) * Testing AR versions (kbrock)",3],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2005 Jamis Buck Permission is hereby granted, free of charge, to any person obtaining a",3],["README","files/README.html","files/README.html","","= Deadlock Retry  Deadlock retry allows the database adapter (currently only tested with the MySQLAdapter)",3],["deadlock_retry.rb","files/lib/deadlock_retry_rb.html","files/lib/deadlock_retry_rb.html","","",3],["version.rb","files/lib/deadlock_retry/version_rb.html","files/lib/deadlock_retry/version_rb.html","","",3]],"searchIndex":["deadlockretry","classmethods","check_innodb_status_available()","exponential_pause()","in_nested_transaction?()","included()","log_innodb_status()","show_innodb_status()","transaction_with_deadlock_handling()","changelog","license","readme","deadlock_retry.rb","version.rb"]}}