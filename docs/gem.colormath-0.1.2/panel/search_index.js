var search_data = {"index":{"info":[["ColorMath","lib/colormath/adjust.rb","classes/ColorMath.html"," < ","",1],["Adjust","ColorMath","classes/ColorMath/Adjust.html"," < ","Adjust parameters of a colour ",1],["Blend","ColorMath","classes/ColorMath/Blend.html"," < ","Blend two or more colours and return a new colour. ",1],["Color","ColorMath","classes/ColorMath/Color.html"," < ","Color can be mixed into any class that responds to red, green, and blue, where 0 <= c <= 1 ",1],["HSL","ColorMath","classes/ColorMath/HSL.html"," < Object","A colour represented and stored as hue, saturation and luminance components ",1],["RGB","ColorMath","classes/ColorMath/RGB.html"," < Object","A colour represented and stored as red, green and blue components ",1],["alpha","ColorMath::Blend","classes/ColorMath/Blend.html#M000006","(ca, cb, alpha)","Blend ca with cb. alpha represents the proportion of cb, i.e. alpha = 0 => ca; alpha = 1 => cb. ",2],["blue","ColorMath::Adjust","classes/ColorMath/Adjust.html#M000005","(color, delta)","Adjust the blue component by delta, stopping at 0 or 1 ",2],["blue","ColorMath::HSL","classes/ColorMath/HSL.html#M000011","()","The blue component of the colour in RGB representation where 0 <= b <= 1 ",2],["compact_hex","ColorMath::Color","classes/ColorMath/Color.html#M000020","()","The hexadecimal representation of the colour, using 3 digits if possible ",2],["component","ColorMath::HSL","classes/ColorMath/HSL.html#M000015","(t)","",2],["for_rgb","ColorMath::Blend","classes/ColorMath/Blend.html#M000007","(a, b, &blk)","",2],["force_range","ColorMath::Color","classes/ColorMath/Color.html#M000022","(v, min, max)","",2],["green","ColorMath::Adjust","classes/ColorMath/Adjust.html#M000004","(color, delta)","Adjust the green component by delta, stopping at 0 or 1 ",2],["green","ColorMath::HSL","classes/ColorMath/HSL.html#M000010","()","The green component of the colour in RGB representation where 0 <= g <= 1 ",2],["hex","ColorMath::Color","classes/ColorMath/Color.html#M000019","()","The six-digit hexadecimal representation of the colour, e.g. \"#cafe66\" ",2],["hex_color","ColorMath","classes/ColorMath.html#M000026","(s)","Instantiate an RGB colour from a 3- or 6-digit hexadecimal representation. \"#abc\", \"#abcdef\", \"abc\",",2],["hk","ColorMath::HSL","classes/ColorMath/HSL.html#M000012","()","",2],["hue","ColorMath::Adjust","classes/ColorMath/Adjust.html#M000000","(color, delta)","Rotate the hue by delta degrees in either direction ",2],["hue","ColorMath::RGB","classes/ColorMath/RGB.html#M000017","()","The hue component of the colour in HSL representation where 0 <= h < 360 ",2],["inspect","ColorMath::Color","classes/ColorMath/Color.html#M000021","(*args)","",2],["luminance","ColorMath::Adjust","classes/ColorMath/Adjust.html#M000002","(color, delta)","Adjust the luminance by delta, stopping at 0 or 1 ",2],["luminance","ColorMath::RGB","classes/ColorMath/RGB.html#M000023","()","The luminance component of the colour in HSL representation where 0 <= l <= 1 ",2],["max","ColorMath::RGB","classes/ColorMath/RGB.html#M000025","()","",2],["min","ColorMath::RGB","classes/ColorMath/RGB.html#M000024","()","",2],["new","ColorMath::HSL","classes/ColorMath/HSL.html#M000008","(h, s, l)","Initialize an HSL colour where: 0 <= h <= 360 0 <= s <=   1 0 <= l <=   1 Saturation and luminance values",2],["new","ColorMath::RGB","classes/ColorMath/RGB.html#M000016","(r, g, b)","Initialize an RGB colour where: 0 <= r <= 1 0 <= g <= 1 0 <= b <= 1 Values outside these ranges will",2],["p","ColorMath::HSL","classes/ColorMath/HSL.html#M000014","()","",2],["q","ColorMath::HSL","classes/ColorMath/HSL.html#M000013","()","",2],["red","ColorMath::Adjust","classes/ColorMath/Adjust.html#M000003","(color, delta)","Adjust the red component by delta, stopping at 0 or 1 ",2],["red","ColorMath::HSL","classes/ColorMath/HSL.html#M000009","()","The red component of the colour in RGB representation where 0 <= r <= 1 ",2],["saturation","ColorMath::Adjust","classes/ColorMath/Adjust.html#M000001","(color, delta)","Adjust the saturation by delta, stopping at 0 or 1 ",2],["saturation","ColorMath::RGB","classes/ColorMath/RGB.html#M000018","()","The saturation component of the colour in HSL representation where 0 <= s <= 1 ",2],["README.md","files/README_md.html","files/README_md.html","","ColorMath =========  A simple Ruby library to perform operations on RGB and HSL colours.  Usage -----",3],["colormath.rb","files/lib/colormath_rb.html","files/lib/colormath_rb.html","","",3],["adjust.rb","files/lib/colormath/adjust_rb.html","files/lib/colormath/adjust_rb.html","","",3],["blend.rb","files/lib/colormath/blend_rb.html","files/lib/colormath/blend_rb.html","","",3],["color.rb","files/lib/colormath/color_rb.html","files/lib/colormath/color_rb.html","","",3],["hsl.rb","files/lib/colormath/color/hsl_rb.html","files/lib/colormath/color/hsl_rb.html","","",3],["rgb.rb","files/lib/colormath/color/rgb_rb.html","files/lib/colormath/color/rgb_rb.html","","",3],["version.rb","files/lib/colormath/version_rb.html","files/lib/colormath/version_rb.html","","",3]],"searchIndex":["colormath","adjust","blend","color","hsl","rgb","alpha()","blue()","blue()","compact_hex()","component()","for_rgb()","force_range()","green()","green()","hex()","hex_color()","hk()","hue()","hue()","inspect()","luminance()","luminance()","max()","min()","new()","new()","p()","q()","red()","red()","saturation()","saturation()","readme.md","colormath.rb","adjust.rb","blend.rb","color.rb","hsl.rb","rgb.rb","version.rb"],"longSearchIndex":["lib/colormath/version.rb","colormath","colormath","colormath","colormath","colormath","colormath::blend","colormath::adjust","colormath::hsl","colormath::color","colormath::hsl","colormath::blend","colormath::color","colormath::adjust","colormath::hsl","colormath::color","colormath","colormath::hsl","colormath::adjust","colormath::rgb","colormath::color","colormath::adjust","colormath::rgb","colormath::rgb","colormath::rgb","colormath::hsl","colormath::rgb","colormath::hsl","colormath::hsl","colormath::adjust","colormath::hsl","colormath::adjust","colormath::rgb","files/readme_md.html","files/lib/colormath_rb.html","files/lib/colormath/adjust_rb.html","files/lib/colormath/blend_rb.html","files/lib/colormath/color_rb.html","files/lib/colormath/color/hsl_rb.html","files/lib/colormath/color/rgb_rb.html","files/lib/colormath/version_rb.html"]}}