var search_data = {"index":{"longSearchIndex":["lib/vagrant/util/file_checksum.rb","lib/vagrant/util/file_checksum.rb","lib/vagrant.rb","vagrant","vagrant::action","vagrant::action::box","vagrant::action::box","vagrant::action::box","vagrant::action::box","vagrant::action::box","vagrant::action","vagrant::action","vagrant::action::env","vagrant::action","vagrant::action","vagrant::action::general","vagrant::action::general","vagrant::action","vagrant::action","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action::vm","vagrant::action","vagrant","vagrant","vagrant","vagrant","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant::command","vagrant","vagrant::communication","vagrant::communication","vagrant","vagrant::config","vagrant::config","vagrant::config","vagrant::config","vagrant::config","vagrant::config","vagrant::config","vagrant::config","vagrant::config","vagrant::config::vmconfig","vagrant::config::vmconfig","vagrant::config","vagrant","vagrant","vagrant::downloaders","vagrant::downloaders","vagrant::downloaders","vagrant","vagrant::driver","vagrant::driver::virtualbox","vagrant::driver","vagrant::driver","vagrant::driver","vagrant","vagrant","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant::errors","vagrant","vagrant::guest","vagrant::guest","vagrant::guest::base","vagrant::guest","vagrant::guest","vagrant::guest::freebsd","vagrant::guest::freebsd","vagrant::guest","vagrant::guest","vagrant::guest::linux","vagrant::guest::linux","vagrant::guest","vagrant::guest","vagrant::guest::solaris","vagrant::guest::solaris","vagrant::guest","vagrant::guest","vagrant","vagrant::hosts","vagrant::hosts","vagrant::hosts","vagrant::hosts","vagrant::hosts","vagrant::hosts","vagrant::hosts","vagrant","vagrant","vagrant::provisioners","vagrant::provisioners","vagrant::provisioners::chef","vagrant::provisioners::chef","vagrant::provisioners","vagrant::provisioners::chefclient","vagrant::provisioners","vagrant::provisioners::chefsolo","vagrant::provisioners","vagrant::provisioners::puppet","vagrant::provisioners","vagrant::provisioners","vagrant::provisioners::puppetserver","vagrant::provisioners","vagrant::provisioners","vagrant::provisioners::shell","vagrant","vagrant","vagrant","vagrant","vagrant::ui","vagrant::ui","vagrant::ui","vagrant::ui","vagrant","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util","vagrant::util::subprocess","vagrant::util::subprocess","vagrant::util::subprocess","vagrant::util","vagrant","vagrant::box","vagrant::util::hashwithindifferentaccess","vagrant::util::hashwithindifferentaccess","vagrant::provisioners::chefsolo::config","vagrant::testhelpers","vagrant::environment","vagrant::environment","vagrant::boxcollection","vagrant::config::errorrecorder","vagrant::provisioners::chef::config","vagrant::provisioners::chef::config","vagrant::ui::basic","vagrant::action::vm::network","vagrant::action::vm::network","vagrant::provisioners::chef::config","vagrant::action::warden","vagrant::util::platform","vagrant::util::platform","vagrant::action::vm::boot","vagrant::action::box::download","vagrant::environment","vagrant::testhelpers","vagrant::action::vm::network","vagrant::action::vm::network","vagrant::action::vm::network","vagrant::action","vagrant::util::busy","vagrant::action::box::destroy","vagrant::action::box::download","vagrant::action::box::package","vagrant::action::box::unpackage","vagrant::action::box::verify","vagrant::action::builder","vagrant::action::env::set","vagrant::action::general::package","vagrant::action::general::validate","vagrant::action::vm::boot","vagrant::action::vm::checkaccessible","vagrant::action::vm::checkbox","vagrant::action::vm::checkguestadditions","vagrant::action::vm::checkportcollisions","vagrant::action::vm::cleanmachinefolder","vagrant::action::vm::clearforwardedports","vagrant::action::vm::clearnetworkinterfaces","vagrant::action::vm::clearsharedfolders","vagrant::action::vm::customize","vagrant::action::vm::destroy","vagrant::action::vm::destroyunusednetworkinterfaces","vagrant::action::vm::discardstate","vagrant::action::vm::export","vagrant::action::vm::forwardports","vagrant::action::vm::halt","vagrant::action::vm::hostname","vagrant::action::vm::import","vagrant::action::vm::matchmacaddress","vagrant::action::vm::nfs","vagrant::action::vm::network","vagrant::action::vm::package","vagrant::action::vm::packagevagrantfile","vagrant::action::vm::provision","vagrant::action::vm::provisionercleanup","vagrant::action::vm::prunenfsexports","vagrant::action::vm::resume","vagrant::action::vm::setuppackagefiles","vagrant::action::vm::sharefolders","vagrant::action::vm::suspend","vagrant::action::warden","vagrant::testhelpers","vagrant::config","vagrant::guest::arch","vagrant::guest::base","vagrant::guest::debian","vagrant::guest::redhat","vagrant::guest::solaris","vagrant::guest::ubuntu","vagrant::vm","vagrant::ssh","filechecksum","vagrant::provisioners::chef","vagrant::provisioners::chef","vagrant::action::vm::cleanmachinefolder","vagrant::datastore","vagrant::testhelpers","vagrant::provisioners::base","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::ui::basic","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::environment","vagrant::provisioners::chefclient::config","vagrant","vagrant::datastore","vagrant::action::general::package","vagrant::environment","vagrant::provisioners::base","vagrant::provisioners::chefclient","vagrant::provisioners::chefsolo","vagrant::provisioners::puppet","vagrant::provisioners::puppetserver","vagrant::provisioners::shell","vagrant","vagrant::config::vmconfig::provisioner","vagrant::guest::arch","vagrant::guest::base","vagrant::guest::debian","vagrant::guest::gentoo","vagrant::guest::redhat","vagrant::guest::solaris","vagrant::communication::ssh","vagrant::util::hashwithindifferentaccess","vagrant::provisioners::chefsolo::config","vagrant::action::general::package","vagrant::environment","vagrant::provisioners::chefclient","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::action::vm::network","vagrant::action::vm::sharefolders","vagrant::action::vm::packagevagrantfile","vagrant::vm","vagrant::config::vmconfig","vagrant::action::box::unpackage","vagrant::config::vmconfig","vagrant::config::vmconfig","vagrant::config::vmconfig","vagrant::action::builder","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::util::hashwithindifferentaccess","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::box","vagrant::vm","vagrant::hosts","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::guest::base","vagrant::guest::linux","vagrant::environment","vagrant::action::box::download","vagrant::downloaders::base","vagrant::downloaders::file","vagrant::downloaders::http","vagrant::action::box::download","vagrant::registry","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::guest::freebsd","vagrant::action::vm::provision","vagrant::action::vm::provisionercleanup","vagrant::provisioners::chefclient::config","vagrant::provisioners::chefclient","vagrant::errors::vagranterror","vagrant::errors::vagranterror","vagrant::errors::vagranterror","vagrant::errors::vagranterror","vagrant::ssh","vagrant::cli","vagrant::command::base","vagrant::command::box","vagrant::command::boxadd","vagrant::command::boxlist","vagrant::command::boxremove","vagrant::command::boxrepackage","vagrant::command::destroy","vagrant::command::halt","vagrant::command::init","vagrant::command::package","vagrant::command::provision","vagrant::command::reload","vagrant::command::resume","vagrant::command::ssh","vagrant::command::sshconfig","vagrant::command::status","vagrant::command::suspend","vagrant::command::up","vagrant::communication::base","vagrant::communication::ssh","vagrant::driver::virtualboxbase","vagrant::util::subprocess","vagrant::util::subprocess","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::provisioners::chefsolo","vagrant::provisioners::puppet::config","vagrant::provisioners::puppet::config","vagrant::action::vm::export","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::action::vm::nfs","vagrant::action::vm::nfs","vagrant::provisioners::chefclient::config","vagrant::provisioners::chefclient::config","vagrant::action::warden","vagrant::boxcollection","vagrant::action::vm::network","vagrant::environment","vagrant::util::busy","vagrant::action::builder","vagrant::action::vm::nfs","vagrant::config::container","vagrant::ui::basic","vagrant::ui::colored","vagrant::config::vmconfig","vagrant::action::vm::forwardports","vagrant::action::vm::forwardports","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::config::sshconfig","vagrant::config::sshconfig","vagrant::util::filemode","vagrant::util::templaterenderer","vagrant::action::box::package","vagrant::action::vm::package","vagrant::registry","vagrant::util::counter","vagrant::environment","vagrant::vm","vagrant::action::vm::nfs","vagrant::provisioners::chefsolo","vagrant::provisioners::chefclient","vagrant","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::guest::base","vagrant::guest::freebsd","vagrant::guest::linux","vagrant::guest::solaris","vagrant::vm","vagrant::action::vm::checkportcollisions","vagrant::action::vm::checkportcollisions","vagrant::util::hashwithindifferentaccess","vagrant::cli","vagrant::command::box","digestclass","vagrant::testhelpers","vagrant::environment","vagrant::action::vm::nfs","vagrant::action::vm::network","vagrant::action::vm::network","vagrant::action::vm::network","vagrant","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::util::hashwithindifferentaccess","vagrant::action::builder","vagrant::ssh","vagrant::action::builder","vagrant::action::builder","vagrant::action::builder","vagrant::config::base","vagrant::provisioners::chef::config","vagrant::action::box::download","vagrant::util::networkip","vagrant::provisioners::chef::config","vagrant::config::base","vagrant::util::hashwithindifferentaccess","vagrant::util::platform","vagrant::config::loader","vagrant::environment","vagrant::plugin","vagrant::environment","vagrant::vm","vagrant::environment","vagrant::environment","vagrant::environment","vagrant::environment","vagrant::environment","vagrant::provisioners::chef::config","vagrant::provisioners::puppet","vagrant::downloaders::base","vagrant::downloaders::file","vagrant::downloaders::http","vagrant::hosts::arch","vagrant::hosts::bsd","vagrant::hosts::base","vagrant::hosts::fedora","vagrant::hosts::freebsd","vagrant::hosts::linux","vagrant::hosts::windows","vagrant::util::hashwithindifferentaccess","vagrant::config::base","vagrant::config::top","vagrant::config::vmconfig","vagrant::util::hashwithindifferentaccess","vagrant::util::hashwithindifferentaccess","vagrant::provisioners::chef::config","vagrant::config::top","vagrant::guest::linux","vagrant::action::vm::nfs","vagrant::guest::base","vagrant::guest::freebsd","vagrant::guest::linux","vagrant::guest::base","vagrant::guest::linux","vagrant::guest::solaris","vagrant::guest::ubuntu","vagrant::action::vm::sharefolders","vagrant::environment","vagrant::util::counter","vagrant::config::vmconfig","vagrant::util::networkip","vagrant::guest::redhat","vagrant::guest::suse","filechecksum","vagrant::action::box::destroy","vagrant::action::box::download","vagrant::action::box::unpackage","vagrant::action::box::verify","vagrant::action::builder","vagrant::action::env::set","vagrant::action::general::package","vagrant::action::general::validate","vagrant::action::runner","vagrant::action::vm::boot","vagrant::action::vm::checkaccessible","vagrant::action::vm::checkbox","vagrant::action::vm::checkguestadditions","vagrant::action::vm::checkportcollisions","vagrant::action::vm::cleanmachinefolder","vagrant::action::vm::clearforwardedports","vagrant::action::vm::clearnetworkinterfaces","vagrant::action::vm::clearsharedfolders","vagrant::action::vm::customize","vagrant::action::vm::destroy","vagrant::action::vm::destroyunusednetworkinterfaces","vagrant::action::vm::discardstate","vagrant::action::vm::export","vagrant::action::vm::forwardports","vagrant::action::vm::halt","vagrant::action::vm::hostname","vagrant::action::vm::import","vagrant::action::vm::matchmacaddress","vagrant::action::vm::nfs","vagrant::action::vm::network","vagrant::action::vm::packagevagrantfile","vagrant::action::vm::provision","vagrant::action::vm::provisionercleanup","vagrant::action::vm::prunenfsexports","vagrant::action::vm::resume","vagrant::action::vm::setuppackagefiles","vagrant::action::vm::sharefolders","vagrant::action::vm::suspend","vagrant::action::warden","vagrant::box","vagrant::boxcollection","vagrant::cli","vagrant::command::base","vagrant::command::box","vagrant::communication::ssh","vagrant::config::container","vagrant::config::errorrecorder","vagrant::config::loader","vagrant::config::top","vagrant::config::vmconfig","vagrant::config::vmconfig::provisioner","vagrant::config::vmconfig::subvm","vagrant::datastore","vagrant::downloaders::base","vagrant::driver::virtualbox","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::environment","vagrant::errors::vagranterror","vagrant::guest::base","vagrant::guest::freebsd::freebsdconfig","vagrant::guest::linux","vagrant::guest::linux::linuxconfig","vagrant::guest::solaris::solarisconfig","vagrant::hosts::bsd","vagrant::hosts::base","vagrant::hosts::fedora","vagrant::hosts::freebsd","vagrant::hosts::linux","vagrant::plugin","vagrant::provisioners::base","vagrant::provisioners::chef","vagrant::provisioners::chefsolo","vagrant::provisioners::chefsolo::config","vagrant::provisioners::puppet","vagrant::provisioners::puppet::config","vagrant::provisioners::puppetserver::config","vagrant::provisioners::shell::config","vagrant::registry","vagrant::ssh","vagrant::ui::interface","vagrant::util::hashwithindifferentaccess","vagrant::util::subprocess","vagrant::util::subprocess::result","vagrant::util::subprocess::timeoutexceeded","vagrant::util::templaterenderer","vagrant::vm","vagrant::provisioners::chefsolo::config","vagrant::hosts::bsd","vagrant::hosts::base","vagrant::hosts::linux","vagrant::hosts::windows","vagrant::hosts::bsd","vagrant::hosts::linux","vagrant::action::vm::nfs","vagrant::hosts::arch","vagrant::hosts::bsd","vagrant::hosts::base","vagrant::hosts::linux","vagrant::hosts::bsd","vagrant::hosts::base","vagrant::hosts::linux","vagrant::action::vm::export","vagrant::vm","vagrant::command::package","vagrant::command::package","vagrant::command::package","vagrant::command::base","vagrant::util::platform","vagrant::plugin","vagrant::hosts::bsd","vagrant::hosts::base","vagrant::hosts::linux","vagrant::downloaders::base","vagrant::downloaders::file","vagrant::provisioners::base","vagrant::provisioners::chef","vagrant::provisioners::chefclient","vagrant::provisioners::chefsolo","vagrant::provisioners::puppet","vagrant::action::vm::nfs","vagrant::action::vm::sharefolders","vagrant::guest::freebsd","vagrant::action::vm::nfs","vagrant::environment","vagrant::util::stackedprocrunner","vagrant::config::loader","vagrant::config::vmconfig","vagrant::vm","vagrant::provisioners::base","vagrant::provisioners::chefclient","vagrant::provisioners::chefsolo","vagrant::provisioners::puppet","vagrant::provisioners::puppetserver","vagrant::provisioners::shell","vagrant","vagrant::util::stackedprocrunner","vagrant::driver::virtualboxbase","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::util::subprocess","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::driver::virtualbox","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::communication::base","vagrant::communication::ssh","vagrant::action::box::download","vagrant::action::box::unpackage","vagrant::action::general::package","vagrant::action::vm::export","vagrant::action::vm::import","vagrant::registry","vagrant::util::busy","vagrant::util::busy","vagrant::vm","vagrant::boxcollection","vagrant::environment","vagrant::vm","vagrant::util::templaterenderer","vagrant::util::templaterenderer","vagrant::util::templaterenderer","vagrant::util::templaterenderer","vagrant::util::templaterenderer","vagrant::box","vagrant::action::builder","vagrant::ui::basic","vagrant::downloaders::http","vagrant::vm","vagrant::util::retryable","vagrant::environment","vagrant::action::runner","vagrant::config","vagrant::vm","vagrant::provisioners::chefclient","vagrant::provisioners::chefsolo","vagrant::provisioners::chef::config","vagrant::util::stackedprocrunner","vagrant::provisioners::puppet","vagrant::provisioners::puppetserver","vagrant::util::safeexec","vagrant::ui::basic","vagrant::config::loader","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::provisioners::puppet","vagrant::config::base","vagrant::action::box::unpackage","vagrant::provisioners::chef","vagrant::environment","vagrant::provisioners::chef","vagrant::provisioners::chefclient","vagrant::provisioners::chefsolo","vagrant::action::vm::export","vagrant::config::vmconfig","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::provisioners::chefsolo","vagrant::provisioners::puppet","vagrant::provisioners::puppet","vagrant::action::vm::sharefolders","vagrant::communication::ssh","vagrant::testhelpers","vagrant","vagrant::command::base","vagrant::vm","vagrant::command::ssh","vagrant::command::ssh","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::action::builder","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::vm","vagrant::vm","vagrant::errors::vagranterror","vagrant::communication::base","vagrant::communication::ssh","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::vm","vagrant::config::vmconfig","vagrant::util::platform","vagrant::action::general::package","vagrant::util::platform","vagrant::communication::base","vagrant::action::vm::forwardports","vagrant::util::platform","vagrant::testhelpers","vagrant::action::builder","vagrant::config::base","vagrant::registry","vagrant::config::base","vagrant::errors::vagranterror","vagrant::vm","vagrant::util::busy","vagrant::vm","digestclass","vagrant::communication::base","vagrant::communication::ssh","vagrant::provisioners::chefclient","vagrant::provisioners::chefclient","vagrant::action::builder","vagrant::vm","vagrant::testhelpers","vagrant::testhelpers","vagrant::testhelpers","vagrant::testhelpers","vagrant::testhelpers","vagrant::config::base","vagrant::config::sshconfig","vagrant::config::vmconfig","vagrant::config::vmconfig::provisioner","vagrant::config::vagrantconfig","vagrant::provisioners::chef::config","vagrant::provisioners::chefclient::config","vagrant::provisioners::chefsolo::config","vagrant::provisioners::puppet::config","vagrant::provisioners::shell::config","vagrant::config::top","vagrant::provisioners::chefclient::config","vagrant::provisioners::chefclient","vagrant::util::hashwithindifferentaccess","vagrant::action::vm::network","vagrant::provisioners::chef","vagrant::provisioners::puppet","vagrant::provisioners::puppetserver","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::action::vm::network","vagrant::action::vm::nfs","vagrant::provisioners::chefsolo","vagrant::provisioners::puppet","vagrant::driver::virtualboxbase","vagrant::driver::virtualbox_4_0","vagrant::driver::virtualbox_4_1","vagrant::environment","vagrant::environment","vagrant::action::vm::boot","vagrant::util::platform","vagrant::provisioners::shell","vagrant::command::base","vagrant::action::box::download","files/changelog_md.html","files/license.html","files/readme_md.html","files/lib/vagrant_rb.html","files/lib/vagrant/action_rb.html","files/lib/vagrant/action/box/destroy_rb.html","files/lib/vagrant/action/box/download_rb.html","files/lib/vagrant/action/box/package_rb.html","files/lib/vagrant/action/box/unpackage_rb.html","files/lib/vagrant/action/box/verify_rb.html","files/lib/vagrant/action/builder_rb.html","files/lib/vagrant/action/builtin_rb.html","files/lib/vagrant/action/env/set_rb.html","files/lib/vagrant/action/environment_rb.html","files/lib/vagrant/action/general/package_rb.html","files/lib/vagrant/action/general/validate_rb.html","files/lib/vagrant/action/runner_rb.html","files/lib/vagrant/action/vm/boot_rb.html","files/lib/vagrant/action/vm/check_accessible_rb.html","files/lib/vagrant/action/vm/check_box_rb.html","files/lib/vagrant/action/vm/check_guest_additions_rb.html","files/lib/vagrant/action/vm/check_port_collisions_rb.html","files/lib/vagrant/action/vm/clean_machine_folder_rb.html","files/lib/vagrant/action/vm/clear_forwarded_ports_rb.html","files/lib/vagrant/action/vm/clear_network_interfaces_rb.html","files/lib/vagrant/action/vm/clear_shared_folders_rb.html","files/lib/vagrant/action/vm/customize_rb.html","files/lib/vagrant/action/vm/destroy_rb.html","files/lib/vagrant/action/vm/destroy_unused_network_interfaces_rb.html","files/lib/vagrant/action/vm/discard_state_rb.html","files/lib/vagrant/action/vm/export_rb.html","files/lib/vagrant/action/vm/forward_ports_rb.html","files/lib/vagrant/action/vm/halt_rb.html","files/lib/vagrant/action/vm/host_name_rb.html","files/lib/vagrant/action/vm/import_rb.html","files/lib/vagrant/action/vm/match_mac_address_rb.html","files/lib/vagrant/action/vm/network_rb.html","files/lib/vagrant/action/vm/nfs_rb.html","files/lib/vagrant/action/vm/package_rb.html","files/lib/vagrant/action/vm/package_vagrantfile_rb.html","files/lib/vagrant/action/vm/provision_rb.html","files/lib/vagrant/action/vm/provisioner_cleanup_rb.html","files/lib/vagrant/action/vm/prune_nfs_exports_rb.html","files/lib/vagrant/action/vm/resume_rb.html","files/lib/vagrant/action/vm/setup_package_files_rb.html","files/lib/vagrant/action/vm/share_folders_rb.html","files/lib/vagrant/action/vm/suspend_rb.html","files/lib/vagrant/action/warden_rb.html","files/lib/vagrant/box_rb.html","files/lib/vagrant/box_collection_rb.html","files/lib/vagrant/cli_rb.html","files/lib/vagrant/command_rb.html","files/lib/vagrant/command/base_rb.html","files/lib/vagrant/command/box_rb.html","files/lib/vagrant/command/box_add_rb.html","files/lib/vagrant/command/box_list_rb.html","files/lib/vagrant/command/box_remove_rb.html","files/lib/vagrant/command/box_repackage_rb.html","files/lib/vagrant/command/destroy_rb.html","files/lib/vagrant/command/halt_rb.html","files/lib/vagrant/command/init_rb.html","files/lib/vagrant/command/package_rb.html","files/lib/vagrant/command/provision_rb.html","files/lib/vagrant/command/reload_rb.html","files/lib/vagrant/command/resume_rb.html","files/lib/vagrant/command/ssh_rb.html","files/lib/vagrant/command/ssh_config_rb.html","files/lib/vagrant/command/status_rb.html","files/lib/vagrant/command/suspend_rb.html","files/lib/vagrant/command/up_rb.html","files/lib/vagrant/communication_rb.html","files/lib/vagrant/communication/base_rb.html","files/lib/vagrant/communication/ssh_rb.html","files/lib/vagrant/config_rb.html","files/lib/vagrant/config/base_rb.html","files/lib/vagrant/config/container_rb.html","files/lib/vagrant/config/error_recorder_rb.html","files/lib/vagrant/config/loader_rb.html","files/lib/vagrant/config/nfs_rb.html","files/lib/vagrant/config/package_rb.html","files/lib/vagrant/config/ssh_rb.html","files/lib/vagrant/config/top_rb.html","files/lib/vagrant/config/vagrant_rb.html","files/lib/vagrant/config/vm_rb.html","files/lib/vagrant/config/vm/provisioner_rb.html","files/lib/vagrant/config/vm/sub_vm_rb.html","files/lib/vagrant/data_store_rb.html","files/lib/vagrant/downloaders_rb.html","files/lib/vagrant/downloaders/base_rb.html","files/lib/vagrant/downloaders/file_rb.html","files/lib/vagrant/downloaders/http_rb.html","files/lib/vagrant/driver_rb.html","files/lib/vagrant/driver/virtualbox_rb.html","files/lib/vagrant/driver/virtualbox_4_0_rb.html","files/lib/vagrant/driver/virtualbox_4_1_rb.html","files/lib/vagrant/driver/virtualbox_base_rb.html","files/lib/vagrant/environment_rb.html","files/lib/vagrant/errors_rb.html","files/lib/vagrant/guest_rb.html","files/lib/vagrant/guest/arch_rb.html","files/lib/vagrant/guest/base_rb.html","files/lib/vagrant/guest/debian_rb.html","files/lib/vagrant/guest/freebsd_rb.html","files/lib/vagrant/guest/gentoo_rb.html","files/lib/vagrant/guest/linux_rb.html","files/lib/vagrant/guest/linux/config_rb.html","files/lib/vagrant/guest/linux/error_rb.html","files/lib/vagrant/guest/redhat_rb.html","files/lib/vagrant/guest/solaris_rb.html","files/lib/vagrant/guest/suse_rb.html","files/lib/vagrant/guest/ubuntu_rb.html","files/lib/vagrant/hosts_rb.html","files/lib/vagrant/hosts/arch_rb.html","files/lib/vagrant/hosts/base_rb.html","files/lib/vagrant/hosts/bsd_rb.html","files/lib/vagrant/hosts/fedora_rb.html","files/lib/vagrant/hosts/freebsd_rb.html","files/lib/vagrant/hosts/linux_rb.html","files/lib/vagrant/hosts/windows_rb.html","files/lib/vagrant/plugin_rb.html","files/lib/vagrant/provisioners_rb.html","files/lib/vagrant/provisioners/base_rb.html","files/lib/vagrant/provisioners/chef_rb.html","files/lib/vagrant/provisioners/chef_client_rb.html","files/lib/vagrant/provisioners/chef_solo_rb.html","files/lib/vagrant/provisioners/puppet_rb.html","files/lib/vagrant/provisioners/puppet_server_rb.html","files/lib/vagrant/provisioners/shell_rb.html","files/lib/vagrant/registry_rb.html","files/lib/vagrant/ssh_rb.html","files/lib/vagrant/test_helpers_rb.html","files/lib/vagrant/ui_rb.html","files/lib/vagrant/util_rb.html","files/lib/vagrant/util/busy_rb.html","files/lib/vagrant/util/counter_rb.html","files/lib/vagrant/util/file_checksum_rb.html","files/lib/vagrant/util/file_mode_rb.html","files/lib/vagrant/util/hash_with_indifferent_access_rb.html","files/lib/vagrant/util/network_ip_rb.html","files/lib/vagrant/util/platform_rb.html","files/lib/vagrant/util/retryable_rb.html","files/lib/vagrant/util/safe_exec_rb.html","files/lib/vagrant/util/stacked_proc_runner_rb.html","files/lib/vagrant/util/subprocess_rb.html","files/lib/vagrant/util/template_renderer_rb.html","files/lib/vagrant/version_rb.html","files/lib/vagrant/vm_rb.html"],"info":[["DigestClass","lib/vagrant/util/file_checksum.rb","classes/DigestClass.html"," < Object","This is an \"interface\" that should be implemented by any digest class passed into FileChecksum. Note",1],["FileChecksum","lib/vagrant/util/file_checksum.rb","classes/FileChecksum.html"," < Object","",1],["Vagrant","lib/vagrant/action/box/destroy.rb","classes/Vagrant.html"," < ","TODO: * env.lock --- This file contains all of the internal errors in Vagrant's core commands, actions,",1],["Action","Vagrant","classes/Vagrant/Action.html"," < ","",1],["Box","Vagrant::Action","classes/Vagrant/Action/Box.html"," < ","",1],["Destroy","Vagrant::Action::Box","classes/Vagrant/Action/Box/Destroy.html"," < Object","",1],["Download","Vagrant::Action::Box","classes/Vagrant/Action/Box/Download.html"," < Object","",1],["Package","Vagrant::Action::Box","classes/Vagrant/Action/Box/Package.html"," < General::Package","Packages a box which has already been unpackaged (such as for the `vagrant box repackage` command) by",1],["Unpackage","Vagrant::Action::Box","classes/Vagrant/Action/Box/Unpackage.html"," < Object","Unpackages a downloaded box to a given directory with a given name. # Required Variables * `download.temp_path`",1],["Verify","Vagrant::Action::Box","classes/Vagrant/Action/Box/Verify.html"," < Object","",1],["Builder","Vagrant::Action","classes/Vagrant/Action/Builder.html"," < Object","Action builder which provides a nice DSL for building up a middleware sequence for Vagrant actions. This",1],["Env","Vagrant::Action","classes/Vagrant/Action/Env.html"," < ","",1],["Set","Vagrant::Action::Env","classes/Vagrant/Action/Env/Set.html"," < Object","A middleware which just sets up the environment with some options which are passed to it. ",1],["Environment","Vagrant::Action","classes/Vagrant/Action/Environment.html"," < Util::HashWithIndifferentAccess","Represents an action environment which is what is passed to the `call` method of each action. This environment",1],["General","Vagrant::Action","classes/Vagrant/Action/General.html"," < ","",1],["Package","Vagrant::Action::General","classes/Vagrant/Action/General/Package.html"," < Object","A general packaging (tar) middleware. Given the following options, it will do the right thing: * package.output",1],["Validate","Vagrant::Action::General","classes/Vagrant/Action/General/Validate.html"," < Object","Simply validates the configuration of the current Vagrant environment. ",1],["Runner","Vagrant::Action","classes/Vagrant/Action/Runner.html"," < Object","",1],["VM","Vagrant::Action","classes/Vagrant/Action/VM.html"," < ","",1],["Boot","Vagrant::Action::VM","classes/Vagrant/Action/VM/Boot.html"," < Object","",1],["CheckAccessible","Vagrant::Action::VM","classes/Vagrant/Action/VM/CheckAccessible.html"," < Object","",1],["CheckBox","Vagrant::Action::VM","classes/Vagrant/Action/VM/CheckBox.html"," < Object","",1],["CheckGuestAdditions","Vagrant::Action::VM","classes/Vagrant/Action/VM/CheckGuestAdditions.html"," < Object","Middleware which verifies that the VM has the proper guest additions installed and prints a warning if",1],["CheckPortCollisions","Vagrant::Action::VM","classes/Vagrant/Action/VM/CheckPortCollisions.html"," < Object","Action that checks to make sure there are no forwarded port collisions, and raises an exception if there",1],["CleanMachineFolder","Vagrant::Action::VM","classes/Vagrant/Action/VM/CleanMachineFolder.html"," < Object","Cleans up the VirtualBox machine folder for any \".xml-prev\" files which VirtualBox may have left over.",1],["ClearForwardedPorts","Vagrant::Action::VM","classes/Vagrant/Action/VM/ClearForwardedPorts.html"," < Object","",1],["ClearNetworkInterfaces","Vagrant::Action::VM","classes/Vagrant/Action/VM/ClearNetworkInterfaces.html"," < Object","",1],["ClearSharedFolders","Vagrant::Action::VM","classes/Vagrant/Action/VM/ClearSharedFolders.html"," < Object","",1],["Customize","Vagrant::Action::VM","classes/Vagrant/Action/VM/Customize.html"," < Object","",1],["Destroy","Vagrant::Action::VM","classes/Vagrant/Action/VM/Destroy.html"," < Object","",1],["DestroyUnusedNetworkInterfaces","Vagrant::Action::VM","classes/Vagrant/Action/VM/DestroyUnusedNetworkInterfaces.html"," < Object","Destroys the unused host only interfaces. This middleware cleans up any created host only networks. ",1],["DiscardState","Vagrant::Action::VM","classes/Vagrant/Action/VM/DiscardState.html"," < Object","Discards the saved state of the VM if its saved. If its not saved, does nothing. ",1],["Export","Vagrant::Action::VM","classes/Vagrant/Action/VM/Export.html"," < Object","",1],["ForwardPorts","Vagrant::Action::VM","classes/Vagrant/Action/VM/ForwardPorts.html"," < Object","",1],["Halt","Vagrant::Action::VM","classes/Vagrant/Action/VM/Halt.html"," < Object","",1],["HostName","Vagrant::Action::VM","classes/Vagrant/Action/VM/HostName.html"," < Object","",1],["Import","Vagrant::Action::VM","classes/Vagrant/Action/VM/Import.html"," < Object","",1],["MatchMACAddress","Vagrant::Action::VM","classes/Vagrant/Action/VM/MatchMACAddress.html"," < Object","",1],["NFS","Vagrant::Action::VM","classes/Vagrant/Action/VM/NFS.html"," < Object","Enables NFS based shared folders. `nfsd` must already be installed on the host machine, and NFS client",1],["Network","Vagrant::Action::VM","classes/Vagrant/Action/VM/Network.html"," < Object","This action handles all `config.vm.network` configurations by setting up the VM properly and enabling",1],["Package","Vagrant::Action::VM","classes/Vagrant/Action/VM/Package.html"," < General::Package","A subclass of {General::Package} which simply makes sure that the package directory is set to the directory",1],["PackageVagrantfile","Vagrant::Action::VM","classes/Vagrant/Action/VM/PackageVagrantfile.html"," < Object","Puts a generated Vagrantfile into the package directory so that it can be included in the package. ",1],["Provision","Vagrant::Action::VM","classes/Vagrant/Action/VM/Provision.html"," < Object","",1],["ProvisionerCleanup","Vagrant::Action::VM","classes/Vagrant/Action/VM/ProvisionerCleanup.html"," < Object","",1],["PruneNFSExports","Vagrant::Action::VM","classes/Vagrant/Action/VM/PruneNFSExports.html"," < Object","",1],["Resume","Vagrant::Action::VM","classes/Vagrant/Action/VM/Resume.html"," < Object","",1],["SetupPackageFiles","Vagrant::Action::VM","classes/Vagrant/Action/VM/SetupPackageFiles.html"," < Object","Sets up the mapping of files to copy into the package and verifies that the files can be properly copied.",1],["ShareFolders","Vagrant::Action::VM","classes/Vagrant/Action/VM/ShareFolders.html"," < Object","",1],["Suspend","Vagrant::Action::VM","classes/Vagrant/Action/VM/Suspend.html"," < Object","",1],["Warden","Vagrant::Action","classes/Vagrant/Action/Warden.html"," < Object","The action warden is a middleware which injects itself between every other middleware, watching for exceptions",1],["Box","Vagrant","classes/Vagrant/Box.html"," < Object","Represents a \"box,\" which is simply a packaged vagrant environment. Boxes are simply `tar` files which",1],["BoxCollection","Vagrant","classes/Vagrant/BoxCollection.html"," < Object","Represents a collection of boxes, providing helpful methods for finding boxes. ",1],["CLI","Vagrant","classes/Vagrant/CLI.html"," < Command::Base","Manages the command line interface to Vagrant. ",1],["Command","Vagrant","classes/Vagrant/Command.html"," < ","",1],["Base","Vagrant::Command","classes/Vagrant/Command/Base.html"," < Object","Base class for any CLI commands. This class provides documentation on the interface as well as helper",1],["Box","Vagrant::Command","classes/Vagrant/Command/Box.html"," < Base","",1],["BoxAdd","Vagrant::Command","classes/Vagrant/Command/BoxAdd.html"," < Base","",1],["BoxList","Vagrant::Command","classes/Vagrant/Command/BoxList.html"," < Base","",1],["BoxRemove","Vagrant::Command","classes/Vagrant/Command/BoxRemove.html"," < Base","",1],["BoxRepackage","Vagrant::Command","classes/Vagrant/Command/BoxRepackage.html"," < Base","",1],["Destroy","Vagrant::Command","classes/Vagrant/Command/Destroy.html"," < Base","",1],["Halt","Vagrant::Command","classes/Vagrant/Command/Halt.html"," < Base","",1],["Init","Vagrant::Command","classes/Vagrant/Command/Init.html"," < Base","",1],["Package","Vagrant::Command","classes/Vagrant/Command/Package.html"," < Base","",1],["Provision","Vagrant::Command","classes/Vagrant/Command/Provision.html"," < Base","",1],["Reload","Vagrant::Command","classes/Vagrant/Command/Reload.html"," < Base","",1],["Resume","Vagrant::Command","classes/Vagrant/Command/Resume.html"," < Base","",1],["SSH","Vagrant::Command","classes/Vagrant/Command/SSH.html"," < Base","",1],["SSHConfig","Vagrant::Command","classes/Vagrant/Command/SSHConfig.html"," < Base","",1],["Status","Vagrant::Command","classes/Vagrant/Command/Status.html"," < Base","",1],["Suspend","Vagrant::Command","classes/Vagrant/Command/Suspend.html"," < Base","",1],["Up","Vagrant::Command","classes/Vagrant/Command/Up.html"," < Base","",1],["Communication","Vagrant","classes/Vagrant/Communication.html"," < ","",1],["Base","Vagrant::Communication","classes/Vagrant/Communication/Base.html"," < Object","The base class for any classes that provide an API for communicating with the virtual machine. There",1],["SSH","Vagrant::Communication","classes/Vagrant/Communication/SSH.html"," < Base","Provides communication with the VM via SSH. ",1],["Config","Vagrant","classes/Vagrant/Config.html"," < ","",1],["Base","Vagrant::Config","classes/Vagrant/Config/Base.html"," < Object","The base class for all configuration classes. This implements basic things such as the environment instance",1],["Container","Vagrant::Config","classes/Vagrant/Config/Container.html"," < Object","Contains loaded configuration values and provides access to those values. This is the class returned",1],["ErrorRecorder","Vagrant::Config","classes/Vagrant/Config/ErrorRecorder.html"," < Object","A class which is passed into the various {Base#validate} methods and can be used as a helper to add error",1],["Loader","Vagrant::Config","classes/Vagrant/Config/Loader.html"," < Object","This class is responsible for loading Vagrant configuration, usually in the form of Vagrantfiles. Loading",1],["NFSConfig","Vagrant::Config","classes/Vagrant/Config/NFSConfig.html"," < Base","",1],["PackageConfig","Vagrant::Config","classes/Vagrant/Config/PackageConfig.html"," < Base","",1],["SSHConfig","Vagrant::Config","classes/Vagrant/Config/SSHConfig.html"," < Base","",1],["Top","Vagrant::Config","classes/Vagrant/Config/Top.html"," < Base","This class is the \"top\" configure class, which handles registering other configuration classes as well",1],["VMConfig","Vagrant::Config","classes/Vagrant/Config/VMConfig.html"," < Base","",1],["Provisioner","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig/Provisioner.html"," < Object","Represents a single configured provisioner for a VM. ",1],["SubVM","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig/SubVM.html"," < Object","Represents a single sub-VM in a multi-VM environment. ",1],["VagrantConfig","Vagrant::Config","classes/Vagrant/Config/VagrantConfig.html"," < Base","",1],["DataStore","Vagrant","classes/Vagrant/DataStore.html"," < Util::HashWithIndifferentAccess","The Vagrant data store is a key-value store which is persisted as JSON in a local file which is specified",1],["Downloaders","Vagrant","classes/Vagrant/Downloaders.html"," < ","",1],["Base","Vagrant::Downloaders","classes/Vagrant/Downloaders/Base.html"," < Object","Represents a base class for a downloader. A downloader handles downloading a box file to a temporary",1],["File","Vagrant::Downloaders","classes/Vagrant/Downloaders/File.html"," < Base","\"Downloads\" a file to a temporary file. Basically, this downloader simply does a file copy. ",1],["HTTP","Vagrant::Downloaders","classes/Vagrant/Downloaders/HTTP.html"," < Base","Downloads a file from an HTTP URL to a temporary file. This downloader reports its progress to stdout",1],["Driver","Vagrant","classes/Vagrant/Driver.html"," < ","",1],["VirtualBox","Vagrant::Driver","classes/Vagrant/Driver/VirtualBox.html"," < VirtualBoxBase","This class contains the logic to drive VirtualBox. Read the VirtualBoxBase source for documentation on",1],["VMNotFound","Vagrant::Driver::VirtualBox","classes/Vagrant/Driver/VirtualBox/VMNotFound.html"," < StandardError","This is raised if the VM is not found when initializing a driver with a UUID. ",1],["VirtualBoxBase","Vagrant::Driver","classes/Vagrant/Driver/VirtualBoxBase.html"," < Object","Base class for all VirtualBox drivers. This class provides useful tools for things such as executing",1],["VirtualBox_4_0","Vagrant::Driver","classes/Vagrant/Driver/VirtualBox_4_0.html"," < VirtualBoxBase","Driver for VirtualBox 4.0.x ",1],["VirtualBox_4_1","Vagrant::Driver","classes/Vagrant/Driver/VirtualBox_4_1.html"," < VirtualBoxBase","Driver for VirtualBox 4.1.x ",1],["Environment","Vagrant","classes/Vagrant/Environment.html"," < Object","Represents a single Vagrant environment. A \"Vagrant environment\" is defined as basically a folder with",1],["Errors","Vagrant","classes/Vagrant/Errors.html"," < ","This module contains all of the internal errors in Vagrant's core. These errors are _expected_ errors",1],["BaseVMNotFound","Vagrant::Errors","classes/Vagrant/Errors/BaseVMNotFound.html"," < VagrantError","",1],["BoxAlreadyExists","Vagrant::Errors","classes/Vagrant/Errors/BoxAlreadyExists.html"," < VagrantError","",1],["BoxDownloadUnknownType","Vagrant::Errors","classes/Vagrant/Errors/BoxDownloadUnknownType.html"," < VagrantError","",1],["BoxNotFound","Vagrant::Errors","classes/Vagrant/Errors/BoxNotFound.html"," < VagrantError","",1],["BoxNotSpecified","Vagrant::Errors","classes/Vagrant/Errors/BoxNotSpecified.html"," < VagrantError","",1],["BoxSpecifiedDoesntExist","Vagrant::Errors","classes/Vagrant/Errors/BoxSpecifiedDoesntExist.html"," < VagrantError","",1],["BoxUnpackageFailure","Vagrant::Errors","classes/Vagrant/Errors/BoxUnpackageFailure.html"," < VagrantError","",1],["BoxVerificationFailed","Vagrant::Errors","classes/Vagrant/Errors/BoxVerificationFailed.html"," < VagrantError","",1],["CLIInvalidOptions","Vagrant::Errors","classes/Vagrant/Errors/CLIInvalidOptions.html"," < VagrantError","",1],["ConfigValidationFailed","Vagrant::Errors","classes/Vagrant/Errors/ConfigValidationFailed.html"," < VagrantError","",1],["DeprecationError","Vagrant::Errors","classes/Vagrant/Errors/DeprecationError.html"," < VagrantError","",1],["DotfileIsDirectory","Vagrant::Errors","classes/Vagrant/Errors/DotfileIsDirectory.html"," < VagrantError","",1],["DownloaderFileDoesntExist","Vagrant::Errors","classes/Vagrant/Errors/DownloaderFileDoesntExist.html"," < VagrantError","",1],["DownloaderHTTPSocketError","Vagrant::Errors","classes/Vagrant/Errors/DownloaderHTTPSocketError.html"," < VagrantError","",1],["DownloaderHTTPStatusError","Vagrant::Errors","classes/Vagrant/Errors/DownloaderHTTPStatusError.html"," < VagrantError","",1],["EnvironmentLockedError","Vagrant::Errors","classes/Vagrant/Errors/EnvironmentLockedError.html"," < VagrantError","",1],["ForwardPortAutolistEmpty","Vagrant::Errors","classes/Vagrant/Errors/ForwardPortAutolistEmpty.html"," < VagrantError","",1],["ForwardPortCollision","Vagrant::Errors","classes/Vagrant/Errors/ForwardPortCollision.html"," < VagrantError","",1],["ForwardPortCollisionResume","Vagrant::Errors","classes/Vagrant/Errors/ForwardPortCollisionResume.html"," < VagrantError","",1],["HomeDirectoryMigrationFailed","Vagrant::Errors","classes/Vagrant/Errors/HomeDirectoryMigrationFailed.html"," < VagrantError","",1],["HomeDirectoryNotAccessible","Vagrant::Errors","classes/Vagrant/Errors/HomeDirectoryNotAccessible.html"," < VagrantError","",1],["MultiVMEnvironmentRequired","Vagrant::Errors","classes/Vagrant/Errors/MultiVMEnvironmentRequired.html"," < VagrantError","",1],["MultiVMTargetRequired","Vagrant::Errors","classes/Vagrant/Errors/MultiVMTargetRequired.html"," < VagrantError","",1],["NFSHostRequired","Vagrant::Errors","classes/Vagrant/Errors/NFSHostRequired.html"," < VagrantError","",1],["NFSNoHostNetwork","Vagrant::Errors","classes/Vagrant/Errors/NFSNoHostNetwork.html"," < VagrantError","",1],["NFSNotSupported","Vagrant::Errors","classes/Vagrant/Errors/NFSNotSupported.html"," < VagrantError","",1],["NetworkAdapterCollision","Vagrant::Errors","classes/Vagrant/Errors/NetworkAdapterCollision.html"," < VagrantError","",1],["NetworkCollision","Vagrant::Errors","classes/Vagrant/Errors/NetworkCollision.html"," < VagrantError","",1],["NetworkDHCPAlreadyAttached","Vagrant::Errors","classes/Vagrant/Errors/NetworkDHCPAlreadyAttached.html"," < VagrantError","",1],["NetworkNoAdapters","Vagrant::Errors","classes/Vagrant/Errors/NetworkNoAdapters.html"," < VagrantError","",1],["NetworkNotFound","Vagrant::Errors","classes/Vagrant/Errors/NetworkNotFound.html"," < VagrantError","",1],["NoEnvironmentError","Vagrant::Errors","classes/Vagrant/Errors/NoEnvironmentError.html"," < VagrantError","",1],["PackageIncludeMissing","Vagrant::Errors","classes/Vagrant/Errors/PackageIncludeMissing.html"," < VagrantError","",1],["PackageOutputExists","Vagrant::Errors","classes/Vagrant/Errors/PackageOutputExists.html"," < VagrantError","",1],["PackageRequiresDirectory","Vagrant::Errors","classes/Vagrant/Errors/PackageRequiresDirectory.html"," < VagrantError","",1],["PersistDotfileExists","Vagrant::Errors","classes/Vagrant/Errors/PersistDotfileExists.html"," < VagrantError","",1],["SCPUnavailable","Vagrant::Errors","classes/Vagrant/Errors/SCPUnavailable.html"," < VagrantError","",1],["SSHAuthenticationFailed","Vagrant::Errors","classes/Vagrant/Errors/SSHAuthenticationFailed.html"," < VagrantError","",1],["SSHConnectionRefused","Vagrant::Errors","classes/Vagrant/Errors/SSHConnectionRefused.html"," < VagrantError","",1],["SSHKeyBadPermissions","Vagrant::Errors","classes/Vagrant/Errors/SSHKeyBadPermissions.html"," < VagrantError","",1],["SSHPortNotDetected","Vagrant::Errors","classes/Vagrant/Errors/SSHPortNotDetected.html"," < VagrantError","",1],["SSHUnavailable","Vagrant::Errors","classes/Vagrant/Errors/SSHUnavailable.html"," < VagrantError","",1],["SSHUnavailableWindows","Vagrant::Errors","classes/Vagrant/Errors/SSHUnavailableWindows.html"," < VagrantError","",1],["SharedFolderCreateFailed","Vagrant::Errors","classes/Vagrant/Errors/SharedFolderCreateFailed.html"," < VagrantError","",1],["VBoxManageError","Vagrant::Errors","classes/Vagrant/Errors/VBoxManageError.html"," < VagrantError","",1],["VMBaseMacNotSpecified","Vagrant::Errors","classes/Vagrant/Errors/VMBaseMacNotSpecified.html"," < VagrantError","",1],["VMCustomizationFailed","Vagrant::Errors","classes/Vagrant/Errors/VMCustomizationFailed.html"," < VagrantError","",1],["VMFailedToBoot","Vagrant::Errors","classes/Vagrant/Errors/VMFailedToBoot.html"," < VagrantError","",1],["VMGuestError","Vagrant::Errors","classes/Vagrant/Errors/VMGuestError.html"," < VagrantError","",1],["VMImportFailure","Vagrant::Errors","classes/Vagrant/Errors/VMImportFailure.html"," < VagrantError","",1],["VMInaccessible","Vagrant::Errors","classes/Vagrant/Errors/VMInaccessible.html"," < VagrantError","",1],["VMNoMatchError","Vagrant::Errors","classes/Vagrant/Errors/VMNoMatchError.html"," < VagrantError","",1],["VMNotCreatedError","Vagrant::Errors","classes/Vagrant/Errors/VMNotCreatedError.html"," < VagrantError","",1],["VMNotFoundError","Vagrant::Errors","classes/Vagrant/Errors/VMNotFoundError.html"," < VagrantError","",1],["VMNotRunningError","Vagrant::Errors","classes/Vagrant/Errors/VMNotRunningError.html"," < VagrantError","",1],["VMPowerOffToPackage","Vagrant::Errors","classes/Vagrant/Errors/VMPowerOffToPackage.html"," < VagrantError","",1],["VagrantError","Vagrant::Errors","classes/Vagrant/Errors/VagrantError.html"," < StandardError","Main superclass of any errors in Vagrant. This provides some convenience methods for setting the status",1],["VagrantInterrupt","Vagrant::Errors","classes/Vagrant/Errors/VagrantInterrupt.html"," < VagrantError","",1],["VagrantfileExistsError","Vagrant::Errors","classes/Vagrant/Errors/VagrantfileExistsError.html"," < VagrantError","",1],["VagrantfileSyntaxError","Vagrant::Errors","classes/Vagrant/Errors/VagrantfileSyntaxError.html"," < VagrantError","",1],["VirtualBoxInvalidVersion","Vagrant::Errors","classes/Vagrant/Errors/VirtualBoxInvalidVersion.html"," < VagrantError","",1],["VirtualBoxNotDetected","Vagrant::Errors","classes/Vagrant/Errors/VirtualBoxNotDetected.html"," < VagrantError","",1],["Guest","Vagrant","classes/Vagrant/Guest.html"," < ","",1],["Arch","Vagrant::Guest","classes/Vagrant/Guest/Arch.html"," < Linux","",1],["Base","Vagrant::Guest","classes/Vagrant/Guest/Base.html"," < Object","The base class for a \"system.\" A system represents an installed operating system on a given box. There",1],["BaseError","Vagrant::Guest::Base","classes/Vagrant/Guest/Base/BaseError.html"," < Errors::VagrantError","",1],["Debian","Vagrant::Guest","classes/Vagrant/Guest/Debian.html"," < Linux","",1],["FreeBSD","Vagrant::Guest","classes/Vagrant/Guest/FreeBSD.html"," < Base","A general Vagrant system implementation for \"freebsd\". Contributed by Kenneth Vestergaard <kvs@binarysolutions.dk>",1],["FreeBSDConfig","Vagrant::Guest::FreeBSD","classes/Vagrant/Guest/FreeBSD/FreeBSDConfig.html"," < Vagrant::Config::Base","A custom config class which will be made accessible via `config.freebsd` This is not necessary for all",1],["FreeBSDError","Vagrant::Guest::FreeBSD","classes/Vagrant/Guest/FreeBSD/FreeBSDError.html"," < Errors::VagrantError","Here for whenever it may be used. ",1],["Gentoo","Vagrant::Guest","classes/Vagrant/Guest/Gentoo.html"," < Linux","",1],["Linux","Vagrant::Guest","classes/Vagrant/Guest/Linux.html"," < Vagrant::Guest::Base","",1],["LinuxConfig","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux/LinuxConfig.html"," < Vagrant::Config::Base","A custom config class which will be made accessible via `config.linux` This is not necessary for all",1],["LinuxError","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux/LinuxError.html"," < Errors::VagrantError","",1],["Redhat","Vagrant::Guest","classes/Vagrant/Guest/Redhat.html"," < Linux","",1],["Solaris","Vagrant::Guest","classes/Vagrant/Guest/Solaris.html"," < Base","A general Vagrant system implementation for \"solaris\". Contributed by Blake Irvin <b.irvin@modcloth.com>",1],["SolarisConfig","Vagrant::Guest::Solaris","classes/Vagrant/Guest/Solaris/SolarisConfig.html"," < Vagrant::Config::Base","A custom config class which will be made accessible via `config.solaris` This is not necessary for all",1],["SolarisError","Vagrant::Guest::Solaris","classes/Vagrant/Guest/Solaris/SolarisError.html"," < Errors::VagrantError","Here for whenever it may be used. ",1],["Suse","Vagrant::Guest","classes/Vagrant/Guest/Suse.html"," < Redhat","",1],["Ubuntu","Vagrant::Guest","classes/Vagrant/Guest/Ubuntu.html"," < Debian","",1],["Hosts","Vagrant","classes/Vagrant/Hosts.html"," < ","",1],["Arch","Vagrant::Hosts","classes/Vagrant/Hosts/Arch.html"," < Linux","",1],["BSD","Vagrant::Hosts","classes/Vagrant/Hosts/BSD.html"," < Base","Represents a BSD host, such as FreeBSD and Darwin (Mac OS X). ",1],["Base","Vagrant::Hosts","classes/Vagrant/Hosts/Base.html"," < Object","Interface for classes which house behavior that is specific to the host OS that is running Vagrant. By",1],["Fedora","Vagrant::Hosts","classes/Vagrant/Hosts/Fedora.html"," < Linux","",1],["FreeBSD","Vagrant::Hosts","classes/Vagrant/Hosts/FreeBSD.html"," < BSD","Represents a FreeBSD host ",1],["Linux","Vagrant::Hosts","classes/Vagrant/Hosts/Linux.html"," < Base","Represents a Linux based host, such as Ubuntu. ",1],["Windows","Vagrant::Hosts","classes/Vagrant/Hosts/Windows.html"," < Base","",1],["Plugin","Vagrant","classes/Vagrant/Plugin.html"," < Object","Represents a single plugin and also manages loading plugins from RubyGems. If a plugin has a `vagrant_init.rb`",1],["Provisioners","Vagrant","classes/Vagrant/Provisioners.html"," < ","",1],["Base","Vagrant::Provisioners","classes/Vagrant/Provisioners/Base.html"," < Object","The base class for a \"provisioner.\" A provisioner is responsible for provisioning a Vagrant system. This",1],["Chef","Vagrant::Provisioners","classes/Vagrant/Provisioners/Chef.html"," < Base","This class is a base class where the common functionality shared between chef-solo and chef-client provisioning",1],["ChefError","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef/ChefError.html"," < Errors::VagrantError","",1],["Config","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef/Config.html"," < Vagrant::Config::Base","This is the configuration which is available through `config.chef` ",1],["ChefClient","Vagrant::Provisioners","classes/Vagrant/Provisioners/ChefClient.html"," < Chef","This class implements provisioning via chef-client, allowing provisioning with a chef server. ",1],["Config","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient/Config.html"," < Chef::Config","",1],["ChefSolo","Vagrant::Provisioners","classes/Vagrant/Provisioners/ChefSolo.html"," < Chef","This class implements provisioning via chef-solo. ",1],["Config","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo/Config.html"," < Chef::Config","",1],["Puppet","Vagrant::Provisioners","classes/Vagrant/Provisioners/Puppet.html"," < Base","",1],["Config","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet/Config.html"," < Vagrant::Config::Base","",1],["PuppetError","Vagrant::Provisioners","classes/Vagrant/Provisioners/PuppetError.html"," < Vagrant::Errors::VagrantError","",1],["PuppetServer","Vagrant::Provisioners","classes/Vagrant/Provisioners/PuppetServer.html"," < Base","",1],["Config","Vagrant::Provisioners::PuppetServer","classes/Vagrant/Provisioners/PuppetServer/Config.html"," < Vagrant::Config::Base","",1],["PuppetServerError","Vagrant::Provisioners","classes/Vagrant/Provisioners/PuppetServerError.html"," < Vagrant::Errors::VagrantError","",1],["Shell","Vagrant::Provisioners","classes/Vagrant/Provisioners/Shell.html"," < Base","",1],["Config","Vagrant::Provisioners::Shell","classes/Vagrant/Provisioners/Shell/Config.html"," < Vagrant::Config::Base","",1],["Registry","Vagrant","classes/Vagrant/Registry.html"," < Object","Register components in a single location that can be queried. This allows certain components (such as",1],["SSH","Vagrant","classes/Vagrant/SSH.html"," < Object","Manages SSH connection information as well as allows opening an SSH connection. ",1],["TestHelpers","Vagrant","classes/Vagrant/TestHelpers.html"," < ","Test helpers provided by Vagrant to allow for plugin developers to write automated tests for their code.",1],["UI","Vagrant","classes/Vagrant/UI.html"," < ","",1],["Basic","Vagrant::UI","classes/Vagrant/UI/Basic.html"," < Interface","This is a UI implementation that outputs the text as is. It doesn't add any color. ",1],["Colored","Vagrant::UI","classes/Vagrant/UI/Colored.html"," < Basic","This is a UI implementation that outputs color for various types of messages. This should only be used",1],["Interface","Vagrant::UI","classes/Vagrant/UI/Interface.html"," < Object","Vagrant UIs handle communication with the outside world (typically through a shell). They must respond",1],["Silent","Vagrant::UI","classes/Vagrant/UI/Silent.html"," < Interface","This is a UI implementation that does nothing. ",1],["Util","Vagrant","classes/Vagrant/Util.html"," < ","",1],["Busy","Vagrant::Util","classes/Vagrant/Util/Busy.html"," < Object","Utility class which allows blocks of code to be marked as \"busy\" with a specified interrupt handler.",1],["Counter","Vagrant::Util","classes/Vagrant/Util/Counter.html"," < ","Atomic counter implementation. This is useful for incrementing a counter which is guaranteed to only",1],["FileMode","Vagrant::Util","classes/Vagrant/Util/FileMode.html"," < Object","",1],["HashWithIndifferentAccess","Vagrant::Util","classes/Vagrant/Util/HashWithIndifferentAccess.html"," < ::Hash","A hash with indifferent access. Mostly taken from Thor/Rails (thanks). Normally I'm not a fan of using",1],["NetworkIP","Vagrant::Util","classes/Vagrant/Util/NetworkIP.html"," < ","",1],["Platform","Vagrant::Util","classes/Vagrant/Util/Platform.html"," < Object","This class just contains some platform checking code. ",1],["Retryable","Vagrant::Util","classes/Vagrant/Util/Retryable.html"," < ","",1],["SafeExec","Vagrant::Util","classes/Vagrant/Util/SafeExec.html"," < ","This module provies a `safe_exec` method which is a drop-in replacement for `Kernel.exec` which addresses",1],["StackedProcRunner","Vagrant::Util","classes/Vagrant/Util/StackedProcRunner.html"," < ","Represents the \"stacked proc runner\" behavior which is used a couple places within Vagrant. This allows",1],["Subprocess","Vagrant::Util","classes/Vagrant/Util/Subprocess.html"," < Object","Execute a command in a subprocess, gathering the results and exit status. This class also allows you",1],["LaunchError","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess/LaunchError.html"," < StandardError","An error which raises when a process fails to start ",1],["Result","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess/Result.html"," < Object","Container class to store the results of executing a subprocess. ",1],["TimeoutExceeded","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess/TimeoutExceeded.html"," < StandardError","An error which occurs when the process doesn't end within the given timeout. ",1],["TemplateRenderer","Vagrant::Util","classes/Vagrant/Util/TemplateRenderer.html"," < OpenStruct","This class is used to render the ERB templates in the `GEM_ROOT/templates` directory. ",1],["VM","Vagrant","classes/Vagrant/VM.html"," < Object","",1],["<=>","Vagrant::Box","classes/Vagrant/Box.html#M000155","(other)","Implemented for comparison with other boxes. Comparison is implemented by simply comparing name. ",2],["[]","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000573","(key)","",2],["[]=","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000574","(key, value)","",2],["_default_cookbook_path","Vagrant::Provisioners::ChefSolo::Config","classes/Vagrant/Provisioners/ChefSolo/Config.html#M000492","()","This stores a reference to the default cookbook path which is used later. Do not use this publicly. I",2],["action_env","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000543","(v_env = nil)","Returns a blank app (callable) and action environment with the given vagrant environment. This allows",2],["action_registry","Vagrant::Environment","classes/Vagrant/Environment.html#M000370","()","Action registry for registering new actions with this environment. @return [Registry] ",2],["action_runner","Vagrant::Environment","classes/Vagrant/Environment.html#M000369","()","Action runner for executing actions in the context of this environment. @return [Action::Runner] ",2],["add","Vagrant::BoxCollection","classes/Vagrant/BoxCollection.html#M000156","(name, url)","Adds a box to this collection with the given name and located at the given URL. ",2],["add","Vagrant::Config::ErrorRecorder","classes/Vagrant/Config/ErrorRecorder.html#M000212","(message)","Adds an error to the list of errors. ",2],["add_recipe","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000481","(name)","Adds a recipe to the run list ",2],["add_role","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000482","(name)","Adds a role to the run list ",2],["ask","Vagrant::UI::Basic","classes/Vagrant/UI/Basic.html#M000557","(message, opts=nil)","",2],["assign_adapter_locations","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000103","(adapters)","This method assigns the adapter to use for the adapter. e.g. it says that the first adapter is actually",2],["assign_interface_numbers","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000109","(networks, adapters)","Assigns the actual interface number of a network based on the enabled NICs on the virtual machine. This",2],["attempts","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000473","()","Provide defaults in such a way that they won't override the instance variable. This is so merging continues",2],["begin_rescue","Vagrant::Action::Warden","classes/Vagrant/Action/Warden.html#M000148","(env)","Begins the recovery sequence for all middlewares which have run. It does this by calling `recover` (if",2],["bit32?","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000589","()","Returns boolean noting whether this is a 32-bit CPU. This can easily throw false positives since it relies",2],["bit64?","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000588","()","Returns boolean noting whether this is a 64-bit CPU. This is not 100% accurate and there could easily",2],["boot","Vagrant::Action::VM::Boot","classes/Vagrant/Action/VM/Boot.html#M000045","()","",2],["box_temp_path","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000010","()","",2],["boxes","Vagrant::Environment","classes/Vagrant/Environment.html#M000362","()","Returns the collection of boxes for the environment. @return [BoxCollection] ",2],["boxes_path","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000548","()","Path to the boxes directory in the home directory @return [Pathname] ",2],["bridged_adapter","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000121","(config)","",2],["bridged_config","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000120","(args)","",2],["bridged_network_config","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000125","(config)","",2],["builtin!","Vagrant::Action","classes/Vagrant/Action.html#M000020","(registry)","Registers the builtin actions with a specific registry. These are the pre-built action sequences that",2],["busy","Vagrant::Util::Busy","classes/Vagrant/Util/Busy.html#M000551","(sig_callback)","Mark a given block of code as a \"busy\" block of code, which will register a SIGINT handler for the duration",2],["call","Vagrant::Action::Box::Destroy","classes/Vagrant/Action/Box/Destroy.html#M000001","(env)","",2],["call","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000003","(env)","",2],["call","Vagrant::Action::Box::Package","classes/Vagrant/Action/Box/Package.html#M000006","(env)","",2],["call","Vagrant::Action::Box::Unpackage","classes/Vagrant/Action/Box/Unpackage.html#M000013","(env)","",2],["call","Vagrant::Action::Box::Verify","classes/Vagrant/Action/Box/Verify.html#M000017","(env)","",2],["call","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000028","(env)","Runs the builder stack with the given environment. ",2],["call","Vagrant::Action::Env::Set","classes/Vagrant/Action/Env/Set.html#M000033","(env)","",2],["call","Vagrant::Action::General::Package","classes/Vagrant/Action/General/Package.html#M000035","(env)","",2],["call","Vagrant::Action::General::Validate","classes/Vagrant/Action/General/Validate.html#M000039","(env)","",2],["call","Vagrant::Action::VM::Boot","classes/Vagrant/Action/VM/Boot.html#M000044","(env)","",2],["call","Vagrant::Action::VM::CheckAccessible","classes/Vagrant/Action/VM/CheckAccessible.html#M000051","(env)","",2],["call","Vagrant::Action::VM::CheckBox","classes/Vagrant/Action/VM/CheckBox.html#M000049","(env)","",2],["call","Vagrant::Action::VM::CheckGuestAdditions","classes/Vagrant/Action/VM/CheckGuestAdditions.html#M000053","(env)","",2],["call","Vagrant::Action::VM::CheckPortCollisions","classes/Vagrant/Action/VM/CheckPortCollisions.html#M000055","(env)","",2],["call","Vagrant::Action::VM::CleanMachineFolder","classes/Vagrant/Action/VM/CleanMachineFolder.html#M000059","(env)","",2],["call","Vagrant::Action::VM::ClearForwardedPorts","classes/Vagrant/Action/VM/ClearForwardedPorts.html#M000062","(env)","",2],["call","Vagrant::Action::VM::ClearNetworkInterfaces","classes/Vagrant/Action/VM/ClearNetworkInterfaces.html#M000064","(env)","",2],["call","Vagrant::Action::VM::ClearSharedFolders","classes/Vagrant/Action/VM/ClearSharedFolders.html#M000068","(env)","",2],["call","Vagrant::Action::VM::Customize","classes/Vagrant/Action/VM/Customize.html#M000066","(env)","",2],["call","Vagrant::Action::VM::Destroy","classes/Vagrant/Action/VM/Destroy.html#M000070","(env)","",2],["call","Vagrant::Action::VM::DestroyUnusedNetworkInterfaces","classes/Vagrant/Action/VM/DestroyUnusedNetworkInterfaces.html#M000072","(env)","",2],["call","Vagrant::Action::VM::DiscardState","classes/Vagrant/Action/VM/DiscardState.html#M000074","(env)","",2],["call","Vagrant::Action::VM::Export","classes/Vagrant/Action/VM/Export.html#M000076","(env)","",2],["call","Vagrant::Action::VM::ForwardPorts","classes/Vagrant/Action/VM/ForwardPorts.html#M000082","(env)","-------------------------------------------------------------- Execution --------------------------------------------------------------",2],["call","Vagrant::Action::VM::Halt","classes/Vagrant/Action/VM/Halt.html#M000087","(env)","",2],["call","Vagrant::Action::VM::HostName","classes/Vagrant/Action/VM/HostName.html#M000089","(env)","",2],["call","Vagrant::Action::VM::Import","classes/Vagrant/Action/VM/Import.html#M000091","(env)","",2],["call","Vagrant::Action::VM::MatchMACAddress","classes/Vagrant/Action/VM/MatchMACAddress.html#M000094","(env)","",2],["call","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000096","(env)","",2],["call","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000098","(env)","",2],["call","Vagrant::Action::VM::Package","classes/Vagrant/Action/VM/Package.html#M000114","(env)","",2],["call","Vagrant::Action::VM::PackageVagrantfile","classes/Vagrant/Action/VM/PackageVagrantfile.html#M000123","(env)","",2],["call","Vagrant::Action::VM::Provision","classes/Vagrant/Action/VM/Provision.html#M000130","(env)","",2],["call","Vagrant::Action::VM::ProvisionerCleanup","classes/Vagrant/Action/VM/ProvisionerCleanup.html#M000128","(env)","",2],["call","Vagrant::Action::VM::PruneNFSExports","classes/Vagrant/Action/VM/PruneNFSExports.html#M000133","(env)","",2],["call","Vagrant::Action::VM::Resume","classes/Vagrant/Action/VM/Resume.html#M000135","(env)","",2],["call","Vagrant::Action::VM::SetupPackageFiles","classes/Vagrant/Action/VM/SetupPackageFiles.html#M000137","(env)","",2],["call","Vagrant::Action::VM::ShareFolders","classes/Vagrant/Action/VM/ShareFolders.html#M000139","(env)","",2],["call","Vagrant::Action::VM::Suspend","classes/Vagrant/Action/VM/Suspend.html#M000145","(env)","",2],["call","Vagrant::Action::Warden","classes/Vagrant/Action/Warden.html#M000147","(env)","",2],["capture","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000544","(stream)","Utility method for capturing output streams. @example Evaluate the output output = capture(:stdout){",2],["capture_configures","Vagrant::Config","classes/Vagrant/Config.html#M000230","()","This is a method which will yield to a block and will capture all ``Vagrant.configure`` calls, returning",2],["change_host_name","Vagrant::Guest::Arch","classes/Vagrant/Guest/Arch.html#M000385","(name)","",2],["change_host_name","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000393","(name)","Called to change the hostname of the virtual machine. ",2],["change_host_name","Vagrant::Guest::Debian","classes/Vagrant/Guest/Debian.html#M000395","(name)","",2],["change_host_name","Vagrant::Guest::Redhat","classes/Vagrant/Guest/Redhat.html#M000411","(name)","",2],["change_host_name","Vagrant::Guest::Solaris","classes/Vagrant/Guest/Solaris.html#M000415","(name)","",2],["change_host_name","Vagrant::Guest::Ubuntu","classes/Vagrant/Guest/Ubuntu.html#M000418","(name)","",2],["channel","Vagrant::VM","classes/Vagrant/VM.html#M000612","()","Returns a channel object to communicate with the virtual machine. ",2],["check_key_permissions","Vagrant::SSH","classes/Vagrant/SSH.html#M000549","(key_path)","Checks the file permissions for a private key, resetting them if needed. ",2],["checksum","FileChecksum","classes/FileChecksum.html#M000568","()","This calculates the checksum of the file and returns it as a string. @return [String] ",2],["chef_binary_path","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000460","(binary)","Returns the path to the Chef binary, taking into account the `binary_path` configuration option. ",2],["chown_provisioning_folder","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000461","()","",2],["clean_machine_folder","Vagrant::Action::VM::CleanMachineFolder","classes/Vagrant/Action/VM/CleanMachineFolder.html#M000060","(machine_folder)","",2],["clean_nil_and_empties","Vagrant::DataStore","classes/Vagrant/DataStore.html#M000242","(hash=self)","Removes the \"nil\" and \"empty?\" values from the hash (children included) so that the final output JSON",2],["clean_paths","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000550","()","Cleans all the test temp paths, which includes the boxes path, home path, etc. This allows for cleaning",2],["cleanup","Vagrant::Provisioners::Base","classes/Vagrant/Provisioners/Base.html#M000456","()","This is the method called to when the system is being destroyed and allows the provisioners to engage",2],["clear_forwarded_ports","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000313","()","Clears the forwarded ports that have been set on the virtual machine. ",2],["clear_forwarded_ports","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000258","()","",2],["clear_forwarded_ports","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000274","()","",2],["clear_line","Vagrant::UI::Basic","classes/Vagrant/UI/Basic.html#M000559","()","",2],["clear_shared_folders","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000314","()","Clears the shared folders that have been set on the virtual machine. ",2],["clear_shared_folders","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000259","()","",2],["clear_shared_folders","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000275","()","",2],["cli","Vagrant::Environment","classes/Vagrant/Environment.html#M000367","(*args)","Makes a call to the CLI with the given arguments as if they came from the real command line (sometimes",2],["client_key_path","Vagrant::Provisioners::ChefClient::Config","classes/Vagrant/Provisioners/ChefClient/Config.html#M000465","()","",2],["commands","Vagrant","classes/Vagrant.html#M000631","()","Global registry of commands that are available via the CLI. This registry is used to look up the sub-commands",2],["commit","Vagrant::DataStore","classes/Vagrant/DataStore.html#M000238","()","Commits any changes to the data to disk. Even if the data hasn't changed, it will be reserialized and",2],["compress","Vagrant::Action::General::Package","classes/Vagrant/Action/General/Package.html#M000040","()","Compress the exported file into a package ",2],["config","Vagrant::Environment","classes/Vagrant/Environment.html#M000376","()","The configuration object represented by this environment. This will trigger the environment to load if",2],["config_class","Vagrant::Provisioners::Base","classes/Vagrant/Provisioners/Base.html#M000453","()","This method is expected to return a class that is used for configuration for the provisioner. ",2],["config_class","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000470","()","",2],["config_class","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000496","()","",2],["config_class","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000504","()","",2],["config_class","Vagrant::Provisioners::PuppetServer","classes/Vagrant/Provisioners/PuppetServer.html#M000523","()","",2],["config_class","Vagrant::Provisioners::Shell","classes/Vagrant/Provisioners/Shell.html#M000527","()","",2],["config_keys","Vagrant","classes/Vagrant.html#M000632","()","Global registry of config keys that are available. This registry is used to look up the keys for `config`",2],["configure","Vagrant::Config::VMConfig::Provisioner","classes/Vagrant/Config/VMConfig/Provisioner.html#M000226","(options=nil, &block)","Configures the provisioner if it can (if it is valid). ",2],["configure_networks","Vagrant::Guest::Arch","classes/Vagrant/Guest/Arch.html#M000386","(networks)","",2],["configure_networks","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000392","(networks)","Configures the given list of networks on the virtual machine. The networks parameter will be an array",2],["configure_networks","Vagrant::Guest::Debian","classes/Vagrant/Guest/Debian.html#M000394","(networks)","",2],["configure_networks","Vagrant::Guest::Gentoo","classes/Vagrant/Guest/Gentoo.html#M000401","(networks)","",2],["configure_networks","Vagrant::Guest::Redhat","classes/Vagrant/Guest/Redhat.html#M000407","(networks)","",2],["configure_networks","Vagrant::Guest::Solaris","classes/Vagrant/Guest/Solaris.html#M000414","(networks)","",2],["connect","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000200","()","Opens an SSH connection and yields it to a block. ",2],["convert_key","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000583","(key)","",2],["cookbooks_path","Vagrant::Provisioners::ChefSolo::Config","classes/Vagrant/Provisioners/ChefSolo/Config.html#M000491","()","Provide defaults in such a way that they won't override the instance variable. This is so merging continues",2],["copy_include_files","Vagrant::Action::General::Package","classes/Vagrant/Action/General/Package.html#M000037","()","This method copies the include files (passed in via command line) to the temporary directory so they",2],["copy_insecure_private_key","Vagrant::Environment","classes/Vagrant/Environment.html#M000383","()","This method copies the private key into the home directory if it doesn't already exist. This must be",2],["create_client_key_folder","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000478","()","",2],["create_dhcp_server","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000315","(network, options)","Creates a DHCP server for a host only network. @param [String] network Name of the host-only network.",2],["create_dhcp_server","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000260","(network, options)","",2],["create_dhcp_server","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000276","(network, options)","",2],["create_host_only_network","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000316","(options)","Creates a host only network with the given options. @param [Hash] options Options to create the host",2],["create_host_only_network","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000261","(options)","",2],["create_host_only_network","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000278","(options)","",2],["create_hostonly_network","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000117","(config)","Creates a new hostonly network that matches the network requested by the given host-only network configuration.",2],["create_metadata","Vagrant::Action::VM::ShareFolders","classes/Vagrant/Action/VM/ShareFolders.html#M000142","()","",2],["create_vagrantfile","Vagrant::Action::VM::PackageVagrantfile","classes/Vagrant/Action/VM/PackageVagrantfile.html#M000124","()","This method creates the auto-generated Vagrantfile at the root of the box. This Vagrantfile contains",2],["created?","Vagrant::VM","classes/Vagrant/VM.html#M000616","()","Returns a boolean true if the VM has been created, otherwise returns false. @return [Boolean] ",2],["customize","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000240","(command=nil)","TODO: This argument should not be `nil` in the future. It is only defaulted to nil so that the deprecation",2],["decompress","Vagrant::Action::Box::Unpackage","classes/Vagrant/Action/Box/Unpackage.html#M000018","()","",2],["define","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000244","(name, options=nil, &block)","",2],["defined_vm_keys","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000243","()","This returns the keys of the sub-vms in the order they were defined. ",2],["defined_vms","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000241","()","",2],["delete","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000027","(index)","Deletes the given middleware object or index ",2],["delete","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000317","()","Deletes the virtual machine references by this driver. ",2],["delete","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000262","()","",2],["delete","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000281","()","",2],["delete","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000575","(key)","",2],["delete_unused_host_only_networks","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000319","()","Deletes any host only networks that aren't being used for anything. ",2],["delete_unused_host_only_networks","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000263","()","",2],["delete_unused_host_only_networks","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000282","()","",2],["destroy","Vagrant::Box","classes/Vagrant/Box.html#M000153","()","Begins the process of destroying this box. This cannot be undone! ",2],["destroy","Vagrant::VM","classes/Vagrant/VM.html#M000625","()","",2],["detect","Vagrant::Hosts","classes/Vagrant/Hosts.html#M000449","(registry)","This method detects the correct host based on the `match?` methods implemented in the registered hosts.",2],["discard_saved_state","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000320","()","Discards any saved state associated with this VM. ",2],["discard_saved_state","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000265","()","",2],["discard_saved_state","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000283","()","",2],["distro_dispatch","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000388","()","This method is automatically called when the system is available (when Vagrant can successfully SSH into",2],["distro_dispatch","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux.html#M000404","()","",2],["dotfile_path","Vagrant::Environment","classes/Vagrant/Environment.html#M000361","()","The path to the `dotfile`, which contains the persisted UUID of the VM if it exists. @return [Pathname]",2],["download","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000005","()","",2],["download!","Vagrant::Downloaders::Base","classes/Vagrant/Downloaders/Base.html#M000249","(source_url, destination_file)","Downloads the source file to the destination file. It is up to implementors of this class to handle the",2],["download!","Vagrant::Downloaders::File","classes/Vagrant/Downloaders/File.html#M000252","(source_url, destination_file)","",2],["download!","Vagrant::Downloaders::HTTP","classes/Vagrant/Downloaders/HTTP.html#M000254","(source_url, destination_file)","",2],["download_to","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000011","(f)","",2],["each","Vagrant::Registry","classes/Vagrant/Registry.html#M000533","(&block)","Iterate over the keyspace. ",2],["enable_adapters","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000321","(adapters)","Enables network adapters on the VM. The format of each adapter specification should be like so: { :type",2],["enable_adapters","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000266","(adapters)","",2],["enable_adapters","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000284","(adapters)","",2],["enable_host_only_network","Vagrant::Guest::FreeBSD","classes/Vagrant/Guest/FreeBSD.html#M000400","(net_options)","",2],["enabled_provisioners","Vagrant::Action::VM::Provision","classes/Vagrant/Action/VM/Provision.html#M000131","()","",2],["enabled_provisioners","Vagrant::Action::VM::ProvisionerCleanup","classes/Vagrant/Action/VM/ProvisionerCleanup.html#M000129","()","",2],["encrypted_data_bag_secret","Vagrant::Provisioners::ChefClient::Config","classes/Vagrant/Provisioners/ChefClient/Config.html#M000468","()","",2],["encrypted_data_bag_secret_key_path","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000488","()","",2],["error_key","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000359","()","The key for the error message. This should be set using the {error_key} method but can be overridden",2],["error_key","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000355","(key=nil, namespace=nil)","",2],["error_namespace","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000358","()","The default error namespace which is used for the error key. This can be overridden here or by calling",2],["error_namespace","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000356","(namespace)","",2],["exec","Vagrant::SSH","classes/Vagrant/SSH.html#M000541","(opts={})","Connects to the environment's virtual machine, replacing the ruby process with an SSH process. @param",2],["execute","Vagrant::CLI","classes/Vagrant/CLI.html#M000161","()","",2],["execute","Vagrant::Command::Base","classes/Vagrant/Command/Base.html#M000159","()","This is what is called on the class to actually execute it. Any subclasses should implement this method",2],["execute","Vagrant::Command::Box","classes/Vagrant/Command/Box.html#M000167","()","",2],["execute","Vagrant::Command::BoxAdd","classes/Vagrant/Command/BoxAdd.html#M000168","()","",2],["execute","Vagrant::Command::BoxList","classes/Vagrant/Command/BoxList.html#M000170","()","",2],["execute","Vagrant::Command::BoxRemove","classes/Vagrant/Command/BoxRemove.html#M000171","()","",2],["execute","Vagrant::Command::BoxRepackage","classes/Vagrant/Command/BoxRepackage.html#M000173","()","",2],["execute","Vagrant::Command::Destroy","classes/Vagrant/Command/Destroy.html#M000172","()","",2],["execute","Vagrant::Command::Halt","classes/Vagrant/Command/Halt.html#M000174","()","",2],["execute","Vagrant::Command::Init","classes/Vagrant/Command/Init.html#M000175","()","",2],["execute","Vagrant::Command::Package","classes/Vagrant/Command/Package.html#M000176","()","",2],["execute","Vagrant::Command::Provision","classes/Vagrant/Command/Provision.html#M000177","()","",2],["execute","Vagrant::Command::Reload","classes/Vagrant/Command/Reload.html#M000181","()","",2],["execute","Vagrant::Command::Resume","classes/Vagrant/Command/Resume.html#M000182","()","",2],["execute","Vagrant::Command::SSH","classes/Vagrant/Command/SSH.html#M000184","()","",2],["execute","Vagrant::Command::SSHConfig","classes/Vagrant/Command/SSHConfig.html#M000183","()","",2],["execute","Vagrant::Command::Status","classes/Vagrant/Command/Status.html#M000187","()","",2],["execute","Vagrant::Command::Suspend","classes/Vagrant/Command/Suspend.html#M000188","()","",2],["execute","Vagrant::Command::Up","classes/Vagrant/Command/Up.html#M000189","()","",2],["execute","Vagrant::Communication::Base","classes/Vagrant/Communication/Base.html#M000192","(command, opts=nil)","Execute a command on the remote machine. @param [String] command Command to execute. @yield [type, data]",2],["execute","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000197","(command, opts=nil, &block)","",2],["execute","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000351","(*command, &block)","Execute the given subcommand for VBoxManage and return the output. ",2],["execute","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess.html#M000600","(*command, &block)","Convenience method for executing a method. ",2],["execute","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess.html#M000604","()","",2],["execute_command","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000322","(command)","Execute a raw command straight through to VBoxManage. @param [Array] command Command to execute. ",2],["execute_command","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000267","(command)","",2],["execute_command","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000285","(command)","",2],["expanded_folders","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000503","(paths, appended_folder=nil)","Converts paths to a list of properly expanded paths with types. ",2],["expanded_manifests_path","Vagrant::Provisioners::Puppet::Config","classes/Vagrant/Provisioners/Puppet/Config.html#M000499","(root_path)","Returns the manifests path expanded relative to the root path of the environment. ",2],["expanded_module_paths","Vagrant::Provisioners::Puppet::Config","classes/Vagrant/Provisioners/Puppet/Config.html#M000500","(root_path)","Returns the module paths as an array of paths expanded relative to the root path. ",2],["export","Vagrant::Action::VM::Export","classes/Vagrant/Action/VM/Export.html#M000079","()","",2],["export","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000323","(path)","Exports the virtual machine to the given path. @param [String] path Path to the OVF file. @yield [progress]",2],["export","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000268","(path)","",2],["export","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000289","(path)","",2],["export_folders","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000104","()","Uses the host class to export the folders via NFS. This typically involves adding a line to `/etc/exports`",2],["extract_folders","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000100","()","Removes the NFS enabled shared folders from the configuration, so they will no longer be mounted by the",2],["file_backup_path","Vagrant::Provisioners::ChefClient::Config","classes/Vagrant/Provisioners/ChefClient/Config.html#M000467","()","",2],["file_cache_path","Vagrant::Provisioners::ChefClient::Config","classes/Vagrant/Provisioners/ChefClient/Config.html#M000466","()","",2],["finalize_action","Vagrant::Action::Warden","classes/Vagrant/Action/Warden.html#M000149","(action, env)","A somewhat confusing function which simply initializes each middleware properly to call the next middleware",2],["find","Vagrant::BoxCollection","classes/Vagrant/BoxCollection.html#M000152","(name)","Find a box in the collection by the given name. The name must be a string, for now. ",2],["find_matching_hostonly_network","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000118","(config)","Finds a host only network that matches our configuration on VirtualBox. This will return nil if a matching",2],["find_vagrantfile","Vagrant::Environment","classes/Vagrant/Environment.html#M000384","(search_path)","Finds the Vagrantfile in the given directory. @param [Pathname] path Path to search in. @return [Pathname]",2],["fire_callbacks","Vagrant::Util::Busy","classes/Vagrant/Util/Busy.html#M000555","()","Fires all the registered callbacks. ",2],["flatten","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000021","()","Returns a mergeable version of the builder. If `use` is called with the return value of this method,",2],["folders","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000099","()","Returns the folders which are to be synced via NFS. ",2],["for_vm","Vagrant::Config::Container","classes/Vagrant/Config/Container.html#M000210","(name)","This returns the configuration for a specific virtual machine. The values for this configuration are",2],["format_message","Vagrant::UI::Basic","classes/Vagrant/UI/Basic.html#M000561","(type, message, opts=nil)","This is called by `say` to format the message for output. ",2],["format_message","Vagrant::UI::Colored","classes/Vagrant/UI/Colored.html#M000562","(type, message, opts=nil)","This is called by `say` to format the message for output. ",2],["forward_port","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000234","(guestport, hostport, options=nil)","",2],["forward_port_definitions","Vagrant::Action::VM::ForwardPorts","classes/Vagrant/Action/VM/ForwardPorts.html#M000083","()","This returns an array of forwarded ports with overrides properly squashed. ",2],["forward_ports","Vagrant::Action::VM::ForwardPorts","classes/Vagrant/Action/VM/ForwardPorts.html#M000085","(mappings)","",2],["forward_ports","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000327","(ports)","Forwards a set of ports for a VM. This will not affect any previously set forwarded ports, so be sure",2],["forward_ports","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000269","(ports)","",2],["forward_ports","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000290","(ports)","",2],["forwarded_port_destination=","Vagrant::Config::SSHConfig","classes/Vagrant/Config/SSHConfig.html#M000218","(value)","",2],["forwarded_port_key=","Vagrant::Config::SSHConfig","classes/Vagrant/Config/SSHConfig.html#M000217","(value)","",2],["from_octal","Vagrant::Util::FileMode","classes/Vagrant/Util/FileMode.html#M000569","(octal)","This returns the file permissions as a string from an octal number. ",2],["full_template_path","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000606","()","Returns the full path to the template, taking into accoun the gem directory and adding the `.erb` extension",2],["general_call","Vagrant::Action::Box::Package","classes/Vagrant/Action/Box/Package.html#M000007","(env)","Alias for #call",2],["general_call","Vagrant::Action::VM::Package","classes/Vagrant/Action/VM/Package.html#M000115","(env)","Alias for #call",2],["get","Vagrant::Registry","classes/Vagrant/Registry.html#M000532","(key)","Get an action by the given key. This will evaluate the block given to `register` and return the resulting",2],["get_and_update_counter","Vagrant::Util::Counter","classes/Vagrant/Util/Counter.html#M000563","(name=nil)","",2],["global_data","Vagrant::Environment","classes/Vagrant/Environment.html#M000371","()","Loads on initial access and reads data from the global data store. The global data store is global to",2],["guest","Vagrant::VM","classes/Vagrant/VM.html#M000613","()","Returns the guest for this VM, loading the distro of the system if we can. ",2],["guest_ip","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000108","()","Returns the IP address of the guest by looking at the first enabled host only network. @return [String]",2],["guest_paths","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000519","(folders)","Extracts only the remote paths from a list of folders ",2],["guest_validation_key_path","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000489","()","",2],["guests","Vagrant","classes/Vagrant.html#M000634","()","Global registry of available guest classes and shortcut symbols associated with them. This registry is",2],["halt","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000328","()","Halts the virtual machine (pulls the plug). ",2],["halt","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000270","()","",2],["halt","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000291","()","",2],["halt","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000389","()","Halt the machine. This method should gracefully shut down the operating system. This method will cause",2],["halt","Vagrant::Guest::FreeBSD","classes/Vagrant/Guest/FreeBSD.html#M000397","()","",2],["halt","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux.html#M000405","()","",2],["halt","Vagrant::Guest::Solaris","classes/Vagrant/Guest/Solaris.html#M000416","()","There should be an exception raised if the line vagrant::::profiles=Primary Administrator does not exist",2],["halt","Vagrant::VM","classes/Vagrant/VM.html#M000622","(options=nil)","",2],["handle_correct","Vagrant::Action::VM::CheckPortCollisions","classes/Vagrant/Action/VM/CheckPortCollisions.html#M000057","(options, existing_ports)","Handles a port collision by attempting to fix it. ",2],["handle_error","Vagrant::Action::VM::CheckPortCollisions","classes/Vagrant/Action/VM/CheckPortCollisions.html#M000056","(options, existing_ports)","Handles a port collision by raising an exception. ",2],["has_key?","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000581","(key)","Alias for #key?",2],["help","Vagrant::CLI","classes/Vagrant/CLI.html#M000164","()","This prints out the help for the CLI. ",2],["help","Vagrant::Command::Box","classes/Vagrant/Command/Box.html#M000169","()","Prints the help out for this command ",2],["hexdigest","DigestClass","classes/DigestClass.html#M000566","()","",2],["home_path","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000547","()","Path to the \"home\" directory for the tests @return [Pathname] ",2],["host","Vagrant::Environment","classes/Vagrant/Environment.html#M000368","()","Returns the host object associated with this environment. @return [Hosts::Base] ",2],["host_ip","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000106","()","Returns the IP address of the first host only network adapter @return [String] ",2],["hostonly_adapter","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000113","(config)","",2],["hostonly_config","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000112","(args)","",2],["hostonly_network_config","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000116","(config)","",2],["hosts","Vagrant","classes/Vagrant.html#M000633","()","Global registry of available host classes and shortcut symbols associated with them. This registry is",2],["import","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000329","(ovf, name)","Imports the VM from an OVF file. @param [String] ovf Path to the OVF file. @param [String] name Name",2],["import","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000271","(ovf, name)","",2],["import","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000292","(ovf, name)","",2],["include?","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000580","(key)","Alias for #key?",2],["index","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000029","(object)","Returns the numeric index for the given middleware object. @param [Object] object The item to find the",2],["info","Vagrant::SSH","classes/Vagrant/SSH.html#M000537","()","Returns a hash of information necessary for accessing this virtual machine via SSH. @return [Hash] ",2],["insert","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000023","(index, middleware, *args, &block)","Inserts a middleware at the given index or directly before the given middleware object. ",2],["insert_after","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000025","(index, middleware, *args, &block)","Inserts a middleware after the given index or middleware object. ",2],["insert_before","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000024","(index, middleware, *args, &block)","Alias for #insert",2],["instance_variables_hash","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000208","()","Returns the instance variables as a hash of key-value pairs. ",2],["instance_variables_hash","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000484","()","",2],["instantiate_downloader","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000004","()","",2],["ip_parts","Vagrant::Util::NetworkIP","classes/Vagrant/Util/NetworkIP.html#M000571","(ip)","Splits an IP into the four octets and returns each as an integer in an array. @return [Array<Integer>]",2],["json","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000474","()","",2],["json_create","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000202","(data)","Loads configuration values from JSON back into the proper configuration classes. By default, this is",2],["key?","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000579","(key)","",2],["leopard?","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000585","()","",2],["load","Vagrant::Config::Loader","classes/Vagrant/Config/Loader.html#M000215","()","This loads the configured sources in the configured order and returns an actual configuration object",2],["load!","Vagrant::Environment","classes/Vagrant/Environment.html#M000378","()","Loads this entire environment, setting up the instance variables such as `vm`, `config`, etc. on this",2],["load!","Vagrant::Plugin","classes/Vagrant/Plugin.html#M000448","()","Loads all the plugins for Vagrant. Plugins are currently gems which have a \"vagrant_init.rb\" somewhere",2],["load_config!","Vagrant::Environment","classes/Vagrant/Environment.html#M000380","()","Loads this environment's configuration and stores it in the {#config} variable. The configuration loaded",2],["load_guest!","Vagrant::VM","classes/Vagrant/VM.html#M000611","(guest=nil)","Loads the guest associated with the VM. The guest class is responsible for OS-specific functionality.",2],["load_vms!","Vagrant::Environment","classes/Vagrant/Environment.html#M000381","()","Loads the persisted VM (if it exists) for this environment. ",2],["loaded?","Vagrant::Environment","classes/Vagrant/Environment.html#M000377","()","Returns a boolean representing if the environment has been loaded or not. @return [Bool] ",2],["local_data","Vagrant::Environment","classes/Vagrant/Environment.html#M000372","()","Loads (on initial access) and reads data from the local data store. This file is always at the root path",2],["lock","Vagrant::Environment","classes/Vagrant/Environment.html#M000375","()","This locks Vagrant for the duration of the block passed to this method. During this time, any other environment",2],["lock_path","Vagrant::Environment","classes/Vagrant/Environment.html#M000374","()","This returns the path which Vagrant uses to determine the location of the file lock. This is specific",2],["log_level","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000475","()","",2],["manifests_guest_path","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000512","()","",2],["match?","Vagrant::Downloaders::Base","classes/Vagrant/Downloaders/Base.html#M000247","(url)","Tests whether a URL matches this download. Subclasses must override this and return `true` for any URLs",2],["match?","Vagrant::Downloaders::File","classes/Vagrant/Downloaders/File.html#M000250","(uri)","",2],["match?","Vagrant::Downloaders::HTTP","classes/Vagrant/Downloaders/HTTP.html#M000253","(uri)","",2],["match?","Vagrant::Hosts::Arch","classes/Vagrant/Hosts/Arch.html#M000420","()","",2],["match?","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000428","()","",2],["match?","Vagrant::Hosts::Base","classes/Vagrant/Hosts/Base.html#M000422","()","This returns true/false depending on if the current running system matches the host class. @return [Boolean]",2],["match?","Vagrant::Hosts::Fedora","classes/Vagrant/Hosts/Fedora.html#M000434","()","",2],["match?","Vagrant::Hosts::FreeBSD","classes/Vagrant/Hosts/FreeBSD.html#M000437","()","",2],["match?","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000439","()","",2],["match?","Vagrant::Hosts::Windows","classes/Vagrant/Hosts/Windows.html#M000446","()","",2],["member?","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000582","(key)","Alias for #key?",2],["merge","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000204","(other)","Merge another configuration object into this one. @param [Object] other The other configuration object",2],["merge","Vagrant::Config::Top","classes/Vagrant/Config/Top.html#M000222","(other)","Custom implementation to merge each key separately. ",2],["merge","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000232","(other)","Custom merge method since some keys here are merged differently. ",2],["merge","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000577","(other)","",2],["merge!","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000578","(other)","",2],["merged_json","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000476","()","This returns the json that is merged with the defaults and the user set data. ",2],["method_missing","Vagrant::Config::Top","classes/Vagrant/Config/Top.html#M000221","(name, *args)","We use method_missing as a way to get the configuration that is used for Vagrant and load the proper",2],["mount_folder","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux.html#M000409","(name, guestpath, options)","------------------------------------------------------------------- \"Private\" methods which assist above",2],["mount_folders","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000105","()","Uses the system class to mount the NFS folders. ",2],["mount_nfs","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000391","(ip, folders)","Mounts a shared folder via NFS. This assumes that the exports via the host are already done. ",2],["mount_nfs","Vagrant::Guest::FreeBSD","classes/Vagrant/Guest/FreeBSD.html#M000398","(ip, folders)","TODO: Error/warning about this. def mount_shared_folder(ssh, name, guestpath) ssh.exec!(\"sudo mkdir -p",2],["mount_nfs","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux.html#M000408","(ip, folders)","",2],["mount_shared_folder","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000390","(name, guestpath, options)","Mounts a shared folder. This method should create, mount, and properly set permissions on the shared",2],["mount_shared_folder","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux.html#M000406","(name, guestpath, options)","",2],["mount_shared_folder","Vagrant::Guest::Solaris","classes/Vagrant/Guest/Solaris.html#M000419","(name, guestpath, options)","",2],["mount_shared_folder","Vagrant::Guest::Ubuntu","classes/Vagrant/Guest/Ubuntu.html#M000417","(name, guestpath, options)","",2],["mount_shared_folders","Vagrant::Action::VM::ShareFolders","classes/Vagrant/Action/VM/ShareFolders.html#M000143","()","",2],["multivm?","Vagrant::Environment","classes/Vagrant/Environment.html#M000366","()","Returns a boolean whether this environment represents a multi-VM environment or not. This will work even",2],["mutex","Vagrant::Util::Counter","classes/Vagrant/Util/Counter.html#M000564","()","",2],["network","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000237","(type, *args)","",2],["network_address","Vagrant::Util::NetworkIP","classes/Vagrant/Util/NetworkIP.html#M000570","(ip, subnet)","Returns the network address of the given IP and subnet. @return [String] ",2],["network_scripts_dir","Vagrant::Guest::Redhat","classes/Vagrant/Guest/Redhat.html#M000410","()","The path to the directory with the network configuration scripts. This is pulled out into its own directory",2],["network_scripts_dir","Vagrant::Guest::Suse","classes/Vagrant/Guest/Suse.html#M000412","()","",2],["new","FileChecksum","classes/FileChecksum.html#M000567","(path, digest_klass)","Initializes an object to calculate the checksum of a file. The given ``digest_klass`` should implement",2],["new","Vagrant::Action::Box::Destroy","classes/Vagrant/Action/Box/Destroy.html#M000000","(app, env)","",2],["new","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000002","(app, env)","",2],["new","Vagrant::Action::Box::Unpackage","classes/Vagrant/Action/Box/Unpackage.html#M000012","(app, env)","",2],["new","Vagrant::Action::Box::Verify","classes/Vagrant/Action/Box/Verify.html#M000016","(app, env)","",2],["new","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000019","(&block)","Initializes the builder. An optional block can be passed which will be evaluated in the context of the",2],["new","Vagrant::Action::Env::Set","classes/Vagrant/Action/Env/Set.html#M000032","(app, env, options=nil)","",2],["new","Vagrant::Action::General::Package","classes/Vagrant/Action/General/Package.html#M000034","(app, env)","",2],["new","Vagrant::Action::General::Validate","classes/Vagrant/Action/General/Validate.html#M000038","(app, env)","",2],["new","Vagrant::Action::Runner","classes/Vagrant/Action/Runner.html#M000042","(registry, globals=nil, &block)","",2],["new","Vagrant::Action::VM::Boot","classes/Vagrant/Action/VM/Boot.html#M000043","(app, env)","",2],["new","Vagrant::Action::VM::CheckAccessible","classes/Vagrant/Action/VM/CheckAccessible.html#M000050","(app, env)","",2],["new","Vagrant::Action::VM::CheckBox","classes/Vagrant/Action/VM/CheckBox.html#M000048","(app, env)","",2],["new","Vagrant::Action::VM::CheckGuestAdditions","classes/Vagrant/Action/VM/CheckGuestAdditions.html#M000052","(app, env)","",2],["new","Vagrant::Action::VM::CheckPortCollisions","classes/Vagrant/Action/VM/CheckPortCollisions.html#M000054","(app, env)","",2],["new","Vagrant::Action::VM::CleanMachineFolder","classes/Vagrant/Action/VM/CleanMachineFolder.html#M000058","(app, env)","",2],["new","Vagrant::Action::VM::ClearForwardedPorts","classes/Vagrant/Action/VM/ClearForwardedPorts.html#M000061","(app, env)","",2],["new","Vagrant::Action::VM::ClearNetworkInterfaces","classes/Vagrant/Action/VM/ClearNetworkInterfaces.html#M000063","(app, env)","",2],["new","Vagrant::Action::VM::ClearSharedFolders","classes/Vagrant/Action/VM/ClearSharedFolders.html#M000067","(app, env)","",2],["new","Vagrant::Action::VM::Customize","classes/Vagrant/Action/VM/Customize.html#M000065","(app, env)","",2],["new","Vagrant::Action::VM::Destroy","classes/Vagrant/Action/VM/Destroy.html#M000069","(app, env)","",2],["new","Vagrant::Action::VM::DestroyUnusedNetworkInterfaces","classes/Vagrant/Action/VM/DestroyUnusedNetworkInterfaces.html#M000071","(app, env)","",2],["new","Vagrant::Action::VM::DiscardState","classes/Vagrant/Action/VM/DiscardState.html#M000073","(app, env)","",2],["new","Vagrant::Action::VM::Export","classes/Vagrant/Action/VM/Export.html#M000075","(app, env)","",2],["new","Vagrant::Action::VM::ForwardPorts","classes/Vagrant/Action/VM/ForwardPorts.html#M000081","(app,env)","",2],["new","Vagrant::Action::VM::Halt","classes/Vagrant/Action/VM/Halt.html#M000086","(app, env, options=nil)","",2],["new","Vagrant::Action::VM::HostName","classes/Vagrant/Action/VM/HostName.html#M000088","(app, env)","",2],["new","Vagrant::Action::VM::Import","classes/Vagrant/Action/VM/Import.html#M000090","(app, env)","",2],["new","Vagrant::Action::VM::MatchMACAddress","classes/Vagrant/Action/VM/MatchMACAddress.html#M000093","(app, env)","",2],["new","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000095","(app,env)","",2],["new","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000097","(app, env)","",2],["new","Vagrant::Action::VM::PackageVagrantfile","classes/Vagrant/Action/VM/PackageVagrantfile.html#M000122","(app, env)","",2],["new","Vagrant::Action::VM::Provision","classes/Vagrant/Action/VM/Provision.html#M000126","(app, env)","",2],["new","Vagrant::Action::VM::ProvisionerCleanup","classes/Vagrant/Action/VM/ProvisionerCleanup.html#M000127","(app, env)","",2],["new","Vagrant::Action::VM::PruneNFSExports","classes/Vagrant/Action/VM/PruneNFSExports.html#M000132","(app, env)","",2],["new","Vagrant::Action::VM::Resume","classes/Vagrant/Action/VM/Resume.html#M000134","(app, env)","",2],["new","Vagrant::Action::VM::SetupPackageFiles","classes/Vagrant/Action/VM/SetupPackageFiles.html#M000136","(app, env)","",2],["new","Vagrant::Action::VM::ShareFolders","classes/Vagrant/Action/VM/ShareFolders.html#M000138","(app, env)","",2],["new","Vagrant::Action::VM::Suspend","classes/Vagrant/Action/VM/Suspend.html#M000144","(app, env)","",2],["new","Vagrant::Action::Warden","classes/Vagrant/Action/Warden.html#M000146","(actions, env)","",2],["new","Vagrant::Box","classes/Vagrant/Box.html#M000150","(name, directory, action_runner)","Creates a new box instance. Given an optional `name` parameter, newly created instance will have that",2],["new","Vagrant::BoxCollection","classes/Vagrant/BoxCollection.html#M000151","(directory, action_runner)","Initializes the class to search for boxes in the given directory. ",2],["new","Vagrant::CLI","classes/Vagrant/CLI.html#M000160","(argv, env)","",2],["new","Vagrant::Command::Base","classes/Vagrant/Command/Base.html#M000158","(argv, env)","",2],["new","Vagrant::Command::Box","classes/Vagrant/Command/Box.html#M000166","(argv, env)","",2],["new","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000195","(vm)","",2],["new","Vagrant::Config::Container","classes/Vagrant/Config/Container.html#M000209","(global, vms)","Initializes the configuration container. @param [Top] global Top-level configuration for the global applicatoin.",2],["new","Vagrant::Config::ErrorRecorder","classes/Vagrant/Config/ErrorRecorder.html#M000211","()","",2],["new","Vagrant::Config::Loader","classes/Vagrant/Config/Loader.html#M000213","()","",2],["new","Vagrant::Config::Top","classes/Vagrant/Config/Top.html#M000220","(registry=nil)","",2],["new","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000231","()","",2],["new","Vagrant::Config::VMConfig::Provisioner","classes/Vagrant/Config/VMConfig/Provisioner.html#M000225","(shortcut, options=nil, &block)","",2],["new","Vagrant::Config::VMConfig::SubVM","classes/Vagrant/Config/VMConfig/SubVM.html#M000228","()","",2],["new","Vagrant::DataStore","classes/Vagrant/DataStore.html#M000236","(file_path)","",2],["new","Vagrant::Downloaders::Base","classes/Vagrant/Downloaders/Base.html#M000246","(ui)","",2],["new","Vagrant::Driver::VirtualBox","classes/Vagrant/Driver/VirtualBox.html#M000256","(uuid)","",2],["new","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000310","()","",2],["new","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000257","(uuid)","",2],["new","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000273","(uuid)","",2],["new","Vagrant::Environment","classes/Vagrant/Environment.html#M000354","(opts=nil)","Initializes a new environment with the given options. The options is a hash where the main available",2],["new","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000357","(message=nil, *args)","",2],["new","Vagrant::Guest::Base","classes/Vagrant/Guest/Base.html#M000387","(vm)","Initializes the system. Any subclasses MUST make sure this method is called on the parent. Therefore,",2],["new","Vagrant::Guest::FreeBSD::FreeBSDConfig","classes/Vagrant/Guest/FreeBSD/FreeBSDConfig.html#M000396","()","",2],["new","Vagrant::Guest::Linux","classes/Vagrant/Guest/Linux.html#M000403","(*args)","",2],["new","Vagrant::Guest::Linux::LinuxConfig","classes/Vagrant/Guest/Linux/LinuxConfig.html#M000402","()","",2],["new","Vagrant::Guest::Solaris::SolarisConfig","classes/Vagrant/Guest/Solaris/SolarisConfig.html#M000413","()","",2],["new","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000430","(*args)","",2],["new","Vagrant::Hosts::Base","classes/Vagrant/Hosts/Base.html#M000424","(ui)","Initializes a new host class. The only required parameter is a UI object so that the host objects have",2],["new","Vagrant::Hosts::Fedora","classes/Vagrant/Hosts/Fedora.html#M000435","(*args)","",2],["new","Vagrant::Hosts::FreeBSD","classes/Vagrant/Hosts/FreeBSD.html#M000438","(*args)","",2],["new","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000441","(*args)","",2],["new","Vagrant::Plugin","classes/Vagrant/Plugin.html#M000451","(spec, file)","Initializes a new plugin, given a Gemspec and the path to the gem's `vagrant_init.rb` file. This should",2],["new","Vagrant::Provisioners::Base","classes/Vagrant/Provisioners/Base.html#M000452","(env, config)","",2],["new","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000457","(env, config)","",2],["new","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000497","(env, config)","",2],["new","Vagrant::Provisioners::ChefSolo::Config","classes/Vagrant/Provisioners/ChefSolo/Config.html#M000490","()","",2],["new","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000505","(env, config)","",2],["new","Vagrant::Provisioners::Puppet::Config","classes/Vagrant/Provisioners/Puppet/Config.html#M000495","()","",2],["new","Vagrant::Provisioners::PuppetServer::Config","classes/Vagrant/Provisioners/PuppetServer/Config.html#M000522","()","",2],["new","Vagrant::Provisioners::Shell::Config","classes/Vagrant/Provisioners/Shell/Config.html#M000520","()","",2],["new","Vagrant::Registry","classes/Vagrant/Registry.html#M000530","()","",2],["new","Vagrant::SSH","classes/Vagrant/SSH.html#M000536","(vm)","",2],["new","Vagrant::UI::Interface","classes/Vagrant/UI/Interface.html#M000553","(resource)","",2],["new","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000572","(hash={}, &block)","",2],["new","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess.html#M000601","(*command)","",2],["new","Vagrant::Util::Subprocess::Result","classes/Vagrant/Util/Subprocess/Result.html#M000609","(exit_code, stdout, stderr)","",2],["new","Vagrant::Util::Subprocess::TimeoutExceeded","classes/Vagrant/Util/Subprocess/TimeoutExceeded.html#M000608","(pid)","",2],["new","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000602","(template, data = {})","",2],["new","Vagrant::VM","classes/Vagrant/VM.html#M000610","(name, env, config, opts=nil)","",2],["nfs","Vagrant::Provisioners::ChefSolo::Config","classes/Vagrant/Provisioners/ChefSolo/Config.html#M000493","()","",2],["nfs?","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000431","()","",2],["nfs?","Vagrant::Hosts::Base","classes/Vagrant/Hosts/Base.html#M000425","()","Returns true of false denoting whether or not this host supports NFS shared folder setup. This method",2],["nfs?","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000442","()","",2],["nfs?","Vagrant::Hosts::Windows","classes/Vagrant/Hosts/Windows.html#M000447","()","Windows does not support NFS ",2],["nfs_cleanup","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000436","(id)","",2],["nfs_cleanup","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000445","(id)","",2],["nfs_enabled?","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000110","()","Checks if there are any NFS enabled shared folders. ",2],["nfs_export","Vagrant::Hosts::Arch","classes/Vagrant/Hosts/Arch.html#M000421","(id, ip, folders)","",2],["nfs_export","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000432","(id, ip, folders)","",2],["nfs_export","Vagrant::Hosts::Base","classes/Vagrant/Hosts/Base.html#M000426","(id, ip, folders)","Exports the given hash of folders via NFS. @param [String] id A unique ID that is guaranteed to be unique",2],["nfs_export","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000443","(id, ip, folders)","",2],["nfs_prune","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000433","(valid_ids)","",2],["nfs_prune","Vagrant::Hosts::Base","classes/Vagrant/Hosts/Base.html#M000427","(valid_ids)","Prunes any NFS exports made by Vagrant which aren't in the set of valid ids given. @param [Array<String>]",2],["nfs_prune","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000444","(valid_ids)","",2],["ovf_path","Vagrant::Action::VM::Export","classes/Vagrant/Action/VM/Export.html#M000080","()","",2],["package","Vagrant::VM","classes/Vagrant/VM.html#M000619","(options=nil)","",2],["package_base","Vagrant::Command::Package","classes/Vagrant/Command/Package.html#M000178","(options)","",2],["package_target","Vagrant::Command::Package","classes/Vagrant/Command/Package.html#M000179","(name, options)","",2],["package_vm","Vagrant::Command::Package","classes/Vagrant/Command/Package.html#M000180","(vm, options)","",2],["parse_options","Vagrant::Command::Base","classes/Vagrant/Command/Base.html#M000162","(opts=nil)","Parses the options given an OptionParser instance. This is a convenience method that properly handles",2],["platform","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000592","()","",2],["plugins","Vagrant::Plugin","classes/Vagrant/Plugin.html#M000450","()","Returns the array of plugins which are currently loaded by Vagrant. @return [Array] ",2],["precedence","Vagrant::Hosts::BSD","classes/Vagrant/Hosts/BSD.html#M000429","()","",2],["precedence","Vagrant::Hosts::Base","classes/Vagrant/Hosts/Base.html#M000423","()","The precedence of the host when checking for matches. This is to allow certain host such as generic OS's",2],["precedence","Vagrant::Hosts::Linux","classes/Vagrant/Hosts/Linux.html#M000440","()","",2],["prepare","Vagrant::Downloaders::Base","classes/Vagrant/Downloaders/Base.html#M000248","(source_url)","Called prior to execution so any error checks can be done ",2],["prepare","Vagrant::Downloaders::File","classes/Vagrant/Downloaders/File.html#M000251","(source_url)","",2],["prepare","Vagrant::Provisioners::Base","classes/Vagrant/Provisioners/Base.html#M000454","()","This is the method called to \"prepare\" the provisioner. This is called before any actions are run by",2],["prepare","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000458","()","",2],["prepare","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000471","()","",2],["prepare","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000498","()","",2],["prepare","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000506","()","",2],["prepare_folders","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000101","()","Prepares the settings for the NFS folders, such as setting the options on the NFS folders. ",2],["prepare_folders","Vagrant::Action::VM::ShareFolders","classes/Vagrant/Action/VM/ShareFolders.html#M000141","()","Prepares the shared folders by verifying they exist and creating them if they don't. ",2],["prepare_host_only_network","Vagrant::Guest::FreeBSD","classes/Vagrant/Guest/FreeBSD.html#M000399","(net_options=nil)","",2],["prepare_permission","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000102","(perm, opts)","Prepares the UID/GID settings for a single folder. ",2],["primary_vm","Vagrant::Environment","classes/Vagrant/Environment.html#M000365","()","Returns the primary VM associated with this environment. This method is only applicable for multi-VM",2],["proc_stack","Vagrant::Util::StackedProcRunner","classes/Vagrant/Util/StackedProcRunner.html#M000593","()","Returns the proc stack. This should always be called as the accessor of the stack. The instance variable",2],["procs_for_source","Vagrant::Config::Loader","classes/Vagrant/Config/Loader.html#M000216","(source)","This returns an array of `Proc` objects for the given source. The `Proc` objects returned will expect",2],["provision","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000239","(name, options=nil, &block)","",2],["provision","Vagrant::VM","classes/Vagrant/VM.html#M000624","()","",2],["provision!","Vagrant::Provisioners::Base","classes/Vagrant/Provisioners/Base.html#M000455","()","This is the method called to provision the system. This method is expected to do whatever necessary to",2],["provision!","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000472","()","",2],["provision!","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000501","()","",2],["provision!","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000507","()","",2],["provision!","Vagrant::Provisioners::PuppetServer","classes/Vagrant/Provisioners/PuppetServer.html#M000524","()","",2],["provision!","Vagrant::Provisioners::Shell","classes/Vagrant/Provisioners/Shell.html#M000529","()","",2],["provisioners","Vagrant","classes/Vagrant.html#M000635","()","Global registry of provisioners. This registry is used to look up the provisioners provided for `config.vm.provision`.",2],["push_proc","Vagrant::Util::StackedProcRunner","classes/Vagrant/Util/StackedProcRunner.html#M000594","(&block)","Adds (pushes) a proc to the stack. The actual proc added here is not executed, but merely stored. @param",2],["raw","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000352","(*command, &block)","Executes a command and returns the raw result object. ",2],["read_bridged_interfaces","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000335","()","Returns a list of bridged interfaces. @return [Hash] ",2],["read_bridged_interfaces","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000277","()","",2],["read_bridged_interfaces","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000300","()","",2],["read_forwarded_ports","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000334","(uuid=nil, active_only=false)","Returns a list of forwarded ports for a VM. @param [String] uuid UUID of the VM to read from, or `nil`",2],["read_forwarded_ports","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000272","(uuid=nil, active_only=false)","",2],["read_forwarded_ports","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000295","(uuid=nil, active_only=false)","",2],["read_guest_additions_version","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000336","()","Returns the guest additions version that is installed on this VM. @return [String] ",2],["read_guest_additions_version","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000279","()","",2],["read_guest_additions_version","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000304","()","",2],["read_host_only_interfaces","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000337","()","Returns a list of available host only interfaces. @return [Hash] ",2],["read_host_only_interfaces","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000280","()","",2],["read_host_only_interfaces","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000306","()","",2],["read_io","Vagrant::Util::Subprocess","classes/Vagrant/Util/Subprocess.html#M000607","(io)","Reads data from an IO object while it can, returning the data it reads. When it encounters a case when",2],["read_mac_address","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000338","()","Returns the MAC address of the first network interface. @return [String] ",2],["read_mac_address","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000286","()","",2],["read_mac_address","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000307","()","",2],["read_machine_folder","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000339","()","Returns the folder where VirtualBox places it's VMs. @return [String] ",2],["read_machine_folder","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000287","()","",2],["read_machine_folder","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000308","()","",2],["read_network_interfaces","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000340","()","Returns a list of network interfaces of the VM. @return [Hash] ",2],["read_network_interfaces","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000288","()","",2],["read_network_interfaces","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000309","()","",2],["read_state","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000341","()","Returns the current state of this VM. @return [Symbol] ",2],["read_state","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000293","()","",2],["read_state","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000311","()","",2],["read_used_ports","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000342","()","Returns a list of all forwarded ports in use by active virtual machines. @return [Array] ",2],["read_used_ports","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000294","()","",2],["read_used_ports","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000312","()","",2],["read_version","Vagrant::Driver::VirtualBox","classes/Vagrant/Driver/VirtualBox.html#M000264","()","This returns the version of VirtualBox that is running. @return [String] ",2],["read_vms","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000343","()","Returns a list of all UUIDs of virtual machines currently known by VirtualBox. @return [Array<String>]",2],["read_vms","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000296","()","",2],["read_vms","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000318","()","",2],["ready?","Vagrant::Communication::Base","classes/Vagrant/Communication/Base.html#M000190","()","Checks if the target machine is ready for communication. @return [Boolean] ",2],["ready?","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000196","()","",2],["recover","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000008","(env)","",2],["recover","Vagrant::Action::Box::Unpackage","classes/Vagrant/Action/Box/Unpackage.html#M000014","(env)","",2],["recover","Vagrant::Action::General::Package","classes/Vagrant/Action/General/Package.html#M000036","(env)","",2],["recover","Vagrant::Action::VM::Export","classes/Vagrant/Action/VM/Export.html#M000077","(env)","",2],["recover","Vagrant::Action::VM::Import","classes/Vagrant/Action/VM/Import.html#M000092","(env)","",2],["register","Vagrant::Registry","classes/Vagrant/Registry.html#M000531","(key, value=nil, &block)","Register a callable by key. The callable should be given in a block which will be lazily evaluated when",2],["register","Vagrant::Util::Busy","classes/Vagrant/Util/Busy.html#M000552","(sig_callback)","Registers a SIGINT handler. This typically is called from {busy}. Callbacks are only registered once,",2],["registered","Vagrant::Util::Busy","classes/Vagrant/Util/Busy.html#M000556","()","Helper method to get access to the class variable. This is mostly exposed for tests. This shouldn't be",2],["reload","Vagrant::VM","classes/Vagrant/VM.html#M000623","()","",2],["reload!","Vagrant::BoxCollection","classes/Vagrant/BoxCollection.html#M000157","()","Loads the list of all boxes from the source. This modifies the current array. ",2],["reload!","Vagrant::Environment","classes/Vagrant/Environment.html#M000379","()","Reloads the configuration of this environment. ",2],["reload!","Vagrant::VM","classes/Vagrant/VM.html#M000618","()","",2],["render","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000597","(*args)","Render a given template and return the result. This method optionally takes a block which will be passed",2],["render","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000603","()","Renders the template using the class intance as the binding. Because the renderer inherits from `OpenStruct`,",2],["render_string","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000598","(*args)","Render a given string and return the result. This method optionally takes a block which will be passed",2],["render_string","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000605","()","Renders a template, handling the template as a string, but otherwise acting the same way as {#render}.",2],["render_with","Vagrant::Util::TemplateRenderer","classes/Vagrant/Util/TemplateRenderer.html#M000599","(method, template, data={})","Method used internally to DRY out the other renderers. This method creates and sets up the renderer before",2],["repackage","Vagrant::Box","classes/Vagrant/Box.html#M000154","(options=nil)","Begins sequence to repackage this box. ",2],["replace","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000026","(index, middleware, *args, &block)","Replaces the given middlware object or index with the new middleware. ",2],["report_progress","Vagrant::UI::Basic","classes/Vagrant/UI/Basic.html#M000558","(progress, total, show_parts=true)","This is used to output progress reports to the UI. Send this method progress/total and it will output",2],["resolve_proxy","Vagrant::Downloaders::HTTP","classes/Vagrant/Downloaders/HTTP.html#M000255","(source_uri)","This method respects the \"http_proxy\" and \"no_proxy\" environmental variables so that HTTP proxies can",2],["resume","Vagrant::VM","classes/Vagrant/VM.html#M000627","()","",2],["retryable","Vagrant::Util::Retryable","classes/Vagrant/Util/Retryable.html#M000587","(opts=nil)","Retries a given block a specified number of times in the event the specified exception is raised. If",2],["root_path","Vagrant::Environment","classes/Vagrant/Environment.html#M000373","()","The root path is the path where the top-most (loaded last) Vagrantfile resides. It can be considered",2],["run","Vagrant::Action::Runner","classes/Vagrant/Action/Runner.html#M000046","(callable_id, options=nil)","",2],["run","Vagrant::Config","classes/Vagrant/Config.html#M000229","(&block)","This is the method which is called by all Vagrantfiles to configure Vagrant. This method expects a block",2],["run_action","Vagrant::VM","classes/Vagrant/VM.html#M000630","(name, options=nil)","",2],["run_chef_client","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000486","()","",2],["run_chef_solo","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000516","()","",2],["run_list","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000477","()","Returns the run list, but also sets it up to be empty if it hasn't been defined already. ",2],["run_procs!","Vagrant::Util::StackedProcRunner","classes/Vagrant/Util/StackedProcRunner.html#M000596","(*args)","Executes all the procs on the stack, passing in the given arguments. The stack is not cleared afterwords.",2],["run_puppet_client","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000514","()","",2],["run_puppetd_client","Vagrant::Provisioners::PuppetServer","classes/Vagrant/Provisioners/PuppetServer.html#M000526","()","",2],["safe_exec","Vagrant::Util::SafeExec","classes/Vagrant/Util/SafeExec.html#M000595","(command)","",2],["say","Vagrant::UI::Basic","classes/Vagrant/UI/Basic.html#M000560","(type, message, opts=nil)","This method handles actually outputting a message of a given type to the console. ",2],["set","Vagrant::Config::Loader","classes/Vagrant/Config/Loader.html#M000214","(name, sources)","Set the configuration data for the given name. The `name` should be a symbol and must uniquely identify",2],["set_mac_address","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000344","(mac)","Sets the MAC address of the first network adapter. @param [String] mac MAC address without any spaces/hyphens.",2],["set_mac_address","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000297","(mac)","",2],["set_mac_address","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000324","(mac)","",2],["set_module_paths","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000510","()","",2],["set_options","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000203","(options)","Allows setting options from a hash. By default this simply calls the `#{key}=` method on the config class",2],["setup_box_directory","Vagrant::Action::Box::Unpackage","classes/Vagrant/Action/Box/Unpackage.html#M000015","()","",2],["setup_config","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000462","(template, filename, template_vars)","",2],["setup_home_path","Vagrant::Environment","classes/Vagrant/Environment.html#M000382","()","This sets the `@home_path` variable properly. @return [Pathname] ",2],["setup_json","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000463","()","",2],["setup_server_config","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000485","()","",2],["setup_solo_config","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000515","()","",2],["setup_temp_dir","Vagrant::Action::VM::Export","classes/Vagrant/Action/VM/Export.html#M000078","()","",2],["share_folder","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000235","(name, guestpath, hostpath, opts=nil)","",2],["share_folders","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000345","(folders)","Share a set of folders on this VM. @param [Array<Hash>] folders ",2],["share_folders","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000298","(folders)","",2],["share_folders","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000325","(folders)","",2],["share_folders","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000511","(prefix, folders)","Shares the given folders with the given prefix. The folders should be of the structure resulting from",2],["share_manifests","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000508","()","",2],["share_module_paths","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000509","()","",2],["shared_folders","Vagrant::Action::VM::ShareFolders","classes/Vagrant/Action/VM/ShareFolders.html#M000140","()","This method returns an actual list of VirtualBox shared folders to create and their proper path. ",2],["shell_execute","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000201","(connection, command, sudo=false)","Executes the command on an SSH connection within a login shell. ",2],["silence","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000545","(stream)","Alias for #capture",2],["source_root","Vagrant","classes/Vagrant.html#M000628","()","The source root is the path to the root directory of the Vagrant gem. ",2],["split_main_and_subcommand","Vagrant::Command::Base","classes/Vagrant/Command/Base.html#M000165","(argv)","This method will split the argv given into three parts: the flags to this command, the subcommand, and",2],["ssh","Vagrant::VM","classes/Vagrant/VM.html#M000614","()","Access the {Vagrant::SSH} object associated with this VM, which is used to get SSH credentials with the",2],["ssh_connect","Vagrant::Command::SSH","classes/Vagrant/Command/SSH.html#M000186","(vm, opts)","",2],["ssh_execute","Vagrant::Command::SSH","classes/Vagrant/Command/SSH.html#M000185","(vm, command=nil)","",2],["ssh_port","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000346","(expected)","Reads the SSH port of this VM. @param [Integer] expected Expected guest port of SSH. ",2],["ssh_port","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000299","(expected_port)","",2],["ssh_port","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000326","(expected_port)","",2],["stack","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000030","()","Returns the current stack of middlewares. You probably won't need to use this directly, and it's recommended",2],["start","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000347","(mode)","Starts the virtual machine. @param [String] mode Mode to boot the VM. Either \"headless\" or \"gui\" ",2],["start","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000301","(mode)","",2],["start","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000330","(mode)","",2],["start","Vagrant::VM","classes/Vagrant/VM.html#M000621","(options=nil)","",2],["state","Vagrant::VM","classes/Vagrant/VM.html#M000615","()","Returns the state of the VM as a symbol. @return [Symbol] ",2],["status_code","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000353","(code = nil)","",2],["sudo","Vagrant::Communication::Base","classes/Vagrant/Communication/Base.html#M000193","(command, opts=nil)","Execute a comand with super user privileges. See #execute for parameter information. ",2],["sudo","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000198","(command, opts=nil, &block)","",2],["suspend","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000348","()","Suspend the virtual machine. ",2],["suspend","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000302","()","",2],["suspend","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000331","()","",2],["suspend","Vagrant::VM","classes/Vagrant/VM.html#M000626","()","",2],["system=","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000233","(value)","",2],["tar_file_options","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000591","()","",2],["tar_path","Vagrant::Action::General::Package","classes/Vagrant/Action/General/Package.html#M000041","()","Path to the final box output file ",2],["terminal_supports_colors?","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000590","()","Returns a boolean noting whether the terminal supports color. output. ",2],["test","Vagrant::Communication::Base","classes/Vagrant/Communication/Base.html#M000194","(command, opts=nil)","Executes a command and returns a boolean statement if it was successful or not. This is implemented by",2],["threshold_check","Vagrant::Action::VM::ForwardPorts","classes/Vagrant/Action/VM/ForwardPorts.html#M000084","(ports)","This method checks for any forwarded ports on the host below 1024, which causes the forwarded ports to",2],["tiger?","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000584","()","",2],["tmp_path","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000546","()","------------------------------------------------------------ Path helpers ------------------------------------------------------------",2],["to_app","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000031","(env)","Converts the builder stack to a runnable action sequence. @param [Vagrant::Action::Environment] env The",2],["to_hash","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000206","()","Converts the configuration to a raw hash by calling `#to_hash` on all instance variables (if it can)",2],["to_hash","Vagrant::Registry","classes/Vagrant/Registry.html#M000534","()","Converts this registry to a hash ",2],["to_json","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000207","(*a)","Converts to JSON, with the `json_class` field set so that when the JSON is parsed back, it can be loaded",2],["translate_error","Vagrant::Errors::VagrantError","classes/Vagrant/Errors/VagrantError.html#M000360","(opts)","",2],["ui","Vagrant::VM","classes/Vagrant/VM.html#M000629","()","",2],["unregister","Vagrant::Util::Busy","classes/Vagrant/Util/Busy.html#M000554","(sig_callback)","Unregisters a SIGINT handler. ",2],["up","Vagrant::VM","classes/Vagrant/VM.html#M000620","(options=nil)","",2],["update","DigestClass","classes/DigestClass.html#M000565","(string)","",2],["upload","Vagrant::Communication::Base","classes/Vagrant/Communication/Base.html#M000191","(from, to)","Upload a file to the virtual machine. @param [String] from Path to a file to upload. @param [String]",2],["upload","Vagrant::Communication::SSH","classes/Vagrant/Communication/SSH.html#M000199","(from, to)","",2],["upload_encrypted_data_bag_secret","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000480","()","",2],["upload_validation_key","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000479","()","",2],["use","Vagrant::Action::Builder","classes/Vagrant/Action/Builder.html#M000022","(middleware, *args, &block)","Adds a middleware class to the middleware stack. Any additional args and a block, if given, are saved",2],["uuid=","Vagrant::VM","classes/Vagrant/VM.html#M000617","(value)","Sets the currently active VM for this VM. If the VM is a valid, created virtual machine, then it will",2],["vagrant_app","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000535","(*path)","------------------------------------------------------------ Environment creation helpers ------------------------------------------------------------",2],["vagrant_box","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000540","(name)","Creates the folder to contain a vagrant box. This allows for \"fake\" boxes to be made with the specified",2],["vagrant_env","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000539","(*args)","Creates and _loads_ a Vagrant environment at the given path. If no path is given, then a default {#vagrantfile}",2],["vagrant_mock_downloader","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000542","(klass)","Returns an instantiated downloader with a mocked tempfile which can be passed into it. @param [Class]",2],["vagrantfile","Vagrant::TestHelpers","classes/Vagrant/TestHelpers.html#M000538","(*args)","Creates a Vagrantfile with the given contents in the given app directory. If no app directory is specified,",2],["validate","Vagrant::Config::Base","classes/Vagrant/Config/Base.html#M000205","(env, errors)","Called by {Top} after the configuration is loaded to validate the configuaration objects. Subclasses",2],["validate","Vagrant::Config::SSHConfig","classes/Vagrant/Config/SSHConfig.html#M000219","(env, errors)","",2],["validate","Vagrant::Config::VMConfig","classes/Vagrant/Config/VMConfig.html#M000245","(env, errors)","",2],["validate","Vagrant::Config::VMConfig::Provisioner","classes/Vagrant/Config/VMConfig/Provisioner.html#M000227","(env, errors)","",2],["validate","Vagrant::Config::VagrantConfig","classes/Vagrant/Config/VagrantConfig.html#M000224","(env, errors)","",2],["validate","Vagrant::Provisioners::Chef::Config","classes/Vagrant/Provisioners/Chef/Config.html#M000483","(env, errors)","",2],["validate","Vagrant::Provisioners::ChefClient::Config","classes/Vagrant/Provisioners/ChefClient/Config.html#M000469","(env, errors)","",2],["validate","Vagrant::Provisioners::ChefSolo::Config","classes/Vagrant/Provisioners/ChefSolo/Config.html#M000494","(env, errors)","",2],["validate","Vagrant::Provisioners::Puppet::Config","classes/Vagrant/Provisioners/Puppet/Config.html#M000502","(env, errors)","",2],["validate","Vagrant::Provisioners::Shell::Config","classes/Vagrant/Provisioners/Shell/Config.html#M000521","(env, errors)","",2],["validate!","Vagrant::Config::Top","classes/Vagrant/Config/Top.html#M000223","(env)","Validates the configuration classes of this instance and raises an exception if they are invalid. If",2],["validation_client_name","Vagrant::Provisioners::ChefClient::Config","classes/Vagrant/Provisioners/ChefClient/Config.html#M000464","()","Provide defaults in such a way that they won't override the instance variable. This is so merging continues",2],["validation_key_path","Vagrant::Provisioners::ChefClient","classes/Vagrant/Provisioners/ChefClient.html#M000487","()","",2],["values_at","Vagrant::Util::HashWithIndifferentAccess","classes/Vagrant/Util/HashWithIndifferentAccess.html#M000576","(*indices)","",2],["verify_adapters","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000107","(adapters)","Verifies that the adapter configurations look good. This will raise an exception in the case that any",2],["verify_binary","Vagrant::Provisioners::Chef","classes/Vagrant/Provisioners/Chef.html#M000459","(binary)","",2],["verify_binary","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000513","(binary)","",2],["verify_binary","Vagrant::Provisioners::PuppetServer","classes/Vagrant/Provisioners/PuppetServer.html#M000525","(binary)","",2],["verify_image","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000349","(path)","Verifies that an image can be imported properly. @param [String] path Path to an OVF file. @return [Boolean]",2],["verify_image","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000303","(path)","",2],["verify_image","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000332","(path)","",2],["verify_no_bridge_collision","Vagrant::Action::VM::Network","classes/Vagrant/Action/VM/Network.html#M000119","(options)","Verifies that a host-only network subnet would not collide with a bridged networking interface. If the",2],["verify_settings","Vagrant::Action::VM::NFS","classes/Vagrant/Action/VM/NFS.html#M000111","()","Verifies that the host is set and supports NFS. ",2],["verify_shared_folders","Vagrant::Provisioners::ChefSolo","classes/Vagrant/Provisioners/ChefSolo.html#M000518","(folders)","",2],["verify_shared_folders","Vagrant::Provisioners::Puppet","classes/Vagrant/Provisioners/Puppet.html#M000517","(folders)","",2],["vm_exists?","Vagrant::Driver::VirtualBoxBase","classes/Vagrant/Driver/VirtualBoxBase.html#M000350","(uuid)","Checks if a VM with the given UUID exists. @return [Boolean] ",2],["vm_exists?","Vagrant::Driver::VirtualBox_4_0","classes/Vagrant/Driver/VirtualBox_4_0.html#M000305","(uuid)","",2],["vm_exists?","Vagrant::Driver::VirtualBox_4_1","classes/Vagrant/Driver/VirtualBox_4_1.html#M000333","(uuid)","",2],["vms","Vagrant::Environment","classes/Vagrant/Environment.html#M000363","()","Returns the VMs associated with this environment. @return [Hash<Symbol,VM>] ",2],["vms_ordered","Vagrant::Environment","classes/Vagrant/Environment.html#M000364","()","Returns the VMs associated with this environment, in the order that they were defined. @return [Array<VM>]",2],["wait_for_boot","Vagrant::Action::VM::Boot","classes/Vagrant/Action/VM/Boot.html#M000047","()","",2],["windows?","Vagrant::Util::Platform","classes/Vagrant/Util/Platform.html#M000586","()","",2],["with_script_file","Vagrant::Provisioners::Shell","classes/Vagrant/Provisioners/Shell.html#M000528","()","This method yields the path to a script to upload and execute on the remote server. This method will",2],["with_target_vms","Vagrant::Command::Base","classes/Vagrant/Command/Base.html#M000163","(name=nil, single_target=false)","Yields a VM for each target VM for the command. This is a convenience method for easily implementing",2],["with_tempfile","Vagrant::Action::Box::Download","classes/Vagrant/Action/Box/Download.html#M000009","()","",2],["CHANGELOG.md","files/CHANGELOG_md.html","files/CHANGELOG_md.html","","## 0.9.2 (January 20, 2012)    - Support shell expansions in shared folder guest paths again. [GH-656]",3],["LICENSE","files/LICENSE.html","files/LICENSE.html","","The MIT License  Copyright (c) 2010-2012Mitchell Hashimoto and John Bender  Permission is hereby granted,",3],["README.md","files/README_md.html","files/README_md.html","","# Vagrant  * Website: [http://vagrantup.com](http://vagrantup.com) * Source: [https://github.com/mitchellh/vagrant](https://github.com/mitchellh/vagrant)",3],["vagrant.rb","files/lib/vagrant_rb.html","files/lib/vagrant_rb.html","","Enable logging if it is requested. We do this before anything else so that we can setup the output before",3],["action.rb","files/lib/vagrant/action_rb.html","files/lib/vagrant/action_rb.html","","",3],["destroy.rb","files/lib/vagrant/action/box/destroy_rb.html","files/lib/vagrant/action/box/destroy_rb.html","","",3],["download.rb","files/lib/vagrant/action/box/download_rb.html","files/lib/vagrant/action/box/download_rb.html","","",3],["package.rb","files/lib/vagrant/action/box/package_rb.html","files/lib/vagrant/action/box/package_rb.html","","",3],["unpackage.rb","files/lib/vagrant/action/box/unpackage_rb.html","files/lib/vagrant/action/box/unpackage_rb.html","","",3],["verify.rb","files/lib/vagrant/action/box/verify_rb.html","files/lib/vagrant/action/box/verify_rb.html","","",3],["builder.rb","files/lib/vagrant/action/builder_rb.html","files/lib/vagrant/action/builder_rb.html","","",3],["builtin.rb","files/lib/vagrant/action/builtin_rb.html","files/lib/vagrant/action/builtin_rb.html","","",3],["set.rb","files/lib/vagrant/action/env/set_rb.html","files/lib/vagrant/action/env/set_rb.html","","",3],["environment.rb","files/lib/vagrant/action/environment_rb.html","files/lib/vagrant/action/environment_rb.html","","",3],["package.rb","files/lib/vagrant/action/general/package_rb.html","files/lib/vagrant/action/general/package_rb.html","","",3],["validate.rb","files/lib/vagrant/action/general/validate_rb.html","files/lib/vagrant/action/general/validate_rb.html","","",3],["runner.rb","files/lib/vagrant/action/runner_rb.html","files/lib/vagrant/action/runner_rb.html","","",3],["boot.rb","files/lib/vagrant/action/vm/boot_rb.html","files/lib/vagrant/action/vm/boot_rb.html","","",3],["check_accessible.rb","files/lib/vagrant/action/vm/check_accessible_rb.html","files/lib/vagrant/action/vm/check_accessible_rb.html","","",3],["check_box.rb","files/lib/vagrant/action/vm/check_box_rb.html","files/lib/vagrant/action/vm/check_box_rb.html","","",3],["check_guest_additions.rb","files/lib/vagrant/action/vm/check_guest_additions_rb.html","files/lib/vagrant/action/vm/check_guest_additions_rb.html","","",3],["check_port_collisions.rb","files/lib/vagrant/action/vm/check_port_collisions_rb.html","files/lib/vagrant/action/vm/check_port_collisions_rb.html","","",3],["clean_machine_folder.rb","files/lib/vagrant/action/vm/clean_machine_folder_rb.html","files/lib/vagrant/action/vm/clean_machine_folder_rb.html","","",3],["clear_forwarded_ports.rb","files/lib/vagrant/action/vm/clear_forwarded_ports_rb.html","files/lib/vagrant/action/vm/clear_forwarded_ports_rb.html","","",3],["clear_network_interfaces.rb","files/lib/vagrant/action/vm/clear_network_interfaces_rb.html","files/lib/vagrant/action/vm/clear_network_interfaces_rb.html","","",3],["clear_shared_folders.rb","files/lib/vagrant/action/vm/clear_shared_folders_rb.html","files/lib/vagrant/action/vm/clear_shared_folders_rb.html","","",3],["customize.rb","files/lib/vagrant/action/vm/customize_rb.html","files/lib/vagrant/action/vm/customize_rb.html","","",3],["destroy.rb","files/lib/vagrant/action/vm/destroy_rb.html","files/lib/vagrant/action/vm/destroy_rb.html","","",3],["destroy_unused_network_interfaces.rb","files/lib/vagrant/action/vm/destroy_unused_network_interfaces_rb.html","files/lib/vagrant/action/vm/destroy_unused_network_interfaces_rb.html","","",3],["discard_state.rb","files/lib/vagrant/action/vm/discard_state_rb.html","files/lib/vagrant/action/vm/discard_state_rb.html","","",3],["export.rb","files/lib/vagrant/action/vm/export_rb.html","files/lib/vagrant/action/vm/export_rb.html","","",3],["forward_ports.rb","files/lib/vagrant/action/vm/forward_ports_rb.html","files/lib/vagrant/action/vm/forward_ports_rb.html","","",3],["halt.rb","files/lib/vagrant/action/vm/halt_rb.html","files/lib/vagrant/action/vm/halt_rb.html","","",3],["host_name.rb","files/lib/vagrant/action/vm/host_name_rb.html","files/lib/vagrant/action/vm/host_name_rb.html","","",3],["import.rb","files/lib/vagrant/action/vm/import_rb.html","files/lib/vagrant/action/vm/import_rb.html","","",3],["match_mac_address.rb","files/lib/vagrant/action/vm/match_mac_address_rb.html","files/lib/vagrant/action/vm/match_mac_address_rb.html","","",3],["network.rb","files/lib/vagrant/action/vm/network_rb.html","files/lib/vagrant/action/vm/network_rb.html","","",3],["nfs.rb","files/lib/vagrant/action/vm/nfs_rb.html","files/lib/vagrant/action/vm/nfs_rb.html","","",3],["package.rb","files/lib/vagrant/action/vm/package_rb.html","files/lib/vagrant/action/vm/package_rb.html","","",3],["package_vagrantfile.rb","files/lib/vagrant/action/vm/package_vagrantfile_rb.html","files/lib/vagrant/action/vm/package_vagrantfile_rb.html","","",3],["provision.rb","files/lib/vagrant/action/vm/provision_rb.html","files/lib/vagrant/action/vm/provision_rb.html","","",3],["provisioner_cleanup.rb","files/lib/vagrant/action/vm/provisioner_cleanup_rb.html","files/lib/vagrant/action/vm/provisioner_cleanup_rb.html","","",3],["prune_nfs_exports.rb","files/lib/vagrant/action/vm/prune_nfs_exports_rb.html","files/lib/vagrant/action/vm/prune_nfs_exports_rb.html","","",3],["resume.rb","files/lib/vagrant/action/vm/resume_rb.html","files/lib/vagrant/action/vm/resume_rb.html","","",3],["setup_package_files.rb","files/lib/vagrant/action/vm/setup_package_files_rb.html","files/lib/vagrant/action/vm/setup_package_files_rb.html","","",3],["share_folders.rb","files/lib/vagrant/action/vm/share_folders_rb.html","files/lib/vagrant/action/vm/share_folders_rb.html","","",3],["suspend.rb","files/lib/vagrant/action/vm/suspend_rb.html","files/lib/vagrant/action/vm/suspend_rb.html","","",3],["warden.rb","files/lib/vagrant/action/warden_rb.html","files/lib/vagrant/action/warden_rb.html","","",3],["box.rb","files/lib/vagrant/box_rb.html","files/lib/vagrant/box_rb.html","","",3],["box_collection.rb","files/lib/vagrant/box_collection_rb.html","files/lib/vagrant/box_collection_rb.html","","",3],["cli.rb","files/lib/vagrant/cli_rb.html","files/lib/vagrant/cli_rb.html","","",3],["command.rb","files/lib/vagrant/command_rb.html","files/lib/vagrant/command_rb.html","","",3],["base.rb","files/lib/vagrant/command/base_rb.html","files/lib/vagrant/command/base_rb.html","","",3],["box.rb","files/lib/vagrant/command/box_rb.html","files/lib/vagrant/command/box_rb.html","","",3],["box_add.rb","files/lib/vagrant/command/box_add_rb.html","files/lib/vagrant/command/box_add_rb.html","","",3],["box_list.rb","files/lib/vagrant/command/box_list_rb.html","files/lib/vagrant/command/box_list_rb.html","","",3],["box_remove.rb","files/lib/vagrant/command/box_remove_rb.html","files/lib/vagrant/command/box_remove_rb.html","","",3],["box_repackage.rb","files/lib/vagrant/command/box_repackage_rb.html","files/lib/vagrant/command/box_repackage_rb.html","","",3],["destroy.rb","files/lib/vagrant/command/destroy_rb.html","files/lib/vagrant/command/destroy_rb.html","","",3],["halt.rb","files/lib/vagrant/command/halt_rb.html","files/lib/vagrant/command/halt_rb.html","","",3],["init.rb","files/lib/vagrant/command/init_rb.html","files/lib/vagrant/command/init_rb.html","","",3],["package.rb","files/lib/vagrant/command/package_rb.html","files/lib/vagrant/command/package_rb.html","","",3],["provision.rb","files/lib/vagrant/command/provision_rb.html","files/lib/vagrant/command/provision_rb.html","","",3],["reload.rb","files/lib/vagrant/command/reload_rb.html","files/lib/vagrant/command/reload_rb.html","","",3],["resume.rb","files/lib/vagrant/command/resume_rb.html","files/lib/vagrant/command/resume_rb.html","","",3],["ssh.rb","files/lib/vagrant/command/ssh_rb.html","files/lib/vagrant/command/ssh_rb.html","","",3],["ssh_config.rb","files/lib/vagrant/command/ssh_config_rb.html","files/lib/vagrant/command/ssh_config_rb.html","","",3],["status.rb","files/lib/vagrant/command/status_rb.html","files/lib/vagrant/command/status_rb.html","","",3],["suspend.rb","files/lib/vagrant/command/suspend_rb.html","files/lib/vagrant/command/suspend_rb.html","","",3],["up.rb","files/lib/vagrant/command/up_rb.html","files/lib/vagrant/command/up_rb.html","","",3],["communication.rb","files/lib/vagrant/communication_rb.html","files/lib/vagrant/communication_rb.html","","",3],["base.rb","files/lib/vagrant/communication/base_rb.html","files/lib/vagrant/communication/base_rb.html","","",3],["ssh.rb","files/lib/vagrant/communication/ssh_rb.html","files/lib/vagrant/communication/ssh_rb.html","","",3],["config.rb","files/lib/vagrant/config_rb.html","files/lib/vagrant/config_rb.html","","",3],["base.rb","files/lib/vagrant/config/base_rb.html","files/lib/vagrant/config/base_rb.html","","",3],["container.rb","files/lib/vagrant/config/container_rb.html","files/lib/vagrant/config/container_rb.html","","",3],["error_recorder.rb","files/lib/vagrant/config/error_recorder_rb.html","files/lib/vagrant/config/error_recorder_rb.html","","",3],["loader.rb","files/lib/vagrant/config/loader_rb.html","files/lib/vagrant/config/loader_rb.html","","",3],["nfs.rb","files/lib/vagrant/config/nfs_rb.html","files/lib/vagrant/config/nfs_rb.html","","",3],["package.rb","files/lib/vagrant/config/package_rb.html","files/lib/vagrant/config/package_rb.html","","",3],["ssh.rb","files/lib/vagrant/config/ssh_rb.html","files/lib/vagrant/config/ssh_rb.html","","",3],["top.rb","files/lib/vagrant/config/top_rb.html","files/lib/vagrant/config/top_rb.html","","",3],["vagrant.rb","files/lib/vagrant/config/vagrant_rb.html","files/lib/vagrant/config/vagrant_rb.html","","",3],["vm.rb","files/lib/vagrant/config/vm_rb.html","files/lib/vagrant/config/vm_rb.html","","",3],["provisioner.rb","files/lib/vagrant/config/vm/provisioner_rb.html","files/lib/vagrant/config/vm/provisioner_rb.html","","",3],["sub_vm.rb","files/lib/vagrant/config/vm/sub_vm_rb.html","files/lib/vagrant/config/vm/sub_vm_rb.html","","",3],["data_store.rb","files/lib/vagrant/data_store_rb.html","files/lib/vagrant/data_store_rb.html","","",3],["downloaders.rb","files/lib/vagrant/downloaders_rb.html","files/lib/vagrant/downloaders_rb.html","","",3],["base.rb","files/lib/vagrant/downloaders/base_rb.html","files/lib/vagrant/downloaders/base_rb.html","","",3],["file.rb","files/lib/vagrant/downloaders/file_rb.html","files/lib/vagrant/downloaders/file_rb.html","","",3],["http.rb","files/lib/vagrant/downloaders/http_rb.html","files/lib/vagrant/downloaders/http_rb.html","","",3],["driver.rb","files/lib/vagrant/driver_rb.html","files/lib/vagrant/driver_rb.html","","",3],["virtualbox.rb","files/lib/vagrant/driver/virtualbox_rb.html","files/lib/vagrant/driver/virtualbox_rb.html","","",3],["virtualbox_4_0.rb","files/lib/vagrant/driver/virtualbox_4_0_rb.html","files/lib/vagrant/driver/virtualbox_4_0_rb.html","","",3],["virtualbox_4_1.rb","files/lib/vagrant/driver/virtualbox_4_1_rb.html","files/lib/vagrant/driver/virtualbox_4_1_rb.html","","",3],["virtualbox_base.rb","files/lib/vagrant/driver/virtualbox_base_rb.html","files/lib/vagrant/driver/virtualbox_base_rb.html","","",3],["environment.rb","files/lib/vagrant/environment_rb.html","files/lib/vagrant/environment_rb.html","","",3],["errors.rb","files/lib/vagrant/errors_rb.html","files/lib/vagrant/errors_rb.html","","This file contains all of the internal errors in Vagrant's core commands, actions, etc. ",3],["guest.rb","files/lib/vagrant/guest_rb.html","files/lib/vagrant/guest_rb.html","","",3],["arch.rb","files/lib/vagrant/guest/arch_rb.html","files/lib/vagrant/guest/arch_rb.html","","",3],["base.rb","files/lib/vagrant/guest/base_rb.html","files/lib/vagrant/guest/base_rb.html","","",3],["debian.rb","files/lib/vagrant/guest/debian_rb.html","files/lib/vagrant/guest/debian_rb.html","","",3],["freebsd.rb","files/lib/vagrant/guest/freebsd_rb.html","files/lib/vagrant/guest/freebsd_rb.html","","",3],["gentoo.rb","files/lib/vagrant/guest/gentoo_rb.html","files/lib/vagrant/guest/gentoo_rb.html","","",3],["linux.rb","files/lib/vagrant/guest/linux_rb.html","files/lib/vagrant/guest/linux_rb.html","","",3],["config.rb","files/lib/vagrant/guest/linux/config_rb.html","files/lib/vagrant/guest/linux/config_rb.html","","",3],["error.rb","files/lib/vagrant/guest/linux/error_rb.html","files/lib/vagrant/guest/linux/error_rb.html","","",3],["redhat.rb","files/lib/vagrant/guest/redhat_rb.html","files/lib/vagrant/guest/redhat_rb.html","","",3],["solaris.rb","files/lib/vagrant/guest/solaris_rb.html","files/lib/vagrant/guest/solaris_rb.html","","",3],["suse.rb","files/lib/vagrant/guest/suse_rb.html","files/lib/vagrant/guest/suse_rb.html","","",3],["ubuntu.rb","files/lib/vagrant/guest/ubuntu_rb.html","files/lib/vagrant/guest/ubuntu_rb.html","","",3],["hosts.rb","files/lib/vagrant/hosts_rb.html","files/lib/vagrant/hosts_rb.html","","",3],["arch.rb","files/lib/vagrant/hosts/arch_rb.html","files/lib/vagrant/hosts/arch_rb.html","","",3],["base.rb","files/lib/vagrant/hosts/base_rb.html","files/lib/vagrant/hosts/base_rb.html","","",3],["bsd.rb","files/lib/vagrant/hosts/bsd_rb.html","files/lib/vagrant/hosts/bsd_rb.html","","",3],["fedora.rb","files/lib/vagrant/hosts/fedora_rb.html","files/lib/vagrant/hosts/fedora_rb.html","","",3],["freebsd.rb","files/lib/vagrant/hosts/freebsd_rb.html","files/lib/vagrant/hosts/freebsd_rb.html","","",3],["linux.rb","files/lib/vagrant/hosts/linux_rb.html","files/lib/vagrant/hosts/linux_rb.html","","",3],["windows.rb","files/lib/vagrant/hosts/windows_rb.html","files/lib/vagrant/hosts/windows_rb.html","","",3],["plugin.rb","files/lib/vagrant/plugin_rb.html","files/lib/vagrant/plugin_rb.html","","",3],["provisioners.rb","files/lib/vagrant/provisioners_rb.html","files/lib/vagrant/provisioners_rb.html","","These aren't autoloaded because they have to register things such as configuration classes right away",3],["base.rb","files/lib/vagrant/provisioners/base_rb.html","files/lib/vagrant/provisioners/base_rb.html","","",3],["chef.rb","files/lib/vagrant/provisioners/chef_rb.html","files/lib/vagrant/provisioners/chef_rb.html","","",3],["chef_client.rb","files/lib/vagrant/provisioners/chef_client_rb.html","files/lib/vagrant/provisioners/chef_client_rb.html","","",3],["chef_solo.rb","files/lib/vagrant/provisioners/chef_solo_rb.html","files/lib/vagrant/provisioners/chef_solo_rb.html","","",3],["puppet.rb","files/lib/vagrant/provisioners/puppet_rb.html","files/lib/vagrant/provisioners/puppet_rb.html","","",3],["puppet_server.rb","files/lib/vagrant/provisioners/puppet_server_rb.html","files/lib/vagrant/provisioners/puppet_server_rb.html","","",3],["shell.rb","files/lib/vagrant/provisioners/shell_rb.html","files/lib/vagrant/provisioners/shell_rb.html","","",3],["registry.rb","files/lib/vagrant/registry_rb.html","files/lib/vagrant/registry_rb.html","","",3],["ssh.rb","files/lib/vagrant/ssh_rb.html","files/lib/vagrant/ssh_rb.html","","",3],["test_helpers.rb","files/lib/vagrant/test_helpers_rb.html","files/lib/vagrant/test_helpers_rb.html","","",3],["ui.rb","files/lib/vagrant/ui_rb.html","files/lib/vagrant/ui_rb.html","","",3],["util.rb","files/lib/vagrant/util_rb.html","files/lib/vagrant/util_rb.html","","",3],["busy.rb","files/lib/vagrant/util/busy_rb.html","files/lib/vagrant/util/busy_rb.html","","",3],["counter.rb","files/lib/vagrant/util/counter_rb.html","files/lib/vagrant/util/counter_rb.html","","",3],["file_checksum.rb","files/lib/vagrant/util/file_checksum_rb.html","files/lib/vagrant/util/file_checksum_rb.html","","This is an \"interface\" that should be implemented by any digest class passed into FileChecksum. Note",3],["file_mode.rb","files/lib/vagrant/util/file_mode_rb.html","files/lib/vagrant/util/file_mode_rb.html","","",3],["hash_with_indifferent_access.rb","files/lib/vagrant/util/hash_with_indifferent_access_rb.html","files/lib/vagrant/util/hash_with_indifferent_access_rb.html","","",3],["network_ip.rb","files/lib/vagrant/util/network_ip_rb.html","files/lib/vagrant/util/network_ip_rb.html","","",3],["platform.rb","files/lib/vagrant/util/platform_rb.html","files/lib/vagrant/util/platform_rb.html","","",3],["retryable.rb","files/lib/vagrant/util/retryable_rb.html","files/lib/vagrant/util/retryable_rb.html","","",3],["safe_exec.rb","files/lib/vagrant/util/safe_exec_rb.html","files/lib/vagrant/util/safe_exec_rb.html","","",3],["stacked_proc_runner.rb","files/lib/vagrant/util/stacked_proc_runner_rb.html","files/lib/vagrant/util/stacked_proc_runner_rb.html","","",3],["subprocess.rb","files/lib/vagrant/util/subprocess_rb.html","files/lib/vagrant/util/subprocess_rb.html","","",3],["template_renderer.rb","files/lib/vagrant/util/template_renderer_rb.html","files/lib/vagrant/util/template_renderer_rb.html","","",3],["version.rb","files/lib/vagrant/version_rb.html","files/lib/vagrant/version_rb.html","","",3],["vm.rb","files/lib/vagrant/vm_rb.html","files/lib/vagrant/vm_rb.html","","",3]],"searchIndex":["digestclass","filechecksum","vagrant","action","box","destroy","download","package","unpackage","verify","builder","env","set","environment","general","package","validate","runner","vm","boot","checkaccessible","checkbox","checkguestadditions","checkportcollisions","cleanmachinefolder","clearforwardedports","clearnetworkinterfaces","clearsharedfolders","customize","destroy","destroyunusednetworkinterfaces","discardstate","export","forwardports","halt","hostname","import","matchmacaddress","nfs","network","package","packagevagrantfile","provision","provisionercleanup","prunenfsexports","resume","setuppackagefiles","sharefolders","suspend","warden","box","boxcollection","cli","command","base","box","boxadd","boxlist","boxremove","boxrepackage","destroy","halt","init","package","provision","reload","resume","ssh","sshconfig","status","suspend","up","communication","base","ssh","config","base","container","errorrecorder","loader","nfsconfig","packageconfig","sshconfig","top","vmconfig","provisioner","subvm","vagrantconfig","datastore","downloaders","base","file","http","driver","virtualbox","vmnotfound","virtualboxbase","virtualbox_4_0","virtualbox_4_1","environment","errors","basevmnotfound","boxalreadyexists","boxdownloadunknowntype","boxnotfound","boxnotspecified","boxspecifieddoesntexist","boxunpackagefailure","boxverificationfailed","cliinvalidoptions","configvalidationfailed","deprecationerror","dotfileisdirectory","downloaderfiledoesntexist","downloaderhttpsocketerror","downloaderhttpstatuserror","environmentlockederror","forwardportautolistempty","forwardportcollision","forwardportcollisionresume","homedirectorymigrationfailed","homedirectorynotaccessible","multivmenvironmentrequired","multivmtargetrequired","nfshostrequired","nfsnohostnetwork","nfsnotsupported","networkadaptercollision","networkcollision","networkdhcpalreadyattached","networknoadapters","networknotfound","noenvironmenterror","packageincludemissing","packageoutputexists","packagerequiresdirectory","persistdotfileexists","scpunavailable","sshauthenticationfailed","sshconnectionrefused","sshkeybadpermissions","sshportnotdetected","sshunavailable","sshunavailablewindows","sharedfoldercreatefailed","vboxmanageerror","vmbasemacnotspecified","vmcustomizationfailed","vmfailedtoboot","vmguesterror","vmimportfailure","vminaccessible","vmnomatcherror","vmnotcreatederror","vmnotfounderror","vmnotrunningerror","vmpowerofftopackage","vagranterror","vagrantinterrupt","vagrantfileexistserror","vagrantfilesyntaxerror","virtualboxinvalidversion","virtualboxnotdetected","guest","arch","base","baseerror","debian","freebsd","freebsdconfig","freebsderror","gentoo","linux","linuxconfig","linuxerror","redhat","solaris","solarisconfig","solariserror","suse","ubuntu","hosts","arch","bsd","base","fedora","freebsd","linux","windows","plugin","provisioners","base","chef","cheferror","config","chefclient","config","chefsolo","config","puppet","config","puppeterror","puppetserver","config","puppetservererror","shell","config","registry","ssh","testhelpers","ui","basic","colored","interface","silent","util","busy","counter","filemode","hashwithindifferentaccess","networkip","platform","retryable","safeexec","stackedprocrunner","subprocess","launcherror","result","timeoutexceeded","templaterenderer","vm","<=>()","[]()","[]=()","_default_cookbook_path()","action_env()","action_registry()","action_runner()","add()","add()","add_recipe()","add_role()","ask()","assign_adapter_locations()","assign_interface_numbers()","attempts()","begin_rescue()","bit32?()","bit64?()","boot()","box_temp_path()","boxes()","boxes_path()","bridged_adapter()","bridged_config()","bridged_network_config()","builtin!()","busy()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","capture()","capture_configures()","change_host_name()","change_host_name()","change_host_name()","change_host_name()","change_host_name()","change_host_name()","channel()","check_key_permissions()","checksum()","chef_binary_path()","chown_provisioning_folder()","clean_machine_folder()","clean_nil_and_empties()","clean_paths()","cleanup()","clear_forwarded_ports()","clear_forwarded_ports()","clear_forwarded_ports()","clear_line()","clear_shared_folders()","clear_shared_folders()","clear_shared_folders()","cli()","client_key_path()","commands()","commit()","compress()","config()","config_class()","config_class()","config_class()","config_class()","config_class()","config_class()","config_keys()","configure()","configure_networks()","configure_networks()","configure_networks()","configure_networks()","configure_networks()","configure_networks()","connect()","convert_key()","cookbooks_path()","copy_include_files()","copy_insecure_private_key()","create_client_key_folder()","create_dhcp_server()","create_dhcp_server()","create_dhcp_server()","create_host_only_network()","create_host_only_network()","create_host_only_network()","create_hostonly_network()","create_metadata()","create_vagrantfile()","created?()","customize()","decompress()","define()","defined_vm_keys()","defined_vms()","delete()","delete()","delete()","delete()","delete()","delete_unused_host_only_networks()","delete_unused_host_only_networks()","delete_unused_host_only_networks()","destroy()","destroy()","detect()","discard_saved_state()","discard_saved_state()","discard_saved_state()","distro_dispatch()","distro_dispatch()","dotfile_path()","download()","download!()","download!()","download!()","download_to()","each()","enable_adapters()","enable_adapters()","enable_adapters()","enable_host_only_network()","enabled_provisioners()","enabled_provisioners()","encrypted_data_bag_secret()","encrypted_data_bag_secret_key_path()","error_key()","error_key()","error_namespace()","error_namespace()","exec()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute()","execute_command()","execute_command()","execute_command()","expanded_folders()","expanded_manifests_path()","expanded_module_paths()","export()","export()","export()","export()","export_folders()","extract_folders()","file_backup_path()","file_cache_path()","finalize_action()","find()","find_matching_hostonly_network()","find_vagrantfile()","fire_callbacks()","flatten()","folders()","for_vm()","format_message()","format_message()","forward_port()","forward_port_definitions()","forward_ports()","forward_ports()","forward_ports()","forward_ports()","forwarded_port_destination=()","forwarded_port_key=()","from_octal()","full_template_path()","general_call()","general_call()","get()","get_and_update_counter()","global_data()","guest()","guest_ip()","guest_paths()","guest_validation_key_path()","guests()","halt()","halt()","halt()","halt()","halt()","halt()","halt()","halt()","handle_correct()","handle_error()","has_key?()","help()","help()","hexdigest()","home_path()","host()","host_ip()","hostonly_adapter()","hostonly_config()","hostonly_network_config()","hosts()","import()","import()","import()","include?()","index()","info()","insert()","insert_after()","insert_before()","instance_variables_hash()","instance_variables_hash()","instantiate_downloader()","ip_parts()","json()","json_create()","key?()","leopard?()","load()","load!()","load!()","load_config!()","load_guest!()","load_vms!()","loaded?()","local_data()","lock()","lock_path()","log_level()","manifests_guest_path()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","match?()","member?()","merge()","merge()","merge()","merge()","merge!()","merged_json()","method_missing()","mount_folder()","mount_folders()","mount_nfs()","mount_nfs()","mount_nfs()","mount_shared_folder()","mount_shared_folder()","mount_shared_folder()","mount_shared_folder()","mount_shared_folders()","multivm?()","mutex()","network()","network_address()","network_scripts_dir()","network_scripts_dir()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nfs()","nfs?()","nfs?()","nfs?()","nfs?()","nfs_cleanup()","nfs_cleanup()","nfs_enabled?()","nfs_export()","nfs_export()","nfs_export()","nfs_export()","nfs_prune()","nfs_prune()","nfs_prune()","ovf_path()","package()","package_base()","package_target()","package_vm()","parse_options()","platform()","plugins()","precedence()","precedence()","precedence()","prepare()","prepare()","prepare()","prepare()","prepare()","prepare()","prepare()","prepare_folders()","prepare_folders()","prepare_host_only_network()","prepare_permission()","primary_vm()","proc_stack()","procs_for_source()","provision()","provision()","provision!()","provision!()","provision!()","provision!()","provision!()","provision!()","provisioners()","push_proc()","raw()","read_bridged_interfaces()","read_bridged_interfaces()","read_bridged_interfaces()","read_forwarded_ports()","read_forwarded_ports()","read_forwarded_ports()","read_guest_additions_version()","read_guest_additions_version()","read_guest_additions_version()","read_host_only_interfaces()","read_host_only_interfaces()","read_host_only_interfaces()","read_io()","read_mac_address()","read_mac_address()","read_mac_address()","read_machine_folder()","read_machine_folder()","read_machine_folder()","read_network_interfaces()","read_network_interfaces()","read_network_interfaces()","read_state()","read_state()","read_state()","read_used_ports()","read_used_ports()","read_used_ports()","read_version()","read_vms()","read_vms()","read_vms()","ready?()","ready?()","recover()","recover()","recover()","recover()","recover()","register()","register()","registered()","reload()","reload!()","reload!()","reload!()","render()","render()","render_string()","render_string()","render_with()","repackage()","replace()","report_progress()","resolve_proxy()","resume()","retryable()","root_path()","run()","run()","run_action()","run_chef_client()","run_chef_solo()","run_list()","run_procs!()","run_puppet_client()","run_puppetd_client()","safe_exec()","say()","set()","set_mac_address()","set_mac_address()","set_mac_address()","set_module_paths()","set_options()","setup_box_directory()","setup_config()","setup_home_path()","setup_json()","setup_server_config()","setup_solo_config()","setup_temp_dir()","share_folder()","share_folders()","share_folders()","share_folders()","share_folders()","share_manifests()","share_module_paths()","shared_folders()","shell_execute()","silence()","source_root()","split_main_and_subcommand()","ssh()","ssh_connect()","ssh_execute()","ssh_port()","ssh_port()","ssh_port()","stack()","start()","start()","start()","start()","state()","status_code()","sudo()","sudo()","suspend()","suspend()","suspend()","suspend()","system=()","tar_file_options()","tar_path()","terminal_supports_colors?()","test()","threshold_check()","tiger?()","tmp_path()","to_app()","to_hash()","to_hash()","to_json()","translate_error()","ui()","unregister()","up()","update()","upload()","upload()","upload_encrypted_data_bag_secret()","upload_validation_key()","use()","uuid=()","vagrant_app()","vagrant_box()","vagrant_env()","vagrant_mock_downloader()","vagrantfile()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate()","validate!()","validation_client_name()","validation_key_path()","values_at()","verify_adapters()","verify_binary()","verify_binary()","verify_binary()","verify_image()","verify_image()","verify_image()","verify_no_bridge_collision()","verify_settings()","verify_shared_folders()","verify_shared_folders()","vm_exists?()","vm_exists?()","vm_exists?()","vms()","vms_ordered()","wait_for_boot()","windows?()","with_script_file()","with_target_vms()","with_tempfile()","changelog.md","license","readme.md","vagrant.rb","action.rb","destroy.rb","download.rb","package.rb","unpackage.rb","verify.rb","builder.rb","builtin.rb","set.rb","environment.rb","package.rb","validate.rb","runner.rb","boot.rb","check_accessible.rb","check_box.rb","check_guest_additions.rb","check_port_collisions.rb","clean_machine_folder.rb","clear_forwarded_ports.rb","clear_network_interfaces.rb","clear_shared_folders.rb","customize.rb","destroy.rb","destroy_unused_network_interfaces.rb","discard_state.rb","export.rb","forward_ports.rb","halt.rb","host_name.rb","import.rb","match_mac_address.rb","network.rb","nfs.rb","package.rb","package_vagrantfile.rb","provision.rb","provisioner_cleanup.rb","prune_nfs_exports.rb","resume.rb","setup_package_files.rb","share_folders.rb","suspend.rb","warden.rb","box.rb","box_collection.rb","cli.rb","command.rb","base.rb","box.rb","box_add.rb","box_list.rb","box_remove.rb","box_repackage.rb","destroy.rb","halt.rb","init.rb","package.rb","provision.rb","reload.rb","resume.rb","ssh.rb","ssh_config.rb","status.rb","suspend.rb","up.rb","communication.rb","base.rb","ssh.rb","config.rb","base.rb","container.rb","error_recorder.rb","loader.rb","nfs.rb","package.rb","ssh.rb","top.rb","vagrant.rb","vm.rb","provisioner.rb","sub_vm.rb","data_store.rb","downloaders.rb","base.rb","file.rb","http.rb","driver.rb","virtualbox.rb","virtualbox_4_0.rb","virtualbox_4_1.rb","virtualbox_base.rb","environment.rb","errors.rb","guest.rb","arch.rb","base.rb","debian.rb","freebsd.rb","gentoo.rb","linux.rb","config.rb","error.rb","redhat.rb","solaris.rb","suse.rb","ubuntu.rb","hosts.rb","arch.rb","base.rb","bsd.rb","fedora.rb","freebsd.rb","linux.rb","windows.rb","plugin.rb","provisioners.rb","base.rb","chef.rb","chef_client.rb","chef_solo.rb","puppet.rb","puppet_server.rb","shell.rb","registry.rb","ssh.rb","test_helpers.rb","ui.rb","util.rb","busy.rb","counter.rb","file_checksum.rb","file_mode.rb","hash_with_indifferent_access.rb","network_ip.rb","platform.rb","retryable.rb","safe_exec.rb","stacked_proc_runner.rb","subprocess.rb","template_renderer.rb","version.rb","vm.rb"]}}