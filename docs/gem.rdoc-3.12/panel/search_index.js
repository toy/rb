var search_data = {"index":{"info":[["Object","lib/rdoc/ri/driver.rb","classes/Object.html"," < Object","",1],["RDoc","lib/rdoc/known_classes.rb","classes/RDoc.html"," < ","RDoc is a Ruby documentation system which contains RDoc::RDoc for generating documentation, RDoc::RI",1],["Alias","RDoc","classes/RDoc/Alias.html"," < RDoc::CodeObject","Represent an alias, which is an old_name/new_name pair associated with a particular context ",1],["AnonClass","RDoc","classes/RDoc/AnonClass.html"," < RDoc::ClassModule","An anonymous class like: c = Class.new do end AnonClass is currently not used. ",1],["AnyMethod","RDoc","classes/RDoc/AnyMethod.html"," < RDoc::MethodAttr","AnyMethod is the base class for objects representing methods ",1],["Attr","RDoc","classes/RDoc/Attr.html"," < RDoc::MethodAttr","An attribute created by \\#attr, \\#attr_reader, \\#attr_writer or \\#attr_accessor ",1],["ClassModule","RDoc","classes/RDoc/ClassModule.html"," < RDoc::Context","ClassModule is the base class for objects representing either a class or a module. ",1],["CodeObject","RDoc","classes/RDoc/CodeObject.html"," < Object","Base class for the RDoc code tree. We contain the common stuff for contexts (which are containers) and",1],["Comment","RDoc","classes/RDoc/Comment.html"," < Object","A comment holds the text comment for a RDoc::CodeObject and provides a unified way of cleaning it up",1],["Constant","RDoc","classes/RDoc/Constant.html"," < RDoc::CodeObject","A constant ",1],["Context","RDoc","classes/RDoc/Context.html"," < RDoc::CodeObject","A Context is something that can hold modules, classes, methods, attributes, aliases, requires, and includes.",1],["Section","RDoc::Context","classes/RDoc/Context/Section.html"," < Object","A section of documentation like: # :section: The title # The body Sections can be referenced multiple",1],["CrossReference","RDoc","classes/RDoc/CrossReference.html"," < Object","RDoc::CrossReference is a reusable way to create cross references for names. ",1],["ERBIO","RDoc","classes/RDoc/ERBIO.html"," < ERB","A subclass of ERB that writes directly to an IO.  Credit to Aaron Patterson and Masatoshi SEKI. To use:",1],["Encoding","RDoc","classes/RDoc/Encoding.html"," < ","This class is a wrapper around File IO and Encoding that helps RDoc load files and convert them to the",1],["Error","RDoc","classes/RDoc/Error.html"," < RuntimeError","Exception thrown by any rdoc error. ",1],["Gauntlet","RDoc","classes/RDoc/Gauntlet.html"," < Gauntlet","Allows for testing of RDoc against every gem ",1],["Generator","RDoc","classes/RDoc/Generator.html"," < ","RDoc uses generators to turn parsed source code in the form of an RDoc::CodeObject tree into some form",1],["Darkfish","RDoc::Generator","classes/RDoc/Generator/Darkfish.html"," < Object","Darkfish RDoc HTML Generator $Id: darkfish.rb 52 2009-01-07 02:08:11Z deveiant $ == Author/s * Michael",1],["JsonIndex","RDoc::Generator","classes/RDoc/Generator/JsonIndex.html"," < Object","The JsonIndex generator is designed to complement an HTML generator and produces a JSON search index.",1],["Markup","RDoc::Generator","classes/RDoc/Generator/Markup.html"," < ","Handle common RDoc::Markup tasks for various CodeObjects This module is loaded by generators.  It allows",1],["RI","RDoc::Generator","classes/RDoc/Generator/RI.html"," < Object","Generates ri data files ",1],["GhostMethod","RDoc","classes/RDoc/GhostMethod.html"," < RDoc::AnyMethod","GhostMethod represents a method referenced only by a comment ",1],["Include","RDoc","classes/RDoc/Include.html"," < RDoc::CodeObject","A Module include in a class with \\#include ",1],["Markup","RDoc","classes/RDoc/Markup.html"," < Object","RDoc::Markup parses plain text documents and attempts to decompose them into their constituent parts.",1],["AttrChanger","RDoc::Markup","classes/RDoc/Markup/AttrChanger.html"," < Object","An AttrChanger records a change in attributes. It contains a bitmap of the attributes to turn on, and",1],["AttrSpan","RDoc::Markup","classes/RDoc/Markup/AttrSpan.html"," < Object","An array of attributes which parallels the characters in a string. ",1],["Attribute","RDoc::Markup","classes/RDoc/Markup/Attribute.html"," < Object","We manage a set of attributes. Each attribute has a symbol name and a bit value. ",1],["AttributeManager","RDoc::Markup","classes/RDoc/Markup/AttributeManager.html"," < Object","Manages changes of attributes in a block of text ",1],["BlankLine","RDoc::Markup","classes/RDoc/Markup/BlankLine.html"," < Object","An empty line.  This class is a singleton. ",1],["Document","RDoc::Markup","classes/RDoc/Markup/Document.html"," < Object","A Document containing lists, headings, paragraphs, etc. ",1],["Formatter","RDoc::Markup","classes/RDoc/Markup/Formatter.html"," < Object","Base class for RDoc markup formatters Formatters are a visitor that converts an RDoc::Markup tree (from",1],["FormatterTestCase","RDoc::Markup","classes/RDoc/Markup/FormatterTestCase.html"," < MiniTest::Unit::TestCase","Test case for creating new RDoc::Markup formatters.  See test/test_rdoc_markup_to_*.rb for examples.",1],["Heading","RDoc::Markup","classes/RDoc/Markup/Heading.html"," < Struct.new :level, :text","A heading with a level (1-6) and text ",1],["Include","RDoc::Markup","classes/RDoc/Markup/Include.html"," < Object","A file included at generation time.  Objects of this class are created by RDoc::RD for an extension-less",1],["IndentedParagraph","RDoc::Markup","classes/RDoc/Markup/IndentedParagraph.html"," < RDoc::Markup","An Indented Paragraph of text ",1],["List","RDoc::Markup","classes/RDoc/Markup/List.html"," < Object","A List of ListItems ",1],["ListItem","RDoc::Markup","classes/RDoc/Markup/ListItem.html"," < Object","An item within a List that contains paragraphs, headings, etc. ",1],["Paragraph","RDoc::Markup","classes/RDoc/Markup/Paragraph.html"," < RDoc::Markup","A Paragraph of text ",1],["Parser","RDoc::Markup","classes/RDoc/Markup/Parser.html"," < Object","A recursive-descent parser for RDoc markup. The parser tokenizes an input string then parses the tokens",1],["Error","RDoc::Markup::Parser","classes/RDoc/Markup/Parser/Error.html"," < RuntimeError","Parser error subclass ",1],["ParseError","RDoc::Markup::Parser","classes/RDoc/Markup/Parser/ParseError.html"," < Error","Raised when the parser is unable to handle the given markup ",1],["PreProcess","RDoc::Markup","classes/RDoc/Markup/PreProcess.html"," < Object","Handle common directives that can occur in a block of text: \\:include: filename Directives can be escaped",1],["Raw","RDoc::Markup","classes/RDoc/Markup/Raw.html"," < Object","A section of text that is added to the output document as-is ",1],["Rule","RDoc::Markup","classes/RDoc/Markup/Rule.html"," < Struct.new :weight","A horizontal rule with a weight ",1],["Special","RDoc::Markup","classes/RDoc/Markup/Special.html"," < Object","Hold details of a special sequence ",1],["TextFormatterTestCase","RDoc::Markup","classes/RDoc/Markup/TextFormatterTestCase.html"," < RDoc::Markup","Test case for creating new plain-text RDoc::Markup formatters.  See also RDoc::Markup::FormatterTestCase",1],["ToAnsi","RDoc::Markup","classes/RDoc/Markup/ToAnsi.html"," < RDoc::Markup","Outputs RDoc markup with vibrant ANSI color! ",1],["ToBs","RDoc::Markup","classes/RDoc/Markup/ToBs.html"," < RDoc::Markup","Outputs RDoc markup with hot backspace action!  You will probably need a pager to use this output format.",1],["ToHtml","RDoc::Markup","classes/RDoc/Markup/ToHtml.html"," < RDoc::Markup","Outputs RDoc markup as HTML. ",1],["ToHtmlCrossref","RDoc::Markup","classes/RDoc/Markup/ToHtmlCrossref.html"," < RDoc::Markup","Subclass of the RDoc::Markup::ToHtml class that supports looking up method names, classes, etc to create",1],["ToHtmlSnippet","RDoc::Markup","classes/RDoc/Markup/ToHtmlSnippet.html"," < RDoc::Markup","Outputs RDoc markup as paragraphs with inline markup only. ",1],["ToLabel","RDoc::Markup","classes/RDoc/Markup/ToLabel.html"," < RDoc::Markup","Creates HTML-safe labels suitable for use in id attributes.  Tidylinks are converted to their link part",1],["ToRdoc","RDoc::Markup","classes/RDoc/Markup/ToRdoc.html"," < RDoc::Markup","Outputs RDoc markup as RDoc markup! (mostly) ",1],["ToTableOfContents","RDoc::Markup","classes/RDoc/Markup/ToTableOfContents.html"," < RDoc::Markup","Extracts just the RDoc::Markup::Heading elements from a RDoc::Markup::Document to help build a table",1],["ToTest","RDoc::Markup","classes/RDoc/Markup/ToTest.html"," < RDoc::Markup","This Markup outputter is used for testing purposes. ",1],["ToTtOnly","RDoc::Markup","classes/RDoc/Markup/ToTtOnly.html"," < RDoc::Markup","Extracts sections of text enclosed in plus, tt or code.  Used to discover undocumented parameters. ",1],["Verbatim","RDoc::Markup","classes/RDoc/Markup/Verbatim.html"," < RDoc::Markup","A section of verbatim text ",1],["MetaMethod","RDoc","classes/RDoc/MetaMethod.html"," < RDoc::AnyMethod","MetaMethod represents a meta-programmed method ",1],["MethodAttr","RDoc","classes/RDoc/MethodAttr.html"," < RDoc::CodeObject","Abstract class representing either a method or an attribute. ",1],["NormalClass","RDoc","classes/RDoc/NormalClass.html"," < RDoc::ClassModule","A normal class, neither singleton nor anonymous ",1],["NormalModule","RDoc","classes/RDoc/NormalModule.html"," < RDoc::ClassModule","A normal module, like NormalClass ",1],["Options","RDoc","classes/RDoc/Options.html"," < Object","RDoc::Options handles the parsing and storage of options == Saved Options You can save some options like",1],["Parser","RDoc","classes/RDoc/Parser.html"," < Object","A parser is simple a class that subclasses RDoc::Parser and implements #scan to fill in an RDoc::TopLevel",1],["C","RDoc::Parser","classes/RDoc/Parser/C.html"," < RDoc::Parser","RDoc::Parser::C attempts to parse C extension files.  It looks for the standard patterns that you find",1],["RD","RDoc::Parser","classes/RDoc/Parser/RD.html"," < RDoc::Parser","Parse a RD format file.  The parsed RDoc::Markup::Document is attached as a file comment. ",1],["Ruby","RDoc::Parser","classes/RDoc/Parser/Ruby.html"," < RDoc::Parser","Extracts code elements from a source file returning a TopLevel object containing the constituent file",1],["RubyTools","RDoc::Parser","classes/RDoc/Parser/RubyTools.html"," < ","Collection of methods for writing parsers against RDoc::RubyLex and RDoc::RubyToken ",1],["Simple","RDoc::Parser","classes/RDoc/Parser/Simple.html"," < RDoc::Parser","Parse a non-source file. We basically take the whole thing as one big comment. ",1],["Text","RDoc::Parser","classes/RDoc/Parser/Text.html"," < ","Indicates this parser is text and doesn't contain code constructs. Include this module in a RDoc::Parser",1],["RD","RDoc","classes/RDoc/RD.html"," < Object","RDoc::RD implements the RD format from the rdtool gem. = LICENSE The grammar that produces RDoc::RD::BlockParser",1],["Inline","RDoc::RD","classes/RDoc/RD/Inline.html"," < Object","Inline keeps track of markup and labels to create proper links. ",1],["RDoc","RDoc","classes/RDoc/RDoc.html"," < Object","This is the driver for generating RDoc output.  It file parsing and generation of output. To use this",1],["RI","RDoc","classes/RDoc/RI.html"," < ","Namespace for the ri command line tool's implementation. See <tt>ri --help</tt> for details. ",1],["Driver","RDoc::RI","classes/RDoc/RI/Driver.html"," < Object","",1],["Error","RDoc::RI::Driver","classes/RDoc/RI/Driver/Error.html"," < RDoc::RI::Error","Base Driver error class ",1],["NotFoundError","RDoc::RI::Driver","classes/RDoc/RI/Driver/NotFoundError.html"," < Error","Raised when a name isn't found in the ri data stores ",1],["Error","RDoc::RI","classes/RDoc/RI/Error.html"," < RDoc::Error","Base RI error class ",1],["Paths","RDoc::RI","classes/RDoc/RI/Paths.html"," < ","The directories where ri data lives. ",1],["Store","RDoc::RI","classes/RDoc/RI/Store.html"," < Object","A set of ri data. The store manages reading and writing ri data for a project (gem, path, etc.) and maintains",1],["Require","RDoc","classes/RDoc/Require.html"," < RDoc::CodeObject","A file loaded by \\#require ",1],["RubyLex","RDoc","classes/RDoc/RubyLex.html"," < Object","Ruby lexer adapted from irb. The internals are not documented because they are scary. ",1],["Error","RDoc::RubyLex","classes/RDoc/RubyLex/Error.html"," < RDoc::Error","Raised upon invalid input ",1],["RubyToken","RDoc","classes/RDoc/RubyToken.html"," < ","Definitions of all tokens involved in the lexical analysis. This class is not documented because it is",1],["RubygemsHook","RDoc","classes/RDoc/RubygemsHook.html"," < Object","Gem::RDoc provides methods to generate RDoc and ri data for installed gems upon gem installation. This",1],["SingleClass","RDoc","classes/RDoc/SingleClass.html"," < RDoc::ClassModule","A singleton class ",1],["Stats","RDoc","classes/RDoc/Stats.html"," < Object","RDoc statistics collector which prints a summary and report of a project's documentation totals. ",1],["Normal","RDoc::Stats","classes/RDoc/Stats/Normal.html"," < RDoc::Stats::Quiet","Stats printer that prints just the files being documented with a progress bar ",1],["Quiet","RDoc::Stats","classes/RDoc/Stats/Quiet.html"," < Object","Stats printer that prints nothing ",1],["Verbose","RDoc::Stats","classes/RDoc/Stats/Verbose.html"," < RDoc::Stats::Normal","Stats printer that prints everything documented, including the documented status ",1],["Task","RDoc","classes/RDoc/Task.html"," < Rake::TaskLib","RDoc::Task creates the following rake tasks to generate and clean up RDoc output: [rdoc] Main task for",1],["TestCase","RDoc","classes/RDoc/TestCase.html"," < MiniTest::Unit::TestCase","RDoc::TestCase is an abstract TestCase to provide common setup and teardown across all RDoc tests.  The",1],["Text","RDoc","classes/RDoc/Text.html"," < ","Methods for manipulating comment text ",1],["TokenStream","RDoc","classes/RDoc/TokenStream.html"," < ","A TokenStream is a list of tokens, gathered during the parse of some entity (say a method). Entities",1],["TomDoc","RDoc","classes/RDoc/TomDoc.html"," < RDoc::Markup","A parser for TomDoc based on TomDoc 1.0.0-rc1 (02adef9b5a) The TomDoc specification can be found at:",1],["TopLevel","RDoc","classes/RDoc/TopLevel.html"," < RDoc::Context","A TopLevel context is a representation of the contents of a single file ",1],["<<","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000257","(part)","Appends +part+ to the document ",2],["<<","RDoc::Markup::List","classes/RDoc/Markup/List.html#M000353","(item)","Appends +item+ to the list ",2],["<<","RDoc::Markup::ListItem","classes/RDoc/Markup/ListItem.html#M000356","(part)","Appends +part+ to the ListItem ",2],["<<","RDoc::Markup::Raw","classes/RDoc/Markup/Raw.html#M000392","(text)","Appends +text+ ",2],["<=>","RDoc::Alias","classes/RDoc/Alias.html#M000004","(other)","Order by #singleton then #new_name ",2],["<=>","RDoc::Constant","classes/RDoc/Constant.html#M000096","(other)","Constants are ordered by name ",2],["<=>","RDoc::Context","classes/RDoc/Context.html#M000115","(other)","Contexts are sorted by full_name ",2],["<=>","RDoc::Include","classes/RDoc/Include.html#M000232","(other)","Includes are sorted by name ",2],["<=>","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000524","(other)","Order by #singleton then #name ",2],["==","RDoc::Attr","classes/RDoc/Attr.html#M000015","(other)","Attributes are equal when their names, singleton and rw are identical ",2],["==","RDoc::Constant","classes/RDoc/Constant.html#M000099","(other)","Constants are equal when their #parent and #name is the same ",2],["==","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000098","(other)","Sections are equal when they have the same #title ",2],["==","RDoc::Markup::Special","classes/RDoc/Markup/Special.html#M000402","(o)","Specials are equal when the have the same text and type ",2],["==","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000904","(other)","An RDoc::TopLevel is equal to another with the same absolute_name ",2],["[]","RDoc::Markup::AttrSpan","classes/RDoc/Markup/AttrSpan.html#M000246","(n)","Accesses flags for character +n+ ",2],["accept","RDoc::Markup::BlankLine","classes/RDoc/Markup/BlankLine.html#M000248","(visitor)","Calls #accept_blank_line on +visitor+ ",2],["accept","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000259","(visitor)","Runs this document and all its #items through +visitor+ ",2],["accept","RDoc::Markup::Heading","classes/RDoc/Markup/Heading.html#M000299","(visitor)","Calls #accept_heading on +visitor+ ",2],["accept","RDoc::Markup::IndentedParagraph","classes/RDoc/Markup/IndentedParagraph.html#M000339","(visitor)","Calls #accept_indented_paragraph on +visitor+ ",2],["accept","RDoc::Markup::List","classes/RDoc/Markup/List.html#M000358","(visitor)","Runs this list and all its #items through +visitor+ ",2],["accept","RDoc::Markup::ListItem","classes/RDoc/Markup/ListItem.html#M000362","(visitor)","Runs this list item and all its #parts through +visitor+ ",2],["accept","RDoc::Markup::Paragraph","classes/RDoc/Markup/Paragraph.html#M000368","(visitor)","Calls #accept_paragraph on +visitor+ ",2],["accept","RDoc::Markup::Raw","classes/RDoc/Markup/Raw.html#M000394","(visitor)","Calls #accept_raw+ on +visitor+ ",2],["accept","RDoc::Markup::Rule","classes/RDoc/Markup/Rule.html#M000405","(visitor)","Calls #accept_rule on +visitor+ ",2],["accept","RDoc::Markup::Verbatim","classes/RDoc/Markup/Verbatim.html#M000504","(visitor)","Calls #accept_verbatim on +visitor+ ",2],["accept_blank_line","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000445","(blank_line)","Adds +blank_line+ to the output ",2],["accept_blank_line","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000482","(blank_line)","Adds +blank_line+ to the output ",2],["accept_blank_line","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000513","(markup_item)","Alias for #do_nothing",2],["accept_document","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000278","(document)","Adds +document+ to the output ",2],["accept_heading","RDoc::Markup::ToBs","classes/RDoc/Markup/ToBs.html#M000422","(heading)","Makes heading text bold. ",2],["accept_heading","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000446","(heading)","Adds +heading+ to the output.  The headings greater than 6 are trimmed to level 6. ",2],["accept_heading","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000459","(heading)","Adds +heading+ to the output as a paragraph ",2],["accept_heading","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000483","(heading)","Adds +heading+ to the output ",2],["accept_heading","RDoc::Markup::ToTableOfContents","classes/RDoc/Markup/ToTableOfContents.html#M000489","(heading)","Adds +heading+ to the table of contents ",2],["accept_heading","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000514","(markup_item)","Alias for #do_nothing",2],["accept_indented_paragraph","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000493","(paragraph)","Adds +paragraph+ to the output ",2],["accept_list_end","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000438","(list)","Finishes consumption of +list+ ",2],["accept_list_end","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000484","(list)","Finishes consumption of +list+ ",2],["accept_list_end","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000507","(list)","Pops the list type for +list+ from #list_type ",2],["accept_list_item_end","RDoc::Markup::ToAnsi","classes/RDoc/Markup/ToAnsi.html#M000413","(list_item)","Overrides indent width to ensure output lines up correctly. ",2],["accept_list_item_end","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000442","(list_item)","Finishes consumption of +list_item+ ",2],["accept_list_item_end","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000461","(list_item)","Finishes consumption of +list_item+ ",2],["accept_list_item_end","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000485","(list_item)","Finishes consumption of +list_item+ ",2],["accept_list_item_end","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000515","(markup_item)","Alias for #do_nothing",2],["accept_list_item_start","RDoc::Markup::ToAnsi","classes/RDoc/Markup/ToAnsi.html#M000417","(list_item)","Adds coloring to note and label list items ",2],["accept_list_item_start","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000441","(list_item)","Prepares the visitor for consuming +list_item+ ",2],["accept_list_item_start","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000462","(list_item)","Prepares the visitor for consuming +list_item+ ",2],["accept_list_item_start","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000486","(list_item)","Prepares the visitor for consuming +list_item+ ",2],["accept_list_item_start","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000510","(list_item)","Prepares the visitor for consuming +list_item+ ",2],["accept_list_start","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000437","(list)","Prepares the visitor for consuming +list+ ",2],["accept_list_start","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000463","(list)","Prepares the visitor for consuming +list+ ",2],["accept_list_start","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000487","(list)","Prepares the visitor for consuming +list+ ",2],["accept_list_start","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000508","(list)","Pushes the list type for +list+ onto #list_type ",2],["accept_paragraph","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000433","(paragraph)","Adds +paragraph+ to the output ",2],["accept_paragraph","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000460","(paragraph)","",2],["accept_paragraph","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000492","(paragraph)","Adds +paragraph+ to the output ",2],["accept_paragraph","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000511","(paragraph)","Adds +paragraph+ to the output ",2],["accept_raw","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000449","(raw)","Adds +raw+ to the output ",2],["accept_raw","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000494","(raw)","Adds +raw+ to the output ",2],["accept_raw","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000516","(markup_item)","Alias for #do_nothing",2],["accept_rule","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000435","(rule)","Adds +rule+ to the output ",2],["accept_rule","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000495","(rule)","Adds +rule+ to the output ",2],["accept_rule","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000517","(markup_item)","Alias for #do_nothing",2],["accept_verbatim","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000434","(verbatim)","Adds +verbatim+ to the output ",2],["accept_verbatim","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000465","(verbatim)","Adds +verbatim+ to the output ",2],["accept_verbatim","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000496","(verbatim)","Outputs +verbatim+ indented 2 columns ",2],["accept_verbatim","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000519","(markup_item)","Alias for #do_nothing",2],["add_alias","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000017","(an_alias, context = nil)","Adds +an_alias+ as an alias for this method in +context+. ",2],["add_alias","RDoc::Attr","classes/RDoc/Attr.html#M000018","(an_alias, context)","Add +an_alias+ as an attribute in +context+. ",2],["add_alias","RDoc::Context","classes/RDoc/Context.html#M000116","(an_alias)","Adds +an_alias+ that is automatically resolved ",2],["add_alias","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000529","(an_alias, context)","Abstract method. Contexts in their building phase call this to register a new alias for this known method/attribute.",2],["add_alias","RDoc::Stats","classes/RDoc/Stats.html#M000810","(as)","Records the parsing of an alias +as+. ",2],["add_alias","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000906","(an_alias)","Adds +an_alias+ to +Object+ instead of +self+. ",2],["add_also_in","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000719","(out, also_in)","Adds paths for undocumented classes +also_in+ to +out+ ",2],["add_attribute","RDoc::Context","classes/RDoc/Context.html#M000117","(attribute)","Adds +attribute+ if not already there. If it is (as method(s) or attribute), updates the comment if it",2],["add_attribute","RDoc::Stats","classes/RDoc/Stats.html#M000811","(attribute)","Records the parsing of an attribute +attribute+ ",2],["add_class","RDoc::Context","classes/RDoc/Context.html#M000119","(class_type, given_name, superclass = '::Object')","Adds a class named +given_name+ with +superclass+. Both +given_name+ and +superclass+ may contain '::',",2],["add_class","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000720","(out, name, classes)","Adds a class header to +out+ for class +name+ which is described in +classes+. ",2],["add_class","RDoc::Stats","classes/RDoc/Stats.html#M000812","(klass)","Records the parsing of a class +klass+ ",2],["add_class_or_module","RDoc::Context","classes/RDoc/Context.html#M000122","(mod, self_hash, all_hash)","Adds the class or module +mod+ to the modules or classes Hash +self_hash+, and to +all_hash+ (either",2],["add_comment","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000035","(comment, location)","Adds +comment+ to this ClassModule's list of comments at +location+.  This method is preferred over #comment=",2],["add_constant","RDoc::Context","classes/RDoc/Context.html#M000123","(constant)","Adds +constant+ if not already there. If it is, updates the comment, value and/or is_alias_for of the",2],["add_constant","RDoc::Stats","classes/RDoc/Stats.html#M000813","(constant)","Records the parsing of +constant+ ",2],["add_constant","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000907","(constant)","Adds +constant+ to +Object+ instead of +self+. ",2],["add_file","RDoc::Stats","classes/RDoc/Stats.html#M000814","(file)","Records the parsing of +file+ ",2],["add_from","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000721","(out, store)","Adds \"(from ...)\" to +out+ for +store+ ",2],["add_generator","RDoc::RDoc","classes/RDoc/RDoc.html#M000672","(klass)","Add +klass+ that can generate output after parsing ",2],["add_html","RDoc::Markup","classes/RDoc/Markup.html#M000547","(tag, name)","Add to the sequences recognized as general markup. ",2],["add_html","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000271","(tag, name)","Adds a markup class with +name+ for words surrounded by HTML tag +tag+. To process emphasis tags: am.add_html",2],["add_include","RDoc::Context","classes/RDoc/Context.html#M000124","(include)","Adds included module +include+ which should be an RDoc::Include ",2],["add_include","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000908","(include)","Adds +include+ to +Object+ instead of +self+. ",2],["add_includes","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000722","(out, includes)","Adds +includes+ to +out+ ",2],["add_line_numbers","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000216","(src)","Prepend +src+ with line numbers.  Relies on the first line of a source code listing having: # File xxxxx,",2],["add_method","RDoc::Context","classes/RDoc/Context.html#M000125","(method)","Adds +method+ if not already there. If it is (as method or attribute), updates the comment if it was",2],["add_method","RDoc::Stats","classes/RDoc/Stats.html#M000815","(method)","Records the parsing of +method+ ",2],["add_method","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000909","(method)","Adds +method+ to +Object+ instead of +self+. ",2],["add_method_list","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000723","(out, methods, name)","Adds a list of +methods+ to +out+ with a heading of +name+ ",2],["add_module","RDoc::Context","classes/RDoc/Context.html#M000126","(class_type, name)","Adds a module named +name+.  If RDoc already knows +name+ is a class then that class is returned instead.",2],["add_module","RDoc::Stats","classes/RDoc/Stats.html#M000816","(mod)","Records the parsing of a module +mod+ ",2],["add_module_alias","RDoc::Context","classes/RDoc/Context.html#M000127","(from, name, file)","Adds an alias from +from+ (a class or module) to +name+ which was defined in +file+. ",2],["add_paragraph","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000474","()","Throws +:done+ when paragraph_limit paragraphs have been encountered ",2],["add_require","RDoc::Context","classes/RDoc/Context.html#M000128","(require)","Adds +require+ to this context's top level ",2],["add_section","RDoc::Context","classes/RDoc/Context.html#M000131","(title, comment = nil)","Returns a section with +title+, creating it if it doesn't already exist. +comment+ will be appended to",2],["add_special","RDoc::Markup","classes/RDoc/Markup.html#M000548","(pattern, name)","Add to other inline sequences.  For example, we could add WikiWords using something like: parser.add_special(/\\b([A-Z][a-z]+[A-Z]\\w+)/,",2],["add_special","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000272","(pattern, name)","Adds a special handler for +pattern+ with +name+.  A simple URL handler would be: @am.add_special(/((https?:)\\S+\\w)/,",2],["add_tag","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000279","(name, start, stop)","Add a new set of tags for an attribute. We allow separate start and end tags for flexibility ",2],["add_text_tests","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000407","()","Adds test cases to the calling TestCase. ",2],["add_to","RDoc::Context","classes/RDoc/Context.html#M000132","(array, thing)","Adds +thing+ to the collection +array+ ",2],["add_to_classes_or_modules","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000910","(mod)","Adds class or module +mod+. Used in the building phase by the ruby parser. ",2],["add_token","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000855","(*tokens)","Alias for #add_tokens",2],["add_token_listener","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000609","(obj)","Adds a token listener +obj+, but you should probably use token_listener ",2],["add_tokens","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000854","(*tokens)","Adds +tokens+ to the collected tokens ",2],["add_visitor_tests","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000291","()","Call to add the visitor tests to your test case ",2],["add_word_pair","RDoc::Markup","classes/RDoc/Markup.html#M000544","(start, stop, name)","Add to the sequences used to add formatting to an individual word (such as *bold*).  Matching entries",2],["add_word_pair","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000267","(start, stop, name)","Adds a markup class with +name+ for words wrapped in the +start+ and +stop+ character.  To make words",2],["alias_extension","RDoc::Parser","classes/RDoc/Parser.html#M000641","(old_ext, new_ext)","Alias an extension to another extension. After this call, files ending \"new_ext\" will be parsed using",2],["all_classes","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000879","()","Returns all classes discovered by RDoc ",2],["all_classes_and_modules","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000880","()","Returns all classes and modules discovered by RDoc ",2],["all_classes_hash","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000881","()","Hash of all classes known to RDoc ",2],["all_files","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000882","()","All TopLevels known to RDoc ",2],["all_files_hash","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000883","()","Hash of all files known to RDoc ",2],["all_modules","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000884","()","Returns all modules discovered by RDoc ",2],["all_modules_hash","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000885","()","Hash of all modules known to RDoc ",2],["ancestors","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000038","()","Ancestors list for this ClassModule: the list of included modules (classes will add their superclass",2],["ancestors","RDoc::NormalClass","classes/RDoc/NormalClass.html#M000551","()","Appends the superclass, if any, to the included modules. ",2],["ancestors","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000726","()","Ancestors cache accessor.  Maps a klass name to an Array of its ancestors in this store.  If Foo in this",2],["ancestors","RDoc::SingleClass","classes/RDoc/SingleClass.html#M000786","()","Adds the superclass to the included modules. ",2],["ancestors_of","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000725","(klass)","Returns ancestor classes of +klass+ ",2],["annotate","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000280","(tag)","Allows +tag+ to be decorated with additional information. ",2],["annotate","RDoc::Markup::ToBs","classes/RDoc/Markup/ToBs.html#M000423","(tag)","Turns on or off special handling for +convert_string+ ",2],["any_content","RDoc::Context","classes/RDoc/Context.html#M000137","(includes = true)","Is there any content? This means any of: comment, aliases, methods, attributes, external aliases, require,",2],["append","RDoc::RD::Inline","classes/RDoc/RD/Inline.html#M000660","(more)","Appends +more+ to this inline.  +more+ may be a String or another Inline. ",2],["aref","RDoc::Alias","classes/RDoc/Alias.html#M000005","()","HTML fragment reference for this alias ",2],["aref","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000102","()","Anchor reference for linking to this section ",2],["aref","RDoc::Markup::Heading","classes/RDoc/Markup/Heading.html#M000300","()","An HTML-safe anchor reference for this header. ",2],["aref","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000530","()","HTML fragment reference for this method ",2],["aref_prefix","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000021","()","Prefix for +aref+ is 'method'. ",2],["aref_prefix","RDoc::Attr","classes/RDoc/Attr.html#M000019","()","The #aref prefix for attributes ",2],["aref_prefix","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000531","()","Prefix for +aref+, defined by subclasses. ",2],["aref_to","RDoc::Generator::Markup","classes/RDoc/Generator/Markup.html#M000211","(target_path)","Generates a relative URL from this object's path to +target_path+ ",2],["arglists","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000022","()","The call_seq or the param_seq with method name, if there is no call_seq. Use this for displaying a method's",2],["as_href","RDoc::Generator::Markup","classes/RDoc/Generator/Markup.html#M000212","(from_path)","Generates a relative URL from +from_path+ to this object's path ",2],["as_string","RDoc::Markup::Attribute","classes/RDoc/Markup/Attribute.html#M000242","(bitmap)","Returns a string representation of +bitmap+ ",2],["assemble_template","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000182","(body_file)","Creates a template from its components and the +body_file+. For backwards compatibility, if +body_file+",2],["attribute","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000251","(turn_on, turn_off)","Return an attribute object with the given turn_on and turn_off bits set ",2],["attributes","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000497","(text)","Applies attribute-specific markup to +text+ using RDoc::AttributeManager ",2],["attributes","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000727","()","Attributes cache accessor.  Maps a class to an Array of its attributes. ",2],["base_name","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000911","()","Base name of this file ",2],["before_running_rdoc","RDoc::Task","classes/RDoc/Task.html#M000836","(&block)","The block passed to this method will be called just before running the RDoc generator. It is allowed",2],["begin_adding","RDoc::Stats","classes/RDoc/Stats.html#M000817","()","Call this to mark the beginning of parsing for display purposes ",2],["begin_adding","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000792","(*)","Prints a message at the beginning of parsing ",2],["binary?","RDoc::Parser","classes/RDoc/Parser.html#M000642","(file)","Determines if the file is a \"binary\" file which basically means it has content that an RDoc parser shouldn't",2],["bitmap_for","RDoc::Markup::Attribute","classes/RDoc/Markup/Attribute.html#M000241","(name)","Returns a unique bit for +name+ ",2],["block_params=","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000532","(value)","Attempts to sanitize the content passed by the ruby parser: remove outer parentheses, etc. ",2],["build_heading","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000372","(level)","Builds a Heading of +level+ ",2],["build_heading","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000874","(level)","Internal: Builds a heading from the token stream level - The level of heading to create Returns an RDoc::Markup::Heading",2],["build_list","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000373","(margin)","Builds a List flush to +margin+ ",2],["build_paragraph","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000381","(margin)","Builds a Paragraph that is flush to +margin+ ",2],["build_paragraph","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000876","(margin)","Internal: Builds a paragraph from the token stream margin - Unused Returns an RDoc::Markup::Paragraph.",2],["build_verbatim","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000383","(margin)","Builds a Verbatim that is indented from +margin+. The verbatim block is shifted left (the least indented",2],["build_verbatim","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000875","(margin)","Internal: Builds a verbatim from the token stream.  A verbatim in the Examples section will be marked",2],["cache_path","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000728","()","Path to the cache file ",2],["calculate","RDoc::Stats","classes/RDoc/Stats.html#M000818","()","Calculates documentation totals and percentages for classes, modules, constants, attributes and methods.",2],["can_parse","RDoc::Parser","classes/RDoc/Parser.html#M000646","(file_name)","Return a parser that can handle a particular extension ",2],["change_attribute","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000252","(current, new)","Changes the current attribute from +current+ to +new+ ",2],["changed_attribute_by_name","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000253","(current_set, new_set)","Used by the tests to change attributes by name from +current_set+ to +new_set+ ",2],["check_files","RDoc::Options","classes/RDoc/Options.html#M000574","()","Check that the files on the command line exist ",2],["check_generator","RDoc::Options","classes/RDoc/Options.html#M000575","()","Ensure only one generator is loaded ",2],["check_names","RDoc::Task","classes/RDoc/Task.html#M000821","(names)","Ensures that +names+ only includes names for the :rdoc, :clobber_rdoc and :rerdoc.  If other names are",2],["child_name","RDoc::Context","classes/RDoc/Context.html#M000138","(name)","Creates the full name for a child with +name+ ",2],["class_attributes","RDoc::Context","classes/RDoc/Context.html#M000140","()","Class attributes ",2],["class_dir","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000133","()","Directory where generated class HTML files live relative to the output dir. ",2],["class_dir","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000223","()","The directory classes are written to ",2],["class_document","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000731","(name, found, klasses, includes)","Builds a RDoc::Markup::Document from +found+, +klasess+ and +includes+ ",2],["class_file","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000729","(klass_name)","Path to the ri data for +klass_name+ ",2],["class_method_list","RDoc::Context","classes/RDoc/Context.html#M000141","()","Class methods ",2],["class_methods","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000732","()","Class methods cache accessor.  Maps a class to an Array of its class methods (not full name). ",2],["class_path","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000733","(klass_name)","Path where data for +klass_name+ will be stored (methods or class data) ",2],["classes","RDoc::Context","classes/RDoc/Context.html#M000142","()","Array of classes in this context ",2],["classes","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000742","()","Hash mapping a known class or module to the stores it can be loaded from ",2],["classes_and_includes_for","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000743","(name)","Returns the stores wherin +name+ is found along with the classes and includes that match it ",2],["classes_and_modules","RDoc::Context","classes/RDoc/Context.html#M000143","()","All classes and modules in this namespace ",2],["classes_hash","RDoc::Context","classes/RDoc/Context.html#M000144","()","Hash of classes keyed by class name ",2],["clear_comment","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000039","()","Clears the comment. Used by the ruby parser. ",2],["clobber_task_description","RDoc::Task","classes/RDoc/Task.html#M000822","()","Task description for the clobber rdoc task or its renamed equivalent ",2],["clobber_task_name","RDoc::Task","classes/RDoc/Task.html#M000841","()","",2],["collect_first_comment","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000621","()","Look for the first comment in a file that isn't a shebang line. ",2],["collect_tokens","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000856","()","Starts collecting tokens ",2],["comment","RDoc::TestCase","classes/RDoc/TestCase.html#M000848","(text, top_level = @top_level)","Creates an RDoc::Comment with +text+ which was defined on +top_level+. By default the comment has the",2],["comment=","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000040","(comment)","This method is deprecated, use #add_comment instead. Appends +comment+ to the current comment, but separated",2],["comment=","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000037","(comment)","Replaces our comment with +comment+, unless it is empty. ",2],["comment=","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000103","(comment)","Appends +comment+ to the current comment separated by a rule. ",2],["complete","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000044","(min_visibility)","Prepares this ClassModule for use by a generator. See RDoc::TopLevel::complete ",2],["complete","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000746","(name)","Completes +name+ based on the caches.  For Readline ",2],["complete","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000887","(min_visibility)","Prepares the RDoc code object tree for use by a generator. It finds unique classes/modules defined, and",2],["convert","RDoc::Markup","classes/RDoc/Markup.html#M000549","(input, formatter)","We take +input+, parse it if necessary, then invoke the output +formatter+ using a Visitor to render",2],["convert","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000281","(content)","Marks up +content+ ",2],["convert","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000475","(content)","Marks up +content+ ",2],["convert","RDoc::Markup::ToLabel","classes/RDoc/Markup/ToLabel.html#M000467","(text)","Converts +text+ to an HTML-safe label ",2],["convert_attrs","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000255","(str, attrs)","Map attributes like <b>text</b>to the sequence \\001\\002<char>\\001\\003<char>, where <char> is a per-attribute",2],["convert_flow","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000282","(flow)","Converts flow items +flow+ ",2],["convert_flow","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000476","(flow)","Converts flow items +flow+ ",2],["convert_html","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000260","(str, attrs)","Converts HTML tags to RDoc attributes ",2],["convert_special","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000283","(special)","Converts added specials.  See RDoc::Markup#add_special ",2],["convert_special","RDoc::Markup::ToBs","classes/RDoc/Markup/ToBs.html#M000424","(special)","Calls convert_string on the result of convert_special ",2],["convert_specials","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000263","(str, attrs)","Converts special sequences to RDoc attributes ",2],["convert_string","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000284","(string)","Converts a string to be fancier if desired ",2],["convert_string","RDoc::Markup::ToBs","classes/RDoc/Markup/ToBs.html#M000425","(string)","Adds bold or underline mixed with backspaces ",2],["convert_string","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000450","(text)","CGI escapes +text+ ",2],["copy_static","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000150","()","Copies static files from the static_path into the output directory ",2],["copy_string","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000254","(start_pos, end_pos)","Copies +start_pos+ to +end_pos+ from the current string ",2],["coverage_level=","RDoc::Stats","classes/RDoc/Stats.html#M000820","(level)","Sets coverage report level.  Accepted values are: false or nil:: No report 0:: Classes, modules, constants,",2],["cross_reference","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000439","(name, text = nil)","Creates a link to the reference +name+ if the name exists.  If +text+ is given it is used as the link",2],["current","RDoc::RDoc","classes/RDoc/RDoc.html#M000673","()","Active RDoc::RDoc instance ",2],["current=","RDoc::RDoc","classes/RDoc/RDoc.html#M000675","(rdoc)","Sets the active RDoc::RDoc instance ",2],["current_section","RDoc::Context","classes/RDoc/Context.html#M000145","()","The current documentation section that new items will be added to.  If temporary_section is available",2],["cvs_url","RDoc::Generator::Markup","classes/RDoc/Generator/Markup.html#M000215","(url, full_path)","Build a webcvs URL starting for the given +url+ with +full_path+ appended as the destination path.  If",2],["cvs_url","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000222","()","Returns a URL for this source file on some web repository.  Use the -W command line option to set. ",2],["debug_msg","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000130","(*msg)","Output progress information if debugging is enabled ",2],["debug_msg","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000209","(*msg)","Output progress information if debugging is enabled ",2],["default_options","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000710","()","Default options for ri ",2],["default_title=","RDoc::Options","classes/RDoc/Options.html#M000576","(string)","Set the title, but only if not already set. Used to set the title from a source file, so that a title",2],["defaults","RDoc::Task","classes/RDoc/Task.html#M000823","()","Sets default task values ",2],["define","RDoc::Task","classes/RDoc/Task.html#M000829","()","Create the tasks defined by this task lib. ",2],["defined_in?","RDoc::Context","classes/RDoc/Context.html#M000146","(file)","Is part of this thing was defined in +file+? ",2],["definition","RDoc::Attr","classes/RDoc/Attr.html#M000020","()","Returns attr_reader, attr_writer or attr_accessor as appropriate. ",2],["definition","RDoc::NormalClass","classes/RDoc/NormalClass.html#M000552","()","The definition of this class, <tt>class MyClassName</tt> ",2],["definition","RDoc::NormalModule","classes/RDoc/NormalModule.html#M000557","()","The definition of this module, <tt>module MyModuleName</tt> ",2],["definition","RDoc::SingleClass","classes/RDoc/SingleClass.html#M000787","()","The definition of this singleton class, <tt>class << MyClassName</tt> ",2],["delete_legacy_args","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000778","(args)","Removes legacy rdoc arguments from +args+ ",2],["description","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000220","()","Handy wrapper for marking up this class or module's comment ",2],["description","RDoc::Generator::Markup","classes/RDoc/Generator/Markup.html#M000213","()","Handy wrapper for marking up this object's comment ",2],["display","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000748","(document)","Converts +document+ to text and writes it to the pager ",2],["display?","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000041","()","Should this CodeObject be shown in documentation? ",2],["display?","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000913","()","Only a TopLevel that contains text file) will be displayed.  See also RDoc::CodeObject#display? ",2],["display_attributes","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000275","()","Debug method that prints a string along with its attributes ",2],["display_class","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000749","(name)","Outputs formatted RI data for class +name+.  Groups undocumented classes ",2],["display_method","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000750","(name)","Outputs formatted RI data for method +name+ ",2],["display_name","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000751","(name)","Outputs formatted RI data for the class or method +name+. Returns true if +name+ was found, false if",2],["display_names","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000753","(names)","Displays each name in +name+ ",2],["do_aliases","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000563","()","Scans #content for rb_define_alias ",2],["do_attrs","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000564","()","Scans #content for rb_attr and rb_define_attr ",2],["do_classes","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000565","()","Scans #content for rb_define_module, rb_define_class, boot_defclass, rb_define_module_under, rb_define_class_under",2],["do_constants","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000569","()","Scans #content for rb_define_variable, rb_define_readonly_variable, rb_define_const and rb_define_global_const",2],["do_includes","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000571","()","Scans #content for rb_include_module ",2],["do_methods","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000573","()","Scans #content for rb_define_method, rb_define_singleton_method, rb_define_module_function, rb_define_private_method,",2],["do_nothing","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000512","(markup_item)","Does nothing to +markup_item+ because it doesn't have any user-built content ",2],["doc_stats","RDoc::Stats","classes/RDoc/Stats.html#M000824","(collection)","Returns the length and number of undocumented items in +collection+. ",2],["document","RDoc::RDoc","classes/RDoc/RDoc.html#M000705","(options)","Generates documentation or a coverage report depending upon the settings in +options+. +options+ can",2],["document","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000779","(generator, options, destination)","Generates documentation using the named +generator+ (\"darkfish\" or \"ri\") and following the given +options+.",2],["document_children=","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000042","(document_children)","Enables or disables documentation of this CodeObject's children unless it has been turned off by :enddoc:",2],["document_self=","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000043","(document_self)","Enables or disables documentation of this CodeObject unless it has been turned off by :enddoc:.  If the",2],["document_self_or_methods","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000045","()","Does this ClassModule or any of its methods have document_self set? ",2],["documented?","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000047","()","Does this object have a comment with content or is #received_nodoc true? ",2],["documented?","RDoc::Constant","classes/RDoc/Constant.html#M000100","()","A constant is documented if it has a comment, or is an alias for a documented class or module. ",2],["documented?","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000525","()","A method/attribute is documented if any of the following is true: - it was marked with :nodoc:; - it",2],["done_adding","RDoc::Stats","classes/RDoc/Stats.html#M000825","()","Call this to mark the end of parsing for display purposes ",2],["done_adding","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000800","(*)","Prints when RDoc is done ",2],["done_documenting=","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000048","(value)","Turns documentation on/off, and turns on/off #document_self and #document_children. Once documentation",2],["dump","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000711","(data_path)","Dump +data_path+ using pp ",2],["each","RDoc::RI::Paths","classes/RDoc/RI/Paths.html#M000713","(system, site, home, gems, *extra_dirs)","Iterates over each selected path yielding the directory and type. Yielded types: :system:: Where Ruby's",2],["each_ancestor","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000046","()","Iterates the ancestors of this class or module for which an RDoc::ClassModule exists. ",2],["each_attribute","RDoc::Context","classes/RDoc/Context.html#M000149","()","Iterator for attributes ",2],["each_classmodule","RDoc::Context","classes/RDoc/Context.html#M000151","()","Iterator for classes and modules ",2],["each_constant","RDoc::Context","classes/RDoc/Context.html#M000152","()","Iterator for constants ",2],["each_include","RDoc::Context","classes/RDoc/Context.html#M000153","()","Iterator for included modules ",2],["each_method","RDoc::Context","classes/RDoc/Context.html#M000154","()","Iterator for methods ",2],["each_name_of","RDoc::Markup::Attribute","classes/RDoc/Markup/Attribute.html#M000243","(bitmap)","yields each attribute name in +bitmap+ ",2],["each_parent","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000049","()","Yields each parent of this CodeObject.  See also RDoc::ClassModule#each_ancestor ",2],["each_section","RDoc::Context","classes/RDoc/Context.html#M000156","()","Iterator for each section's contents sorted by title.  The +section+, the section's +constants+ and the",2],["empty?","RDoc::Comment","classes/RDoc/Comment.html#M000084","()","A comment is empty if its text String is empty. ",2],["empty?","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000261","()","Does this document have no parts? ",2],["empty?","RDoc::Markup::List","classes/RDoc/Markup/List.html#M000359","()","Is the list empty? ",2],["empty?","RDoc::Markup::ListItem","classes/RDoc/Markup/ListItem.html#M000363","()","Is the ListItem empty? ",2],["encode_fallback","Object","classes/Object.html#M000852","(character, encoding, fallback)","Transcodes +character+ to +encoding+ with a +fallback+ character. ",2],["end_accepting","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000432","()","Returns the generated output ",2],["end_accepting","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000498","()","Returns the generated output ",2],["end_accepting","RDoc::Markup::ToTableOfContents","classes/RDoc/Markup/ToTableOfContents.html#M000490","()","Returns the table of contents ",2],["end_accepting","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000521","()","Returns an Array of items that were wrapped in plus, tt or code. ",2],["eql?","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000905","(other)","Alias for #==",2],["error","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000622","(msg)","Aborts with +msg+ ",2],["error","RDoc::RDoc","classes/RDoc/RDoc.html#M000678","(msg)","Report an error message and exit ",2],["expand_class","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000754","(klass)","Expands abbreviated klass +klass+ into a fully-qualified class.  \"Zl::Da\" will be expanded to Zlib::DataError.",2],["expand_name","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000755","(name)","Expands the class portion of +name+ into a fully-qualified class.  See #expand_class. ",2],["expand_tabs","Object","classes/Object.html#M000853","(text)","Expands tab characters in +text+ to eight spaces ",2],["extract_call_seq","RDoc::Comment","classes/RDoc/Comment.html#M000077","(method)","Look for a 'call-seq' in the comment to override the normal parameter handling.  The  For example, all",2],["extract_comment","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000106","(comment)","Extracts the comment for this section from the original comment block. If the first line contains :section:,",2],["file=","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000262","(location)","The file this Document was created from. ",2],["file_dir","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000134","()","Directory where generated class HTML files live relative to the output dir. ",2],["file_dir","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000224","()","The directory files are written to ",2],["file_name","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000052","()","File name where this CodeObject was found. See also RDoc::Context#in_files ",2],["filter_methods","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000756","(found, name)","Filters the methods in +found+ trying to find a match for +name+. ",2],["find_alias_comment","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000578","(class_name, new_name, old_name)","Finds the comment for an alias on +class_name+ from +new_name+ to +old_name+ ",2],["find_ancestor_local_symbol","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000050","(symbol)","Looks for a symbol in the #ancestors. See Context#find_local_symbol. ",2],["find_attr_comment","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000579","(var_name, attr_name, read = nil, write = nil)","Finds a comment for rb_define_attr, rb_attr or Document-attr. +var_name+ is the C class variable the",2],["find_attribute","RDoc::Context","classes/RDoc/Context.html#M000158","(name, singleton)","Finds an attribute +name+ with singleton value +singleton+. ",2],["find_attribute_named","RDoc::Context","classes/RDoc/Context.html#M000159","(name)","Finds an attribute with +name+ in this context ",2],["find_body","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000582","(class_name, meth_name, meth_obj, file_content, quiet = false)","Find the C code corresponding to a Ruby method ",2],["find_class","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000584","(raw_name, name)","Finds a RDoc::NormalClass or RDoc::NormalModule for +raw_name+ ",2],["find_class_comment","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000585","(class_name, class_mod)","Look for class or module documentation above Init_+class_name+(void), in a Document-class +class_name+",2],["find_class_method_named","RDoc::Context","classes/RDoc/Context.html#M000161","(name)","Finds a class method with +name+ in this context ",2],["find_class_named","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000051","(name)","Finds a class or module with +name+ in this namespace or its descendants ",2],["find_class_named","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000889","(name)","Finds the class with +name+ in all discovered classes ",2],["find_class_named_from","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000890","(name, from)","Finds the class with +name+ starting in namespace +from+ ",2],["find_class_or_module","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000891","(name)","Finds the class or module with +name+ ",2],["find_class_or_module","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000914","(name)","See RDoc::TopLevel::find_class_or_module ",2],["find_const_comment","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000586","(type, const_name, class_name = nil)","Finds a comment matching +type+ and +const_name+ either above the comment or in the matching Document-",2],["find_constant_named","RDoc::Context","classes/RDoc/Context.html#M000162","(name)","Finds a constant with +name+ in this context ",2],["find_enclosing_module_named","RDoc::Context","classes/RDoc/Context.html#M000163","(name)","Find a module at a higher scope ",2],["find_external_alias","RDoc::Context","classes/RDoc/Context.html#M000165","(name, singleton)","Finds an external alias +name+ with singleton value +singleton+. ",2],["find_external_alias_named","RDoc::Context","classes/RDoc/Context.html#M000166","(name)","Finds an external alias with +name+ in this context ",2],["find_file_named","RDoc::Context","classes/RDoc/Context.html#M000167","(name)","Finds a file with +name+ in this context ",2],["find_file_named","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000892","(name)","Finds the file with +name+ in all discovered files ",2],["find_include_file","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000387","(name)","Look for the given file in the directory containing the current file, and then in each of the directories",2],["find_instance_method_named","RDoc::Context","classes/RDoc/Context.html#M000168","(name)","Finds an instance method with +name+ in this context ",2],["find_local_symbol","RDoc::Context","classes/RDoc/Context.html#M000169","(symbol)","Finds a method, constant, attribute, external alias, module or file named +symbol+ in this context. ",2],["find_local_symbol","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000915","(symbol)","Finds a class or module named +symbol+ ",2],["find_method","RDoc::Context","classes/RDoc/Context.html#M000170","(name, singleton)","Finds a method named +name+ with singleton value +singleton+. ",2],["find_method_named","RDoc::Context","classes/RDoc/Context.html#M000171","(name)","Finds a instance or module method with +name+ in this context ",2],["find_methods","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000757","(name)","Yields items matching +name+ including the store they were found in, the class being searched for, the",2],["find_modifiers","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000587","(comment, meth_obj)","Handles modifiers in +comment+ and updates +meth_obj+ as appropriate. ",2],["find_module_named","RDoc::Context","classes/RDoc/Context.html#M000173","(name)","Find a module with +name+ using ruby's scoping rules ",2],["find_module_named","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000893","(name)","Finds the module with +name+ in all discovered modules ",2],["find_module_named","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000916","(name)","Finds a module or class with +name+ ",2],["find_override_comment","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000588","(class_name, meth_obj)","Finds a <tt>Document-method</tt> override for +meth_obj+ on +class_name+ ",2],["find_symbol","RDoc::Context","classes/RDoc/Context.html#M000174","(symbol)","Look up +symbol+, first as a module, then as a local symbol. ",2],["find_symbol_module","RDoc::Context","classes/RDoc/Context.html#M000175","(symbol)","Look up a module named +symbol+. ",2],["find_unique","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000894","(all_hash)","Finds unique classes/modules defined in +all_hash+, and returns them as an array. Performs the alias",2],["finish","RDoc::Options","classes/RDoc/Options.html#M000580","()","Completes any unfinished option setup business such as filtering for existent files, creating a regexp",2],["fix_basic_object_inheritance","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000895","()","Fixes the erroneous <tt>BasicObject < Object</tt> in 1.9. Because we assumed all classes without a stated",2],["flow","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000274","(str)","Processes +str+ converting attributes, HTML and specials ",2],["flush_left","Object","classes/Object.html#M000858","(text)","Flush +text+ left based on the shortest line ",2],["for","RDoc::Parser","classes/RDoc/Parser.html#M000647","(top_level, file_name, content, options, stats)","Finds and instantiates the correct parser for the given +file_name+ and +content+. ",2],["force_documentation=","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000053","(value)","Force the documentation of this object unless documentation has been turned off by :endoc: ",2],["force_encoding","RDoc::Comment","classes/RDoc/Comment.html#M000085","(encoding)","HACK dubious ",2],["format=","RDoc::Comment","classes/RDoc/Comment.html#M000086","(format)","Sets the format of this comment and resets any parsed document ",2],["formatter","RDoc::Generator::Markup","classes/RDoc/Generator/Markup.html#M000214","()","Creates an RDoc::Markup::ToHtmlCrossref formatter ",2],["formatter","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000758","(io)","Creates a new RDoc::Markup::Formatter.  If a formatter is given with -f, use it.  If we're outputting",2],["friendly_path","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000735","()","Friendly rendition of #path ",2],["from_module","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000033","(class_type, mod)","Return a RDoc::ClassModule of class +class_type+ that is a copy of module +module+. Used to promote modules",2],["full_name","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000055","()","Return the fully qualified name of this class or module ",2],["full_name","RDoc::Context","classes/RDoc/Context.html#M000177","()","The full name for this context.  This method is overridden by subclasses. ",2],["full_name","RDoc::Include","classes/RDoc/Include.html#M000234","()","Full name based on #module ",2],["full_name","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000534","()","Full method/attribute name including namespace ",2],["full_name","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000917","()","Returns the relative name of this file ",2],["full_name=","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000054","(full_name)","Sets the full_name overriding any computed full name. Set to +nil+ to clear RDoc's cached value ",2],["full_old_name","RDoc::Alias","classes/RDoc/Alias.html#M000006","()","Full old name including namespace ",2],["fully_documented?","RDoc::Context","classes/RDoc/Context.html#M000178","()","Does this context and its methods and constants all have documentation? (Yes, fully documented doesn't",2],["fully_documented?","RDoc::Stats","classes/RDoc/Stats.html#M000826","()","The documentation status of this project.  +true+ when 100%, +false+ when less than 100% and +nil+ when",2],["gather_files","RDoc::RDoc","classes/RDoc/RDoc.html#M000681","(files)","Gathers a set of parseable files from the files and directories listed in +files+. ",2],["gemdirs","RDoc::RI::Paths","classes/RDoc/RI/Paths.html#M000714","()","The latest installed gems' ri directories ",2],["gen_relative_url","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000426","(path, target)","Converts a target url to one that is relative to a given path ",2],["gen_sub_directories","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000135","()","Create the directories the generated docs will live in if they don't already exist. ",2],["gen_url","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000451","(url, text)","Generate a link to +url+ with content +text+.  Handles the special cases for img: and link: described",2],["gen_url","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000447","(url, text)","Generates links for <tt>rdoc-ref:</tt> scheme URLs and allows RDoc::Markup::ToHtml to handle other schemes.",2],["gen_url","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000472","(url, text)","Returns just the text of +link+, +url+ is only used to determine the link type. ",2],["generate","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000139","(top_levels)","Build the initial indices and output objects based on an array of TopLevel objects containing the extracted",2],["generate","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000210","(top_levels)","Creates the JSON index. ",2],["generate","RDoc::Generator::RI","classes/RDoc/Generator/RI.html#M000228","(top_levels)","Build the initial indices and output objects based on an array of TopLevel objects containing the extracted",2],["generate","RDoc::RDoc","classes/RDoc/RDoc.html#M000706","(file_info)","Generates documentation for +file_info+ (from #parse_files) into the output dir using the generator selected",2],["generate","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000780","()","Generates RDoc and ri data ",2],["generate_class_files","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000160","()","Generate a documentation file for each class and module ",2],["generate_file_files","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000164","()","Generate a documentation file for each file ",2],["generate_index","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000157","()","Generate an index page which lists all the classes which are documented. ",2],["generate_table_of_contents","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000172","()","Generate an index page which lists all the classes which are documented. ",2],["generation_hook","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000775","(installer, specs)","Post installs hook that generates documentation for each specification in +specs+ ",2],["generator_descriptions","RDoc::Options","classes/RDoc/Options.html#M000581","()","Returns a properly-space list of generators and their descriptions. ",2],["get","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000384","()","Pulls the next token from the stream. ",2],["get_bool","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000623","()","Looks for a true or false token.  Returns false if TkFALSE or TkNIL are found. ",2],["get_class_or_module","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000624","(container)","Look for the name of a class of module (optionally with a leading :: or with :: separated named) and",2],["get_class_specification","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000627","()","Return a superclass, which can be either a constant of an expression ",2],["get_constant","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000630","()","Parse a constant, which might be qualified by one or more class or module names ",2],["get_constant_with_optional_parens","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000631","()","Get a constant that may be surrounded by parens ",2],["get_sorted_module_list","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000155","(classes)","Return a list of the documented modules sorted by salience first, then by name. ",2],["get_svninfo","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000179","(klass)","Try to extract Subversion information out of the first constant whose value looks like a subversion Id",2],["get_symbol_or_name","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000632","()","Extracts a name or symbol from the token stream. ",2],["get_tk","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000610","()","Fetches the next token from the scanner ",2],["get_tk_until","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000611","(*tokens)","Reads and returns all tokens up to one of +tokens+.  Leaves the matched token in the token list. ",2],["get_tkread","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000612","()","Retrieves a String representation of the read tokens ",2],["great_job","RDoc::Stats","classes/RDoc/Stats.html#M000830","()","A report that says you did a great job! ",2],["handle","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000380","(text, code_object = nil, &block)","Look for directives in the given +text+. Options that we don't handle are yielded.  If the block returns",2],["handle_attr","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000589","(var_name, attr_name, read, write)","Creates a new RDoc::Attr +attr_name+ on class +var_name+ that is either +read+, +write+ or both ",2],["handle_class_module","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000590","(var_name, type, class_name, parent, in_module)","Creates a new RDoc::NormalClass or RDoc::NormalModule based on +type+ named +class_name+ in +parent+",2],["handle_constants","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000591","(type, var_name, const_name, definition)","Adds constants.  By providing some_value: at the start of the comment you can override the C value of",2],["handle_directive","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000382","(prefix, directive, param, code_object = nil, encoding = nil)","Performs the actions described by +directive+ and its parameter +param+. +code_object+ is used for directives",2],["handle_ifdefs_in","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000592","(body)","Removes #ifdefs that would otherwise confuse us ",2],["handle_method","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000593","(type, var_name, meth_name, function, param_count, source_file = nil)","Adds an RDoc::AnyMethod +meth_name+ defined on a class or module assigned to +var_name+.  +type+ is the",2],["handle_pipe","RDoc::RDoc","classes/RDoc/RDoc.html#M000682","()","Turns RDoc from stdin into HTML ",2],["handle_singleton","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000594","(sclass_var, class_var)","Registers a singleton class +sclass_var+ as a singleton of +class_var+ ",2],["handle_special_CROSSREF","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000440","(special)","We're invoked when any text matches the CROSSREF pattern.  If we find the corresponding reference, generate",2],["handle_special_CROSSREF","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000470","(special)","Removes escaping from the cross-references in +special+ ",2],["handle_special_CROSSREF","RDoc::Markup::ToLabel","classes/RDoc/Markup/ToLabel.html#M000468","(special)","Converts the CROSSREF +special+ to plain text, removing the suppression marker, if any ",2],["handle_special_HYPERLINK","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000428","(special)","+special+ is a potential link.  The following schemes are handled: <tt>mailto:</tt>:: Inserted as-is.",2],["handle_special_HYPERLINK","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000443","(special)","Handles <tt>rdoc-ref:</tt> scheme links and allows RDoc::Markup::ToHtml to handle other schemes. ",2],["handle_special_RDOCLINK","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000429","(special)","+special+ is an rdoc-schemed link that will be converted into a hyperlink. For the +rdoc-ref+ scheme",2],["handle_special_RDOCLINK","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000444","(special)","+special+ is an rdoc-schemed link that will be converted into a hyperlink. For the rdoc-ref scheme the",2],["handle_special_SUPPRESSED_CROSSREF","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000499","(special)","Removes preceding \\\\ from the suppressed crossref +special+ ",2],["handle_special_TIDYLINK","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000430","(special)","This +special+ is a link where the label is different from the URL <tt>label[url]</tt> or <tt>{long label}[url]</tt>",2],["handle_special_TIDYLINK","RDoc::Markup::ToLabel","classes/RDoc/Markup/ToLabel.html#M000469","(special)","Converts the TIDYLINK +special+ to just the text part ",2],["handle_tab_width","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000595","(body)","Normalizes tabs in +body+ ",2],["hash","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000918","()","An RDoc::TopLevel has the same hash as another with the same absolute_name ",2],["html_list_name","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000452","(list_type, open_tag)","Determines the HTML list element for +list_type+ and +open_tag+ ",2],["html_list_name","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000473","(list_type, open_tag)","In snippets, there are no lists ",2],["html_name","RDoc::Alias","classes/RDoc/Alias.html#M000007","()","HTML id-friendly version of +#new_name+. ",2],["html_name","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000533","()","HTML id-friendly method/attribute name ",2],["http_url","RDoc::Context","classes/RDoc/Context.html#M000180","(prefix)","URL for this with a +prefix+ ",2],["http_url","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000919","(prefix)","URL for this with a +prefix+ ",2],["ignore","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000057","()","Use this to ignore a CodeObject and all its children until found again (#record_location is called).",2],["ignore","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000285","(node)","Use ignore in your subclass to ignore the content of a node. ## # We don't support raw nodes in ToNoRaw",2],["ignored?","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000058","()","Has this class been ignored? ",2],["in_path?","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000760","(file)","Is +file+ in ENV['PATH']? ",2],["in_tt?","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000286","()","Are we currently inside tt tags? ",2],["include_file","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000386","(name, indent, encoding)","Handles the <tt>:include: _filename_</tt> directive. If the first line of the included file starts with",2],["index_classes","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000217","()","Adds classes and modules to the index ",2],["index_methods","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000219","()","Adds methods to the index ",2],["index_pages","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000221","()","Adds pages to the index ",2],["init_tags","RDoc::Markup::ToAnsi","classes/RDoc/Markup/ToAnsi.html#M000410","()","Maps attributes to ANSI sequences ",2],["init_tags","RDoc::Markup::ToBs","classes/RDoc/Markup/ToBs.html#M000421","()","Sets a flag that is picked up by #annotate to do the right thing in #convert_string ",2],["init_tags","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000453","()","Maps attributes to HTML tags ",2],["init_tags","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000481","()","Maps attributes to HTML sequences ",2],["initialize_methods_etc","RDoc::Context","classes/RDoc/Context.html#M000114","()","Sets the defaults for methods and so-forth ",2],["install_siginfo_handler","RDoc::Generator::RI","classes/RDoc/Generator/RI.html#M000229","()","Installs a siginfo handler that prints the current filename. ",2],["install_siginfo_handler","RDoc::RDoc","classes/RDoc/RDoc.html#M000685","()","Installs a siginfo handler that prints the current filename. ",2],["instance_attributes","RDoc::Context","classes/RDoc/Context.html#M000181","()","Instance attributes ",2],["instance_method_list","RDoc::Context","classes/RDoc/Context.html#M000183","()","Instance methods ",2],["instance_methods","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000737","()","Instance methods cache accessor.  Maps a class to an Array of its instance methods (not full name). ",2],["interactive","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000759","()","Runs ri interactively using Readline if it is available. ",2],["last","RDoc::Markup::List","classes/RDoc/Markup/List.html#M000360","()","Returns the last item in the list ",2],["last_modified","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000921","()","Time this file was last modified, if known ",2],["length","RDoc::Markup::ListItem","classes/RDoc/Markup/ListItem.html#M000364","()","Length of parts in the ListItem ",2],["link","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000448","(name, text)","Creates an HTML link to +name+ with the given +text+. ",2],["list_end_for","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000455","(list_type)","Returns the HTML end-tag for +list_type+ ",2],["list_files_in_directory","RDoc::RDoc","classes/RDoc/RDoc.html#M000697","(dir)","Return a list of the files to be processed in a directory. We know that this directory doesn't have a",2],["list_item_start","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000454","(list_item, list_type)","Returns the HTML tag for +list_type+, possible using a label from +list_item+ ",2],["list_item_start","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000471","(list_item, list_type)","Lists are paragraphs, but notes and labels have a separator ",2],["list_known_classes","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000761","(names = [])","Lists classes known to ri starting with +names+.  If +names+ is empty all known classes are shown. ",2],["list_methods_matching","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000762","(name)","Returns an Array of methods matching +name+ ",2],["load_cache","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000738","()","Loads cache file for this store ",2],["load_class","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000739","(klass_name)","Loads ri data for +klass_name+ ",2],["load_method","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000763","(store, cache, klass, type, name)","Loads RI data for method +name+ on +klass+ from +store+.  +type+ and +cache+ indicate if it is a class",2],["load_method","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000740","(klass_name, method_name)","Loads ri data for +method_name+ in +klass_name+ ",2],["load_methods_matching","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000764","(name)","Returns an Array of RI data for methods matching +name+ ",2],["load_options","RDoc::RDoc","classes/RDoc/RDoc.html#M000686","()","Loads options from .rdoc_options if the file exists, otherwise creates a new RDoc::Options instance.",2],["load_rdoc","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000776","()","Loads the RDoc generator ",2],["load_yaml","RDoc","classes/RDoc.html#M000888","()","Loads the best available YAML library. ",2],["look_for_directives_in","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000596","(context, comment)","Look for directives in a normal comment block: /* * :title: My Awesome Project */ This method modifies",2],["look_for_directives_in","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000633","(context, comment)","Look for directives in a normal comment block: # :stopdoc: # Don't display comment from this point forward",2],["make_message","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000634","(message)","Adds useful info about the parser to +message+ ",2],["markup","Object","classes/Object.html#M000862","(text)","Convert a string in markup format into HTML. Requires the including class to implement #formatter ",2],["markup_code","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000218","()","Turns the method's token stream into HTML. Prepends line numbers if +add_line_numbers+ is true. ",2],["marshal_dump","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000023","()","Dumps this AnyMethod for use by ri.  See also #marshal_load ",2],["marshal_dump","RDoc::Attr","classes/RDoc/Attr.html#M000025","()","Dumps this Attr for use by ri.  See also #marshal_load ",2],["marshal_load","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000026","(array)","Loads this AnyMethod from +array+.  For a loaded AnyMethod the following methods will return cached values:",2],["marshal_load","RDoc::Attr","classes/RDoc/Attr.html#M000027","(array)","Loads this Attr from +array+.  For a loaded Attr the following methods will return cached values: * #full_name",2],["mask_protected_sequences","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000264","()","Escapes special sequences of text to prevent conversion to RDoc ",2],["merge","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000065","(class_module)","Merges +class_module+ into this ClassModule. The data in +class_module+ is preferred over the receiver.",2],["merge","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000265","(other)","When this is a collection of documents (#file is not set and this document contains only other documents",2],["merge","RDoc::Markup::Raw","classes/RDoc/Markup/Raw.html#M000395","(other)","Appends +other+'s parts ",2],["merged?","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000268","()","Does this Document contain other Documents? ",2],["method_document","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000765","(name, filtered)","Builds a RDoc::Markup::Document from +found+, +klasess+ and +includes+ ",2],["method_file","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000741","(klass_name, method_name)","Path to the ri data for +method_name+ in +klass_name+ ",2],["method_type","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000766","(selector)","Returns the type of method (:both, :instance, :class) for +selector+ ",2],["methods_by_type","RDoc::Context","classes/RDoc/Context.html#M000184","(section = nil)","Breaks method_list into a nested hash by type (<tt>'class'</tt> or <tt>'instance'</tt>) and visibility",2],["methods_matching","RDoc::Context","classes/RDoc/Context.html#M000188","(methods, singleton = false, &block)","Yields AnyMethod and Attr entries matching the list of names in +methods+. ",2],["module","RDoc::Include","classes/RDoc/Include.html#M000237","()","Attempts to locate the included module object.  Returns the name if not known. The scoping rules of Ruby",2],["module?","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000067","()","Does this object represent a module? ",2],["module?","RDoc::NormalModule","classes/RDoc/NormalModule.html#M000558","()","This is a module, returns true ",2],["modules","RDoc::Context","classes/RDoc/Context.html#M000190","()","Array of modules in this context ",2],["modules","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000744","()","Modules cache accessor.  An Array of all the modules (and classes) in the store. ",2],["modules_hash","RDoc::Context","classes/RDoc/Context.html#M000191","()","Hash of modules keyed by module name ",2],["name","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000030","()","Method name If the method has no assigned name, it extracts it from #call_seq. ",2],["name","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000912","()","Alias for #base_name",2],["name=","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000068","(new_name)","Allows overriding the initial name. Used for modules and classes that are constant aliases. ",2],["name_for_path","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000072","()","Name to use to generate the url: modules and classes that are aliases for another module or class return",2],["name_for_path","RDoc::Context","classes/RDoc/Context.html#M000192","()","Name to use to generate the url. <tt>#full_name</tt> by default. ",2],["name_prefix","RDoc::Alias","classes/RDoc/Alias.html#M000009","()","'::' for the alias of a singleton method/attribute, '#' for instance-level. ",2],["name_prefix","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000535","()","'::' for a class method/attribute, '#' for an instance method. ",2],["name_regexp","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000767","(name)","Returns a regular expression for +name+ that will match an RDoc::AnyMethod's name. ",2],["new","RDoc::Alias","classes/RDoc/Alias.html#M000003","(text, old_name, new_name, comment, singleton = false)","Creates a new Alias with a token stream of +text+ that aliases +old_name+ to +new_name+, has +comment+",2],["new","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000016","(text, name)","Creates a new AnyMethod with a token stream +text+ and +name+ ",2],["new","RDoc::Attr","classes/RDoc/Attr.html#M000014","(text, name, rw, comment, singleton = false)","Creates a new Attr with body +text+, +name+, read/write status +rw+ and +comment+.  +singleton+ marks",2],["new","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000034","(name, superclass = nil)","Creates a new ClassModule with +name+ with optional +superclass+ This is a constructor for subclasses,",2],["new","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000036","()","Creates a new CodeObject that will document itself and its children ",2],["new","RDoc::Comment","classes/RDoc/Comment.html#M000070","(text = nil, location = nil)","Creates a new comment with +text+ that is found in the RDoc::TopLevel +location+. ",2],["new","RDoc::Constant","classes/RDoc/Constant.html#M000095","(name, value, comment)","Creates a new constant with +name+, +value+ and +comment+ ",2],["new","RDoc::Context","classes/RDoc/Context.html#M000112","()","Creates an unnamed empty context with public current visibility ",2],["new","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000097","(parent, title, comment)","Creates a new section with +title+ and +comment+ ",2],["new","RDoc::CrossReference","classes/RDoc/CrossReference.html#M000110","(context)","Allows cross-references to be created based on the given +context+ (RDoc::Context). ",2],["new","RDoc::ERBIO","classes/RDoc/ERBIO.html#M000120","(str, safe_level = nil, trim_mode = nil, eoutvar = 'io')","Defaults +eoutvar+ to 'io', otherwise is identical to ERB's initialize ",2],["new","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000129","(options)","Initialize a few instance variables before we start ",2],["new","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000208","(parent_generator, options)","Creates a new generator.  +parent_generator+ is used to determine the class_dir and file_dir of links",2],["new","RDoc::Generator::RI","classes/RDoc/Generator/RI.html#M000227","(options)","Set up a new ri generator ",2],["new","RDoc::Include","classes/RDoc/Include.html#M000231","(name, comment)","Creates a new Include for +name+ with +comment+ ",2],["new","RDoc::Markup","classes/RDoc/Markup.html#M000543","(attribute_manager = nil)","Take a block of text and use various heuristics to determine its structure (paragraphs, lists, and so",2],["new","RDoc::Markup::AttrSpan","classes/RDoc/Markup/AttrSpan.html#M000244","(length)","Creates a new AttrSpan for +length+ characters ",2],["new","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000250","()","Creates a new attribute manager that understands bold, emphasized and teletype text. ",2],["new","RDoc::Markup::BlankLine","classes/RDoc/Markup/BlankLine.html#M000247","()","RDoc::Markup::BlankLine is a singleton ",2],["new","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000256","(*parts)","Creates a new Document with +parts+ ",2],["new","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000277","(markup = nil)","Creates a new Formatter ",2],["new","RDoc::Markup::Include","classes/RDoc/Markup/Include.html#M000318","(file, include_path)","Creates a new include that will import +file+ from +include_path+ ",2],["new","RDoc::Markup::IndentedParagraph","classes/RDoc/Markup/IndentedParagraph.html#M000337","(indent, *parts)","Creates a new IndentedParagraph containing +parts+ indented with +indent+ spaces ",2],["new","RDoc::Markup::List","classes/RDoc/Markup/List.html#M000352","(type = nil, *items)","Creates a new list of +type+ with +items+.  Valid list types are: +:BULLET+, +:LABEL+, +:LALPHA+, +:NOTE+,",2],["new","RDoc::Markup::ListItem","classes/RDoc/Markup/ListItem.html#M000355","(label = nil, *parts)","Creates a new ListItem with an optional +label+ containing +parts+ ",2],["new","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000371","()","Creates a new Parser.  See also ::parse ",2],["new","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000379","(input_file_name, include_path)","Creates a new pre-processor for +input_file_name+ that will look for included files in +include_path+",2],["new","RDoc::Markup::Raw","classes/RDoc/Markup/Raw.html#M000391","(*parts)","Creates a new Raw containing +parts+ ",2],["new","RDoc::Markup::Special","classes/RDoc/Markup/Special.html#M000401","(type, text)","Creates a new special sequence of +type+ with +text+ ",2],["new","RDoc::Markup::ToAnsi","classes/RDoc/Markup/ToAnsi.html#M000409","(markup = nil)","Creates a new ToAnsi visitor that is ready to output vibrant ANSI color! ",2],["new","RDoc::Markup::ToBs","classes/RDoc/Markup/ToBs.html#M000420","(markup = nil)","Returns a new ToBs that is ready for hot backspace action! ",2],["new","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000427","(markup = nil)","Creates a new formatter that will output HTML ",2],["new","RDoc::Markup::ToHtmlCrossref","classes/RDoc/Markup/ToHtmlCrossref.html#M000436","(from_path, context, show_hash, hyperlink_all = false, markup = nil)","Creates a new crossref resolver that generates links relative to +context+ which lives at +from_path+",2],["new","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000458","(characters = 100, paragraphs = 3, markup = nil)","Creates a new ToHtmlSnippet formatter that will cut off the input on the next word boundary after the",2],["new","RDoc::Markup::ToLabel","classes/RDoc/Markup/ToLabel.html#M000464","(markup = nil)","Creates a new formatter that will output HTML-safe labels ",2],["new","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000480","(markup = nil)","Creates a new formatter that will output (mostly) \\RDoc markup ",2],["new","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000506","(markup = nil)","Creates a new tt-only formatter. ",2],["new","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000523","(text, name)","Creates a new MethodAttr from token stream +text+ and method or attribute name +name+. Usually this is",2],["new","RDoc::Parser","classes/RDoc/Parser.html#M000650","(top_level, file_name, content, options, stats)","Creates a new Parser storing +top_level+, +file_name+, +content+, +options+ and +stats+ in instance variables.",2],["new","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000562","(top_level, file_name, content, options, stats)","Prepare to parse a C file ",2],["new","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000619","(top_level, file_name, content, options, stats)","Creates a new Ruby parser. ",2],["new","RDoc::Parser::Simple","classes/RDoc/Parser/Simple.html#M000625","(top_level, file_name, content, options, stats)","Prepare to parse a plain file ",2],["new","RDoc::RD::Inline","classes/RDoc/RD/Inline.html#M000658","(rdoc, reference)","Initializes the Inline with +rdoc+ and +inline+ ",2],["new","RDoc::RD::Inline","classes/RDoc/RD/Inline.html#M000657","(rdoc, reference = rdoc)","Creates a new Inline for +rdoc+ and +reference+. +rdoc+ may be another Inline or a String.  If +reference+",2],["new","RDoc::RDoc","classes/RDoc/RDoc.html#M000677","()","Creates a new RDoc::RDoc instance.  Call #document to parse files and generate documentation. ",2],["new","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000718","(initial_options = {})","Creates a new driver using +initial_options+ from ::process_args ",2],["new","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000724","(path, type = nil)","Creates a new Store of +type+ that will load or save to +path+ ",2],["new","RDoc::Require","classes/RDoc/Require.html#M000699","(name, comment)","Creates a new Require that loads +name+ with +comment+ ",2],["new","RDoc::RubyLex","classes/RDoc/RubyLex.html#M000772","(content, options)","Creates a new lexer for +content+.  +options+ is an RDoc::Options, only +tab_width is used. ",2],["new","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000777","(spec, generate_rdoc = true, generate_ri = true)","Creates a new documentation generator for +spec+.  RDoc and ri data generation can be disabled through",2],["new","RDoc::Stats","classes/RDoc/Stats.html#M000809","(num_files, verbosity = 1)","Creates a new Stats that will have +num_files+.  +verbosity+ defaults to 1 which will create an RDoc::Stats::Normal",2],["new","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000791","(num_files)","Creates a new Quiet that will print nothing ",2],["new","RDoc::Task","classes/RDoc/Task.html#M000819","(name = :rdoc)","Create an RDoc task with the given name. See the RDoc::Task class overview for documentation. ",2],["new","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000873","()","Public: Creates a new TomDoc parser.  See also RDoc::Markup::parse ",2],["new","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000903","(file_name)","Creates a new TopLevel for +file_name+ ",2],["new","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000896","(file_name)","Creates a new RDoc::TopLevel with +file_name+ only if one with the same name does not exist in all_files.",2],["new_comment","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000635","(comment)","Creates a comment with the correct format ",2],["nodoc","RDoc::Stats::Verbose","classes/RDoc/Stats/Verbose.html#M000801","(co)","Returns a marker for RDoc::CodeObject +co+ being undocumented ",2],["non_aliases","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000073","()","Returns the classes and modules that are not constants aliasing another class or module. For use by formatters",2],["normalize","RDoc::Comment","classes/RDoc/Comment.html#M000088","()","Normalizes the text.  See RDoc::Text#normalize_comment for details ",2],["normalize","RDoc::Markup::Verbatim","classes/RDoc/Markup/Verbatim.html#M000505","()","Collapses 3+ newlines into two newlines ",2],["normalize_comment","Object","classes/Object.html#M000863","(text)","Strips hashes, expands tabs then flushes +text+ to the left ",2],["normalized_file_list","RDoc::RDoc","classes/RDoc/RDoc.html#M000696","(relative_files, force_doc = false, exclude_pattern = nil)","Given a list of files and directories, create a list of all the Ruby files they contain. If +force_doc+",2],["object_class","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000922","()","Returns the NormalClass \"Object\", creating it if not found. Records +self+ as a location in \"Object\".",2],["off_tags","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000288","(res, item)","Turns off tags for +item+ on +res+ ",2],["off_tags","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000478","(res, item)","Maintains a bitmask to allow HTML elements to be closed properly.  See RDoc::Markup::Formatter. ",2],["on_tags","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000287","(res, item)","Turns on tags for +item+ on +res+ ",2],["on_tags","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000477","(res, item)","Maintains a bitmask to allow HTML elements to be closed properly.  See RDoc::Markup::Formatter. ",2],["ongoing_visibility=","RDoc::Context","classes/RDoc/Context.html#M000193","(visibility)","Changes the visibility for new methods to +visibility+ ",2],["option_list","RDoc::Task","classes/RDoc/Task.html#M000833","()","List of options that will be supplied to RDoc ",2],["output_flag_file","RDoc::RDoc","classes/RDoc/RDoc.html#M000692","(op_dir)","Return the path name of the flag file in an output directory. ",2],["output_name","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000536","(context)","Name for output to HTML.  For class methods the full name with a \".\" is used like +SomeClass.method_name+.",2],["page","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000768","()","Paginates output through a pager program. ",2],["page","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000897","(name)","Returns the RDoc::TopLevel that has the given +name+ ",2],["page_name","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000923","()","Base name of this file without the extension ",2],["paging?","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000770","()","Are we using a pager? ",2],["param_list","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000031","()","A list of this method's method and yield parameters.  +call-seq+ params are preferred over parsed method",2],["param_seq","RDoc::AnyMethod","classes/RDoc/AnyMethod.html#M000032","()","Pretty parameter list for this method.  If the method's parameters were given by +call-seq+ it is preferred",2],["parent_file_name","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000059","()","File name of our parent ",2],["parent_name","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000060","()","Name of our parent ",2],["parent_name","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000540","()","Name of our parent with special handling for un-marshaled methods ",2],["parse","Object","classes/Object.html#M000864","(text, format = 'rdoc')","Normalizes +text+ then builds a RDoc::Markup::Document from it ",2],["parse","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000069","(comment_location)","Parses +comment_location+ into an RDoc::Markup::Document composed of multiple RDoc::Markup::Documents",2],["parse","RDoc::Comment","classes/RDoc/Comment.html#M000090","()","Parses the comment into an RDoc::Markup::Document.  The parsed document is cached until the text is changed.",2],["parse","RDoc::Markup","classes/RDoc/Markup.html#M000541","(str)","Parses +str+ into an RDoc::Markup::Document. ",2],["parse","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000385","(parent, indent = 0)","Parses the tokens into an array of RDoc::Markup::XXX objects, and appends them to the passed +parent+",2],["parse","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000369","(str)","Parses +str+ into a Document. Use RDoc::Markup#parse instead of this method. ",2],["parse","RDoc::Options","classes/RDoc/Options.html#M000583","(argv)","Parses command line options. ",2],["parse","RDoc::RD","classes/RDoc/RD.html#M000667","(rd)","Parses +rd+ source and returns an RDoc::Markup::Document.  If the <tt>=begin</tt> or <tt>=end</tt> lines",2],["parse","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000871","(text)","Public: Parses TomDoc from text text - A String containing TomDoc-format text. Examples RDoc::TomDoc.parse",2],["parse_alias","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000638","(context, single, tk, comment)","Parses an +alias+ in +context+ with +comment+ ",2],["parse_attr","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000636","(context, single, tk, comment)","Creates an RDoc::Attr for the name following +tk+, setting the comment to +comment+. ",2],["parse_attr_accessor","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000637","(context, single, tk, comment)","Creates an RDoc::Attr for each attribute listed after +tk+, setting the comment for each to +comment+.",2],["parse_call_parameters","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000639","(tk)","Extracts call parameters from the token stream. ",2],["parse_class","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000640","(container, single, tk, comment)","Parses a class in +context+ with +comment+ ",2],["parse_comment","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000651","(container, tk, comment)","Generates an RDoc::Method or RDoc::Attr from +comment+ by looking for :method: or :attr: directives in",2],["parse_comment_tomdoc","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000652","(container, tk, comment)","Creates an RDoc::Method on +container+ from +comment+ if there is a Signature section in the comment",2],["parse_constant","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000644","(container, tk, comment)","Parses a constant in +context+ with +comment+ ",2],["parse_dot_doc_file","RDoc::RDoc","classes/RDoc/RDoc.html#M000693","(in_dir, filename)","The .document file contains a list of file and directory name patterns, representing candidates for documentation.",2],["parse_file","RDoc::RDoc","classes/RDoc/RDoc.html#M000698","(filename)","Parses +filename+ and returns an RDoc::TopLevel ",2],["parse_files","RDoc::RDoc","classes/RDoc/RDoc.html#M000701","(files)","Parse each file on the command line, recursively entering directories. ",2],["parse_files_matching","RDoc::Parser","classes/RDoc/Parser.html#M000648","(regexp)","Record which file types this parser can understand. It is ok to call this multiple times. ",2],["parse_include","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000653","(context, comment)","Parses an +include+ in +context+ with +comment+ ",2],["parse_meta_attr","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000654","(context, single, tk, comment)","Parses a meta-programmed attribute and creates an RDoc::Attr. To create foo and bar attributes on class",2],["parse_meta_method","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000655","(container, single, tk, comment)","Parses a meta-programmed method ",2],["parse_method","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000656","(container, single, tk, comment)","Parses a normal method defined by +def+ ",2],["parse_method_or_yield_parameters","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000662","(method = nil, modifiers = RDoc::METHOD_MODIFIERS)","Extracts +yield+ parameters from +method+ ",2],["parse_method_parameters","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000663","(method)","Capture the method's parameters. Along the way, look for a comment containing: # yields: .... and add",2],["parse_module","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000664","(container, single, tk, comment)","Parses an RDoc::NormalModule in +container+ with +comment+ ",2],["parse_name","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000771","(name)","Extracts the class, selector and method name parts from +name+ like Foo::Bar#baz. NOTE: Given Foo::Bar,",2],["parse_require","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000665","(context, comment)","Parses an RDoc::Require in +context+ containing +comment+ ",2],["parse_statements","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000666","(container, single = NORMAL, current_method = nil, comment = new_comment(''))","The core of the ruby parser. ",2],["parse_symbol_arg","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000668","(no = nil)","Parse up to +no+ symbol arguments ",2],["parse_symbol_in_arg","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000669","()","Returns symbol text from the next token ",2],["parse_top_level_statements","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000670","(container)","Parses statements in the top-level +container+ ",2],["parse_visibility","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000671","(container, single, tk)","Determines the visibility in +container+ from +tk+ ",2],["parse_yield","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000674","(context, single, tk, method)","Determines the block parameter for +context+ ",2],["parseable?","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000456","(text)","Returns true if Ripper is available it can create a sexp from +text+ ",2],["path","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000071","()","Path to this class or module ",2],["path","RDoc::Constant","classes/RDoc/Constant.html#M000104","()","Path to this constant ",2],["path","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000539","()","Path to this method ",2],["path","RDoc::RI::Paths","classes/RDoc/RI/Paths.html#M000715","(system, site, home, gems, *extra_dirs)","Returns existing directories from the selected documentation directories as an Array. See also ::each",2],["path","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000924","()","Path to this file ",2],["peek_read","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000613","()","Peek equivalent for get_tkread ",2],["peek_tk","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000614","()","Peek at the next token, but don't remove it from the stream ",2],["peek_token","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000388","()","Returns the next token on the stream without modifying the stream ",2],["percent_doc","RDoc::Stats","classes/RDoc/Stats.html#M000831","()","Calculates the percentage of items documented. ",2],["plain_html","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000108","()","The section's title, or 'Top Section' if the title is nil. This is used by the table of contents template",2],["plain_html","RDoc::Markup::Heading","classes/RDoc/Markup/Heading.html#M000301","()","HTML markup of the text of this label without the surrounding header element. ",2],["pop_token","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000859","()","Remove the last token from the collected tokens ",2],["post_process","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000374","(&block)","Adds a post-process handler for directives.  The handler will be called with the result RDoc::Comment",2],["post_processors","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000375","()","Registered post-processors ",2],["pretty_name","RDoc::Alias","classes/RDoc/Alias.html#M000012","()","Alias for #pretty_new_name",2],["pretty_name","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000537","()","Method/attribute name with class/instance indicator ",2],["pretty_new_name","RDoc::Alias","classes/RDoc/Alias.html#M000011","()","New name with prefix '::' or '#'. ",2],["pretty_old_name","RDoc::Alias","classes/RDoc/Alias.html#M000010","()","Old name with prefix '::' or '#'. ",2],["print_alias","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000793","(*)","Prints when an alias is added ",2],["print_attribute","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000794","(*)","Prints when an attribute is added ",2],["print_class","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000795","(*)","Prints when a class is added ",2],["print_constant","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000796","(*)","Prints when a constant is added ",2],["print_file","RDoc::Stats::Normal","classes/RDoc/Stats/Normal.html#M000789","(files_so_far, filename)","Prints a file with a progress bar ",2],["print_file","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000797","(*)","Prints when a file is added ",2],["print_method","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000798","(*)","Prints when a method is added ",2],["print_module","RDoc::Stats::Quiet","classes/RDoc/Stats/Quiet.html#M000799","(*)","Prints when a module is added ",2],["process_args","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000712","(argv)","Parses +argv+ and returns a Hash of options ",2],["process_directive","RDoc::Parser","classes/RDoc/Parser.html#M000643","(code_object, directive, value)","Processes common directives for CodeObjects for the C and Ruby parsers. Applies +directive+'s +value+",2],["push","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000270","(*parts)","Appends +parts+ to the document ",2],["push","RDoc::Markup::List","classes/RDoc/Markup/List.html#M000366","(*items)","Appends +items+ to the list ",2],["push","RDoc::Markup::ListItem","classes/RDoc/Markup/ListItem.html#M000367","(*parts)","Adds +parts+ to the ListItem ",2],["push","RDoc::Markup::Raw","classes/RDoc/Markup/Raw.html#M000397","(*texts)","Appends +texts+ onto this Paragraph ",2],["quiet","RDoc::Options","classes/RDoc/Options.html#M000598","()","Don't display progress as we process the files ",2],["quiet=","RDoc::Options","classes/RDoc/Options.html#M000599","(bool)","Set quietness to +bool+ ",2],["raw_path","RDoc::RI::Paths","classes/RDoc/RI/Paths.html#M000716","(system, site, home, gems, *extra_dirs)","Returns selected documentation directories including nonexistent directories. See also ::each ",2],["rb_scan_args","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000597","(method_body)","Extracts parameters from the +method_body+ and returns a method parameter string.  Follows 1.9.3dev's",2],["rdoc/ri/formatter","Object","classes/Object.html#M000708","","For RubyGems backwards compatibility ",2],["rdoc_installed?","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000782","()","Is rdoc documentation installed? ",2],["rdoc_target","RDoc::Task","classes/RDoc/Task.html#M000839","()","",2],["rdoc_task_description","RDoc::Task","classes/RDoc/Task.html#M000837","()","Task description for the rdoc task or its renamed equivalent ",2],["rdoc_task_name","RDoc::Task","classes/RDoc/Task.html#M000840","()","",2],["read_directive","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000679","(allowed)","Directives are modifier comments that can appear after class, module, or method names. For example: def",2],["read_documentation_modifiers","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000680","(context, allow)","Handles the directive for +context+ if the directive is listed in +allow+. This method is called for",2],["read_file","RDoc::Encoding","classes/RDoc/Encoding.html#M000113","(filename, encoding, force_transcode = false)","Reads the contents of +filename+ and handles any encoding directives in the file. The content will be",2],["record_location","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000061","(top_level)","Records the RDoc::TopLevel (file) where this code object was defined ",2],["record_location","RDoc::Context","classes/RDoc/Context.html#M000194","(top_level)","Record +top_level+ as a file +self+ is in. ",2],["register","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000376","(directive, &block)","Registers +directive+ as one handled by RDoc.  If a block is given the directive will be replaced by",2],["registered","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000377","()","Registered directives ",2],["remove","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000783","()","Removes generated RDoc and ri data ",2],["remove_coding_comment","RDoc::Parser::Simple","classes/RDoc/Parser/Simple.html#M000628","(text)","Removes the encoding magic comment from +text+ ",2],["remove_commented_out_lines","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000606","()","Removes lines that are commented out that might otherwise get picked up when scanning for classes and",2],["remove_from_documentation?","RDoc::Context","classes/RDoc/Context.html#M000195","()","Should we remove this context from the documentation? The answer is yes if: * #received_nodoc is +true+",2],["remove_invisible","RDoc::Context","classes/RDoc/Context.html#M000196","(min_visibility)","Removes methods and attributes with a visibility less than +min_visibility+. ",2],["remove_nodoc","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000898","(all_hash)","Removes from +all_hash+ the contexts that are nodoc or have no content. See RDoc::Context#remove_from_documentation?",2],["remove_nodoc_children","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000076","()","Updates the child modules or classes of class/module +parent+ by deleting the ones that have been removed",2],["remove_private","RDoc::Comment","classes/RDoc/Comment.html#M000092","()","Removes private sections from this comment.  Private sections are flush to the comment marker and start",2],["remove_private_comment","RDoc::Parser::Simple","classes/RDoc/Parser/Simple.html#M000629","(comment)","Removes private comments. Unlike RDoc::Comment#remove_private this implementation only looks for two",2],["remove_private_comments","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000683","(comment)","Removes private comments from +comment+ ",2],["remove_siginfo_handler","RDoc::Generator::RI","classes/RDoc/Generator/RI.html#M000230","()","Removes a siginfo handler and replaces the previous ",2],["remove_siginfo_handler","RDoc::RDoc","classes/RDoc/RDoc.html#M000707","()","Removes a siginfo handler and replaces the previous ",2],["remove_token_listener","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000615","(obj)","Removes the token listener +obj+ ",2],["remove_unparseable","RDoc::RDoc","classes/RDoc/RDoc.html#M000704","(files)","Removes file extensions known to be unparseable from +files+ and TAGS files for emacs and vim. ",2],["render","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000185","(file_name)","Renders the ERb contained in +file_name+ relative to the template directory and returns the result based",2],["render_template","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000186","(template_file, out_file)","Load and render the erb template in the given +template_file+ and write it out to +out_file+. Both +template_file+",2],["report","RDoc::Stats","classes/RDoc/Stats.html#M000832","()","Returns a report on which items are not documented ",2],["report_attributes","RDoc::Stats","classes/RDoc/Stats.html#M000834","(cm)","Returns a report on undocumented attributes in ClassModule +cm+ ",2],["report_class_module","RDoc::Stats","classes/RDoc/Stats.html#M000835","(cm)","Returns a report on undocumented items in ClassModule +cm+ ",2],["report_constants","RDoc::Stats","classes/RDoc/Stats.html#M000843","(cm)","Returns a report on undocumented constants in ClassModule +cm+ ",2],["report_methods","RDoc::Stats","classes/RDoc/Stats.html#M000844","(cm)","Returns a report on undocumented methods in ClassModule +cm+ ",2],["rerdoc_task_description","RDoc::Task","classes/RDoc/Task.html#M000838","()","Task description for the rerdoc task or its renamed description ",2],["rerdoc_task_name","RDoc::Task","classes/RDoc/Task.html#M000842","()","",2],["reset","RDoc::Markup::PreProcess","classes/RDoc/Markup/PreProcess.html#M000378","()","Clears all registered directives and post-processors ",2],["reset","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000561","()","Resets cross-file state.  Call when parsing different projects that need separate documentation. ",2],["reset","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000616","()","Resets the tools ",2],["reset","RDoc::RDoc","classes/RDoc/RDoc.html#M000676","()","Resets all internal state ",2],["reset","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000899","()","Empties RDoc of stored class, module and file information ",2],["resolve","RDoc::CrossReference","classes/RDoc/CrossReference.html#M000111","(name, text)","Returns a reference to +name+. If the reference is found and +name+ is not documented +text+ will be",2],["resolve_aliases","RDoc::Context","classes/RDoc/Context.html#M000198","(added)","Tries to resolve unmatched aliases when a method or attribute has just been added. ",2],["ri_installed?","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000784","()","Is ri data installed? ",2],["ruby?","RDoc::Markup::Verbatim","classes/RDoc/Markup/Verbatim.html#M000509","()","Is this verbatim section ruby code? ",2],["run","RDoc::Gauntlet","classes/RDoc/Gauntlet.html#M000001","(name)","Runs an RDoc generator for gem +name+ ",2],["run","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000717","(argv = ARGV)","Runs the ri command line executable using +argv+ ",2],["run","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000773","()","Looks up and displays ri data according to the options given. ",2],["run_the_gauntlet","RDoc::Gauntlet","classes/RDoc/Gauntlet.html#M000002","(type = 'rdoc', filter = nil)","Runs the gauntlet with the given +type+ (rdoc or ri) and +filter+ for which gems to run ",2],["sanitize_path","RDoc::Options","classes/RDoc/Options.html#M000600","(path)","Removes directories from +path+ that are outside the current directory ",2],["save_cache","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000745","()","Writes the cache file for this store ",2],["save_class","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000747","(klass)","Writes the ri data for +klass+ ",2],["save_method","RDoc::RI::Store","classes/RDoc/RI/Store.html#M000752","(klass, method)","Writes the ri data for +method+ on +klass+ ",2],["scan","RDoc::Parser::C","classes/RDoc/Parser/C.html#M000607","()","Extracts the classes, modules, methods, attributes, constants and aliases from a C file and returns an",2],["scan","RDoc::Parser::RD","classes/RDoc/Parser/RD.html#M000608","()","Creates an rd-format TopLevel for the given file. ",2],["scan","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000684","()","Scans this ruby file for ruby constructs ",2],["scan","RDoc::Parser::Simple","classes/RDoc/Parser/Simple.html#M000626","()","Extract the file contents and attach them to the TopLevel as a comment ",2],["search_record","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000078","()","Search record used by RDoc::Generator::JsonIndex ",2],["search_record","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000546","()","Used by RDoc::Generator::JsonIndex to create a record for the search engine. ",2],["search_record","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000926","()","Search record used by RDoc::Generator::JsonIndex ",2],["search_string","RDoc::Generator::JsonIndex","classes/RDoc/Generator/JsonIndex.html#M000226","(string)","Removes whitespace and downcases +string+ ",2],["section_contents","RDoc::Context","classes/RDoc/Context.html#M000199","()","Returns RDoc::Context::Section objects referenced in this context for use in a table of contents. ",2],["sections","RDoc::Context","classes/RDoc/Context.html#M000200","()","Sections in this context ",2],["see","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000526","()","A method/attribute to look at, in particular if this method/attribute has no documentation. It can be",2],["sequence","RDoc::Context::Section","classes/RDoc/Context/Section.html#M000109","()","Section sequence number (deprecated) ",2],["set_attrs","RDoc::Markup::AttrSpan","classes/RDoc/Markup/AttrSpan.html#M000245","(start, length, bits)","Toggles +bits+ from +start+ to +length+ ",2],["set_current_section","RDoc::Context","classes/RDoc/Context.html#M000202","(title, comment)","Sets the current section to a section with +title+.  See also #add_section ",2],["set_encoding","RDoc::Encoding","classes/RDoc/Encoding.html#M000118","(string)","Sets the encoding of +string+ based on the magic comment ",2],["set_eoutvar","RDoc::ERBIO","classes/RDoc/ERBIO.html#M000121","(compiler, io_variable)","Instructs +compiler+ how to write to +io_variable+ ",2],["set_visibility_for","RDoc::Context","classes/RDoc/Context.html#M000203","(methods, visibility, singleton = false)","Given an array +methods+ of method names, set the visibility of each to +visibility+ ",2],["setup","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000290","()","Call #setup when inheriting from this test case. Provides the following instance variables: +@m+::  ",2],["setup","RDoc::RubygemsHook","classes/RDoc/RubygemsHook.html#M000785","()","Prepares the spec for documentation generation ",2],["setup","RDoc::TestCase","classes/RDoc/TestCase.html#M000847","()","Abstract test-case setup ",2],["setup_generator","RDoc::Options","classes/RDoc/Options.html#M000601","(generator_name = @generator_name)","Set up an output generator for the named +generator_name+. If the found generator responds to :setup_options",2],["setup_output_dir","RDoc::RDoc","classes/RDoc/RDoc.html#M000687","(dir, force)","Create an output dir if it doesn't exist. If it does exist, but doesn't contain the flag file <tt>created.rid</tt>",2],["setup_pager","RDoc::RI::Driver","classes/RDoc/RI/Driver.html#M000774","()","Sets up a pager program to pass output through.  Tries the RI_PAGER and PAGER environment variables followed",2],["signature","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000872","(comment)","Internal: Extracts the Signature section's method signature comment - An RDoc::Comment that will be parsed",2],["skip","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000389","(token_type, error = true)","Skips the next token if its type is +token_type+. Optionally raises an error if the next token is not",2],["skip_for_variable","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000690","()","skip the var [in] part of a 'for' statement ",2],["skip_method","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000691","(container)","Skips the next method in +container+ ",2],["skip_optional_do_after_expression","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000688","()","while, until, and for have an optional do ",2],["skip_tkspace","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000617","(skip_nl = true)","Skips whitespace tokens including newlines if +skip_nl+ is true ",2],["skip_tkspace_comment","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000694","(skip_nl = true)","Skip spaces until a comment is found ",2],["snippet","Object","classes/Object.html#M000865","(text, limit = 100)","The first +limit+ characters of +text+ as HTML ",2],["sort_sections","RDoc::Context","classes/RDoc/Context.html#M000204","()","Sorts sections alphabetically (default) or in TomDoc fasion (none, Public, Internal, Deprecated) ",2],["split_into_flow","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000276","()","Splits the string into chunks by attribute change ",2],["start_accepting","RDoc::Markup::ToAnsi","classes/RDoc/Markup/ToAnsi.html#M000419","()","Starts accepting with a reset screen ",2],["start_accepting","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000431","()","Prepares the visitor for HTML generation ",2],["start_accepting","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000466","()","Prepares the visitor for HTML snippet generation ",2],["start_accepting","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000500","()","Prepares the visitor for text generation ",2],["start_accepting","RDoc::Markup::ToTableOfContents","classes/RDoc/Markup/ToTableOfContents.html#M000491","()","Prepares the visitor for text generation ",2],["start_accepting","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000522","()","Prepares the visitor for gathering tt sections ",2],["start_collecting_tokens","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000857","()","Alias for #collect_tokens",2],["start_doc","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000062","()","Enable capture of documentation unless documentation has been turned off by :endoc: ",2],["stop_doc","RDoc::CodeObject","classes/RDoc/CodeObject.html#M000063","()","Disable capture of documentation ",2],["strip_hashes","Object","classes/Object.html#M000866","(text)","Strips leading # characters from +text+ ",2],["strip_newlines","Object","classes/Object.html#M000867","(text)","Strips leading and trailing \\n characters from +text+ ",2],["strip_stars","Object","classes/Object.html#M000868","(text)","Strips /* */ style comments ",2],["strscan","Object","classes/Object.html#M000850","","For RDoc::Text#to_html ",2],["summary","RDoc::Stats","classes/RDoc/Stats.html#M000845","()","Returns a summary of the collected statistics. ",2],["superclass","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000079","()","Get the superclass of this class.  Attempts to retrieve the superclass object, returns the name if it",2],["superclass","RDoc::NormalModule","classes/RDoc/NormalModule.html#M000560","()","Modules don't have one, raises NoMethodError ",2],["superclass=","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000080","(superclass)","Set the superclass of this class to +superclass+ ",2],["table_of_contents","RDoc::Markup::Document","classes/RDoc/Markup/Document.html#M000273","()","Returns an Array of headings in the document. Require 'rdoc/markup/formatter' before calling this method.",2],["temp_dir","RDoc::TestCase","classes/RDoc/TestCase.html#M000849","()","Creates a temporary directory changes the current directory to it for the duration of the block. Depends",2],["template_dir_for","RDoc::Options","classes/RDoc/Options.html#M000602","(template)","Finds the template dir for +template+ ",2],["template_for","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000189","(file, page = true, klass = nil)","Retrieves a cache template for +file+, if present, or fills the cache. ",2],["template_result","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000187","(template, context, template_file)","Creates the result for +template+ with +context+.  If an error is raised a Pathname +template_file+ will",2],["test_accept_blank_line","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000296","()","Calls accept_blank_line ",2],["test_accept_document","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000297","()","Test case that calls <tt>@to.accept_document</tt> ",2],["test_accept_heading","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000302","()","Calls accept_heading with a level 5 RDoc::Markup::Heading ",2],["test_accept_heading_1","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000303","()","Calls accept_heading_1 with a level 1 RDoc::Markup::Heading ",2],["test_accept_heading_2","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000304","()","Calls accept_heading_2 with a level 2 RDoc::Markup::Heading ",2],["test_accept_heading_3","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000306","()","Calls accept_heading_3 with a level 3 RDoc::Markup::Heading ",2],["test_accept_heading_4","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000307","()","Calls accept_heading_4 with a level 4 RDoc::Markup::Heading ",2],["test_accept_heading_b","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000308","()","Calls accept_heading_b with a bold level 1 RDoc::Markup::Heading ",2],["test_accept_heading_indent","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000408","()","Test case that calls <tt>@to.accept_heading</tt> ",2],["test_accept_heading_suppressed_crossref","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000309","()","Calls accept_heading_suppressed_crossref with a level 1 RDoc::Markup::Heading containing a suppressed",2],["test_accept_list_end_bullet","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000344","()","Calls accept_list_end_bullet ",2],["test_accept_list_end_label","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000345","()","Calls accept_list_end_label ",2],["test_accept_list_end_lalpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000346","()","Calls accept_list_end_lalpha ",2],["test_accept_list_end_note","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000348","()","Calls accept_list_end_note ",2],["test_accept_list_end_number","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000347","()","Calls accept_list_end_number ",2],["test_accept_list_end_ualpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000349","()","Calls accept_list_end_ulpha ",2],["test_accept_list_item_end_bullet","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000329","()","Calls accept_list_item_end_bullet ",2],["test_accept_list_item_end_label","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000330","()","Calls accept_list_item_end_label ",2],["test_accept_list_item_end_lalpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000331","()","Calls accept_list_item_end_lalpha ",2],["test_accept_list_item_end_note","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000332","()","Calls accept_list_item_end_note ",2],["test_accept_list_item_end_number","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000333","()","Calls accept_list_item_end_number ",2],["test_accept_list_item_end_ualpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000334","()","Calls accept_list_item_end_ualpha ",2],["test_accept_list_item_start_bullet","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000321","()","Calls accept_list_item_start_bullet ",2],["test_accept_list_item_start_label","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000323","()","Calls accept_list_item_start_label ",2],["test_accept_list_item_start_lalpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000324","()","Calls accept_list_item_start_lalpha ",2],["test_accept_list_item_start_note","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000325","()","Calls accept_list_item_start_note ",2],["test_accept_list_item_start_note_2","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000326","()","Calls accept_list_item_start_note_2 ",2],["test_accept_list_item_start_number","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000327","()","Calls accept_list_item_start_number ",2],["test_accept_list_item_start_ualpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000328","()","Calls accept_list_item_start_ualpha ",2],["test_accept_list_start_bullet","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000335","()","Calls accept_list_start_bullet ",2],["test_accept_list_start_label","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000336","()","Calls accept_list_start_label ",2],["test_accept_list_start_lalpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000340","()","Calls accept_list_start_lalpha ",2],["test_accept_list_start_note","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000341","()","Calls accept_list_start_note ",2],["test_accept_list_start_number","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000342","()","Calls accept_list_start_number ",2],["test_accept_list_start_ualpha","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000343","()","Calls accept_list_start_ualpha ",2],["test_accept_paragraph","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000310","()","Calls accept_paragraph ",2],["test_accept_paragraph_b","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000311","()","Calls accept_paragraph_b with a RDoc::Markup::Paragraph containing bold words ",2],["test_accept_paragraph_i","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000312","()","Calls accept_paragraph_i with a RDoc::Markup::Paragraph containing emphasized words ",2],["test_accept_paragraph_indent","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000415","()","Test case that calls <tt>@to.accept_paragraph</tt> with an indent ",2],["test_accept_paragraph_plus","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000313","()","Calls accept_paragraph_plus with a RDoc::Markup::Paragraph containing teletype words ",2],["test_accept_paragraph_star","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000314","()","Calls accept_paragraph_star with a RDoc::Markup::Paragraph containing bold words ",2],["test_accept_paragraph_underscore","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000315","()","Calls accept_paragraph_underscore with a RDoc::Markup::Paragraph containing emphasized words ",2],["test_accept_paragraph_wrap","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000416","()","Test case that calls <tt>@to.accept_paragraph</tt> with a long line ",2],["test_accept_raw","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000317","()","Calls accept_raw with a RDoc::Markup::Raw ",2],["test_accept_rule","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000320","()","Calls accept_rule with a RDoc::Markup::Rule ",2],["test_accept_rule_indent","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000411","()","Test case that calls <tt>@to.accept_rule</tt> ",2],["test_accept_verbatim","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000316","()","Calls accept_verbatim with a RDoc::Markup::Verbatim ",2],["test_accept_verbatim_big_indent","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000414","()","Test case that calls <tt>@to.accept_verbatim</tt> with a big indent ",2],["test_accept_verbatim_indent","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000412","()","Test case that calls <tt>@to.accept_verbatim</tt> ",2],["test_attributes","RDoc::Markup::TextFormatterTestCase","classes/RDoc/Markup/TextFormatterTestCase.html#M000418","()","Test case that calls <tt>@to.attributes</tt> with an escaped cross-reference.  If this test doesn't pass",2],["test_end_accepting","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000293","()","Calls end_accepting on your test case which needs to call <tt>@to.end_accepting</tt> and verify document",2],["test_list_nested","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000350","()","Calls list_nested with a two-level list ",2],["test_list_verbatim","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000351","()","Calls list_verbatim with a list containing a verbatim block ",2],["test_start_accepting","RDoc::Markup::FormatterTestCase","classes/RDoc/Markup/FormatterTestCase.html#M000292","()","Calls start_accepting which needs to verify startup state ",2],["text","RDoc::Markup::Raw","classes/RDoc/Markup/Raw.html#M000398","()","The raw text ",2],["text","RDoc::Markup::Verbatim","classes/RDoc/Markup/Verbatim.html#M000518","()","The text of the section ",2],["text=","RDoc::Comment","classes/RDoc/Comment.html#M000093","(text)","Replaces this comment's text with +text+ and resets the parsed document. An error is raised if the comment",2],["text?","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000927","()","Is this TopLevel from a text file instead of a source code file? ",2],["time_delta_string","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000176","(seconds)","Return a string describing the amount of time in the given number of seconds in terms a human can understand",2],["to_html","Object","classes/Object.html#M000870","(text)","Converts ampersand, dashes, ellipsis, quotes, copyright and registered trademark symbols in +text+ to",2],["to_html","RDoc::Markup::Heading","classes/RDoc/Markup/Heading.html#M000295","()","A singleton plain HTML formatter for headings.  Used for creating labels for the Table of Contents ",2],["to_html","RDoc::Markup::ToHtml","classes/RDoc/Markup/ToHtml.html#M000457","(item)","Converts +item+ to HTML using RDoc::Text#to_html ",2],["to_html","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000851","(token_stream)","Converts +token_stream+ to HTML wrapping various tokens with <tt><span></tt> elements.  The following",2],["to_label","RDoc::Markup::Heading","classes/RDoc/Markup/Heading.html#M000294","()","A singleton RDoc::Markup::ToLabel formatter for headings. ",2],["to_toc","RDoc::Markup::ToTableOfContents","classes/RDoc/Markup/ToTableOfContents.html#M000488","()","Singleton for ToC generation ",2],["token_listener","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000618","(obj)","Has +obj+ listen to tokens ",2],["token_pos","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000399","(offset)","Calculates the column and line of the current token based on +offset+. ",2],["token_stream","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000860","()","Current token stream ",2],["tokenize","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000390","(input)","Turns text +input+ into a stream of tokens ",2],["tokenize","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000370","(str)","Returns a token stream for +str+, for testing ",2],["tokenize","RDoc::RubyLex","classes/RDoc/RubyLex.html#M000769","(ruby, options)","Returns an Array of +ruby+ tokens.  See ::new for a description of +options+. ",2],["tokenize","RDoc::TomDoc","classes/RDoc/TomDoc.html#M000877","(text)","Internal: Turns text into an Array of tokens text - A String containing TomDoc-format text. Returns self.",2],["tokens_to_s","RDoc::TokenStream","classes/RDoc/TokenStream.html#M000861","()","Returns a string representation of the token stream ",2],["tomdoc?","RDoc::Comment","classes/RDoc/Comment.html#M000094","()","Returns true if this comment is in TomDoc format. ",2],["top_level","RDoc::Context","classes/RDoc/Context.html#M000206","()","Return the TopLevel that owns us ",2],["top_level","RDoc::Require","classes/RDoc/Require.html#M000703","()","The RDoc::TopLevel corresponding to this require, or +nil+ if not found. ",2],["truncate","RDoc::Markup::ToHtmlSnippet","classes/RDoc/Markup/ToHtmlSnippet.html#M000479","(text)","Truncates +text+ at the end of the first word after the character_limit. ",2],["tt?","RDoc::Markup::Formatter","classes/RDoc/Markup/Formatter.html#M000289","(tag)","Is +tag+ a tt tag? ",2],["tt_sections","RDoc::Markup::ToTtOnly","classes/RDoc/Markup/ToTtOnly.html#M000520","(text)","Extracts tt sections from +text+ ",2],["type","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000082","()","'module' or 'class' ",2],["type","RDoc::MethodAttr","classes/RDoc/MethodAttr.html#M000538","()","Type of method/attribute (class or instance) ",2],["undoc_params","RDoc::Stats","classes/RDoc/Stats.html#M000846","(method)","Determines which parameters in +method+ were not documented.  Returns a total parameter count and an",2],["unget","RDoc::Markup::Parser","classes/RDoc/Markup/Parser.html#M000400","()","Returns the current token to the token stream ",2],["unget_tk","RDoc::Parser::RubyTools","classes/RDoc/Parser/RubyTools.html#M000620","(tk)","Returns +tk+ to the scanner ",2],["unique_classes","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000900","()","Returns the unique classes discovered by RDoc. ::complete must have been called prior to using this method.",2],["unique_classes_and_modules","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000901","()","Returns the unique classes and modules discovered by RDoc. ::complete must have been called prior to",2],["unique_modules","RDoc::TopLevel","classes/RDoc/TopLevel.html#M000902","()","Returns the unique modules discovered by RDoc. ::complete must have been called prior to using this method.",2],["unmask_protected_sequences","RDoc::Markup::AttributeManager","classes/RDoc/Markup/AttributeManager.html#M000266","()","Unescapes special sequences of text ",2],["update_aliases","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000083","()","Updates the child modules & classes by replacing the ones that are aliases through a constant. The aliased",2],["update_includes","RDoc::ClassModule","classes/RDoc/ClassModule.html#M000091","()","Deletes from #includes those whose module has been removed from the documentation. ",2],["update_output_dir","RDoc::RDoc","classes/RDoc/RDoc.html#M000689","(op_dir, time, last = {})","Update the flag file in an output directory. ",2],["upgrade_to_class","RDoc::Context","classes/RDoc/Context.html#M000207","(mod, class_type, enclosing)","Upgrades NormalModule +mod+ in +enclosing+ to a +class_type+ ",2],["use_markup","RDoc::Parser","classes/RDoc/Parser.html#M000649","(content)","If there is a <tt>markup: parser_name</tt> comment at the front of the file, use it to determine the",2],["use_prefix","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000501","()","Adds the stored #prefix to the output and clears it.  Lists generate a prefix for later consumption.",2],["warn","RDoc::Options","classes/RDoc/Options.html#M000604","(message)","Displays a warning using Kernel#warn if we're being verbose ",2],["warn","RDoc::Parser::Ruby","classes/RDoc/Parser/Ruby.html#M000695","(message)","Prints +message+ to +$stderr+ unless we're being quiet ",2],["wrap","Object","classes/Object.html#M000878","(txt, line_len = 76)","Wraps +txt+ to +line_len+ ",2],["wrap","RDoc::Markup::ToRdoc","classes/RDoc/Markup/ToRdoc.html#M000502","(text)","Wraps +text+ to #width ",2],["write_options","RDoc::Options","classes/RDoc/Options.html#M000605","()","Writes the YAML file .rdoc_options to the current directory containing the parsed options. ",2],["write_style_sheet","RDoc::Generator::Darkfish","classes/RDoc/Generator/Darkfish.html#M000136","()","Copy over the stylesheet into the appropriate place in the output directory. ",2],["zip?","RDoc::Parser","classes/RDoc/Parser.html#M000645","(file)","Checks if +file+ is a zip file in disguise.  Signatures from http://www.garykessler.net/library/file_sigs.html",2],["DEVELOPERS.rdoc","files/DEVELOPERS_rdoc.html","files/DEVELOPERS_rdoc.html","","= Developer Introduction  So you want to write a generator, fix a bug, or otherwise work with RDoc. ",3],["History.rdoc","files/History_rdoc.html","files/History_rdoc.html","","=== 3.12 / 2011-12-15  * Minor enhancements   * Added DEVELOPERS document which contains an overview",3],["LEGAL.rdoc","files/LEGAL_rdoc.html","files/LEGAL_rdoc.html","","# coding: UTF-8  = Legal Notice Information  The files in this distribution are covered by the Ruby license",3],["LICENSE.rdoc","files/LICENSE_rdoc.html","files/LICENSE_rdoc.html","","RDoc is copyrighted free software.  You can redistribute it and/or modify it under either the terms of",3],["Manifest.txt","files/Manifest_txt.html","files/Manifest_txt.html","",".autotest .document DEVELOPERS.rdoc History.rdoc LEGAL.rdoc LICENSE.rdoc Manifest.txt README.rdoc RI.rdoc",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= \\RDoc - Ruby Documentation System  home :: https://github.com/rdoc/rdoc rdoc :: http://docs.seattlerb.org/rdoc",3],["RI.rdoc","files/RI_rdoc.html","files/RI_rdoc.html","","= RI  +ri+ is a tool that allows Ruby documentation to be viewed on the command-line.  You can use +ri+",3],["Rakefile","files/Rakefile.html","files/Rakefile.html","","$:.unshift File.expand_path 'lib' require 'rdoc' require 'hoe'  ENV['BENCHMARK'] = 'yes'  task :docs",3],["TODO.rdoc","files/TODO_rdoc.html","files/TODO_rdoc.html","","This file contains some things that might happen in RDoc, or might not. Forward Looking Statements applies.",3],["gauntlet_rdoc.rb","files/lib/gauntlet_rdoc_rb.html","files/lib/gauntlet_rdoc_rb.html","","",3],["rdoc.rb","files/lib/rdoc_rb.html","files/lib/rdoc_rb.html","","",3],["alias.rb","files/lib/rdoc/alias_rb.html","files/lib/rdoc/alias_rb.html","","Represent an alias, which is an old_name/new_name pair associated with a particular context ",3],["anon_class.rb","files/lib/rdoc/anon_class_rb.html","files/lib/rdoc/anon_class_rb.html","","An anonymous class like: c = Class.new do end AnonClass is currently not used. ",3],["any_method.rb","files/lib/rdoc/any_method_rb.html","files/lib/rdoc/any_method_rb.html","","AnyMethod is the base class for objects representing methods ",3],["attr.rb","files/lib/rdoc/attr_rb.html","files/lib/rdoc/attr_rb.html","","An attribute created by \\#attr, \\#attr_reader, \\#attr_writer or \\#attr_accessor ",3],["class_module.rb","files/lib/rdoc/class_module_rb.html","files/lib/rdoc/class_module_rb.html","","ClassModule is the base class for objects representing either a class or a module. ",3],["code_object.rb","files/lib/rdoc/code_object_rb.html","files/lib/rdoc/code_object_rb.html","","Base class for the RDoc code tree. We contain the common stuff for contexts (which are containers) and",3],["code_objects.rb","files/lib/rdoc/code_objects_rb.html","files/lib/rdoc/code_objects_rb.html","","This file was used to load all the RDoc::CodeObject subclasses at once.  Now autoload handles this. ",3],["comment.rb","files/lib/rdoc/comment_rb.html","files/lib/rdoc/comment_rb.html","","A comment holds the text comment for a RDoc::CodeObject and provides a unified way of cleaning it up",3],["constant.rb","files/lib/rdoc/constant_rb.html","files/lib/rdoc/constant_rb.html","","A constant ",3],["context.rb","files/lib/rdoc/context_rb.html","files/lib/rdoc/context_rb.html","","",3],["section.rb","files/lib/rdoc/context/section_rb.html","files/lib/rdoc/context/section_rb.html","","A section of documentation like: # :section: The title # The body Sections can be referenced multiple",3],["cross_reference.rb","files/lib/rdoc/cross_reference_rb.html","files/lib/rdoc/cross_reference_rb.html","","RDoc::CrossReference is a reusable way to create cross references for names. ",3],["encoding.rb","files/lib/rdoc/encoding_rb.html","files/lib/rdoc/encoding_rb.html","","coding: US-ASCII ",3],["erbio.rb","files/lib/rdoc/erbio_rb.html","files/lib/rdoc/erbio_rb.html","","",3],["generator.rb","files/lib/rdoc/generator_rb.html","files/lib/rdoc/generator_rb.html","","RDoc uses generators to turn parsed source code in the form of an RDoc::CodeObject tree into some form",3],["darkfish.rb","files/lib/rdoc/generator/darkfish_rb.html","files/lib/rdoc/generator/darkfish_rb.html","","",3],["json_index.rb","files/lib/rdoc/generator/json_index_rb.html","files/lib/rdoc/generator/json_index_rb.html","","",3],["markup.rb","files/lib/rdoc/generator/markup_rb.html","files/lib/rdoc/generator/markup_rb.html","","Handle common RDoc::Markup tasks for various CodeObjects This module is loaded by generators.  It allows",3],["ri.rb","files/lib/rdoc/generator/ri_rb.html","files/lib/rdoc/generator/ri_rb.html","","Generates ri data files ",3],["navigation.js","files/lib/rdoc/generator/template/json_index/js/navigation_js.html","files/lib/rdoc/generator/template/json_index/js/navigation_js.html","","/*  * Navigation allows movement using the arrow keys through the search results.  *  * When using this",3],["searcher.js","files/lib/rdoc/generator/template/json_index/js/searcher_js.html","files/lib/rdoc/generator/template/json_index/js/searcher_js.html","","Searcher = function(data) {   this.data = data;   this.handlers = []; }  Searcher.prototype = new function()",3],["ghost_method.rb","files/lib/rdoc/ghost_method_rb.html","files/lib/rdoc/ghost_method_rb.html","","GhostMethod represents a method referenced only by a comment ",3],["include.rb","files/lib/rdoc/include_rb.html","files/lib/rdoc/include_rb.html","","A Module include in a class with \\#include ",3],["known_classes.rb","files/lib/rdoc/known_classes_rb.html","files/lib/rdoc/known_classes_rb.html","","",3],["markup.rb","files/lib/rdoc/markup_rb.html","files/lib/rdoc/markup_rb.html","","RDoc::Markup parses plain text documents and attempts to decompose them into their constituent parts.",3],["attr_changer.rb","files/lib/rdoc/markup/attr_changer_rb.html","files/lib/rdoc/markup/attr_changer_rb.html","","",3],["attr_span.rb","files/lib/rdoc/markup/attr_span_rb.html","files/lib/rdoc/markup/attr_span_rb.html","","An array of attributes which parallels the characters in a string. ",3],["attribute.rb","files/lib/rdoc/markup/attribute_rb.html","files/lib/rdoc/markup/attribute_rb.html","","We manage a set of attributes. Each attribute has a symbol name and a bit value. ",3],["attribute_manager.rb","files/lib/rdoc/markup/attribute_manager_rb.html","files/lib/rdoc/markup/attribute_manager_rb.html","","Manages changes of attributes in a block of text ",3],["blank_line.rb","files/lib/rdoc/markup/blank_line_rb.html","files/lib/rdoc/markup/blank_line_rb.html","","An empty line.  This class is a singleton. ",3],["document.rb","files/lib/rdoc/markup/document_rb.html","files/lib/rdoc/markup/document_rb.html","","A Document containing lists, headings, paragraphs, etc. ",3],["formatter.rb","files/lib/rdoc/markup/formatter_rb.html","files/lib/rdoc/markup/formatter_rb.html","","Base class for RDoc markup formatters Formatters are a visitor that converts an RDoc::Markup tree (from",3],["formatter_test_case.rb","files/lib/rdoc/markup/formatter_test_case_rb.html","files/lib/rdoc/markup/formatter_test_case_rb.html","","",3],["heading.rb","files/lib/rdoc/markup/heading_rb.html","files/lib/rdoc/markup/heading_rb.html","","A heading with a level (1-6) and text ",3],["include.rb","files/lib/rdoc/markup/include_rb.html","files/lib/rdoc/markup/include_rb.html","","A file included at generation time.  Objects of this class are created by RDoc::RD for an extension-less",3],["indented_paragraph.rb","files/lib/rdoc/markup/indented_paragraph_rb.html","files/lib/rdoc/markup/indented_paragraph_rb.html","","An Indented Paragraph of text ",3],["inline.rb","files/lib/rdoc/markup/inline_rb.html","files/lib/rdoc/markup/inline_rb.html","","",3],["list.rb","files/lib/rdoc/markup/list_rb.html","files/lib/rdoc/markup/list_rb.html","","A List of ListItems ",3],["list_item.rb","files/lib/rdoc/markup/list_item_rb.html","files/lib/rdoc/markup/list_item_rb.html","","An item within a List that contains paragraphs, headings, etc. ",3],["paragraph.rb","files/lib/rdoc/markup/paragraph_rb.html","files/lib/rdoc/markup/paragraph_rb.html","","A Paragraph of text ",3],["parser.rb","files/lib/rdoc/markup/parser_rb.html","files/lib/rdoc/markup/parser_rb.html","","",3],["pre_process.rb","files/lib/rdoc/markup/pre_process_rb.html","files/lib/rdoc/markup/pre_process_rb.html","","Handle common directives that can occur in a block of text: \\:include: filename Directives can be escaped",3],["raw.rb","files/lib/rdoc/markup/raw_rb.html","files/lib/rdoc/markup/raw_rb.html","","A section of text that is added to the output document as-is ",3],["rule.rb","files/lib/rdoc/markup/rule_rb.html","files/lib/rdoc/markup/rule_rb.html","","A horizontal rule with a weight ",3],["special.rb","files/lib/rdoc/markup/special_rb.html","files/lib/rdoc/markup/special_rb.html","","Hold details of a special sequence ",3],["text_formatter_test_case.rb","files/lib/rdoc/markup/text_formatter_test_case_rb.html","files/lib/rdoc/markup/text_formatter_test_case_rb.html","","Test case for creating new plain-text RDoc::Markup formatters.  See also RDoc::Markup::FormatterTestCase",3],["to_ansi.rb","files/lib/rdoc/markup/to_ansi_rb.html","files/lib/rdoc/markup/to_ansi_rb.html","","Outputs RDoc markup with vibrant ANSI color! ",3],["to_bs.rb","files/lib/rdoc/markup/to_bs_rb.html","files/lib/rdoc/markup/to_bs_rb.html","","Outputs RDoc markup with hot backspace action!  You will probably need a pager to use this output format.",3],["to_html.rb","files/lib/rdoc/markup/to_html_rb.html","files/lib/rdoc/markup/to_html_rb.html","","",3],["to_html_crossref.rb","files/lib/rdoc/markup/to_html_crossref_rb.html","files/lib/rdoc/markup/to_html_crossref_rb.html","","Subclass of the RDoc::Markup::ToHtml class that supports looking up method names, classes, etc to create",3],["to_html_snippet.rb","files/lib/rdoc/markup/to_html_snippet_rb.html","files/lib/rdoc/markup/to_html_snippet_rb.html","","Outputs RDoc markup as paragraphs with inline markup only. ",3],["to_label.rb","files/lib/rdoc/markup/to_label_rb.html","files/lib/rdoc/markup/to_label_rb.html","","",3],["to_rdoc.rb","files/lib/rdoc/markup/to_rdoc_rb.html","files/lib/rdoc/markup/to_rdoc_rb.html","","Outputs RDoc markup as RDoc markup! (mostly) ",3],["to_table_of_contents.rb","files/lib/rdoc/markup/to_table_of_contents_rb.html","files/lib/rdoc/markup/to_table_of_contents_rb.html","","Extracts just the RDoc::Markup::Heading elements from a RDoc::Markup::Document to help build a table",3],["to_test.rb","files/lib/rdoc/markup/to_test_rb.html","files/lib/rdoc/markup/to_test_rb.html","","This Markup outputter is used for testing purposes. ",3],["to_tt_only.rb","files/lib/rdoc/markup/to_tt_only_rb.html","files/lib/rdoc/markup/to_tt_only_rb.html","","Extracts sections of text enclosed in plus, tt or code.  Used to discover undocumented parameters. ",3],["verbatim.rb","files/lib/rdoc/markup/verbatim_rb.html","files/lib/rdoc/markup/verbatim_rb.html","","A section of verbatim text ",3],["meta_method.rb","files/lib/rdoc/meta_method_rb.html","files/lib/rdoc/meta_method_rb.html","","MetaMethod represents a meta-programmed method ",3],["method_attr.rb","files/lib/rdoc/method_attr_rb.html","files/lib/rdoc/method_attr_rb.html","","Abstract class representing either a method or an attribute. ",3],["normal_class.rb","files/lib/rdoc/normal_class_rb.html","files/lib/rdoc/normal_class_rb.html","","A normal class, neither singleton nor anonymous ",3],["normal_module.rb","files/lib/rdoc/normal_module_rb.html","files/lib/rdoc/normal_module_rb.html","","A normal module, like NormalClass ",3],["options.rb","files/lib/rdoc/options_rb.html","files/lib/rdoc/options_rb.html","","",3],["parser.rb","files/lib/rdoc/parser_rb.html","files/lib/rdoc/parser_rb.html","","A parser is simple a class that subclasses RDoc::Parser and implements #scan to fill in an RDoc::TopLevel",3],["c.rb","files/lib/rdoc/parser/c_rb.html","files/lib/rdoc/parser/c_rb.html","","RDoc::Parser::C attempts to parse C extension files.  It looks for the standard patterns that you find",3],["rd.rb","files/lib/rdoc/parser/rd_rb.html","files/lib/rdoc/parser/rd_rb.html","","Parse a RD format file.  The parsed RDoc::Markup::Document is attached as a file comment. ",3],["ruby.rb","files/lib/rdoc/parser/ruby_rb.html","files/lib/rdoc/parser/ruby_rb.html","","This file contains stuff stolen outright from: rtags.rb - ruby-lex.rb - ruby lexcal analyzer ruby-token.rb",3],["ruby_tools.rb","files/lib/rdoc/parser/ruby_tools_rb.html","files/lib/rdoc/parser/ruby_tools_rb.html","","Collection of methods for writing parsers against RDoc::RubyLex and RDoc::RubyToken ",3],["simple.rb","files/lib/rdoc/parser/simple_rb.html","files/lib/rdoc/parser/simple_rb.html","","Parse a non-source file. We basically take the whole thing as one big comment. ",3],["text.rb","files/lib/rdoc/parser/text_rb.html","files/lib/rdoc/parser/text_rb.html","","Indicates this parser is text and doesn't contain code constructs. Include this module in a RDoc::Parser",3],["rd.rb","files/lib/rdoc/rd_rb.html","files/lib/rdoc/rd_rb.html","","RDoc::RD implements the RD format from the rdtool gem. = LICENSE The grammar that produces RDoc::RD::BlockParser",3],["block_parser.ry","files/lib/rdoc/rd/block_parser_ry.html","files/lib/rdoc/rd/block_parser_ry.html","","class BlockParser    preclow     nonassoc DUMMY     left     ITEMLISTLINE              ENUMLISTLINE ",3],["inline.rb","files/lib/rdoc/rd/inline_rb.html","files/lib/rdoc/rd/inline_rb.html","","Inline keeps track of markup and labels to create proper links. ",3],["inline_parser.ry","files/lib/rdoc/rd/inline_parser_ry.html","files/lib/rdoc/rd/inline_parser_ry.html","","class InlineParser    preclow     nonassoc EX_LOW     left QUOTE          BAR          SLASH        ",3],["rdoc.rb","files/lib/rdoc/rdoc_rb.html","files/lib/rdoc/rdoc_rb.html","","",3],["require.rb","files/lib/rdoc/require_rb.html","files/lib/rdoc/require_rb.html","","A file loaded by \\#require ",3],["ri.rb","files/lib/rdoc/ri_rb.html","files/lib/rdoc/ri_rb.html","","",3],["driver.rb","files/lib/rdoc/ri/driver_rb.html","files/lib/rdoc/ri/driver_rb.html","","",3],["formatter.rb","files/lib/rdoc/ri/formatter_rb.html","files/lib/rdoc/ri/formatter_rb.html","","For RubyGems backwards compatibility ",3],["paths.rb","files/lib/rdoc/ri/paths_rb.html","files/lib/rdoc/ri/paths_rb.html","","",3],["store.rb","files/lib/rdoc/ri/store_rb.html","files/lib/rdoc/ri/store_rb.html","","",3],["ruby_lex.rb","files/lib/rdoc/ruby_lex_rb.html","files/lib/rdoc/ruby_lex_rb.html","","coding: US-ASCII ",3],["ruby_token.rb","files/lib/rdoc/ruby_token_rb.html","files/lib/rdoc/ruby_token_rb.html","","Definitions of all tokens involved in the lexical analysis. This class is not documented because it is",3],["rubygems_hook.rb","files/lib/rdoc/rubygems_hook_rb.html","files/lib/rdoc/rubygems_hook_rb.html","","",3],["single_class.rb","files/lib/rdoc/single_class_rb.html","files/lib/rdoc/single_class_rb.html","","A singleton class ",3],["stats.rb","files/lib/rdoc/stats_rb.html","files/lib/rdoc/stats_rb.html","","RDoc statistics collector which prints a summary and report of a project's documentation totals. ",3],["normal.rb","files/lib/rdoc/stats/normal_rb.html","files/lib/rdoc/stats/normal_rb.html","","Stats printer that prints just the files being documented with a progress bar ",3],["quiet.rb","files/lib/rdoc/stats/quiet_rb.html","files/lib/rdoc/stats/quiet_rb.html","","Stats printer that prints nothing ",3],["verbose.rb","files/lib/rdoc/stats/verbose_rb.html","files/lib/rdoc/stats/verbose_rb.html","","Stats printer that prints everything documented, including the documented status ",3],["task.rb","files/lib/rdoc/task_rb.html","files/lib/rdoc/task_rb.html",""," ",3],["test_case.rb","files/lib/rdoc/test_case_rb.html","files/lib/rdoc/test_case_rb.html","","",3],["text.rb","files/lib/rdoc/text_rb.html","files/lib/rdoc/text_rb.html","","coding: utf-8 ",3],["token_stream.rb","files/lib/rdoc/token_stream_rb.html","files/lib/rdoc/token_stream_rb.html","","A TokenStream is a list of tokens, gathered during the parse of some entity (say a method). Entities",3],["tom_doc.rb","files/lib/rdoc/tom_doc_rb.html","files/lib/rdoc/tom_doc_rb.html","",":markup: tomdoc ",3],["top_level.rb","files/lib/rdoc/top_level_rb.html","files/lib/rdoc/top_level_rb.html","","A TopLevel context is a representation of the contents of a single file ",3]],"searchIndex":["object","rdoc","alias","anonclass","anymethod","attr","classmodule","codeobject","comment","constant","context","section","crossreference","erbio","encoding","error","gauntlet","generator","darkfish","jsonindex","markup","ri","ghostmethod","include","markup","attrchanger","attrspan","attribute","attributemanager","blankline","document","formatter","formattertestcase","heading","include","indentedparagraph","list","listitem","paragraph","parser","error","parseerror","preprocess","raw","rule","special","textformattertestcase","toansi","tobs","tohtml","tohtmlcrossref","tohtmlsnippet","tolabel","tordoc","totableofcontents","totest","tottonly","verbatim","metamethod","methodattr","normalclass","normalmodule","options","parser","c","rd","ruby","rubytools","simple","text","rd","inline","rdoc","ri","driver","error","notfounderror","error","paths","store","require","rubylex","error","rubytoken","rubygemshook","singleclass","stats","normal","quiet","verbose","task","testcase","text","tokenstream","tomdoc","toplevel","<<()","<<()","<<()","<<()","<=>()","<=>()","<=>()","<=>()","<=>()","==()","==()","==()","==()","==()","[]()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept()","accept_blank_line()","accept_blank_line()","accept_blank_line()","accept_document()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_heading()","accept_indented_paragraph()","accept_list_end()","accept_list_end()","accept_list_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_end()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_item_start()","accept_list_start()","accept_list_start()","accept_list_start()","accept_list_start()","accept_paragraph()","accept_paragraph()","accept_paragraph()","accept_paragraph()","accept_raw()","accept_raw()","accept_raw()","accept_rule()","accept_rule()","accept_rule()","accept_verbatim()","accept_verbatim()","accept_verbatim()","accept_verbatim()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_alias()","add_also_in()","add_attribute()","add_attribute()","add_class()","add_class()","add_class()","add_class_or_module()","add_comment()","add_constant()","add_constant()","add_constant()","add_file()","add_from()","add_generator()","add_html()","add_html()","add_include()","add_include()","add_includes()","add_line_numbers()","add_method()","add_method()","add_method()","add_method_list()","add_module()","add_module()","add_module_alias()","add_paragraph()","add_require()","add_section()","add_special()","add_special()","add_tag()","add_text_tests()","add_to()","add_to_classes_or_modules()","add_token()","add_token_listener()","add_tokens()","add_visitor_tests()","add_word_pair()","add_word_pair()","alias_extension()","all_classes()","all_classes_and_modules()","all_classes_hash()","all_files()","all_files_hash()","all_modules()","all_modules_hash()","ancestors()","ancestors()","ancestors()","ancestors()","ancestors_of()","annotate()","annotate()","any_content()","append()","aref()","aref()","aref()","aref()","aref_prefix()","aref_prefix()","aref_prefix()","aref_to()","arglists()","as_href()","as_string()","assemble_template()","attribute()","attributes()","attributes()","base_name()","before_running_rdoc()","begin_adding()","begin_adding()","binary?()","bitmap_for()","block_params=()","build_heading()","build_heading()","build_list()","build_paragraph()","build_paragraph()","build_verbatim()","build_verbatim()","cache_path()","calculate()","can_parse()","change_attribute()","changed_attribute_by_name()","check_files()","check_generator()","check_names()","child_name()","class_attributes()","class_dir()","class_dir()","class_document()","class_file()","class_method_list()","class_methods()","class_path()","classes()","classes()","classes_and_includes_for()","classes_and_modules()","classes_hash()","clear_comment()","clobber_task_description()","clobber_task_name()","collect_first_comment()","collect_tokens()","comment()","comment=()","comment=()","comment=()","complete()","complete()","complete()","convert()","convert()","convert()","convert()","convert_attrs()","convert_flow()","convert_flow()","convert_html()","convert_special()","convert_special()","convert_specials()","convert_string()","convert_string()","convert_string()","copy_static()","copy_string()","coverage_level=()","cross_reference()","current()","current=()","current_section()","cvs_url()","cvs_url()","debug_msg()","debug_msg()","default_options()","default_title=()","defaults()","define()","defined_in?()","definition()","definition()","definition()","definition()","delete_legacy_args()","description()","description()","display()","display?()","display?()","display_attributes()","display_class()","display_method()","display_name()","display_names()","do_aliases()","do_attrs()","do_classes()","do_constants()","do_includes()","do_methods()","do_nothing()","doc_stats()","document()","document()","document_children=()","document_self=()","document_self_or_methods()","documented?()","documented?()","documented?()","done_adding()","done_adding()","done_documenting=()","dump()","each()","each_ancestor()","each_attribute()","each_classmodule()","each_constant()","each_include()","each_method()","each_name_of()","each_parent()","each_section()","empty?()","empty?()","empty?()","empty?()","encode_fallback()","end_accepting()","end_accepting()","end_accepting()","end_accepting()","eql?()","error()","error()","expand_class()","expand_name()","expand_tabs()","extract_call_seq()","extract_comment()","file=()","file_dir()","file_dir()","file_name()","filter_methods()","find_alias_comment()","find_ancestor_local_symbol()","find_attr_comment()","find_attribute()","find_attribute_named()","find_body()","find_class()","find_class_comment()","find_class_method_named()","find_class_named()","find_class_named()","find_class_named_from()","find_class_or_module()","find_class_or_module()","find_const_comment()","find_constant_named()","find_enclosing_module_named()","find_external_alias()","find_external_alias_named()","find_file_named()","find_file_named()","find_include_file()","find_instance_method_named()","find_local_symbol()","find_local_symbol()","find_method()","find_method_named()","find_methods()","find_modifiers()","find_module_named()","find_module_named()","find_module_named()","find_override_comment()","find_symbol()","find_symbol_module()","find_unique()","finish()","fix_basic_object_inheritance()","flow()","flush_left()","for()","force_documentation=()","force_encoding()","format=()","formatter()","formatter()","friendly_path()","from_module()","full_name()","full_name()","full_name()","full_name()","full_name()","full_name=()","full_old_name()","fully_documented?()","fully_documented?()","gather_files()","gemdirs()","gen_relative_url()","gen_sub_directories()","gen_url()","gen_url()","gen_url()","generate()","generate()","generate()","generate()","generate()","generate_class_files()","generate_file_files()","generate_index()","generate_table_of_contents()","generation_hook()","generator_descriptions()","get()","get_bool()","get_class_or_module()","get_class_specification()","get_constant()","get_constant_with_optional_parens()","get_sorted_module_list()","get_svninfo()","get_symbol_or_name()","get_tk()","get_tk_until()","get_tkread()","great_job()","handle()","handle_attr()","handle_class_module()","handle_constants()","handle_directive()","handle_ifdefs_in()","handle_method()","handle_pipe()","handle_singleton()","handle_special_crossref()","handle_special_crossref()","handle_special_crossref()","handle_special_hyperlink()","handle_special_hyperlink()","handle_special_rdoclink()","handle_special_rdoclink()","handle_special_suppressed_crossref()","handle_special_tidylink()","handle_special_tidylink()","handle_tab_width()","hash()","html_list_name()","html_list_name()","html_name()","html_name()","http_url()","http_url()","ignore()","ignore()","ignored?()","in_path?()","in_tt?()","include_file()","index_classes()","index_methods()","index_pages()","init_tags()","init_tags()","init_tags()","init_tags()","initialize_methods_etc()","install_siginfo_handler()","install_siginfo_handler()","instance_attributes()","instance_method_list()","instance_methods()","interactive()","last()","last_modified()","length()","link()","list_end_for()","list_files_in_directory()","list_item_start()","list_item_start()","list_known_classes()","list_methods_matching()","load_cache()","load_class()","load_method()","load_method()","load_methods_matching()","load_options()","load_rdoc()","load_yaml()","look_for_directives_in()","look_for_directives_in()","make_message()","markup()","markup_code()","marshal_dump()","marshal_dump()","marshal_load()","marshal_load()","mask_protected_sequences()","merge()","merge()","merge()","merged?()","method_document()","method_file()","method_type()","methods_by_type()","methods_matching()","module()","module?()","module?()","modules()","modules()","modules_hash()","name()","name()","name=()","name_for_path()","name_for_path()","name_prefix()","name_prefix()","name_regexp()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_comment()","nodoc()","non_aliases()","normalize()","normalize()","normalize_comment()","normalized_file_list()","object_class()","off_tags()","off_tags()","on_tags()","on_tags()","ongoing_visibility=()","option_list()","output_flag_file()","output_name()","page()","page()","page_name()","paging?()","param_list()","param_seq()","parent_file_name()","parent_name()","parent_name()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","parse_alias()","parse_attr()","parse_attr_accessor()","parse_call_parameters()","parse_class()","parse_comment()","parse_comment_tomdoc()","parse_constant()","parse_dot_doc_file()","parse_file()","parse_files()","parse_files_matching()","parse_include()","parse_meta_attr()","parse_meta_method()","parse_method()","parse_method_or_yield_parameters()","parse_method_parameters()","parse_module()","parse_name()","parse_require()","parse_statements()","parse_symbol_arg()","parse_symbol_in_arg()","parse_top_level_statements()","parse_visibility()","parse_yield()","parseable?()","path()","path()","path()","path()","path()","peek_read()","peek_tk()","peek_token()","percent_doc()","plain_html()","plain_html()","pop_token()","post_process()","post_processors()","pretty_name()","pretty_name()","pretty_new_name()","pretty_old_name()","print_alias()","print_attribute()","print_class()","print_constant()","print_file()","print_file()","print_method()","print_module()","process_args()","process_directive()","push()","push()","push()","push()","quiet()","quiet=()","raw_path()","rb_scan_args()","rdoc/ri/formatter()","rdoc_installed?()","rdoc_target()","rdoc_task_description()","rdoc_task_name()","read_directive()","read_documentation_modifiers()","read_file()","record_location()","record_location()","register()","registered()","remove()","remove_coding_comment()","remove_commented_out_lines()","remove_from_documentation?()","remove_invisible()","remove_nodoc()","remove_nodoc_children()","remove_private()","remove_private_comment()","remove_private_comments()","remove_siginfo_handler()","remove_siginfo_handler()","remove_token_listener()","remove_unparseable()","render()","render_template()","report()","report_attributes()","report_class_module()","report_constants()","report_methods()","rerdoc_task_description()","rerdoc_task_name()","reset()","reset()","reset()","reset()","reset()","resolve()","resolve_aliases()","ri_installed?()","ruby?()","run()","run()","run()","run_the_gauntlet()","sanitize_path()","save_cache()","save_class()","save_method()","scan()","scan()","scan()","scan()","search_record()","search_record()","search_record()","search_string()","section_contents()","sections()","see()","sequence()","set_attrs()","set_current_section()","set_encoding()","set_eoutvar()","set_visibility_for()","setup()","setup()","setup()","setup_generator()","setup_output_dir()","setup_pager()","signature()","skip()","skip_for_variable()","skip_method()","skip_optional_do_after_expression()","skip_tkspace()","skip_tkspace_comment()","snippet()","sort_sections()","split_into_flow()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_accepting()","start_collecting_tokens()","start_doc()","stop_doc()","strip_hashes()","strip_newlines()","strip_stars()","strscan()","summary()","superclass()","superclass()","superclass=()","table_of_contents()","temp_dir()","template_dir_for()","template_for()","template_result()","test_accept_blank_line()","test_accept_document()","test_accept_heading()","test_accept_heading_1()","test_accept_heading_2()","test_accept_heading_3()","test_accept_heading_4()","test_accept_heading_b()","test_accept_heading_indent()","test_accept_heading_suppressed_crossref()","test_accept_list_end_bullet()","test_accept_list_end_label()","test_accept_list_end_lalpha()","test_accept_list_end_note()","test_accept_list_end_number()","test_accept_list_end_ualpha()","test_accept_list_item_end_bullet()","test_accept_list_item_end_label()","test_accept_list_item_end_lalpha()","test_accept_list_item_end_note()","test_accept_list_item_end_number()","test_accept_list_item_end_ualpha()","test_accept_list_item_start_bullet()","test_accept_list_item_start_label()","test_accept_list_item_start_lalpha()","test_accept_list_item_start_note()","test_accept_list_item_start_note_2()","test_accept_list_item_start_number()","test_accept_list_item_start_ualpha()","test_accept_list_start_bullet()","test_accept_list_start_label()","test_accept_list_start_lalpha()","test_accept_list_start_note()","test_accept_list_start_number()","test_accept_list_start_ualpha()","test_accept_paragraph()","test_accept_paragraph_b()","test_accept_paragraph_i()","test_accept_paragraph_indent()","test_accept_paragraph_plus()","test_accept_paragraph_star()","test_accept_paragraph_underscore()","test_accept_paragraph_wrap()","test_accept_raw()","test_accept_rule()","test_accept_rule_indent()","test_accept_verbatim()","test_accept_verbatim_big_indent()","test_accept_verbatim_indent()","test_attributes()","test_end_accepting()","test_list_nested()","test_list_verbatim()","test_start_accepting()","text()","text()","text=()","text?()","time_delta_string()","to_html()","to_html()","to_html()","to_html()","to_label()","to_toc()","token_listener()","token_pos()","token_stream()","tokenize()","tokenize()","tokenize()","tokenize()","tokens_to_s()","tomdoc?()","top_level()","top_level()","truncate()","tt?()","tt_sections()","type()","type()","undoc_params()","unget()","unget_tk()","unique_classes()","unique_classes_and_modules()","unique_modules()","unmask_protected_sequences()","update_aliases()","update_includes()","update_output_dir()","upgrade_to_class()","use_markup()","use_prefix()","warn()","warn()","wrap()","wrap()","write_options()","write_style_sheet()","zip?()","developers.rdoc","history.rdoc","legal.rdoc","license.rdoc","manifest.txt","readme.rdoc","ri.rdoc","rakefile","todo.rdoc","gauntlet_rdoc.rb","rdoc.rb","alias.rb","anon_class.rb","any_method.rb","attr.rb","class_module.rb","code_object.rb","code_objects.rb","comment.rb","constant.rb","context.rb","section.rb","cross_reference.rb","encoding.rb","erbio.rb","generator.rb","darkfish.rb","json_index.rb","markup.rb","ri.rb","navigation.js","searcher.js","ghost_method.rb","include.rb","known_classes.rb","markup.rb","attr_changer.rb","attr_span.rb","attribute.rb","attribute_manager.rb","blank_line.rb","document.rb","formatter.rb","formatter_test_case.rb","heading.rb","include.rb","indented_paragraph.rb","inline.rb","list.rb","list_item.rb","paragraph.rb","parser.rb","pre_process.rb","raw.rb","rule.rb","special.rb","text_formatter_test_case.rb","to_ansi.rb","to_bs.rb","to_html.rb","to_html_crossref.rb","to_html_snippet.rb","to_label.rb","to_rdoc.rb","to_table_of_contents.rb","to_test.rb","to_tt_only.rb","verbatim.rb","meta_method.rb","method_attr.rb","normal_class.rb","normal_module.rb","options.rb","parser.rb","c.rb","rd.rb","ruby.rb","ruby_tools.rb","simple.rb","text.rb","rd.rb","block_parser.ry","inline.rb","inline_parser.ry","rdoc.rb","require.rb","ri.rb","driver.rb","formatter.rb","paths.rb","store.rb","ruby_lex.rb","ruby_token.rb","rubygems_hook.rb","single_class.rb","stats.rb","normal.rb","quiet.rb","verbose.rb","task.rb","test_case.rb","text.rb","token_stream.rb","tom_doc.rb","top_level.rb"],"longSearchIndex":["lib/rdoc/ri/driver.rb","lib/rdoc.rb","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc::context","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc::generator","rdoc::generator","rdoc::generator","rdoc::generator","rdoc","rdoc","rdoc","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup::parser","rdoc::markup::parser","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc::markup","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc::parser","rdoc::parser","rdoc::parser","rdoc::parser","rdoc::parser","rdoc::parser","rdoc","rdoc::rd","rdoc","rdoc","rdoc::ri","rdoc::ri::driver","rdoc::ri::driver","rdoc::ri","rdoc::ri","rdoc::ri","rdoc","rdoc","rdoc::rubylex","rdoc","rdoc","rdoc","rdoc","rdoc::stats","rdoc::stats","rdoc::stats","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc","rdoc::markup::document","rdoc::markup::list","rdoc::markup::listitem","rdoc::markup::raw","rdoc::alias","rdoc::constant","rdoc::context","rdoc::include","rdoc::methodattr","rdoc::attr","rdoc::constant","rdoc::context::section","rdoc::markup::special","rdoc::toplevel","rdoc::markup::attrspan","rdoc::markup::blankline","rdoc::markup::document","rdoc::markup::heading","rdoc::markup::indentedparagraph","rdoc::markup::list","rdoc::markup::listitem","rdoc::markup::paragraph","rdoc::markup::raw","rdoc::markup::rule","rdoc::markup::verbatim","rdoc::markup::tohtml","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::formatter","rdoc::markup::tobs","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::totableofcontents","rdoc::markup::tottonly","rdoc::markup::tordoc","rdoc::markup::tohtml","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::toansi","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::toansi","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::tohtml","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::tohtml","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::anymethod","rdoc::attr","rdoc::context","rdoc::methodattr","rdoc::stats","rdoc::toplevel","rdoc::ri::driver","rdoc::context","rdoc::stats","rdoc::context","rdoc::ri::driver","rdoc::stats","rdoc::context","rdoc::classmodule","rdoc::context","rdoc::stats","rdoc::toplevel","rdoc::stats","rdoc::ri::driver","rdoc::rdoc","rdoc::markup","rdoc::markup::attributemanager","rdoc::context","rdoc::toplevel","rdoc::ri::driver","rdoc::anymethod","rdoc::context","rdoc::stats","rdoc::toplevel","rdoc::ri::driver","rdoc::context","rdoc::stats","rdoc::context","rdoc::markup::tohtmlsnippet","rdoc::context","rdoc::context","rdoc::markup","rdoc::markup::attributemanager","rdoc::markup::formatter","rdoc::markup::textformattertestcase","rdoc::context","rdoc::toplevel","rdoc::tokenstream","rdoc::parser::rubytools","rdoc::tokenstream","rdoc::markup::formattertestcase","rdoc::markup","rdoc::markup::attributemanager","rdoc::parser","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::classmodule","rdoc::normalclass","rdoc::ri::store","rdoc::singleclass","rdoc::ri::driver","rdoc::markup::formatter","rdoc::markup::tobs","rdoc::context","rdoc::rd::inline","rdoc::alias","rdoc::context::section","rdoc::markup::heading","rdoc::methodattr","rdoc::anymethod","rdoc::attr","rdoc::methodattr","rdoc::generator::markup","rdoc::anymethod","rdoc::generator::markup","rdoc::markup::attribute","rdoc::generator::darkfish","rdoc::markup::attributemanager","rdoc::markup::tordoc","rdoc::ri::store","rdoc::toplevel","rdoc::task","rdoc::stats","rdoc::stats::quiet","rdoc::parser","rdoc::markup::attribute","rdoc::methodattr","rdoc::markup::parser","rdoc::tomdoc","rdoc::markup::parser","rdoc::markup::parser","rdoc::tomdoc","rdoc::markup::parser","rdoc::tomdoc","rdoc::ri::store","rdoc::stats","rdoc::parser","rdoc::markup::attributemanager","rdoc::markup::attributemanager","rdoc::options","rdoc::options","rdoc::task","rdoc::context","rdoc::context","rdoc::generator::darkfish","rdoc::generator::jsonindex","rdoc::ri::driver","rdoc::ri::store","rdoc::context","rdoc::ri::store","rdoc::ri::store","rdoc::context","rdoc::ri::driver","rdoc::ri::driver","rdoc::context","rdoc::context","rdoc::classmodule","rdoc::task","rdoc::task","rdoc::parser::ruby","rdoc::tokenstream","rdoc::testcase","rdoc::classmodule","rdoc::codeobject","rdoc::context::section","rdoc::classmodule","rdoc::ri::driver","rdoc::toplevel","rdoc::markup","rdoc::markup::formatter","rdoc::markup::tohtmlsnippet","rdoc::markup::tolabel","rdoc::markup::attributemanager","rdoc::markup::formatter","rdoc::markup::tohtmlsnippet","rdoc::markup::attributemanager","rdoc::markup::formatter","rdoc::markup::tobs","rdoc::markup::attributemanager","rdoc::markup::formatter","rdoc::markup::tobs","rdoc::markup::tohtml","rdoc::generator::darkfish","rdoc::markup::attributemanager","rdoc::stats","rdoc::markup::tohtmlcrossref","rdoc::rdoc","rdoc::rdoc","rdoc::context","rdoc::generator::markup","rdoc::toplevel","rdoc::generator::darkfish","rdoc::generator::jsonindex","rdoc::ri::driver","rdoc::options","rdoc::task","rdoc::task","rdoc::context","rdoc::attr","rdoc::normalclass","rdoc::normalmodule","rdoc::singleclass","rdoc::rubygemshook","rdoc::classmodule","rdoc::generator::markup","rdoc::ri::driver","rdoc::codeobject","rdoc::toplevel","rdoc::markup::attributemanager","rdoc::ri::driver","rdoc::ri::driver","rdoc::ri::driver","rdoc::ri::driver","rdoc::parser::c","rdoc::parser::c","rdoc::parser::c","rdoc::parser::c","rdoc::parser::c","rdoc::parser::c","rdoc::markup::tottonly","rdoc::stats","rdoc::rdoc","rdoc::rubygemshook","rdoc::codeobject","rdoc::codeobject","rdoc::classmodule","rdoc::codeobject","rdoc::constant","rdoc::methodattr","rdoc::stats","rdoc::stats::quiet","rdoc::codeobject","rdoc::ri::driver","rdoc::ri::paths","rdoc::classmodule","rdoc::context","rdoc::context","rdoc::context","rdoc::context","rdoc::context","rdoc::markup::attribute","rdoc::codeobject","rdoc::context","rdoc::comment","rdoc::markup::document","rdoc::markup::list","rdoc::markup::listitem","object","rdoc::markup::tohtml","rdoc::markup::tordoc","rdoc::markup::totableofcontents","rdoc::markup::tottonly","rdoc::toplevel","rdoc::parser::ruby","rdoc::rdoc","rdoc::ri::driver","rdoc::ri::driver","object","rdoc::comment","rdoc::context::section","rdoc::markup::document","rdoc::generator::darkfish","rdoc::generator::jsonindex","rdoc::codeobject","rdoc::ri::driver","rdoc::parser::c","rdoc::classmodule","rdoc::parser::c","rdoc::context","rdoc::context","rdoc::parser::c","rdoc::parser::c","rdoc::parser::c","rdoc::context","rdoc::classmodule","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::parser::c","rdoc::context","rdoc::context","rdoc::context","rdoc::context","rdoc::context","rdoc::toplevel","rdoc::markup::preprocess","rdoc::context","rdoc::context","rdoc::toplevel","rdoc::context","rdoc::context","rdoc::ri::driver","rdoc::parser::c","rdoc::context","rdoc::toplevel","rdoc::toplevel","rdoc::parser::c","rdoc::context","rdoc::context","rdoc::toplevel","rdoc::options","rdoc::toplevel","rdoc::markup::attributemanager","object","rdoc::parser","rdoc::codeobject","rdoc::comment","rdoc::comment","rdoc::generator::markup","rdoc::ri::driver","rdoc::ri::store","rdoc::classmodule","rdoc::classmodule","rdoc::context","rdoc::include","rdoc::methodattr","rdoc::toplevel","rdoc::codeobject","rdoc::alias","rdoc::context","rdoc::stats","rdoc::rdoc","rdoc::ri::paths","rdoc::markup::tohtml","rdoc::generator::darkfish","rdoc::markup::tohtml","rdoc::markup::tohtmlcrossref","rdoc::markup::tohtmlsnippet","rdoc::generator::darkfish","rdoc::generator::jsonindex","rdoc::generator::ri","rdoc::rdoc","rdoc::rubygemshook","rdoc::generator::darkfish","rdoc::generator::darkfish","rdoc::generator::darkfish","rdoc::generator::darkfish","rdoc::rubygemshook","rdoc::options","rdoc::markup::parser","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::generator::darkfish","rdoc::generator::darkfish","rdoc::parser::ruby","rdoc::parser::rubytools","rdoc::parser::rubytools","rdoc::parser::rubytools","rdoc::stats","rdoc::markup::preprocess","rdoc::parser::c","rdoc::parser::c","rdoc::parser::c","rdoc::markup::preprocess","rdoc::parser::c","rdoc::parser::c","rdoc::rdoc","rdoc::parser::c","rdoc::markup::tohtmlcrossref","rdoc::markup::tohtmlsnippet","rdoc::markup::tolabel","rdoc::markup::tohtml","rdoc::markup::tohtmlcrossref","rdoc::markup::tohtml","rdoc::markup::tohtmlcrossref","rdoc::markup::tordoc","rdoc::markup::tohtml","rdoc::markup::tolabel","rdoc::parser::c","rdoc::toplevel","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::alias","rdoc::methodattr","rdoc::context","rdoc::toplevel","rdoc::codeobject","rdoc::markup::formatter","rdoc::codeobject","rdoc::ri::driver","rdoc::markup::formatter","rdoc::markup::preprocess","rdoc::generator::jsonindex","rdoc::generator::jsonindex","rdoc::generator::jsonindex","rdoc::markup::toansi","rdoc::markup::tobs","rdoc::markup::tohtml","rdoc::markup::tordoc","rdoc::context","rdoc::generator::ri","rdoc::rdoc","rdoc::context","rdoc::context","rdoc::ri::store","rdoc::ri::driver","rdoc::markup::list","rdoc::toplevel","rdoc::markup::listitem","rdoc::markup::tohtmlcrossref","rdoc::markup::tohtml","rdoc::rdoc","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::ri::driver","rdoc::ri::driver","rdoc::ri::store","rdoc::ri::store","rdoc::ri::driver","rdoc::ri::store","rdoc::ri::driver","rdoc::rdoc","rdoc::rubygemshook","rdoc","rdoc::parser::c","rdoc::parser::ruby","rdoc::parser::ruby","object","rdoc::anymethod","rdoc::anymethod","rdoc::attr","rdoc::anymethod","rdoc::attr","rdoc::markup::attributemanager","rdoc::classmodule","rdoc::markup::document","rdoc::markup::raw","rdoc::markup::document","rdoc::ri::driver","rdoc::ri::store","rdoc::ri::driver","rdoc::context","rdoc::context","rdoc::include","rdoc::classmodule","rdoc::normalmodule","rdoc::context","rdoc::ri::store","rdoc::context","rdoc::anymethod","rdoc::toplevel","rdoc::classmodule","rdoc::classmodule","rdoc::context","rdoc::alias","rdoc::methodattr","rdoc::ri::driver","rdoc::alias","rdoc::anymethod","rdoc::attr","rdoc::classmodule","rdoc::codeobject","rdoc::comment","rdoc::constant","rdoc::context","rdoc::context::section","rdoc::crossreference","rdoc::erbio","rdoc::generator::darkfish","rdoc::generator::jsonindex","rdoc::generator::ri","rdoc::include","rdoc::markup","rdoc::markup::attrspan","rdoc::markup::attributemanager","rdoc::markup::blankline","rdoc::markup::document","rdoc::markup::formatter","rdoc::markup::include","rdoc::markup::indentedparagraph","rdoc::markup::list","rdoc::markup::listitem","rdoc::markup::parser","rdoc::markup::preprocess","rdoc::markup::raw","rdoc::markup::special","rdoc::markup::toansi","rdoc::markup::tobs","rdoc::markup::tohtml","rdoc::markup::tohtmlcrossref","rdoc::markup::tohtmlsnippet","rdoc::markup::tolabel","rdoc::markup::tordoc","rdoc::markup::tottonly","rdoc::methodattr","rdoc::parser","rdoc::parser::c","rdoc::parser::ruby","rdoc::parser::simple","rdoc::rd::inline","rdoc::rd::inline","rdoc::rdoc","rdoc::ri::driver","rdoc::ri::store","rdoc::require","rdoc::rubylex","rdoc::rubygemshook","rdoc::stats","rdoc::stats::quiet","rdoc::task","rdoc::tomdoc","rdoc::toplevel","rdoc::toplevel","rdoc::parser::ruby","rdoc::stats::verbose","rdoc::classmodule","rdoc::comment","rdoc::markup::verbatim","object","rdoc::rdoc","rdoc::toplevel","rdoc::markup::formatter","rdoc::markup::tohtmlsnippet","rdoc::markup::formatter","rdoc::markup::tohtmlsnippet","rdoc::context","rdoc::task","rdoc::rdoc","rdoc::methodattr","rdoc::ri::driver","rdoc::toplevel","rdoc::toplevel","rdoc::ri::driver","rdoc::anymethod","rdoc::anymethod","rdoc::codeobject","rdoc::codeobject","rdoc::methodattr","object","rdoc::classmodule","rdoc::comment","rdoc::markup","rdoc::markup::parser","rdoc::markup::parser","rdoc::options","rdoc::rd","rdoc::tomdoc","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::rdoc","rdoc::rdoc","rdoc::rdoc","rdoc::parser","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::ri::driver","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::markup::tohtml","rdoc::classmodule","rdoc::constant","rdoc::methodattr","rdoc::ri::paths","rdoc::toplevel","rdoc::parser::rubytools","rdoc::parser::rubytools","rdoc::markup::parser","rdoc::stats","rdoc::context::section","rdoc::markup::heading","rdoc::tokenstream","rdoc::markup::preprocess","rdoc::markup::preprocess","rdoc::alias","rdoc::methodattr","rdoc::alias","rdoc::alias","rdoc::stats::quiet","rdoc::stats::quiet","rdoc::stats::quiet","rdoc::stats::quiet","rdoc::stats::normal","rdoc::stats::quiet","rdoc::stats::quiet","rdoc::stats::quiet","rdoc::ri::driver","rdoc::parser","rdoc::markup::document","rdoc::markup::list","rdoc::markup::listitem","rdoc::markup::raw","rdoc::options","rdoc::options","rdoc::ri::paths","rdoc::parser::c","object","rdoc::rubygemshook","rdoc::task","rdoc::task","rdoc::task","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::encoding","rdoc::codeobject","rdoc::context","rdoc::markup::preprocess","rdoc::markup::preprocess","rdoc::rubygemshook","rdoc::parser::simple","rdoc::parser::c","rdoc::context","rdoc::context","rdoc::toplevel","rdoc::classmodule","rdoc::comment","rdoc::parser::simple","rdoc::parser::ruby","rdoc::generator::ri","rdoc::rdoc","rdoc::parser::rubytools","rdoc::rdoc","rdoc::generator::darkfish","rdoc::generator::darkfish","rdoc::stats","rdoc::stats","rdoc::stats","rdoc::stats","rdoc::stats","rdoc::task","rdoc::task","rdoc::markup::preprocess","rdoc::parser::c","rdoc::parser::rubytools","rdoc::rdoc","rdoc::toplevel","rdoc::crossreference","rdoc::context","rdoc::rubygemshook","rdoc::markup::verbatim","rdoc::gauntlet","rdoc::ri::driver","rdoc::ri::driver","rdoc::gauntlet","rdoc::options","rdoc::ri::store","rdoc::ri::store","rdoc::ri::store","rdoc::parser::c","rdoc::parser::rd","rdoc::parser::ruby","rdoc::parser::simple","rdoc::classmodule","rdoc::methodattr","rdoc::toplevel","rdoc::generator::jsonindex","rdoc::context","rdoc::context","rdoc::methodattr","rdoc::context::section","rdoc::markup::attrspan","rdoc::context","rdoc::encoding","rdoc::erbio","rdoc::context","rdoc::markup::formattertestcase","rdoc::rubygemshook","rdoc::testcase","rdoc::options","rdoc::rdoc","rdoc::ri::driver","rdoc::tomdoc","rdoc::markup::parser","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::ruby","rdoc::parser::rubytools","rdoc::parser::ruby","object","rdoc::context","rdoc::markup::attributemanager","rdoc::markup::toansi","rdoc::markup::tohtml","rdoc::markup::tohtmlsnippet","rdoc::markup::tordoc","rdoc::markup::totableofcontents","rdoc::markup::tottonly","rdoc::tokenstream","rdoc::codeobject","rdoc::codeobject","object","object","object","object","rdoc::stats","rdoc::classmodule","rdoc::normalmodule","rdoc::classmodule","rdoc::markup::document","rdoc::testcase","rdoc::options","rdoc::generator::darkfish","rdoc::generator::darkfish","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::formattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::textformattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::formattertestcase","rdoc::markup::raw","rdoc::markup::verbatim","rdoc::comment","rdoc::toplevel","rdoc::generator::darkfish","object","rdoc::markup::heading","rdoc::markup::tohtml","rdoc::tokenstream","rdoc::markup::heading","rdoc::markup::totableofcontents","rdoc::parser::rubytools","rdoc::markup::parser","rdoc::tokenstream","rdoc::markup::parser","rdoc::markup::parser","rdoc::rubylex","rdoc::tomdoc","rdoc::tokenstream","rdoc::comment","rdoc::context","rdoc::require","rdoc::markup::tohtmlsnippet","rdoc::markup::formatter","rdoc::markup::tottonly","rdoc::classmodule","rdoc::methodattr","rdoc::stats","rdoc::markup::parser","rdoc::parser::rubytools","rdoc::toplevel","rdoc::toplevel","rdoc::toplevel","rdoc::markup::attributemanager","rdoc::classmodule","rdoc::classmodule","rdoc::rdoc","rdoc::context","rdoc::parser","rdoc::markup::tordoc","rdoc::options","rdoc::parser::ruby","object","rdoc::markup::tordoc","rdoc::options","rdoc::generator::darkfish","rdoc::parser","files/developers_rdoc.html","files/history_rdoc.html","files/legal_rdoc.html","files/license_rdoc.html","files/manifest_txt.html","files/readme_rdoc.html","files/ri_rdoc.html","files/rakefile.html","files/todo_rdoc.html","files/lib/gauntlet_rdoc_rb.html","files/lib/rdoc_rb.html","files/lib/rdoc/alias_rb.html","files/lib/rdoc/anon_class_rb.html","files/lib/rdoc/any_method_rb.html","files/lib/rdoc/attr_rb.html","files/lib/rdoc/class_module_rb.html","files/lib/rdoc/code_object_rb.html","files/lib/rdoc/code_objects_rb.html","files/lib/rdoc/comment_rb.html","files/lib/rdoc/constant_rb.html","files/lib/rdoc/context_rb.html","files/lib/rdoc/context/section_rb.html","files/lib/rdoc/cross_reference_rb.html","files/lib/rdoc/encoding_rb.html","files/lib/rdoc/erbio_rb.html","files/lib/rdoc/generator_rb.html","files/lib/rdoc/generator/darkfish_rb.html","files/lib/rdoc/generator/json_index_rb.html","files/lib/rdoc/generator/markup_rb.html","files/lib/rdoc/generator/ri_rb.html","files/lib/rdoc/generator/template/json_index/js/navigation_js.html","files/lib/rdoc/generator/template/json_index/js/searcher_js.html","files/lib/rdoc/ghost_method_rb.html","files/lib/rdoc/include_rb.html","files/lib/rdoc/known_classes_rb.html","files/lib/rdoc/markup_rb.html","files/lib/rdoc/markup/attr_changer_rb.html","files/lib/rdoc/markup/attr_span_rb.html","files/lib/rdoc/markup/attribute_rb.html","files/lib/rdoc/markup/attribute_manager_rb.html","files/lib/rdoc/markup/blank_line_rb.html","files/lib/rdoc/markup/document_rb.html","files/lib/rdoc/markup/formatter_rb.html","files/lib/rdoc/markup/formatter_test_case_rb.html","files/lib/rdoc/markup/heading_rb.html","files/lib/rdoc/markup/include_rb.html","files/lib/rdoc/markup/indented_paragraph_rb.html","files/lib/rdoc/markup/inline_rb.html","files/lib/rdoc/markup/list_rb.html","files/lib/rdoc/markup/list_item_rb.html","files/lib/rdoc/markup/paragraph_rb.html","files/lib/rdoc/markup/parser_rb.html","files/lib/rdoc/markup/pre_process_rb.html","files/lib/rdoc/markup/raw_rb.html","files/lib/rdoc/markup/rule_rb.html","files/lib/rdoc/markup/special_rb.html","files/lib/rdoc/markup/text_formatter_test_case_rb.html","files/lib/rdoc/markup/to_ansi_rb.html","files/lib/rdoc/markup/to_bs_rb.html","files/lib/rdoc/markup/to_html_rb.html","files/lib/rdoc/markup/to_html_crossref_rb.html","files/lib/rdoc/markup/to_html_snippet_rb.html","files/lib/rdoc/markup/to_label_rb.html","files/lib/rdoc/markup/to_rdoc_rb.html","files/lib/rdoc/markup/to_table_of_contents_rb.html","files/lib/rdoc/markup/to_test_rb.html","files/lib/rdoc/markup/to_tt_only_rb.html","files/lib/rdoc/markup/verbatim_rb.html","files/lib/rdoc/meta_method_rb.html","files/lib/rdoc/method_attr_rb.html","files/lib/rdoc/normal_class_rb.html","files/lib/rdoc/normal_module_rb.html","files/lib/rdoc/options_rb.html","files/lib/rdoc/parser_rb.html","files/lib/rdoc/parser/c_rb.html","files/lib/rdoc/parser/rd_rb.html","files/lib/rdoc/parser/ruby_rb.html","files/lib/rdoc/parser/ruby_tools_rb.html","files/lib/rdoc/parser/simple_rb.html","files/lib/rdoc/parser/text_rb.html","files/lib/rdoc/rd_rb.html","files/lib/rdoc/rd/block_parser_ry.html","files/lib/rdoc/rd/inline_rb.html","files/lib/rdoc/rd/inline_parser_ry.html","files/lib/rdoc/rdoc_rb.html","files/lib/rdoc/require_rb.html","files/lib/rdoc/ri_rb.html","files/lib/rdoc/ri/driver_rb.html","files/lib/rdoc/ri/formatter_rb.html","files/lib/rdoc/ri/paths_rb.html","files/lib/rdoc/ri/store_rb.html","files/lib/rdoc/ruby_lex_rb.html","files/lib/rdoc/ruby_token_rb.html","files/lib/rdoc/rubygems_hook_rb.html","files/lib/rdoc/single_class_rb.html","files/lib/rdoc/stats_rb.html","files/lib/rdoc/stats/normal_rb.html","files/lib/rdoc/stats/quiet_rb.html","files/lib/rdoc/stats/verbose_rb.html","files/lib/rdoc/task_rb.html","files/lib/rdoc/test_case_rb.html","files/lib/rdoc/text_rb.html","files/lib/rdoc/token_stream_rb.html","files/lib/rdoc/tom_doc_rb.html","files/lib/rdoc/top_level_rb.html"]}}