var search_data = {"index":{"info":[["Icebox","HTTParty","classes/HTTParty/Icebox.html"," < ","",1],["Cache","HTTParty::Icebox","classes/HTTParty/Icebox/Cache.html"," < Object","=== Cache container Pass a store name ('memory', etc) to initializer ",1],["ClassMethods","HTTParty::Icebox","classes/HTTParty/Icebox/ClassMethods.html"," < ","",1],["Store","HTTParty::Icebox","classes/HTTParty/Icebox/Store.html"," < ","=== Cache stores ",1],["AbstractStore","HTTParty::Icebox::Store","classes/HTTParty/Icebox/Store/AbstractStore.html"," < Object","==== Abstract Store Inherit your store from this class *IMPORTANT*: Do not forget to call +super+ in",1],["FileStore","HTTParty::Icebox::Store","classes/HTTParty/Icebox/Store/FileStore.html"," < AbstractStore","===== Store objects on the filesystem ",1],["MemoryStore","HTTParty::Icebox::Store","classes/HTTParty/Icebox/Store/MemoryStore.html"," < AbstractStore","",1],["StoreNotFound","HTTParty::Icebox::Store","classes/HTTParty/Icebox/Store/StoreNotFound.html"," < StandardError","",1],["TMDBParty","lib/tmdb_party/cast_member.rb","classes/TMDBParty.html"," < ","MovieHasher based on the one found here: http://trac.opensubtitles.org/projects/opensubtitles/wiki/HashSourceCodes",1],["Attributes","TMDBParty","classes/TMDBParty/Attributes.html"," < ","",1],["ClassMethods","TMDBParty::Attributes","classes/TMDBParty/Attributes/ClassMethods.html"," < ","",1],["InstanceMethods","TMDBParty::Attributes","classes/TMDBParty/Attributes/InstanceMethods.html"," < ","",1],["Base","TMDBParty","classes/TMDBParty/Base.html"," < Object","",1],["CastMember","TMDBParty","classes/TMDBParty/CastMember.html"," < Object","",1],["Category","TMDBParty","classes/TMDBParty/Category.html"," < Object","",1],["Country","TMDBParty","classes/TMDBParty/Country.html"," < Object","",1],["Genre","TMDBParty","classes/TMDBParty/Genre.html"," < Object","",1],["Image","TMDBParty","classes/TMDBParty/Image.html"," < Object","",1],["Movie","TMDBParty","classes/TMDBParty/Movie.html"," < Object","",1],["MovieHasher","TMDBParty","classes/TMDBParty/MovieHasher.html"," < ","",1],["Person","TMDBParty","classes/TMDBParty/Person.html"," < Object","",1],["Studio","TMDBParty","classes/TMDBParty/Studio.html"," < Object","",1],["Video","TMDBParty","classes/TMDBParty/Video.html"," < Object","",1],["actors","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000067","()","",2],["attribute","TMDBParty::Attributes::ClassMethods","classes/TMDBParty/Attributes/ClassMethods.html#M000013","(name, options)","",2],["attributes","TMDBParty::Attributes::ClassMethods","classes/TMDBParty/Attributes/ClassMethods.html#M000012","(*names)","",2],["attributes=","TMDBParty::Attributes::InstanceMethods","classes/TMDBParty/Attributes/InstanceMethods.html#M000014","(value)","",2],["biography","TMDBParty::Person","classes/TMDBParty/Person.html#M000071","()","",2],["browse","TMDBParty::Base","classes/TMDBParty/Base.html#M000079","(params = {}, lang = @default_lang)","Read more about the parameters that can be passed to this method here: http://api.themoviedb.org/2.1/methods/Movie.browse",2],["cache","HTTParty::Icebox::ClassMethods","classes/HTTParty/Icebox/ClassMethods.html#M000017","(options={})","Enable caching and set cache options Returns memoized cache object Following options are available, default",2],["cast","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000062","()","",2],["character_name","TMDBParty::CastMember","classes/TMDBParty/CastMember.html#M000001","()","",2],["code","TMDBParty::Country","classes/TMDBParty/Country.html#M000009","()","",2],["code_string","TMDBParty::Country","classes/TMDBParty/Country.html#M000010","()","Alias for #code",2],["compute_hash","TMDBParty::MovieHasher","classes/TMDBParty/MovieHasher.html#M000036","(file)","",2],["created","HTTParty::Icebox::Store::FileStore","classes/HTTParty/Icebox/Store/FileStore.html#M000049","(key)","",2],["created","HTTParty::Icebox::Store::MemoryStore","classes/HTTParty/Icebox/Store/MemoryStore.html#M000043","(key)","",2],["decode_raw_attribute","TMDBParty::Attributes::InstanceMethods","classes/TMDBParty/Attributes/InstanceMethods.html#M000021","(value, type)","",2],["default_logger","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000031","()","",2],["directors","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000066","()","",2],["encode","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000034","(key)","",2],["exists?","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000028","(key)","",2],["exists?","HTTParty::Icebox::Store::FileStore","classes/HTTParty/Icebox/Store/FileStore.html#M000047","(key)","",2],["exists?","HTTParty::Icebox::Store::MemoryStore","classes/HTTParty/Icebox/Store/MemoryStore.html#M000041","(key)","",2],["find_cast","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000070","(type)","",2],["get","HTTParty::Icebox","classes/HTTParty/Icebox.html#M000024","(path, options={})","Redefine original HTTParty +get+ method to use cache ",2],["get","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000026","(key)","",2],["get","HTTParty::Icebox::Store::FileStore","classes/HTTParty/Icebox/Store/FileStore.html#M000046","(key)","",2],["get","HTTParty::Icebox::Store::MemoryStore","classes/HTTParty/Icebox/Store/MemoryStore.html#M000040","(key)","",2],["get_file_info","TMDBParty::Base","classes/TMDBParty/Base.html#M000083","(file, lang=@default_lang)","",2],["get_genres","TMDBParty::Base","classes/TMDBParty/Base.html#M000085","(lang = @default_lang)","",2],["get_info","TMDBParty::Base","classes/TMDBParty/Base.html#M000082","(id, lang = @default_lang)","",2],["get_info!","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000061","()","",2],["get_info!","TMDBParty::Person","classes/TMDBParty/Person.html#M000072","()","",2],["get_person","TMDBParty::Base","classes/TMDBParty/Base.html#M000084","(id, lang = @default_lang)","",2],["get_with_caching","HTTParty::Icebox","classes/HTTParty/Icebox.html#M000023","(path, options={})","Get response from cache, if available ",2],["get_without_caching","HTTParty::Icebox","classes/HTTParty/Icebox.html#M000022","(path, options={})","Get reponse from network TODO: Why alias :new :old is not working here? Returns NoMethodError ",2],["id","TMDBParty::Image","classes/TMDBParty/Image.html#M000053","()","",2],["image_url","TMDBParty::CastMember","classes/TMDBParty/CastMember.html#M000002","()","",2],["imdb_lookup","TMDBParty::Base","classes/TMDBParty/Base.html#M000081","(imdb_id, lang = @default_lang)","",2],["included","TMDBParty::Attributes","classes/TMDBParty/Attributes.html#M000011","(base)","based on http://github.com/nullstyle/ruby-satisfaction ",2],["language","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000064","()","",2],["last_modified_at","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000065","()","",2],["loaded?","TMDBParty::Attributes::InstanceMethods","classes/TMDBParty/Attributes/InstanceMethods.html#M000015","()","",2],["logger","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000030","()","",2],["logger=","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000032","(device)","Pass a filename (String), IO object, Logger instance or +nil+ to silence the logger ",2],["lookup_store","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000033","(name)","Return store class based on passed name ",2],["method_missing","TMDBParty::Image","classes/TMDBParty/Image.html#M000057","(*args, &block)","",2],["method_url","TMDBParty::Base","classes/TMDBParty/Base.html#M000087","(method, lang, *args)","",2],["new","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000025","(store, options={})","",2],["new","HTTParty::Icebox::Store::AbstractStore","classes/HTTParty/Icebox/Store/AbstractStore.html#M000035","(options={})","",2],["new","HTTParty::Icebox::Store::FileStore","classes/HTTParty/Icebox/Store/FileStore.html#M000044","(options={})","",2],["new","HTTParty::Icebox::Store::MemoryStore","classes/HTTParty/Icebox/Store/MemoryStore.html#M000038","(options={})","",2],["new","TMDBParty::Base","classes/TMDBParty/Base.html#M000077","(key, lang = 'en')","",2],["new","TMDBParty::CastMember","classes/TMDBParty/CastMember.html#M000000","(values, tmdb)","",2],["new","TMDBParty::Category","classes/TMDBParty/Category.html#M000005","(values)","",2],["new","TMDBParty::Country","classes/TMDBParty/Country.html#M000008","(attributes)","",2],["new","TMDBParty::Genre","classes/TMDBParty/Genre.html#M000050","(values)","",2],["new","TMDBParty::Image","classes/TMDBParty/Image.html#M000052","(attributes)","",2],["new","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000060","(values, tmdb)","",2],["new","TMDBParty::Person","classes/TMDBParty/Person.html#M000063","(values, tmdb)","",2],["new","TMDBParty::Studio","classes/TMDBParty/Studio.html#M000074","(attributes)","",2],["new","TMDBParty::Video","classes/TMDBParty/Video.html#M000075","(url)","",2],["parse","TMDBParty::CastMember","classes/TMDBParty/CastMember.html#M000004","(data, tmdb)","",2],["parse","TMDBParty::Category","classes/TMDBParty/Category.html#M000006","(data)","",2],["parse","TMDBParty::Country","classes/TMDBParty/Country.html#M000007","(data)","",2],["parse","TMDBParty::Genre","classes/TMDBParty/Genre.html#M000051","(data)","",2],["parse","TMDBParty::Image","classes/TMDBParty/Image.html#M000058","(data)","",2],["parse","TMDBParty::Studio","classes/TMDBParty/Studio.html#M000073","(data)","",2],["parse","TMDBParty::Video","classes/TMDBParty/Video.html#M000076","(data)","",2],["person","TMDBParty::CastMember","classes/TMDBParty/CastMember.html#M000003","()","",2],["producers","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000069","()","",2],["raw_attribute_missing?","TMDBParty::Attributes::InstanceMethods","classes/TMDBParty/Attributes/InstanceMethods.html#M000020","(name)","",2],["read_attribute","TMDBParty::Attributes::InstanceMethods","classes/TMDBParty/Attributes/InstanceMethods.html#M000019","(name, type = nil)","",2],["read_or_load_attribute","TMDBParty::Attributes::InstanceMethods","classes/TMDBParty/Attributes/InstanceMethods.html#M000016","(name, type, lazy_method)","",2],["reduce_images","TMDBParty::Image","classes/TMDBParty/Image.html#M000059","(images)","",2],["result_or_empty_array","TMDBParty::Base","classes/TMDBParty/Base.html#M000086","(data, klass)","",2],["search","TMDBParty::Base","classes/TMDBParty/Base.html#M000078","(query, lang = @default_lang)","",2],["search_person","TMDBParty::Base","classes/TMDBParty/Base.html#M000080","(query, lang = @default_lang)","",2],["set","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000027","(key, value)","",2],["set","HTTParty::Icebox::Store::FileStore","classes/HTTParty/Icebox/Store/FileStore.html#M000045","(key, value)","",2],["set","HTTParty::Icebox::Store::MemoryStore","classes/HTTParty/Icebox/Store/MemoryStore.html#M000039","(key, value)","",2],["sizes","TMDBParty::Image","classes/TMDBParty/Image.html#M000055","()","",2],["stale?","HTTParty::Icebox::Cache","classes/HTTParty/Icebox/Cache.html#M000029","(key)","",2],["stale?","HTTParty::Icebox::Store::FileStore","classes/HTTParty/Icebox/Store/FileStore.html#M000048","(key)","",2],["stale?","HTTParty::Icebox::Store::MemoryStore","classes/HTTParty/Icebox/Store/MemoryStore.html#M000042","(key)","",2],["to_s","HTTParty::Icebox::Store","classes/HTTParty/Icebox/Store.html#M000037","()","",2],["type","TMDBParty::Image","classes/TMDBParty/Image.html#M000054","()","",2],["url","TMDBParty::Image","classes/TMDBParty/Image.html#M000056","()","",2],["writers","TMDBParty::Movie","classes/TMDBParty/Movie.html#M000068","()","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2009 John Duff  Permission is hereby granted, free of charge, to any person obtaining a",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= tmdb_party  Simple ruby wrapper to themoviedb.org (http://api.themoviedb.org/2.0/docs/) using HTTParty",3],["tmdb_party.rb","files/lib/tmdb_party_rb.html","files/lib/tmdb_party_rb.html","","",3],["cast_member.rb","files/lib/tmdb_party/cast_member_rb.html","files/lib/tmdb_party/cast_member_rb.html","","",3],["category.rb","files/lib/tmdb_party/category_rb.html","files/lib/tmdb_party/category_rb.html","","",3],["country.rb","files/lib/tmdb_party/country_rb.html","files/lib/tmdb_party/country_rb.html","","",3],["attributes.rb","files/lib/tmdb_party/extras/attributes_rb.html","files/lib/tmdb_party/extras/attributes_rb.html","","",3],["httparty_icebox.rb","files/lib/tmdb_party/extras/httparty_icebox_rb.html","files/lib/tmdb_party/extras/httparty_icebox_rb.html","","= Icebox : Caching for HTTParty Cache responses in HTTParty models [http://github.com/jnunemaker/httparty]",3],["movie_hasher.rb","files/lib/tmdb_party/extras/movie_hasher_rb.html","files/lib/tmdb_party/extras/movie_hasher_rb.html","","MovieHasher based on the one found here: http://trac.opensubtitles.org/projects/opensubtitles/wiki/HashSourceCodes",3],["genre.rb","files/lib/tmdb_party/genre_rb.html","files/lib/tmdb_party/genre_rb.html","","",3],["image.rb","files/lib/tmdb_party/image_rb.html","files/lib/tmdb_party/image_rb.html","","",3],["movie.rb","files/lib/tmdb_party/movie_rb.html","files/lib/tmdb_party/movie_rb.html","","",3],["person.rb","files/lib/tmdb_party/person_rb.html","files/lib/tmdb_party/person_rb.html","","",3],["studio.rb","files/lib/tmdb_party/studio_rb.html","files/lib/tmdb_party/studio_rb.html","","",3],["video.rb","files/lib/tmdb_party/video_rb.html","files/lib/tmdb_party/video_rb.html","","",3]],"searchIndex":["icebox","cache","classmethods","store","abstractstore","filestore","memorystore","storenotfound","tmdbparty","attributes","classmethods","instancemethods","base","castmember","category","country","genre","image","movie","moviehasher","person","studio","video","actors()","attribute()","attributes()","attributes=()","biography()","browse()","cache()","cast()","character_name()","code()","code_string()","compute_hash()","created()","created()","decode_raw_attribute()","default_logger()","directors()","encode()","exists?()","exists?()","exists?()","find_cast()","get()","get()","get()","get()","get_file_info()","get_genres()","get_info()","get_info!()","get_info!()","get_person()","get_with_caching()","get_without_caching()","id()","image_url()","imdb_lookup()","included()","language()","last_modified_at()","loaded?()","logger()","logger=()","lookup_store()","method_missing()","method_url()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","parse()","parse()","parse()","parse()","parse()","parse()","parse()","person()","producers()","raw_attribute_missing?()","read_attribute()","read_or_load_attribute()","reduce_images()","result_or_empty_array()","search()","search_person()","set()","set()","set()","sizes()","stale?()","stale?()","stale?()","to_s()","type()","url()","writers()","license","readme.rdoc","tmdb_party.rb","cast_member.rb","category.rb","country.rb","attributes.rb","httparty_icebox.rb","movie_hasher.rb","genre.rb","image.rb","movie.rb","person.rb","studio.rb","video.rb"],"longSearchIndex":["httparty","httparty::icebox","httparty::icebox","httparty::icebox","httparty::icebox::store","httparty::icebox::store","httparty::icebox::store","httparty::icebox::store","lib/tmdb_party.rb","tmdbparty","tmdbparty::attributes","tmdbparty::attributes","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty","tmdbparty::movie","tmdbparty::attributes::classmethods","tmdbparty::attributes::classmethods","tmdbparty::attributes::instancemethods","tmdbparty::person","tmdbparty::base","httparty::icebox::classmethods","tmdbparty::movie","tmdbparty::castmember","tmdbparty::country","tmdbparty::country","tmdbparty::moviehasher","httparty::icebox::store::filestore","httparty::icebox::store::memorystore","tmdbparty::attributes::instancemethods","httparty::icebox::cache","tmdbparty::movie","httparty::icebox::cache","httparty::icebox::cache","httparty::icebox::store::filestore","httparty::icebox::store::memorystore","tmdbparty::movie","httparty::icebox","httparty::icebox::cache","httparty::icebox::store::filestore","httparty::icebox::store::memorystore","tmdbparty::base","tmdbparty::base","tmdbparty::base","tmdbparty::movie","tmdbparty::person","tmdbparty::base","httparty::icebox","httparty::icebox","tmdbparty::image","tmdbparty::castmember","tmdbparty::base","tmdbparty::attributes","tmdbparty::movie","tmdbparty::movie","tmdbparty::attributes::instancemethods","httparty::icebox::cache","httparty::icebox::cache","httparty::icebox::cache","tmdbparty::image","tmdbparty::base","httparty::icebox::cache","httparty::icebox::store::abstractstore","httparty::icebox::store::filestore","httparty::icebox::store::memorystore","tmdbparty::base","tmdbparty::castmember","tmdbparty::category","tmdbparty::country","tmdbparty::genre","tmdbparty::image","tmdbparty::movie","tmdbparty::person","tmdbparty::studio","tmdbparty::video","tmdbparty::castmember","tmdbparty::category","tmdbparty::country","tmdbparty::genre","tmdbparty::image","tmdbparty::studio","tmdbparty::video","tmdbparty::castmember","tmdbparty::movie","tmdbparty::attributes::instancemethods","tmdbparty::attributes::instancemethods","tmdbparty::attributes::instancemethods","tmdbparty::image","tmdbparty::base","tmdbparty::base","tmdbparty::base","httparty::icebox::cache","httparty::icebox::store::filestore","httparty::icebox::store::memorystore","tmdbparty::image","httparty::icebox::cache","httparty::icebox::store::filestore","httparty::icebox::store::memorystore","httparty::icebox::store","tmdbparty::image","tmdbparty::image","tmdbparty::movie","files/license.html","files/readme_rdoc.html","files/lib/tmdb_party_rb.html","files/lib/tmdb_party/cast_member_rb.html","files/lib/tmdb_party/category_rb.html","files/lib/tmdb_party/country_rb.html","files/lib/tmdb_party/extras/attributes_rb.html","files/lib/tmdb_party/extras/httparty_icebox_rb.html","files/lib/tmdb_party/extras/movie_hasher_rb.html","files/lib/tmdb_party/genre_rb.html","files/lib/tmdb_party/image_rb.html","files/lib/tmdb_party/movie_rb.html","files/lib/tmdb_party/person_rb.html","files/lib/tmdb_party/studio_rb.html","files/lib/tmdb_party/video_rb.html"]}}