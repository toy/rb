var search_data = {"index":{"info":[["Faraday","lib/faraday/adapter/em_synchrony.rb","classes/Faraday.html"," < ","",1],["Adapter","Faraday","classes/Faraday/Adapter.html"," < Middleware","",1],["ActionDispatch","Faraday::Adapter","classes/Faraday/Adapter/ActionDispatch.html"," < Faraday::Adapter","",1],["EMSynchrony","Faraday::Adapter","classes/Faraday/Adapter/EMSynchrony.html"," < Faraday::Adapter","",1],["Excon","Faraday::Adapter","classes/Faraday/Adapter/Excon.html"," < Faraday::Adapter","",1],["NetHttp","Faraday::Adapter","classes/Faraday/Adapter/NetHttp.html"," < Faraday::Adapter","",1],["Patron","Faraday::Adapter","classes/Faraday/Adapter/Patron.html"," < Faraday::Adapter","",1],["Test","Faraday::Adapter","classes/Faraday/Adapter/Test.html"," < Faraday::Adapter","test = Faraday::Connection.new do use Faraday::Adapter::Test do |stub| stub.get '/nigiri/sake.json' do",1],["Stub","Faraday::Adapter::Test","classes/Faraday/Adapter/Test/Stub.html"," < Struct.new(:path, :params, :body, :block)","",1],["Stubs","Faraday::Adapter::Test","classes/Faraday/Adapter/Test/Stubs.html"," < Object","",1],["NotFound","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs/NotFound.html"," < StandardError","",1],["Typhoeus","Faraday::Adapter","classes/Faraday/Adapter/Typhoeus.html"," < Faraday::Adapter","",1],["AutoloadHelper","Faraday","classes/Faraday/AutoloadHelper.html"," < ","",1],["Builder","Faraday","classes/Faraday/Builder.html"," < Object","Possibly going to extend this a bit. Faraday::Connection.new(:url => 'http://sushi.com') do |builder|",1],["Handler","Faraday::Builder","classes/Faraday/Builder/Handler.html"," < Object","borrowed from ActiveSupport::Dependencies::Reference & ActionDispatch::MiddlewareStack::Middleware ",1],["StackLocked","Faraday::Builder","classes/Faraday/Builder/StackLocked.html"," < RuntimeError","Error raised when trying to modify the stack after calling `lock!` ",1],["CompositeReadIO","Faraday","classes/Faraday/CompositeReadIO.html"," < ::CompositeReadIO","",1],["Connection","Faraday","classes/Faraday/Connection.html"," < Object","",1],["Error","Faraday","classes/Faraday/Error.html"," < ","",1],["ClientError","Faraday::Error","classes/Faraday/Error/ClientError.html"," < StandardError","",1],["ConnectionFailed","Faraday::Error","classes/Faraday/Error/ConnectionFailed.html"," < ClientError","",1],["MissingDependency","Faraday::Error","classes/Faraday/Error/MissingDependency.html"," < StandardError","",1],["ParsingError","Faraday::Error","classes/Faraday/Error/ParsingError.html"," < ClientError","",1],["ResourceNotFound","Faraday::Error","classes/Faraday/Error/ResourceNotFound.html"," < ClientError","",1],["Middleware","Faraday","classes/Faraday/Middleware.html"," < Object","",1],["Request","Faraday","classes/Faraday/Request.html"," < Struct.new(:path, :params, :headers, :body, :options)","Used to setup urls, params, headers, and the request body in a sane manner. @connection.post do |req|",1],["JSON","Faraday::Request","classes/Faraday/Request/JSON.html"," < Request::UrlEncoded","",1],["Multipart","Faraday::Request","classes/Faraday/Request/Multipart.html"," < Request::UrlEncoded","",1],["UrlEncoded","Faraday::Request","classes/Faraday/Request/UrlEncoded.html"," < Faraday::Middleware","",1],["Response","Faraday","classes/Faraday/Response.html"," < Object","",1],["Logger","Faraday::Response","classes/Faraday/Response/Logger.html"," < Response::Middleware","",1],["Middleware","Faraday::Response","classes/Faraday/Response/Middleware.html"," < Faraday::Middleware","Used for simple response middleware. ",1],["RaiseError","Faraday::Response","classes/Faraday/Response/RaiseError.html"," < Response::Middleware","",1],["Utils","Faraday","classes/Faraday/Utils.html"," < ","",1],["Headers","Faraday::Utils","classes/Faraday/Utils/Headers.html"," < HeaderHash","",1],["Object","lib/faraday.rb","classes/Object.html"," < Object","not pulling in active-support JUST for this method. ",1],["ParamsHash","lib/faraday/utils.rb","classes/ParamsHash.html"," < Hash","hash with stringified keys ",1],["==","Faraday::Builder","classes/Faraday/Builder.html#M000039","(other)","",2],["==","Faraday::Builder::Handler","classes/Faraday/Builder/Handler.html#M000034","(other)","",2],["[]","Faraday","classes/Faraday.html#M000126","(k)","",2],["[]","Faraday::Builder","classes/Faraday/Builder.html#M000038","(idx)","",2],["[]","Faraday::Request","classes/Faraday/Request.html#M000101","(key)","",2],["[]","ParamsHash","classes/ParamsHash.html#M000134","(key)","",2],["[]=","Faraday","classes/Faraday.html#M000127","(k, v)","",2],["[]=","Faraday::Request","classes/Faraday/Request.html#M000102","(key, value)","",2],["[]=","ParamsHash","classes/ParamsHash.html#M000135","(key, value)","",2],["adapter","Faraday::Builder","classes/Faraday/Builder.html#M000047","(key, *args)","",2],["adapter","Faraday::Connection","classes/Faraday/Connection.html#M000060","(key, *args, &block)","",2],["adapter","Faraday::Request::JSON","classes/Faraday/Request/JSON.html#M000087","()","",2],["all_loaded_constants","Faraday::AutoloadHelper","classes/Faraday/AutoloadHelper.html#M000138","()","",2],["app","Faraday::Connection","classes/Faraday/Connection.html#M000062","()","The \"rack app\" wrapped in middleware. All requests are sent here. The builder is responsible for creating",2],["apply_request","Faraday::Response","classes/Faraday/Response.html#M000123","(request_env)","Expand the env with more properties, without overriding existing ones. Useful for applying request params",2],["assert_index","Faraday::Builder","classes/Faraday/Builder.html#M000056","(index)","",2],["autoload_all","Faraday::AutoloadHelper","classes/Faraday/AutoloadHelper.html#M000131","(prefix, options)","",2],["backtrace","Faraday::Error::ClientError","classes/Faraday/Error/ClientError.html#M000072","()","",2],["basic_auth","Faraday::Connection","classes/Faraday/Connection.html#M000070","(login, pass)","",2],["body","Faraday::Response","classes/Faraday/Response.html#M000115","()","",2],["build","Faraday::Builder","classes/Faraday/Builder.html#M000037","(options = {})","",2],["build","Faraday::Builder::Handler","classes/Faraday/Builder/Handler.html#M000035","(app)","",2],["build","Faraday::Connection","classes/Faraday/Connection.html#M000061","(options = {}, &block)","",2],["build_nested_query","Object","classes/Object.html#M000150","(value, prefix = nil)","Override Rack's version since it doesn't handle non-String values ",2],["build_url","Faraday::Connection","classes/Faraday/Connection.html#M000082","(url, extra_params = nil)","Takes a relative url for a request and combines it with the defaults set on the connection instance.",2],["call","Faraday::Adapter","classes/Faraday/Adapter.html#M000029","(env)","",2],["call","Faraday::Adapter::ActionDispatch","classes/Faraday/Adapter/ActionDispatch.html#M000002","(env)","",2],["call","Faraday::Adapter::EMSynchrony","classes/Faraday/Adapter/EMSynchrony.html#M000000","(env)","",2],["call","Faraday::Adapter::Excon","classes/Faraday/Adapter/Excon.html#M000003","(env)","",2],["call","Faraday::Adapter::NetHttp","classes/Faraday/Adapter/NetHttp.html#M000004","(env)","",2],["call","Faraday::Adapter::Patron","classes/Faraday/Adapter/Patron.html#M000005","(env)","",2],["call","Faraday::Adapter::Test","classes/Faraday/Adapter/Test.html#M000027","(env)","",2],["call","Faraday::Adapter::Typhoeus","classes/Faraday/Adapter/Typhoeus.html#M000014","(env)","",2],["call","Faraday::Request::JSON","classes/Faraday/Request/JSON.html#M000089","(env)","",2],["call","Faraday::Request::Multipart","classes/Faraday/Request/Multipart.html#M000088","(env)","",2],["call","Faraday::Request::UrlEncoded","classes/Faraday/Request/UrlEncoded.html#M000094","(env)","",2],["call","Faraday::Response::Logger","classes/Faraday/Response/Logger.html#M000105","(env)","",2],["call","Faraday::Response::Middleware","classes/Faraday/Response/Middleware.html#M000109","(env)","",2],["configure","Faraday::Adapter::Test","classes/Faraday/Adapter/Test.html#M000026","()","",2],["convert_key","ParamsHash","classes/ParamsHash.html#M000149","(key)","",2],["create","Faraday::Builder","classes/Faraday/Builder.html#M000028","()","",2],["create","Faraday::Request","classes/Faraday/Request.html#M000098","(request_method)","",2],["create_multipart","Faraday::Request::Multipart","classes/Faraday/Request/Multipart.html#M000092","(env, params)","",2],["deep_merge","Object","classes/Object.html#M000154","(source, hash)","Recursive hash merge ",2],["deep_merge!","Object","classes/Object.html#M000153","(target, hash)","Recursive hash update ",2],["default_connection","Faraday","classes/Faraday.html#M000128","()","",2],["delete","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000017","(path, &block)","",2],["delete","Faraday::Builder","classes/Faraday/Builder.html#M000053","(handler)","",2],["delete","Faraday::Connection","classes/Faraday/Connection.html#M000068","(url = nil, headers = nil)","",2],["delete","ParamsHash","classes/ParamsHash.html#M000136","(key)","",2],["dependency","Faraday::Middleware","classes/Faraday/Middleware.html#M000081","(lib = nil)","Executes a block which should try to require and reference dependent libraries ",2],["dump_headers","Faraday::Response::Logger","classes/Faraday/Response/Logger.html#M000107","(headers)","",2],["dup","Faraday::Builder","classes/Faraday/Builder.html#M000040","()","",2],["dup","Faraday::Connection","classes/Faraday/Connection.html#M000085","()","",2],["empty?","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000009","()","",2],["escape","Object","classes/Object.html#M000151","(s)","Be sure to URI escape '+' symbols to %2B. Otherwise, they get interpreted as spaces. ",2],["finish","Faraday::Response","classes/Faraday/Response.html#M000118","(env)","",2],["finished?","Faraday::Response","classes/Faraday/Response.html#M000116","()","",2],["get","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000011","(path, &block)","",2],["get","Faraday::Connection","classes/Faraday/Connection.html#M000063","(url = nil, headers = nil)","",2],["has_key?","ParamsHash","classes/ParamsHash.html#M000139","(key)","Alias for #include?",2],["has_multipart?","Faraday::Request::Multipart","classes/Faraday/Request/Multipart.html#M000091","(body)","",2],["head","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000012","(path, &block)","",2],["head","Faraday::Connection","classes/Faraday/Connection.html#M000067","(url = nil, headers = nil)","",2],["headers","Faraday::Response","classes/Faraday/Response.html#M000114","()","",2],["in_parallel","Faraday::Connection","classes/Faraday/Connection.html#M000075","(manager)","",2],["in_parallel?","Faraday::Connection","classes/Faraday/Connection.html#M000074","()","",2],["include?","ParamsHash","classes/ParamsHash.html#M000137","(key)","",2],["insert","Faraday::Builder","classes/Faraday/Builder.html#M000048","(index, *args, &block)","methods to push onto the various positions in the stack: ",2],["insert_after","Faraday::Builder","classes/Faraday/Builder.html#M000050","(index, *args, &block)","",2],["insert_before","Faraday::Builder","classes/Faraday/Builder.html#M000049","(index, *args, &block)","Alias for #insert",2],["inspect","Faraday::Builder::Handler","classes/Faraday/Builder/Handler.html#M000033","()","",2],["inspect","Faraday::Error::ClientError","classes/Faraday/Error/ClientError.html#M000073","()","",2],["key?","ParamsHash","classes/ParamsHash.html#M000141","(key)","Alias for #include?",2],["klass","Faraday::Builder::Handler","classes/Faraday/Builder/Handler.html#M000032","()","",2],["load_autoloaded_constants","Faraday::AutoloadHelper","classes/Faraday/AutoloadHelper.html#M000133","()","Loads each autoloaded constant.  If thread safety is a concern, wrap this in a Mutex. ",2],["loaded?","Faraday::Adapter::Test","classes/Faraday/Adapter/Test.html#M000007","()","",2],["loaded?","Faraday::Middleware","classes/Faraday/Middleware.html#M000083","()","",2],["lock!","Faraday::Builder","classes/Faraday/Builder.html#M000042","()","Locks the middleware stack to ensure no further modifications are possible. ",2],["locked?","Faraday::Builder","classes/Faraday/Builder.html#M000043","()","",2],["lookup_module","Faraday::AutoloadHelper","classes/Faraday/AutoloadHelper.html#M000130","(key)","",2],["marshal_dump","Faraday::Response","classes/Faraday/Response.html#M000121","()","because @on_complete_callbacks cannot be marshalled ",2],["marshal_load","Faraday::Response","classes/Faraday/Response.html#M000122","(env)","",2],["match","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000010","(request_method, path, body)","",2],["match_content_type","Faraday::Request::UrlEncoded","classes/Faraday/Request/UrlEncoded.html#M000095","(env)","",2],["matches?","Faraday::Adapter::Test::Stub","classes/Faraday/Adapter/Test/Stub.html#M000022","(request_uri, request_body)","",2],["matches?","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000020","(stack, path, body)","",2],["member?","ParamsHash","classes/ParamsHash.html#M000140","(key)","Alias for #include?",2],["merge","ParamsHash","classes/ParamsHash.html#M000144","(params)","",2],["merge!","ParamsHash","classes/ParamsHash.html#M000143","(params)","Alias for #update",2],["merge_query","ParamsHash","classes/ParamsHash.html#M000146","(query)","",2],["method_missing","Faraday","classes/Faraday.html#M000125","(name, *args, &block)","",2],["net_http_class","Faraday::Adapter::NetHttp","classes/Faraday/Adapter/NetHttp.html#M000006","(env)","",2],["new","Faraday","classes/Faraday.html#M000124","(url = nil, options = {})","",2],["new","Faraday::Adapter::ActionDispatch","classes/Faraday/Adapter/ActionDispatch.html#M000001","(app, session)","Initializes a new middleware instance for each request.  Instead of initiating an HTTP request with a",2],["new","Faraday::Adapter::Test","classes/Faraday/Adapter/Test.html#M000025","(app, stubs=nil, &block)","",2],["new","Faraday::Adapter::Test::Stub","classes/Faraday/Adapter/Test/Stub.html#M000021","(full, body, block)","",2],["new","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000008","()","",2],["new","Faraday::Builder","classes/Faraday/Builder.html#M000036","(handlers = [])","",2],["new","Faraday::Builder::Handler","classes/Faraday/Builder/Handler.html#M000031","(klass, *args, &block)","",2],["new","Faraday::CompositeReadIO","classes/Faraday/CompositeReadIO.html#M000120","(parts)","",2],["new","Faraday::Connection","classes/Faraday/Connection.html#M000052","(url = nil, options = {})",":url :params :headers :request :ssl ",2],["new","Faraday::Error::ClientError","classes/Faraday/Error/ClientError.html#M000069","(ex)","",2],["new","Faraday::Middleware","classes/Faraday/Middleware.html#M000084","(app = nil)","",2],["new","Faraday::Request","classes/Faraday/Request.html#M000099","(request_method)","",2],["new","Faraday::Response","classes/Faraday/Response.html#M000112","(env = nil)","",2],["new","Faraday::Response::Logger","classes/Faraday/Response/Logger.html#M000104","(app, logger = nil)","",2],["new_stub","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000019","(request_method, path, body=nil, &block)","",2],["normalize_path","Object","classes/Object.html#M000152","(url)","Receives a URL and returns just the path with the query string sorted. ",2],["on_complete","Faraday::Response","classes/Faraday/Response.html#M000117","()","",2],["on_complete","Faraday::Response::Logger","classes/Faraday/Response/Logger.html#M000106","(env)","",2],["on_complete","Faraday::Response::Middleware","classes/Faraday/Response/Middleware.html#M000110","(env)","Override this to modify the environment after the response has finished. Calls the `parse` method if",2],["on_complete","Faraday::Response::RaiseError","classes/Faraday/Response/RaiseError.html#M000108","(env)","",2],["params_match?","Faraday::Adapter::Test::Stub","classes/Faraday/Adapter/Test/Stub.html#M000023","(request_params)","",2],["parse","Faraday","classes/Faraday.html#M000132","(header_string)","",2],["patch","Faraday::Connection","classes/Faraday/Connection.html#M000066","(url = nil, body = nil, headers = nil)","",2],["path_prefix=","Faraday::Connection","classes/Faraday/Connection.html#M000078","(value)","Ensures that the path prefix always has a leading / and no trailing / ",2],["post","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000015","(path, body=nil, &block)","",2],["post","Faraday::Connection","classes/Faraday/Connection.html#M000064","(url = nil, body = nil, headers = nil)","",2],["process_params","Faraday::Request::Multipart","classes/Faraday/Request/Multipart.html#M000093","(params, prefix = nil, pieces = nil, &block)","",2],["process_request?","Faraday::Request::Multipart","classes/Faraday/Request/Multipart.html#M000090","(env)","",2],["process_request?","Faraday::Request::UrlEncoded","classes/Faraday/Request/UrlEncoded.html#M000096","(env)","",2],["proxy","Faraday::Connection","classes/Faraday/Connection.html#M000076","(arg = nil)","",2],["proxy_arg_to_uri","Faraday::Connection","classes/Faraday/Connection.html#M000086","(arg)","",2],["put","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000016","(path, body=nil, &block)","",2],["put","Faraday::Connection","classes/Faraday/Connection.html#M000065","(url = nil, body = nil, headers = nil)","",2],["raise_if_locked","Faraday::Builder","classes/Faraday/Builder.html#M000054","()","",2],["register_lookup_modules","Faraday::AutoloadHelper","classes/Faraday/AutoloadHelper.html#M000129","(mods)","",2],["replace","ParamsHash","classes/ParamsHash.html#M000145","(other)","",2],["request","Faraday::Builder","classes/Faraday/Builder.html#M000045","(key, *args)","",2],["request","Faraday::Connection","classes/Faraday/Connection.html#M000058","(key, *args, &block)","",2],["request_type","Faraday::Request::UrlEncoded","classes/Faraday/Request/UrlEncoded.html#M000097","(env)","",2],["response","Faraday::Builder","classes/Faraday/Builder.html#M000046","(key, *args)","",2],["response","Faraday::Connection","classes/Faraday/Connection.html#M000059","(key, *args, &block)","",2],["response_values","Faraday::Response::RaiseError","classes/Faraday/Response/RaiseError.html#M000111","(env)","",2],["run_request","Faraday::Connection","classes/Faraday/Connection.html#M000079","(method, url, body, headers)","",2],["save_response","Faraday::Adapter","classes/Faraday/Adapter.html#M000030","(env, status, body, headers = nil)","",2],["setup_parallel_manager","Faraday::Adapter::Typhoeus","classes/Faraday/Adapter/Typhoeus.html#M000013","(options = {})","",2],["setup_parallel_manager","Faraday::Middleware","classes/Faraday/Middleware.html#M000080","(options = {})","valid parallel managers should respond to #run with no parameters. otherwise, return a short wrapper",2],["sort_query_params","Object","classes/Object.html#M000155","(query)","",2],["status","Faraday::Response","classes/Faraday/Response.html#M000113","()","",2],["success?","Faraday::Response","classes/Faraday/Response.html#M000119","()","",2],["swap","Faraday::Builder","classes/Faraday/Builder.html#M000051","(index, *args, &block)","",2],["tap","Object","classes/Object.html#M000147","()","Yields <code>x</code> to the block, and then returns <code>x</code>. The primary purpose of this method",2],["to_app","Faraday::Builder","classes/Faraday/Builder.html#M000041","(inner_app)","",2],["to_env","Faraday::Request","classes/Faraday/Request.html#M000103","(connection)","ENV Keys :method - a symbolized request method (:get, :post) :body   - the request body that will eventually",2],["to_query","ParamsHash","classes/ParamsHash.html#M000148","()","",2],["to_s","Faraday::Adapter::Test::Stub","classes/Faraday/Adapter/Test/Stub.html#M000024","()","",2],["token_auth","Faraday::Connection","classes/Faraday/Connection.html#M000071","(token, options = {})","",2],["update","ParamsHash","classes/ParamsHash.html#M000142","(params)","",2],["url","Faraday::Request","classes/Faraday/Request.html#M000100","(path, params = {})","",2],["url_prefix=","Faraday::Connection","classes/Faraday/Connection.html#M000077","(url)","Parses the giving url with Addressable::URI and stores the individual components in this connection.",2],["use","Faraday::Builder","classes/Faraday/Builder.html#M000044","(klass, *args)","",2],["use","Faraday::Connection","classes/Faraday/Connection.html#M000057","(klass, *args, &block)","",2],["use_symbol","Faraday::Builder","classes/Faraday/Builder.html#M000055","(mod, key, *args)","",2],["verify_stubbed_calls","Faraday::Adapter::Test::Stubs","classes/Faraday/Adapter/Test/Stubs.html#M000018","()","Raises an error if any of the stubbed calls have not been made. ",2],["LICENSE.md","files/LICENSE_md.html","files/LICENSE_md.html","","Copyright (c) 2009 rick olson, zack hobson  Permission is hereby granted, free of charge, to any person",3],["README.md","files/README_md.html","files/README_md.html","","faraday ======= Modular HTTP client library using middleware heavily inspired by Rack.  This mess is",3],["faraday.rb","files/lib/faraday_rb.html","files/lib/faraday_rb.html","","",3],["adapter.rb","files/lib/faraday/adapter_rb.html","files/lib/faraday/adapter_rb.html","","",3],["action_dispatch.rb","files/lib/faraday/adapter/action_dispatch_rb.html","files/lib/faraday/adapter/action_dispatch_rb.html","","",3],["em_synchrony.rb","files/lib/faraday/adapter/em_synchrony_rb.html","files/lib/faraday/adapter/em_synchrony_rb.html","","",3],["excon.rb","files/lib/faraday/adapter/excon_rb.html","files/lib/faraday/adapter/excon_rb.html","","",3],["net_http.rb","files/lib/faraday/adapter/net_http_rb.html","files/lib/faraday/adapter/net_http_rb.html","","",3],["patron.rb","files/lib/faraday/adapter/patron_rb.html","files/lib/faraday/adapter/patron_rb.html","","",3],["test.rb","files/lib/faraday/adapter/test_rb.html","files/lib/faraday/adapter/test_rb.html","","",3],["typhoeus.rb","files/lib/faraday/adapter/typhoeus_rb.html","files/lib/faraday/adapter/typhoeus_rb.html","","",3],["builder.rb","files/lib/faraday/builder_rb.html","files/lib/faraday/builder_rb.html","","",3],["connection.rb","files/lib/faraday/connection_rb.html","files/lib/faraday/connection_rb.html","","",3],["error.rb","files/lib/faraday/error_rb.html","files/lib/faraday/error_rb.html","","",3],["middleware.rb","files/lib/faraday/middleware_rb.html","files/lib/faraday/middleware_rb.html","","",3],["request.rb","files/lib/faraday/request_rb.html","files/lib/faraday/request_rb.html","","",3],["json.rb","files/lib/faraday/request/json_rb.html","files/lib/faraday/request/json_rb.html","","",3],["multipart.rb","files/lib/faraday/request/multipart_rb.html","files/lib/faraday/request/multipart_rb.html","","",3],["url_encoded.rb","files/lib/faraday/request/url_encoded_rb.html","files/lib/faraday/request/url_encoded_rb.html","","",3],["response.rb","files/lib/faraday/response_rb.html","files/lib/faraday/response_rb.html","","",3],["logger.rb","files/lib/faraday/response/logger_rb.html","files/lib/faraday/response/logger_rb.html","","",3],["raise_error.rb","files/lib/faraday/response/raise_error_rb.html","files/lib/faraday/response/raise_error_rb.html","","",3],["upload_io.rb","files/lib/faraday/upload_io_rb.html","files/lib/faraday/upload_io_rb.html","","",3],["utils.rb","files/lib/faraday/utils_rb.html","files/lib/faraday/utils_rb.html","","",3]],"searchIndex":["faraday","adapter","actiondispatch","emsynchrony","excon","nethttp","patron","test","stub","stubs","notfound","typhoeus","autoloadhelper","builder","handler","stacklocked","compositereadio","connection","error","clienterror","connectionfailed","missingdependency","parsingerror","resourcenotfound","middleware","request","json","multipart","urlencoded","response","logger","middleware","raiseerror","utils","headers","object","paramshash","==()","==()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","adapter()","adapter()","adapter()","all_loaded_constants()","app()","apply_request()","assert_index()","autoload_all()","backtrace()","basic_auth()","body()","build()","build()","build()","build_nested_query()","build_url()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","configure()","convert_key()","create()","create()","create_multipart()","deep_merge()","deep_merge!()","default_connection()","delete()","delete()","delete()","delete()","dependency()","dump_headers()","dup()","dup()","empty?()","escape()","finish()","finished?()","get()","get()","has_key?()","has_multipart?()","head()","head()","headers()","in_parallel()","in_parallel?()","include?()","insert()","insert_after()","insert_before()","inspect()","inspect()","key?()","klass()","load_autoloaded_constants()","loaded?()","loaded?()","lock!()","locked?()","lookup_module()","marshal_dump()","marshal_load()","match()","match_content_type()","matches?()","matches?()","member?()","merge()","merge!()","merge_query()","method_missing()","net_http_class()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_stub()","normalize_path()","on_complete()","on_complete()","on_complete()","on_complete()","params_match?()","parse()","patch()","path_prefix=()","post()","post()","process_params()","process_request?()","process_request?()","proxy()","proxy_arg_to_uri()","put()","put()","raise_if_locked()","register_lookup_modules()","replace()","request()","request()","request_type()","response()","response()","response_values()","run_request()","save_response()","setup_parallel_manager()","setup_parallel_manager()","sort_query_params()","status()","success?()","swap()","tap()","to_app()","to_env()","to_query()","to_s()","token_auth()","update()","url()","url_prefix=()","use()","use()","use_symbol()","verify_stubbed_calls()","license.md","readme.md","faraday.rb","adapter.rb","action_dispatch.rb","em_synchrony.rb","excon.rb","net_http.rb","patron.rb","test.rb","typhoeus.rb","builder.rb","connection.rb","error.rb","middleware.rb","request.rb","json.rb","multipart.rb","url_encoded.rb","response.rb","logger.rb","raise_error.rb","upload_io.rb","utils.rb"],"longSearchIndex":["lib/faraday.rb","faraday","faraday::adapter","faraday::adapter","faraday::adapter","faraday::adapter","faraday::adapter","faraday::adapter","faraday::adapter::test","faraday::adapter::test","faraday::adapter::test::stubs","faraday::adapter","faraday","faraday","faraday::builder","faraday::builder","faraday","faraday","faraday","faraday::error","faraday::error","faraday::error","faraday::error","faraday::error","faraday","faraday","faraday::request","faraday::request","faraday::request","faraday","faraday::response","faraday::response","faraday::response","faraday","faraday::utils","lib/faraday.rb","lib/faraday/utils.rb","faraday::builder","faraday::builder::handler","faraday","faraday::builder","faraday::request","paramshash","faraday","faraday::request","paramshash","faraday::builder","faraday::connection","faraday::request::json","faraday::autoloadhelper","faraday::connection","faraday::response","faraday::builder","faraday::autoloadhelper","faraday::error::clienterror","faraday::connection","faraday::response","faraday::builder","faraday::builder::handler","faraday::connection","object","faraday::connection","faraday::adapter","faraday::adapter::actiondispatch","faraday::adapter::emsynchrony","faraday::adapter::excon","faraday::adapter::nethttp","faraday::adapter::patron","faraday::adapter::test","faraday::adapter::typhoeus","faraday::request::json","faraday::request::multipart","faraday::request::urlencoded","faraday::response::logger","faraday::response::middleware","faraday::adapter::test","paramshash","faraday::builder","faraday::request","faraday::request::multipart","object","object","faraday","faraday::adapter::test::stubs","faraday::builder","faraday::connection","paramshash","faraday::middleware","faraday::response::logger","faraday::builder","faraday::connection","faraday::adapter::test::stubs","object","faraday::response","faraday::response","faraday::adapter::test::stubs","faraday::connection","paramshash","faraday::request::multipart","faraday::adapter::test::stubs","faraday::connection","faraday::response","faraday::connection","faraday::connection","paramshash","faraday::builder","faraday::builder","faraday::builder","faraday::builder::handler","faraday::error::clienterror","paramshash","faraday::builder::handler","faraday::autoloadhelper","faraday::adapter::test","faraday::middleware","faraday::builder","faraday::builder","faraday::autoloadhelper","faraday::response","faraday::response","faraday::adapter::test::stubs","faraday::request::urlencoded","faraday::adapter::test::stub","faraday::adapter::test::stubs","paramshash","paramshash","paramshash","paramshash","faraday","faraday::adapter::nethttp","faraday","faraday::adapter::actiondispatch","faraday::adapter::test","faraday::adapter::test::stub","faraday::adapter::test::stubs","faraday::builder","faraday::builder::handler","faraday::compositereadio","faraday::connection","faraday::error::clienterror","faraday::middleware","faraday::request","faraday::response","faraday::response::logger","faraday::adapter::test::stubs","object","faraday::response","faraday::response::logger","faraday::response::middleware","faraday::response::raiseerror","faraday::adapter::test::stub","faraday","faraday::connection","faraday::connection","faraday::adapter::test::stubs","faraday::connection","faraday::request::multipart","faraday::request::multipart","faraday::request::urlencoded","faraday::connection","faraday::connection","faraday::adapter::test::stubs","faraday::connection","faraday::builder","faraday::autoloadhelper","paramshash","faraday::builder","faraday::connection","faraday::request::urlencoded","faraday::builder","faraday::connection","faraday::response::raiseerror","faraday::connection","faraday::adapter","faraday::adapter::typhoeus","faraday::middleware","object","faraday::response","faraday::response","faraday::builder","object","faraday::builder","faraday::request","paramshash","faraday::adapter::test::stub","faraday::connection","paramshash","faraday::request","faraday::connection","faraday::builder","faraday::connection","faraday::builder","faraday::adapter::test::stubs","files/license_md.html","files/readme_md.html","files/lib/faraday_rb.html","files/lib/faraday/adapter_rb.html","files/lib/faraday/adapter/action_dispatch_rb.html","files/lib/faraday/adapter/em_synchrony_rb.html","files/lib/faraday/adapter/excon_rb.html","files/lib/faraday/adapter/net_http_rb.html","files/lib/faraday/adapter/patron_rb.html","files/lib/faraday/adapter/test_rb.html","files/lib/faraday/adapter/typhoeus_rb.html","files/lib/faraday/builder_rb.html","files/lib/faraday/connection_rb.html","files/lib/faraday/error_rb.html","files/lib/faraday/middleware_rb.html","files/lib/faraday/request_rb.html","files/lib/faraday/request/json_rb.html","files/lib/faraday/request/multipart_rb.html","files/lib/faraday/request/url_encoded_rb.html","files/lib/faraday/response_rb.html","files/lib/faraday/response/logger_rb.html","files/lib/faraday/response/raise_error_rb.html","files/lib/faraday/upload_io_rb.html","files/lib/faraday/utils_rb.html"]}}