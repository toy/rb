var search_data = {"index":{"longSearchIndex":["lib/bencode/core_ext/array.rb","lib/bencode.rb","bencode","bencode","lib/bencode/core_ext/hash.rb","lib/bencode/core_ext/io.rb","lib/bencode/core_ext/integer.rb","lib/bencode/core_ext/object.rb","lib/bencode/decode.rb","io","io","string","array","hash","io","io","integer","object","string","bencode","bencode","bencode","files/license.html","files/readme_md.html","files/lib/bencode_rb.html","files/lib/bencode/core_ext/array_rb.html","files/lib/bencode/core_ext/hash_rb.html","files/lib/bencode/core_ext/integer_rb.html","files/lib/bencode/core_ext/io_rb.html","files/lib/bencode/core_ext/object_rb.html","files/lib/bencode/core_ext/string_rb.html","files/lib/bencode/decode_rb.html"],"info":[["Array","lib/bencode/core_ext/array.rb","classes/Array.html"," < Object","",1],["BEncode","lib/bencode/decode.rb","classes/BEncode.html"," < ","Support for loading and dumping bencoded data. See {BEncode.load} and {BEncode.dump}. ",1],["DecodeError","BEncode","classes/BEncode/DecodeError.html"," < StandardError","",1],["EncodeError","BEncode","classes/BEncode/EncodeError.html"," < StandardError","",1],["Hash","lib/bencode/core_ext/hash.rb","classes/Hash.html"," < Object","",1],["IO","lib/bencode/core_ext/io.rb","classes/IO.html"," < Object","",1],["Integer","lib/bencode/core_ext/integer.rb","classes/Integer.html"," < Object","",1],["Object","lib/bencode/core_ext/object.rb","classes/Object.html"," < Object","",1],["String","lib/bencode/core_ext/string.rb","classes/String.html"," < Object","",1],["bdecode","IO","classes/IO.html#M000003","(filename)","",2],["bdecode","IO","classes/IO.html#M000005","()","",2],["bdecode","String","classes/String.html#M000013","()","Bdecodes the String object and returns the data serialized through bencoding. \"li1ei2ei3ee\".bdecode ",2],["bencode","Array","classes/Array.html#M000000","()","Bencodes the Array object. Bencoded arrays are represented as +lxe+, where +x+ is zero or more bencoded",2],["bencode","Hash","classes/Hash.html#M000001","()","Bencodes the Hash object. Bencoded hashes are represented as +dxe+, where +x+ is zero or a power of two",2],["bencode","IO","classes/IO.html#M000006","()","",2],["bencode","IO","classes/IO.html#M000004","(filename)","",2],["bencode","Integer","classes/Integer.html#M000002","()","Bencodes the Integer object. Bencoded integers are represented as +ixe+, where +x+ is the integer with",2],["bencode","Object","classes/Object.html#M000007","()","Raises an exception. Subclasses of Object must themselves define meaningful #bencode methods. ",2],["bencode","String","classes/String.html#M000008","()","Bencodes the String object. Bencoded strings are represented as <code>x</code>:<code>y</code>, where",2],["dump","BEncode","classes/BEncode.html#M000009","(obj)","Encodes the Ruby object +obj+ into a bencoded string. @param [Hash, Array, Integer, String] obj the object",2],["load","BEncode","classes/BEncode.html#M000010","(str, opts = {})","Decodes +str+ into a Ruby structure. @param [String] str a bencoded string @option opts [Boolean] :ignore_trailing_junk",2],["load_file","BEncode","classes/BEncode.html#M000011","(path, opts = {})","Decodes the file located at +path+. @param [String] path path to the bencoded file @option (see .load)",2],["LICENSE","files/LICENSE.html","files/LICENSE.html",""," Copyright (c) 2009 Daniel Schierbeck  Permission is hereby granted, free of charge, to any person obtaining",3],["README.md","files/README_md.html","files/README_md.html",""," Ruby bencode binding ====================  This is a simple library for reading and writing bencoded",3],["bencode.rb","files/lib/bencode_rb.html","files/lib/bencode_rb.html","","Support for loading and dumping bencoded data. See {BEncode.load} and {BEncode.dump}. ",3],["array.rb","files/lib/bencode/core_ext/array_rb.html","files/lib/bencode/core_ext/array_rb.html","","",3],["hash.rb","files/lib/bencode/core_ext/hash_rb.html","files/lib/bencode/core_ext/hash_rb.html","","",3],["integer.rb","files/lib/bencode/core_ext/integer_rb.html","files/lib/bencode/core_ext/integer_rb.html","","",3],["io.rb","files/lib/bencode/core_ext/io_rb.html","files/lib/bencode/core_ext/io_rb.html","","",3],["object.rb","files/lib/bencode/core_ext/object_rb.html","files/lib/bencode/core_ext/object_rb.html","","",3],["string.rb","files/lib/bencode/core_ext/string_rb.html","files/lib/bencode/core_ext/string_rb.html","","",3],["decode.rb","files/lib/bencode/decode_rb.html","files/lib/bencode/decode_rb.html","","",3]],"searchIndex":["array","bencode","decodeerror","encodeerror","hash","io","integer","object","string","bdecode()","bdecode()","bdecode()","bencode()","bencode()","bencode()","bencode()","bencode()","bencode()","bencode()","dump()","load()","load_file()","license","readme.md","bencode.rb","array.rb","hash.rb","integer.rb","io.rb","object.rb","string.rb","decode.rb"]}}