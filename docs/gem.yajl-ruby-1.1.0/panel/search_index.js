var search_data = {"index":{"info":[["JSON","lib/yajl/json_gem/encoding.rb","classes/JSON.html"," < ","",1],["GeneratorError","JSON","classes/JSON/GeneratorError.html"," < JSONError","",1],["JSONError","JSON","classes/JSON/JSONError.html"," < StandardError","",1],["ParserError","JSON","classes/JSON/ParserError.html"," < JSONError","",1],["Kernel","lib/yajl/json_gem.rb","classes/Kernel.html"," < ","",1],["Object","lib/yajl/json_gem/encoding.rb","classes/Object.html"," < Object","",1],["Yajl","lib/yajl/bzip2/stream_reader.rb","classes/Yajl.html"," < ","= Yajl Ruby bindings to the excellent Yajl (Yet Another JSON Parser) ANSI C library. ",1],["Bzip2","Yajl","classes/Yajl/Bzip2.html"," < ","",1],["StreamReader","Yajl::Bzip2","classes/Yajl/Bzip2/StreamReader.html"," < ::Bzip2::Reader","This is a wrapper around Bzip::Reader to allow it's #read method to adhere to the IO spec, allowing for",1],["StreamWriter","Yajl::Bzip2","classes/Yajl/Bzip2/StreamWriter.html"," < ::Bzip2::Writer","A wrapper around the Bzip2::Writer class for easier JSON stream encoding ",1],["Deflate","Yajl","classes/Yajl/Deflate.html"," < ","",1],["StreamReader","Yajl::Deflate","classes/Yajl/Deflate/StreamReader.html"," < ::Zlib::Inflate","This is a wrapper around Zlib::Inflate, creating a #read method that adheres to the IO spec, allowing",1],["StreamWriter","Yajl::Deflate","classes/Yajl/Deflate/StreamWriter.html"," < ::Zlib::Deflate","A wrapper around the Zlib::Deflate class for easier JSON stream parsing ",1],["Encoder","Yajl","classes/Yajl/Encoder.html"," < Object","",1],["Gzip","Yajl","classes/Yajl/Gzip.html"," < ","",1],["StreamReader","Yajl::Gzip","classes/Yajl/Gzip/StreamReader.html"," < ::Zlib::GzipReader","This is a wrapper around Zlib::GzipReader to allow it's #read method to adhere to the IO spec, allowing",1],["StreamWriter","Yajl::Gzip","classes/Yajl/Gzip/StreamWriter.html"," < ::Zlib::GzipWriter","Wraper around the Zlib::GzipWriter class ",1],["HttpStream","Yajl","classes/Yajl/HttpStream.html"," < Object","This module is for making HTTP requests to which the response bodies (and possibly requests in the near",1],["HttpError","Yajl::HttpStream","classes/Yajl/HttpStream/HttpError.html"," < StandardError","",1],["InvalidContentType","Yajl::HttpStream","classes/Yajl/HttpStream/InvalidContentType.html"," < Exception","This Exception is thrown when an HTTP response isn't in ALLOWED_MIME_TYPES and therefore cannot be parsed.",1],["Parser","Yajl","classes/Yajl/Parser.html"," < Object","",1],["JSON","Kernel","classes/Kernel.html#M000029","(object, opts = {})","",2],["default_options","JSON","classes/JSON.html#M000021","()","",2],["delete","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000024","(uri, opts = {}, &block)","Makes a basic HTTP DELETE request to the URI provided ",2],["delete","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000025","(uri, opts = {}, &block)","Makes a basic HTTP DELETE request to the URI provided allowing the user to terminate the connection ",2],["dump","JSON","classes/JSON.html#M000016","(obj, io=nil, *args)","",2],["dump","Yajl","classes/Yajl.html#M000031","(obj, *args, &block)","For compatibility, has the same signature of Yajl::Encoder.encode ",2],["encode","Yajl::Bzip2::StreamWriter","classes/Yajl/Bzip2/StreamWriter.html#M000002","(obj, io)","A helper method for encoding to a bzip2-compressed stream Look up Yajl::Encoder#encode for parameter",2],["encode","Yajl::Deflate::StreamWriter","classes/Yajl/Deflate/StreamWriter.html#M000007","(obj, io)","A helper method for one-off encoding to a deflate-compressed stream Look up Yajl::Encoder#encode for",2],["encode","Yajl::Encoder","classes/Yajl/Encoder.html#M000033","(obj, *args, &block)","A helper method for encode-and-forget use-cases Examples: Yajl::Encoder.encode(obj[, io, :pretty => true,",2],["encode","Yajl::Gzip::StreamWriter","classes/Yajl/Gzip/StreamWriter.html#M000010","(obj, io)","A helper method for one-off encoding to a gzip-compressed stream Look up Yajl::Encoder#encode for parameter",2],["generate","JSON","classes/JSON.html#M000012","(obj, opts={})","",2],["get","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000017","(uri, opts = {}, &block)","Makes a basic HTTP GET request to the URI provided allowing the user to terminate the connection ",2],["get","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000015","(uri, opts = {}, &block)","Makes a basic HTTP GET request to the URI provided ",2],["initialize_socket","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000034","(uri, opts = {})","Initialize socket and add it to the opts ",2],["load","JSON","classes/JSON.html#M000026","(input, *args)","",2],["load","Yajl","classes/Yajl.html#M000030","(str_or_io, options={}, read_bufsize=nil, &block)","For compatibility, has the same signature of Yajl::Parser.parse ",2],["new","Yajl::Deflate::StreamReader","classes/Yajl/Deflate/StreamReader.html#M000003","(io, options)","Wrapper to the initialize method so we can set the initial IO to parse from. ",2],["new","Yajl::HttpStream::HttpError","classes/Yajl/HttpStream/HttpError.html#M000014","(message, headers)","",2],["parse","JSON","classes/JSON.html#M000022","(str, opts=JSON.default_options)","",2],["parse","Yajl::Bzip2::StreamReader","classes/Yajl/Bzip2/StreamReader.html#M000001","(input, options={}, buffer_size=nil, &block)","Helper method for one-off parsing from a bzip2-compressed stream See Yajl::Parser#parse for parameter",2],["parse","Yajl::Deflate::StreamReader","classes/Yajl/Deflate/StreamReader.html#M000005","(input, options={}, buffer_size=nil, &block)","Helper method for one-off parsing from a deflate-compressed stream See Yajl::Parser#parse for parameter",2],["parse","Yajl::Gzip::StreamReader","classes/Yajl/Gzip/StreamReader.html#M000009","(input, options={}, buffer_size=nil, &block)","Helper method for one-off parsing from a gzip-compressed stream See Yajl::Parser#parse for parameter",2],["parse","Yajl::Parser","classes/Yajl/Parser.html#M000032","(str_or_io, options={}, read_bufsize=nil, &block)","A helper method for parse-and-forget use-cases +io+ is the stream to parse JSON from The +options+ hash",2],["post","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000019","(uri, body, opts = {}, &block)","Makes a basic HTTP POST request to the URI provided allowing the user to terminate the connection ",2],["post","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000018","(uri, body, opts = {}, &block)","Makes a basic HTTP POST request to the URI provided ",2],["pretty_generate","JSON","classes/JSON.html#M000013","(obj, opts={})","",2],["put","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000020","(uri, body, opts = {}, &block)","Makes a basic HTTP PUT request to the URI provided ",2],["put","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000023","(uri, body, opts = {}, &block)","Makes a basic HTTP PUT request to the URI provided allowing the user to terminate the connection ",2],["read","Yajl::Bzip2::StreamReader","classes/Yajl/Bzip2/StreamReader.html#M000000","(len=nil, buffer=nil)","A helper method to allow use similar to IO#read ",2],["read","Yajl::Deflate::StreamReader","classes/Yajl/Deflate/StreamReader.html#M000004","(len=nil, buffer=nil)","A helper method to allow use similar to IO#read ",2],["read","Yajl::Gzip::StreamReader","classes/Yajl/Gzip/StreamReader.html#M000008","(len=nil, buffer=nil)","A helper method to allow use similar to IO#read ",2],["request","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000028","(method, uri, opts = {}, &block)","",2],["terminate","Yajl::HttpStream","classes/Yajl/HttpStream.html#M000027","()","Terminate a running HTTPStream instance ",2],["to_json","Object","classes/Object.html#M000011","(*args, &block)","",2],["write","Yajl::Deflate::StreamWriter","classes/Yajl/Deflate/StreamWriter.html#M000006","(str)","A helper method to allow use similar to IO#write ",2],["CHANGELOG.md","files/CHANGELOG_md.html","files/CHANGELOG_md.html","","# Changelog  ## 1.1.0 (November 9th, 2011) * fix compilation due to a \"bug\" in gcc-llvm on 10.7.2 * fix",3],["MIT-LICENSE","files/MIT-LICENSE.html","files/MIT-LICENSE.html","","Copyright (c) 2008-2011 Brian Lopez - http://github.com/brianmario  Permission is hereby granted, free",3],["README.md","files/README_md.html","files/README_md.html","","# YAJL C Bindings for Ruby  This gem is a C binding to the excellent YAJL JSON parsing and generation",3],["yajl.rb","files/lib/yajl_rb.html","files/lib/yajl_rb.html","","",3],["bzip2.rb","files/lib/yajl/bzip2_rb.html","files/lib/yajl/bzip2_rb.html","","",3],["stream_reader.rb","files/lib/yajl/bzip2/stream_reader_rb.html","files/lib/yajl/bzip2/stream_reader_rb.html","","",3],["stream_writer.rb","files/lib/yajl/bzip2/stream_writer_rb.html","files/lib/yajl/bzip2/stream_writer_rb.html","","",3],["deflate.rb","files/lib/yajl/deflate_rb.html","files/lib/yajl/deflate_rb.html","","",3],["stream_reader.rb","files/lib/yajl/deflate/stream_reader_rb.html","files/lib/yajl/deflate/stream_reader_rb.html","","",3],["stream_writer.rb","files/lib/yajl/deflate/stream_writer_rb.html","files/lib/yajl/deflate/stream_writer_rb.html","","",3],["gzip.rb","files/lib/yajl/gzip_rb.html","files/lib/yajl/gzip_rb.html","","",3],["stream_reader.rb","files/lib/yajl/gzip/stream_reader_rb.html","files/lib/yajl/gzip/stream_reader_rb.html","","",3],["stream_writer.rb","files/lib/yajl/gzip/stream_writer_rb.html","files/lib/yajl/gzip/stream_writer_rb.html","","",3],["http_stream.rb","files/lib/yajl/http_stream_rb.html","files/lib/yajl/http_stream_rb.html","","",3],["json_gem.rb","files/lib/yajl/json_gem_rb.html","files/lib/yajl/json_gem_rb.html","","",3],["encoding.rb","files/lib/yajl/json_gem/encoding_rb.html","files/lib/yajl/json_gem/encoding_rb.html","","",3],["parsing.rb","files/lib/yajl/json_gem/parsing_rb.html","files/lib/yajl/json_gem/parsing_rb.html","","",3],["version.rb","files/lib/yajl/version_rb.html","files/lib/yajl/version_rb.html","","",3]],"searchIndex":["json","generatorerror","jsonerror","parsererror","kernel","object","yajl","bzip2","streamreader","streamwriter","deflate","streamreader","streamwriter","encoder","gzip","streamreader","streamwriter","httpstream","httperror","invalidcontenttype","parser","json()","default_options()","delete()","delete()","dump()","dump()","encode()","encode()","encode()","encode()","generate()","get()","get()","initialize_socket()","load()","load()","new()","new()","parse()","parse()","parse()","parse()","parse()","post()","post()","pretty_generate()","put()","put()","read()","read()","read()","request()","terminate()","to_json()","write()","changelog.md","mit-license","readme.md","yajl.rb","bzip2.rb","stream_reader.rb","stream_writer.rb","deflate.rb","stream_reader.rb","stream_writer.rb","gzip.rb","stream_reader.rb","stream_writer.rb","http_stream.rb","json_gem.rb","encoding.rb","parsing.rb","version.rb"],"longSearchIndex":["lib/yajl/json_gem/parsing.rb","json","json","json","lib/yajl/json_gem.rb","lib/yajl/json_gem/encoding.rb","lib/yajl.rb","yajl","yajl::bzip2","yajl::bzip2","yajl","yajl::deflate","yajl::deflate","yajl","yajl","yajl::gzip","yajl::gzip","yajl","yajl::httpstream","yajl::httpstream","yajl","kernel","json","yajl::httpstream","yajl::httpstream","json","yajl","yajl::bzip2::streamwriter","yajl::deflate::streamwriter","yajl::encoder","yajl::gzip::streamwriter","json","yajl::httpstream","yajl::httpstream","yajl::httpstream","json","yajl","yajl::deflate::streamreader","yajl::httpstream::httperror","json","yajl::bzip2::streamreader","yajl::deflate::streamreader","yajl::gzip::streamreader","yajl::parser","yajl::httpstream","yajl::httpstream","json","yajl::httpstream","yajl::httpstream","yajl::bzip2::streamreader","yajl::deflate::streamreader","yajl::gzip::streamreader","yajl::httpstream","yajl::httpstream","object","yajl::deflate::streamwriter","files/changelog_md.html","files/mit-license.html","files/readme_md.html","files/lib/yajl_rb.html","files/lib/yajl/bzip2_rb.html","files/lib/yajl/bzip2/stream_reader_rb.html","files/lib/yajl/bzip2/stream_writer_rb.html","files/lib/yajl/deflate_rb.html","files/lib/yajl/deflate/stream_reader_rb.html","files/lib/yajl/deflate/stream_writer_rb.html","files/lib/yajl/gzip_rb.html","files/lib/yajl/gzip/stream_reader_rb.html","files/lib/yajl/gzip/stream_writer_rb.html","files/lib/yajl/http_stream_rb.html","files/lib/yajl/json_gem_rb.html","files/lib/yajl/json_gem/encoding_rb.html","files/lib/yajl/json_gem/parsing_rb.html","files/lib/yajl/version_rb.html"]}}