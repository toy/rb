var search_data = {"index":{"info":[["MultiJson","lib/multi_json/engines/json_common.rb","classes/MultiJson.html"," < ","Some parts adapted from http://golang.org/src/pkg/json/decode.go and http://golang.org/src/pkg/utf8/utf8.go",1],["DecodeError","MultiJson","classes/MultiJson/DecodeError.html"," < StandardError","",1],["Engines","MultiJson","classes/MultiJson/Engines.html"," < ","",1],["JsonCommon","MultiJson::Engines","classes/MultiJson/Engines/JsonCommon.html"," < ","",1],["JsonGem","MultiJson::Engines","classes/MultiJson/Engines/JsonGem.html"," < Object","Use the JSON gem to encode/decode. ",1],["JsonPure","MultiJson::Engines","classes/MultiJson/Engines/JsonPure.html"," < Object","Use JSON pure to encode/decode. ",1],["OkJson","MultiJson::Engines","classes/MultiJson/Engines/OkJson.html"," < Object","",1],["Yajl","MultiJson::Engines","classes/MultiJson/Engines/Yajl.html"," < Object","Use the Yajl-Ruby library to encode/decode. ",1],["OkJson","MultiJson","classes/MultiJson/OkJson.html"," < ","",1],["Error","MultiJson::OkJson","classes/MultiJson/OkJson/Error.html"," < ::StandardError","",1],["abbrev","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000030","(s)","",2],["arrenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000041","(a)","",2],["arrparse","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000021","(ts)","Parses an \"array\" in the sense of RFC 4627. Returns the parsed value and any trailing tokens. ",2],["decode","MultiJson","classes/MultiJson.html#M000017","(string, options = {})","Decode a JSON string into Ruby. <b>Options</b> <tt>:symbolize_keys</tt> :: If true, will use symbols",2],["decode","MultiJson::Engines::JsonCommon","classes/MultiJson/Engines/JsonCommon.html#M000000","(string, options = {})","",2],["decode","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000010","(s)","Decodes a json document in string s and returns the corresponding ruby value. String s must be valid",2],["default_engine","MultiJson","classes/MultiJson.html#M000014","()","The default engine based on what you currently have loaded and installed. First checks to see if any",2],["eat","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000022","(typ, ts)","",2],["encode","MultiJson","classes/MultiJson.html#M000019","(object, options = {})","Encodes a Ruby object as JSON. ",2],["encode","MultiJson::Engines::JsonCommon","classes/MultiJson/Engines/JsonCommon.html#M000001","(object, options = {})","",2],["encode","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000038","(x)","Encodes x into a json text. It may contain only Array, Hash, String, Numeric, true, false, nil. (Note,",2],["engine","MultiJson","classes/MultiJson.html#M000012","()","Get the current engine class. ",2],["engine=","MultiJson","classes/MultiJson.html#M000016","(new_engine)","Set the JSON parser utilizing a symbol, string, or class. Supported by default are: * <tt>:json_gem</tt>",2],["falsetok","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000027","(s)","",2],["hexdec4","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000033","(s)","",2],["hexenc4","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000044","(t, u)","",2],["keyenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000042","(k)","",2],["lex","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000023","(s)","Sans s and returns a list of json tokens, excluding white space (as defined in RFC 4627). ",2],["new","MultiJson::DecodeError","classes/MultiJson/DecodeError.html#M000011","(message, backtrace, data)","",2],["nibble","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000037","(c)","",2],["nulltok","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000025","(s)","",2],["numenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000045","(x)","",2],["numtok","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000028","(s)","",2],["objenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000040","(x)","",2],["objparse","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000018","(ts)","Parses an \"object\" in the sense of RFC 4627. Returns the parsed value and any trailing tokens. ",2],["pairparse","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000020","(ts)","Parses a \"member\" in the sense of RFC 4627. Returns the parsed values and any trailing tokens. ",2],["process_options","MultiJson::Engines::JsonCommon","classes/MultiJson/Engines/JsonCommon.html#M000002","(options={})","",2],["strenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000043","(s)","",2],["strtok","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000029","(s)","",2],["subst","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000034","(u1, u2)","",2],["surrogate?","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000036","(u)","",2],["textparse","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000013","(ts)","Parses a \"json text\" in the sense of RFC 4627. Returns the parsed value and any trailing tokens. Note:",2],["tok","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000024","(s)","Scans the first token in s and returns a 3-element list, or nil if no such token exists. The first list",2],["truetok","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000026","(s)","",2],["uchardec","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000046","(s, i)","Decodes unicode character u from UTF-8 bytes in string s at position i. Returns u and the number of bytes",2],["ucharenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000032","(a, i, u)","Encodes unicode character u as UTF-8 bytes in string a at position i. Returns the number of bytes written.",2],["unquote","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000031","(q)","Converts a quoted json string literal q into a UTF-8-encoded string. The rules are different than for",2],["unsubst","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000035","(u)","",2],["valenc","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000039","(x)","",2],["valparse","MultiJson::OkJson","classes/MultiJson/OkJson.html#M000015","(ts)","Parses a \"value\" in the sense of RFC 4627. Returns the parsed value and any trailing tokens. ",2],["LICENSE.md","files/LICENSE_md.html","files/LICENSE_md.html","","Copyright (c) 2010 Michael Bleigh, Josh Kalderimis, Erik Michaels-Ober, and Intridea, Inc.  Permission",3],["README.md","files/README_md.html","files/README_md.html","","# MultiJSON Lots of Ruby libraries utilize JSON parsing in some form, and everyone has their favorite",3],["multi_json.rb","files/lib/multi_json_rb.html","files/lib/multi_json_rb.html","","",3],["json_common.rb","files/lib/multi_json/engines/json_common_rb.html","files/lib/multi_json/engines/json_common_rb.html","","",3],["json_gem.rb","files/lib/multi_json/engines/json_gem_rb.html","files/lib/multi_json/engines/json_gem_rb.html","","",3],["json_pure.rb","files/lib/multi_json/engines/json_pure_rb.html","files/lib/multi_json/engines/json_pure_rb.html","","",3],["ok_json.rb","files/lib/multi_json/engines/ok_json_rb.html","files/lib/multi_json/engines/ok_json_rb.html","","",3],["yajl.rb","files/lib/multi_json/engines/yajl_rb.html","files/lib/multi_json/engines/yajl_rb.html","","",3],["ok_json.rb","files/lib/multi_json/vendor/ok_json_rb.html","files/lib/multi_json/vendor/ok_json_rb.html","","Copyright 2011 Keith Rarick Permission is hereby granted, free of charge, to any person obtaining a copy",3],["version.rb","files/lib/multi_json/version_rb.html","files/lib/multi_json/version_rb.html","","",3]],"searchIndex":["multijson","decodeerror","engines","jsoncommon","jsongem","jsonpure","okjson","yajl","okjson","error","abbrev()","arrenc()","arrparse()","decode()","decode()","decode()","default_engine()","eat()","encode()","encode()","encode()","engine()","engine=()","falsetok()","hexdec4()","hexenc4()","keyenc()","lex()","new()","nibble()","nulltok()","numenc()","numtok()","objenc()","objparse()","pairparse()","process_options()","strenc()","strtok()","subst()","surrogate?()","textparse()","tok()","truetok()","uchardec()","ucharenc()","unquote()","unsubst()","valenc()","valparse()","license.md","readme.md","multi_json.rb","json_common.rb","json_gem.rb","json_pure.rb","ok_json.rb","yajl.rb","ok_json.rb","version.rb"],"longSearchIndex":["lib/multi_json.rb","multijson","multijson","multijson::engines","multijson::engines","multijson::engines","multijson::engines","multijson::engines","multijson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson","multijson::engines::jsoncommon","multijson::okjson","multijson","multijson::okjson","multijson","multijson::engines::jsoncommon","multijson::okjson","multijson","multijson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::decodeerror","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::engines::jsoncommon","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","multijson::okjson","files/license_md.html","files/readme_md.html","files/lib/multi_json_rb.html","files/lib/multi_json/engines/json_common_rb.html","files/lib/multi_json/engines/json_gem_rb.html","files/lib/multi_json/engines/json_pure_rb.html","files/lib/multi_json/engines/ok_json_rb.html","files/lib/multi_json/engines/yajl_rb.html","files/lib/multi_json/vendor/ok_json_rb.html","files/lib/multi_json/version_rb.html"]}}