var search_data = {"index":{"info":[["Array","lib/will_paginate/array.rb","classes/Array.html"," < Object","",1],["Object","lib/will_paginate/core_ext.rb","classes/Object.html"," < Object","",1],["ActionView","WillPaginate","classes/WillPaginate/ActionView.html"," < ","= ActionView helpers This module serves for availability in ActionView templates. It also adds a new",1],["LinkRenderer","WillPaginate::ActionView","classes/WillPaginate/ActionView/LinkRenderer.html"," < ViewHelpers::LinkRenderer","",1],["ActiveRecord","WillPaginate","classes/WillPaginate/ActiveRecord.html"," < ","= Paginating finders for ActiveRecord models WillPaginate adds +paginate+, +per_page+ and other methods",1],["BaseMethods","WillPaginate::ActiveRecord","classes/WillPaginate/ActiveRecord/BaseMethods.html"," < ","",1],["Pagination","WillPaginate::ActiveRecord","classes/WillPaginate/ActiveRecord/Pagination.html"," < ","",1],["RelationMethods","WillPaginate::ActiveRecord","classes/WillPaginate/ActiveRecord/RelationMethods.html"," < ","makes a Relation look like WillPaginate::Collection ",1],["Collection","WillPaginate","classes/WillPaginate/Collection.html"," < Array","= The key to pagination Arrays returned from paginating finds are, in fact, instances of this little",1],["CollectionMethods","WillPaginate","classes/WillPaginate/CollectionMethods.html"," < ","Any will_paginate-compatible collection should have these methods: current_page, per_page, offset, total_entries,",1],["DataMapper","WillPaginate","classes/WillPaginate/DataMapper.html"," < ","",1],["CollectionMethods","WillPaginate::DataMapper","classes/WillPaginate/DataMapper/CollectionMethods.html"," < ","",1],["Pagination","WillPaginate::DataMapper","classes/WillPaginate/DataMapper/Pagination.html"," < ","",1],["Deprecation","WillPaginate","classes/WillPaginate/Deprecation.html"," < ","",1],["Hash","WillPaginate::Deprecation","classes/WillPaginate/Deprecation/Hash.html"," < ::Hash","",1],["I18n","WillPaginate","classes/WillPaginate/I18n.html"," < ","",1],["InvalidPage","WillPaginate","classes/WillPaginate/InvalidPage.html"," < ","a module that page number exceptions are tagged with ",1],["Merb","WillPaginate","classes/WillPaginate/Merb.html"," < ","",1],["LinkRenderer","WillPaginate::Merb","classes/WillPaginate/Merb/LinkRenderer.html"," < ViewHelpers::LinkRenderer","",1],["PageNumber","WillPaginate","classes/WillPaginate/PageNumber.html"," < DelegateClass(Integer)","integer representing a page number ",1],["PerPage","WillPaginate","classes/WillPaginate/PerPage.html"," < ","",1],["Inheritance","WillPaginate::PerPage","classes/WillPaginate/PerPage/Inheritance.html"," < ","",1],["Railtie","WillPaginate","classes/WillPaginate/Railtie.html"," < Rails::Railtie","",1],["ControllerRescuePatch","WillPaginate::Railtie","classes/WillPaginate/Railtie/ControllerRescuePatch.html"," < ","",1],["ShowExceptionsPatch","WillPaginate::Railtie","classes/WillPaginate/Railtie/ShowExceptionsPatch.html"," < ","Extending the exception handler middleware so it properly detects WillPaginate::InvalidPage regardless",1],["SequelMethods","WillPaginate","classes/WillPaginate/SequelMethods.html"," < ","Sequel already supports pagination; we only need to make the resulting dataset look a bit more like WillPaginate::Collection",1],["Sinatra","WillPaginate","classes/WillPaginate/Sinatra.html"," < ","",1],["Helpers","WillPaginate::Sinatra","classes/WillPaginate/Sinatra/Helpers.html"," < ","",1],["LinkRenderer","WillPaginate::Sinatra","classes/WillPaginate/Sinatra/LinkRenderer.html"," < ViewHelpers::LinkRenderer","",1],["ViewHelpers","WillPaginate","classes/WillPaginate/ViewHelpers.html"," < ","= Will Paginate view helpers The main view helper is +will_paginate+. It renders the pagination links",1],["LinkRenderer","WillPaginate::ViewHelpers","classes/WillPaginate/ViewHelpers/LinkRenderer.html"," < LinkRendererBase","This class does the heavy lifting of actually building the pagination links. It is used by +will_paginate+",1],["LinkRendererBase","WillPaginate::ViewHelpers","classes/WillPaginate/ViewHelpers/LinkRendererBase.html"," < Object","This class does the heavy lifting of actually building the pagination links. It is used by +will_paginate+",1],["[]=","WillPaginate::Deprecation::Hash","classes/WillPaginate/Deprecation/Hash.html#M000040","(key, value)","",2],["add_current_page_param","WillPaginate::ActionView::LinkRenderer","classes/WillPaginate/ActionView/LinkRenderer.html#M000080","(url_params, page)","",2],["add_locale_path","WillPaginate::Railtie","classes/WillPaginate/Railtie.html#M000060","(config)","",2],["build_query","WillPaginate::Sinatra::LinkRenderer","classes/WillPaginate/Sinatra/LinkRenderer.html#M000106","(params)","",2],["check_deprecated","WillPaginate::Deprecation::Hash","classes/WillPaginate/Deprecation/Hash.html#M000044","(key, value)","",2],["clone","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000008","()","",2],["container_attributes","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000083","()","Returns the subset of +options+ this instance was initialized with that represent HTML attributes for",2],["copy_will_paginate_data","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000011","(other)","",2],["count","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000005","()","",2],["create","WillPaginate::Collection","classes/WillPaginate/Collection.html#M000020","(page, per_page, total = nil)","Just like +new+, but yields the object after instantiation and returns it afterwards. This is very useful",2],["current_page","WillPaginate::ViewHelpers::LinkRendererBase","classes/WillPaginate/ViewHelpers/LinkRendererBase.html#M000100","()","",2],["default_url_params","WillPaginate::ActionView::LinkRenderer","classes/WillPaginate/ActionView/LinkRenderer.html#M000075","()","",2],["deprecate_key","WillPaginate::Deprecation::Hash","classes/WillPaginate/Deprecation/Hash.html#M000041","(*keys)","",2],["empty?","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000007","()","overloaded to be pagination-aware ",2],["except","Object","classes/Object.html#M000024","(*keys)","Returns a new hash without the given keys. ",2],["except!","Object","classes/Object.html#M000025","(*keys)","Replaces the hash without only the given keys. ",2],["extended","WillPaginate::PerPage","classes/WillPaginate/PerPage.html#M000057","(base)","",2],["gap","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000085","()","",2],["html_container","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000089","(html)","",2],["infer_collection_from_controller","WillPaginate::ActionView","classes/WillPaginate/ActionView.html#M000074","()","",2],["inherited","WillPaginate::PerPage::Inheritance","classes/WillPaginate/PerPage/Inheritance.html#M000058","(subclass)","",2],["initialize_copy","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000035","(original)","",2],["inspect","WillPaginate::PageNumber","classes/WillPaginate/PageNumber.html#M000049","()","",2],["is_a?","WillPaginate::PageNumber","classes/WillPaginate/PageNumber.html#M000052","(klass)","Alias for #kind_of?",2],["kind_of?","WillPaginate::PageNumber","classes/WillPaginate/PageNumber.html#M000051","(klass)","",2],["length","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000064","()","Alias for #size",2],["limit","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000002","(num)","TODO: solve with less relation clones and code dups ",2],["link","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000092","(text, target, attributes = {})","",2],["load_path","WillPaginate::I18n","classes/WillPaginate/I18n.html#M000046","()","",2],["locale_dir","WillPaginate::I18n","classes/WillPaginate/I18n.html#M000045","()","",2],["merge","WillPaginate::Deprecation::Hash","classes/WillPaginate/Deprecation/Hash.html#M000042","(another)","",2],["merge_get_params","WillPaginate::ActionView::LinkRenderer","classes/WillPaginate/ActionView/LinkRenderer.html#M000077","(url_params)","",2],["merge_optional_params","WillPaginate::ActionView::LinkRenderer","classes/WillPaginate/ActionView/LinkRenderer.html#M000078","(url_params)","",2],["new","WillPaginate::Collection","classes/WillPaginate/Collection.html#M000019","(page, per_page = WillPaginate.per_page, total = nil)","Arguments to the constructor are the current page number, per-page limit and the total number of entries.",2],["new","WillPaginate::Deprecation::Hash","classes/WillPaginate/Deprecation/Hash.html#M000039","(values = {})","",2],["new","WillPaginate::PageNumber","classes/WillPaginate/PageNumber.html#M000048","(value, name)","",2],["new_collection","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000034","(query, resources = nil)","",2],["next_page","WillPaginate::CollectionMethods","classes/WillPaginate/CollectionMethods.html#M000016","()","current_page + 1 or nil if there is no next page ",2],["next_page","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000087","()","",2],["offset","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000003","(value = nil)","",2],["offset","WillPaginate::Collection","classes/WillPaginate/Collection.html#M000021","()","Current offset of the paginated collection. If we're on the first page, it is always 0. If we're on the",2],["offset","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000031","()","",2],["offset","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000067","()","Current offset of the paginated collection ",2],["origin_of_call","WillPaginate::Deprecation","classes/WillPaginate/Deprecation.html#M000038","(stack)","",2],["out_of_bounds?","WillPaginate::CollectionMethods","classes/WillPaginate/CollectionMethods.html#M000017","()","Helper method that is true when someone tries to fetch a page with a larger number than the last page.",2],["out_of_bounds?","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000066","()","",2],["page","WillPaginate::ActiveRecord::Pagination","classes/WillPaginate/ActiveRecord/Pagination.html#M000013","(num)","",2],["page","WillPaginate::DataMapper::Pagination","classes/WillPaginate/DataMapper/Pagination.html#M000027","(num)","",2],["page_entries_info","WillPaginate::ViewHelpers","classes/WillPaginate/ViewHelpers.html#M000109","(collection, options = {})","Renders a message containing number of displayed vs. total entries. <%= page_entries_info @posts %> #->",2],["page_number","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000084","(page)","",2],["paginate","Array","classes/Array.html#M000001","(options = {})","Paginates a static array (extracting a subset of it). The result is a WillPaginate::Collection instance,",2],["paginate","WillPaginate::ActiveRecord::Pagination","classes/WillPaginate/ActiveRecord/Pagination.html#M000012","(options)","",2],["paginate","WillPaginate::DataMapper::Pagination","classes/WillPaginate/DataMapper/Pagination.html#M000028","(options)","",2],["paginate_by_sql","WillPaginate::ActiveRecord::BaseMethods","classes/WillPaginate/ActiveRecord/BaseMethods.html#M000018","(sql, options)","Wraps +find_by_sql+ by simply adding LIMIT and OFFSET to your SQL string based on the params otherwise",2],["paginated?","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000029","()","",2],["paginated_section","WillPaginate::ActionView","classes/WillPaginate/ActionView.html#M000072","(*args, &block)","Wrapper for rendering pagination links at both top and bottom of a block of content. <% paginated_section",2],["pagination","WillPaginate::ViewHelpers::LinkRendererBase","classes/WillPaginate/ViewHelpers/LinkRendererBase.html#M000097","()","",2],["param_name","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000091","()","",2],["parse_query_parameters","WillPaginate::ActionView::LinkRenderer","classes/WillPaginate/ActionView/LinkRenderer.html#M000081","(params)","",2],["per_page","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000000","(value = nil)","",2],["per_page","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000030","()","",2],["per_page","WillPaginate::PerPage","classes/WillPaginate/PerPage.html#M000055","()","",2],["per_page","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000062","()","",2],["per_page=","WillPaginate::PerPage","classes/WillPaginate/PerPage.html#M000056","(limit)","",2],["prepare","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000079","(collection, options, template)","* +collection+ is a WillPaginate::Collection instance or any other object that conforms to that API *",2],["prepare","WillPaginate::ViewHelpers::LinkRendererBase","classes/WillPaginate/ViewHelpers/LinkRendererBase.html#M000096","(collection, options)","* +collection+ is a WillPaginate::Collection instance or any other object that conforms to that API *",2],["previous_or_next_page","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000088","(page, text, classname)","",2],["previous_page","WillPaginate::CollectionMethods","classes/WillPaginate/CollectionMethods.html#M000015","()","current_page - 1 or nil if there is no previous page ",2],["previous_page","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000086","()","",2],["rails_logger","WillPaginate::Deprecation","classes/WillPaginate/Deprecation.html#M000037","()","",2],["registered","WillPaginate::Sinatra","classes/WillPaginate/Sinatra.html#M000107","(app)","",2],["rel_value","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000094","(page)","",2],["replace","WillPaginate::Collection","classes/WillPaginate/Collection.html#M000023","(array)","This is a magic wrapper for the original Array#replace method. It serves for populating the paginated",2],["request","WillPaginate::Sinatra::LinkRenderer","classes/WillPaginate/Sinatra/LinkRenderer.html#M000105","()","",2],["rescue_from","WillPaginate::Railtie::ControllerRescuePatch","classes/WillPaginate/Railtie/ControllerRescuePatch.html#M000069","(*args, &block)","",2],["scoped","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000009","(options = nil)","workaround for Active Record 3.0 ",2],["setup_actioncontroller","WillPaginate::Railtie","classes/WillPaginate/Railtie.html#M000059","()","",2],["size","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000006","()","workaround for Active Record 3.0 ",2],["size","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000063","()","",2],["status_code_with_paginate","WillPaginate::Railtie::ShowExceptionsPatch","classes/WillPaginate/Railtie/ShowExceptionsPatch.html#M000068","(exception)","",2],["symbolized_update","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000095","(target, other)","",2],["tag","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000093","(name, value, attributes = {})","",2],["to_a","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000010","()","",2],["to_a","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000033","()","",2],["to_hash","WillPaginate::Deprecation::Hash","classes/WillPaginate/Deprecation/Hash.html#M000043","()","",2],["to_html","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000082","()","Process it! This method returns the complete HTML string which contains pagination links. Feel free to",2],["to_offset","WillPaginate::PageNumber","classes/WillPaginate/PageNumber.html#M000050","(per_page)","",2],["total_entries","WillPaginate::ActiveRecord::RelationMethods","classes/WillPaginate/ActiveRecord/RelationMethods.html#M000004","()","",2],["total_entries","WillPaginate::DataMapper::CollectionMethods","classes/WillPaginate/DataMapper/CollectionMethods.html#M000032","()","",2],["total_entries","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000065","()","",2],["total_entries=","WillPaginate::Collection","classes/WillPaginate/Collection.html#M000022","(number)","",2],["total_pages","WillPaginate::CollectionMethods","classes/WillPaginate/CollectionMethods.html#M000014","()","",2],["total_pages","WillPaginate::SequelMethods","classes/WillPaginate/SequelMethods.html#M000061","()","",2],["total_pages","WillPaginate::ViewHelpers::LinkRendererBase","classes/WillPaginate/ViewHelpers/LinkRendererBase.html#M000101","()","",2],["underscore","Object","classes/Object.html#M000026","()","",2],["url","WillPaginate::ActionView::LinkRenderer","classes/WillPaginate/ActionView/LinkRenderer.html#M000076","(page)","",2],["url","WillPaginate::Merb::LinkRenderer","classes/WillPaginate/Merb/LinkRenderer.html#M000102","(page)","",2],["url","WillPaginate::Sinatra::LinkRenderer","classes/WillPaginate/Sinatra/LinkRenderer.html#M000104","(page)","",2],["url","WillPaginate::ViewHelpers::LinkRenderer","classes/WillPaginate/ViewHelpers/LinkRenderer.html#M000090","(page)","Returns URL params for +page_link_or_span+, taking the current GET params and <tt>:params</tt> option",2],["warn","WillPaginate::Deprecation","classes/WillPaginate/Deprecation.html#M000036","(message, stack = caller)","",2],["will_paginate","WillPaginate::ViewHelpers","classes/WillPaginate/ViewHelpers.html#M000108","(collection, options = {})","Returns HTML representing page links for a WillPaginate::Collection-like object. In case there is no",2],["will_paginate_translate","WillPaginate::ActionView","classes/WillPaginate/ActionView.html#M000073","(keys, options = {})","",2],["will_paginate_translate","WillPaginate::I18n","classes/WillPaginate/I18n.html#M000047","(keys, options = {})","",2],["windowed_page_numbers","WillPaginate::ViewHelpers::LinkRendererBase","classes/WillPaginate/ViewHelpers/LinkRendererBase.html#M000098","()","Calculates visible page numbers using the <tt>:inner_window</tt> and <tt>:outer_window</tt> options.",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2009 Mislav Marohnić  Permission is hereby granted, free of charge, to any person obtaining",3],["README.md","files/README_md.html","files/README_md.html","","# will_paginate  will_paginate is a pagination library that integrates with Ruby on Rails, Sinatra, Merb,",3],["will_paginate.rb","files/lib/will_paginate_rb.html","files/lib/will_paginate_rb.html","","You will paginate! ",3],["active_record.rb","files/lib/will_paginate/active_record_rb.html","files/lib/will_paginate/active_record_rb.html","","",3],["array.rb","files/lib/will_paginate/array_rb.html","files/lib/will_paginate/array_rb.html","","",3],["collection.rb","files/lib/will_paginate/collection_rb.html","files/lib/will_paginate/collection_rb.html","","",3],["core_ext.rb","files/lib/will_paginate/core_ext_rb.html","files/lib/will_paginate/core_ext_rb.html","","",3],["data_mapper.rb","files/lib/will_paginate/data_mapper_rb.html","files/lib/will_paginate/data_mapper_rb.html","","",3],["deprecation.rb","files/lib/will_paginate/deprecation_rb.html","files/lib/will_paginate/deprecation_rb.html","","",3],["i18n.rb","files/lib/will_paginate/i18n_rb.html","files/lib/will_paginate/i18n_rb.html","","",3],["en.yml","files/lib/will_paginate/locale/en_yml.html","files/lib/will_paginate/locale/en_yml.html","","en:   will_paginate:     previous_label: \"&#8592; Previous\"     next_label: \"Next &#8594;\"     page_gap:",3],["page_number.rb","files/lib/will_paginate/page_number_rb.html","files/lib/will_paginate/page_number_rb.html","","",3],["per_page.rb","files/lib/will_paginate/per_page_rb.html","files/lib/will_paginate/per_page_rb.html","","",3],["railtie.rb","files/lib/will_paginate/railtie_rb.html","files/lib/will_paginate/railtie_rb.html","","",3],["sequel.rb","files/lib/will_paginate/sequel_rb.html","files/lib/will_paginate/sequel_rb.html","","",3],["version.rb","files/lib/will_paginate/version_rb.html","files/lib/will_paginate/version_rb.html","","",3],["view_helpers.rb","files/lib/will_paginate/view_helpers_rb.html","files/lib/will_paginate/view_helpers_rb.html","","encoding: utf-8 ",3],["action_view.rb","files/lib/will_paginate/view_helpers/action_view_rb.html","files/lib/will_paginate/view_helpers/action_view_rb.html","","",3],["link_renderer.rb","files/lib/will_paginate/view_helpers/link_renderer_rb.html","files/lib/will_paginate/view_helpers/link_renderer_rb.html","","",3],["link_renderer_base.rb","files/lib/will_paginate/view_helpers/link_renderer_base_rb.html","files/lib/will_paginate/view_helpers/link_renderer_base_rb.html","","",3],["merb.rb","files/lib/will_paginate/view_helpers/merb_rb.html","files/lib/will_paginate/view_helpers/merb_rb.html","","",3],["sinatra.rb","files/lib/will_paginate/view_helpers/sinatra_rb.html","files/lib/will_paginate/view_helpers/sinatra_rb.html","","",3]],"searchIndex":["array","object","actionview","linkrenderer","activerecord","basemethods","pagination","relationmethods","collection","collectionmethods","datamapper","collectionmethods","pagination","deprecation","hash","i18n","invalidpage","merb","linkrenderer","pagenumber","perpage","inheritance","railtie","controllerrescuepatch","showexceptionspatch","sequelmethods","sinatra","helpers","linkrenderer","viewhelpers","linkrenderer","linkrendererbase","[]=()","add_current_page_param()","add_locale_path()","build_query()","check_deprecated()","clone()","container_attributes()","copy_will_paginate_data()","count()","create()","current_page()","default_url_params()","deprecate_key()","empty?()","except()","except!()","extended()","gap()","html_container()","infer_collection_from_controller()","inherited()","initialize_copy()","inspect()","is_a?()","kind_of?()","length()","limit()","link()","load_path()","locale_dir()","merge()","merge_get_params()","merge_optional_params()","new()","new()","new()","new_collection()","next_page()","next_page()","offset()","offset()","offset()","offset()","origin_of_call()","out_of_bounds?()","out_of_bounds?()","page()","page()","page_entries_info()","page_number()","paginate()","paginate()","paginate()","paginate_by_sql()","paginated?()","paginated_section()","pagination()","param_name()","parse_query_parameters()","per_page()","per_page()","per_page()","per_page()","per_page=()","prepare()","prepare()","previous_or_next_page()","previous_page()","previous_page()","rails_logger()","registered()","rel_value()","replace()","request()","rescue_from()","scoped()","setup_actioncontroller()","size()","size()","status_code_with_paginate()","symbolized_update()","tag()","to_a()","to_a()","to_hash()","to_html()","to_offset()","total_entries()","total_entries()","total_entries()","total_entries=()","total_pages()","total_pages()","total_pages()","underscore()","url()","url()","url()","url()","warn()","will_paginate()","will_paginate_translate()","will_paginate_translate()","windowed_page_numbers()","license","readme.md","will_paginate.rb","active_record.rb","array.rb","collection.rb","core_ext.rb","data_mapper.rb","deprecation.rb","i18n.rb","en.yml","page_number.rb","per_page.rb","railtie.rb","sequel.rb","version.rb","view_helpers.rb","action_view.rb","link_renderer.rb","link_renderer_base.rb","merb.rb","sinatra.rb"],"longSearchIndex":["lib/will_paginate/array.rb","lib/will_paginate/core_ext.rb","willpaginate","willpaginate::actionview","willpaginate","willpaginate::activerecord","willpaginate::activerecord","willpaginate::activerecord","willpaginate","willpaginate","willpaginate","willpaginate::datamapper","willpaginate::datamapper","willpaginate","willpaginate::deprecation","willpaginate","willpaginate","willpaginate","willpaginate::merb","willpaginate","willpaginate","willpaginate::perpage","willpaginate","willpaginate::railtie","willpaginate::railtie","willpaginate","willpaginate","willpaginate::sinatra","willpaginate::sinatra","willpaginate","willpaginate::viewhelpers","willpaginate::viewhelpers","willpaginate::deprecation::hash","willpaginate::actionview::linkrenderer","willpaginate::railtie","willpaginate::sinatra::linkrenderer","willpaginate::deprecation::hash","willpaginate::activerecord::relationmethods","willpaginate::viewhelpers::linkrenderer","willpaginate::activerecord::relationmethods","willpaginate::activerecord::relationmethods","willpaginate::collection","willpaginate::viewhelpers::linkrendererbase","willpaginate::actionview::linkrenderer","willpaginate::deprecation::hash","willpaginate::activerecord::relationmethods","object","object","willpaginate::perpage","willpaginate::viewhelpers::linkrenderer","willpaginate::viewhelpers::linkrenderer","willpaginate::actionview","willpaginate::perpage::inheritance","willpaginate::datamapper::collectionmethods","willpaginate::pagenumber","willpaginate::pagenumber","willpaginate::pagenumber","willpaginate::sequelmethods","willpaginate::activerecord::relationmethods","willpaginate::viewhelpers::linkrenderer","willpaginate::i18n","willpaginate::i18n","willpaginate::deprecation::hash","willpaginate::actionview::linkrenderer","willpaginate::actionview::linkrenderer","willpaginate::collection","willpaginate::deprecation::hash","willpaginate::pagenumber","willpaginate::datamapper::collectionmethods","willpaginate::collectionmethods","willpaginate::viewhelpers::linkrenderer","willpaginate::activerecord::relationmethods","willpaginate::collection","willpaginate::datamapper::collectionmethods","willpaginate::sequelmethods","willpaginate::deprecation","willpaginate::collectionmethods","willpaginate::sequelmethods","willpaginate::activerecord::pagination","willpaginate::datamapper::pagination","willpaginate::viewhelpers","willpaginate::viewhelpers::linkrenderer","array","willpaginate::activerecord::pagination","willpaginate::datamapper::pagination","willpaginate::activerecord::basemethods","willpaginate::datamapper::collectionmethods","willpaginate::actionview","willpaginate::viewhelpers::linkrendererbase","willpaginate::viewhelpers::linkrenderer","willpaginate::actionview::linkrenderer","willpaginate::activerecord::relationmethods","willpaginate::datamapper::collectionmethods","willpaginate::perpage","willpaginate::sequelmethods","willpaginate::perpage","willpaginate::viewhelpers::linkrenderer","willpaginate::viewhelpers::linkrendererbase","willpaginate::viewhelpers::linkrenderer","willpaginate::collectionmethods","willpaginate::viewhelpers::linkrenderer","willpaginate::deprecation","willpaginate::sinatra","willpaginate::viewhelpers::linkrenderer","willpaginate::collection","willpaginate::sinatra::linkrenderer","willpaginate::railtie::controllerrescuepatch","willpaginate::activerecord::relationmethods","willpaginate::railtie","willpaginate::activerecord::relationmethods","willpaginate::sequelmethods","willpaginate::railtie::showexceptionspatch","willpaginate::viewhelpers::linkrenderer","willpaginate::viewhelpers::linkrenderer","willpaginate::activerecord::relationmethods","willpaginate::datamapper::collectionmethods","willpaginate::deprecation::hash","willpaginate::viewhelpers::linkrenderer","willpaginate::pagenumber","willpaginate::activerecord::relationmethods","willpaginate::datamapper::collectionmethods","willpaginate::sequelmethods","willpaginate::collection","willpaginate::collectionmethods","willpaginate::sequelmethods","willpaginate::viewhelpers::linkrendererbase","object","willpaginate::actionview::linkrenderer","willpaginate::merb::linkrenderer","willpaginate::sinatra::linkrenderer","willpaginate::viewhelpers::linkrenderer","willpaginate::deprecation","willpaginate::viewhelpers","willpaginate::actionview","willpaginate::i18n","willpaginate::viewhelpers::linkrendererbase","files/license.html","files/readme_md.html","files/lib/will_paginate_rb.html","files/lib/will_paginate/active_record_rb.html","files/lib/will_paginate/array_rb.html","files/lib/will_paginate/collection_rb.html","files/lib/will_paginate/core_ext_rb.html","files/lib/will_paginate/data_mapper_rb.html","files/lib/will_paginate/deprecation_rb.html","files/lib/will_paginate/i18n_rb.html","files/lib/will_paginate/locale/en_yml.html","files/lib/will_paginate/page_number_rb.html","files/lib/will_paginate/per_page_rb.html","files/lib/will_paginate/railtie_rb.html","files/lib/will_paginate/sequel_rb.html","files/lib/will_paginate/version_rb.html","files/lib/will_paginate/view_helpers_rb.html","files/lib/will_paginate/view_helpers/action_view_rb.html","files/lib/will_paginate/view_helpers/link_renderer_rb.html","files/lib/will_paginate/view_helpers/link_renderer_base_rb.html","files/lib/will_paginate/view_helpers/merb_rb.html","files/lib/will_paginate/view_helpers/sinatra_rb.html"]}}