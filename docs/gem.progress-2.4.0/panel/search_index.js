var search_data = {"index":{"longSearchIndex":["lib/progress/active_record.rb","activerecord","activerecord","lib/progress/enumerable.rb","lib/progress/integer.rb","lib/progress.rb","lib/progress.rb","progress","kernel","progress::withprogress","progress","activerecord::batcheswithprogress","activerecord::batcheswithprogress","progress","progress","progress","progress","progress","progress","progress","progress::withprogress","progress","progress","progress","progress","progress","progress","progress","progress","progress","progress","progress","progress","progress","progress","integer","progress","enumerable","progress::withprogress","files/license_txt.html","files/readme_markdown.html","files/lib/progress_rb.html","files/lib/progress/active_record_rb.html","files/lib/progress/enumerable_rb.html","files/lib/progress/integer_rb.html","files/lib/progress/with_progress_rb.html"],"info":[["ActiveRecord","lib/progress/active_record.rb","classes/ActiveRecord.html"," < ","",1],["Base","ActiveRecord","classes/ActiveRecord/Base.html"," < Object","",1],["BatchesWithProgress","ActiveRecord","classes/ActiveRecord/BatchesWithProgress.html"," < ","",1],["Enumerable","lib/progress/enumerable.rb","classes/Enumerable.html"," < ","",1],["Integer","lib/progress/integer.rb","classes/Integer.html"," < Object","",1],["Kernel","lib/progress.rb","classes/Kernel.html"," < ","",1],["Progress","lib/progress/with_progress.rb","classes/Progress.html"," < Object","==== Procedural example Progress.start('Test', 1000) 1000.times do Progress.step do # do something end",1],["WithProgress","Progress","classes/Progress/WithProgress.html"," < Object","",1],["Progress","Kernel","classes/Kernel.html#M000030","(title = nil, total = nil, &block)","",2],["each","Progress::WithProgress","classes/Progress/WithProgress.html#M000005","()","each object with progress ",2],["eta","Progress","classes/Progress.html#M000023","(completed)","",2],["find_each_with_progress","ActiveRecord::BatchesWithProgress","classes/ActiveRecord/BatchesWithProgress.html#M000000","(options = {})","run `find_each` with progress ",2],["find_in_batches_with_progress","ActiveRecord::BatchesWithProgress","classes/ActiveRecord/BatchesWithProgress.html#M000001","(options = {})","run `find_in_batches` with progress ",2],["highlight?","Progress","classes/Progress.html#M000021","()","",2],["io","Progress","classes/Progress.html#M000018","()","",2],["io_tty?","Progress","classes/Progress.html#M000019","()","",2],["levels","Progress","classes/Progress.html#M000017","()","",2],["lines?","Progress","classes/Progress.html#M000020","()","",2],["lock","Progress","classes/Progress.html#M000025","(force)","",2],["new","Progress","classes/Progress.html#M000007","(title, total)","",2],["new","Progress::WithProgress","classes/Progress/WithProgress.html#M000004","(enumerable, title, length = nil, &block)","initialize with object responding to each, title and optional length if block is provided, it is passed",2],["note=","Progress","classes/Progress.html#M000016","(s)","set note ",2],["print_message","Progress","classes/Progress.html#M000029","(force = false)","",2],["restart_beeper","Progress","classes/Progress.html#M000028","()","",2],["running?","Progress","classes/Progress.html#M000015","()","check in block of showing progress ",2],["set","Progress","classes/Progress.html#M000013","(value, &block)","set current progress to `value` ",2],["set_title","Progress","classes/Progress.html#M000024","(title)","",2],["start","Progress","classes/Progress.html#M000011","(title = nil, total = nil)","start progress indication ",2],["start_beeper","Progress","classes/Progress.html#M000026","()","",2],["step","Progress","classes/Progress.html#M000012","(num = 1, den = 1, &block)","step current progress by `num / den` ",2],["step","Progress","classes/Progress.html#M000010","(steps)","",2],["step_if_blank","Progress","classes/Progress.html#M000008","()","",2],["stop","Progress","classes/Progress.html#M000014","()","stop progress ",2],["stop_beeper","Progress","classes/Progress.html#M000027","()","",2],["time_to_print?","Progress","classes/Progress.html#M000022","()","",2],["times_with_progress","Integer","classes/Integer.html#M000003","(title = nil)","run `times` with progress 100.times_with_progress('Numbers') do |number| # code end ",2],["to_f","Progress","classes/Progress.html#M000009","(inner)","",2],["with_progress","Enumerable","classes/Enumerable.html#M000002","(title = nil, length = nil, &block)","run any Enumerable method with progress methods which don't necessarily go through all items (like find,",2],["with_progress","Progress::WithProgress","classes/Progress/WithProgress.html#M000006","(title = nil, length = nil, &block)","returns self but changes title ",2],["LICENSE.txt","files/LICENSE_txt.html","files/LICENSE_txt.html","","Copyright (c) 2010-2011 Ivan Kuchin  Permission is hereby granted, free of charge, to any person obtaining",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","# progress  Show progress during console script run.  ## Installation      gem install progress  ## Usage",3],["progress.rb","files/lib/progress_rb.html","files/lib/progress_rb.html","","",3],["active_record.rb","files/lib/progress/active_record_rb.html","files/lib/progress/active_record_rb.html","","",3],["enumerable.rb","files/lib/progress/enumerable_rb.html","files/lib/progress/enumerable_rb.html","","",3],["integer.rb","files/lib/progress/integer_rb.html","files/lib/progress/integer_rb.html","","",3],["with_progress.rb","files/lib/progress/with_progress_rb.html","files/lib/progress/with_progress_rb.html","","",3]],"searchIndex":["activerecord","base","batcheswithprogress","enumerable","integer","kernel","progress","withprogress","progress()","each()","eta()","find_each_with_progress()","find_in_batches_with_progress()","highlight?()","io()","io_tty?()","levels()","lines?()","lock()","new()","new()","note=()","print_message()","restart_beeper()","running?()","set()","set_title()","start()","start_beeper()","step()","step()","step_if_blank()","stop()","stop_beeper()","time_to_print?()","times_with_progress()","to_f()","with_progress()","with_progress()","license.txt","readme.markdown","progress.rb","active_record.rb","enumerable.rb","integer.rb","with_progress.rb"]}}