var search_data = {"index":{"info":[["Wirble","lib/wirble.rb","classes/Wirble.html"," < ","Wirble: A collection of useful Irb features. To use, add the following to your ~/.irbrc: require 'rubygems'",1],["Colorize","Wirble","classes/Wirble/Colorize.html"," < ","Add color support to IRB. ",1],["Color","Wirble::Colorize","classes/Wirble/Colorize/Color.html"," < ","Terminal escape codes for colors. ",1],["Tokenizer","Wirble::Colorize","classes/Wirble/Colorize/Tokenizer.html"," < ","Tokenize an inspection string. ",1],["History","Wirble","classes/Wirble/History.html"," < Object","Basic IRB history support.  This is based on the tips from  http://wiki.rubygarden.org/Ruby/page/show/Irb/TipsAndTricks",1],["Internals","Wirble","classes/Wirble/Internals.html"," < ","Load internal Ruby features, including pp, tab-completion,  and a simple prompt. ",1],["RiShortcut","Wirble","classes/Wirble/RiShortcut.html"," < ","Convenient shortcut for ri ",1],["Shortcuts","Wirble","classes/Wirble/Shortcuts.html"," < ","Convenient shortcut methods. ",1],["cfg","Wirble::History","classes/Wirble/History.html#M000004","(key)","",2],["colorize","Wirble","classes/Wirble.html#M000024","(custom_colors = nil)","Enable color results. ",2],["colorize","Wirble::Colorize","classes/Wirble/Colorize.html#M000013","(str)","Colorize the results of inspect ",2],["colorize_string","Wirble::Colorize","classes/Wirble/Colorize.html#M000012","(str, color)","Return a string with the given color. ",2],["colors","Wirble::Colorize","classes/Wirble/Colorize.html#M000011","()","Get current color map ",2],["colors=","Wirble::Colorize","classes/Wirble/Colorize.html#M000010","(hash)","Set color map to hash ",2],["disable","Wirble::Colorize","classes/Wirble/Colorize.html#M000017","()","Disable colorized IRB results. ",2],["enable","Wirble::Colorize","classes/Wirble/Colorize.html#M000014","(custom_colors = nil)","Enable colorized IRB results. ",2],["escape","Wirble::Colorize::Color","classes/Wirble/Colorize/Color.html#M000009","(key)","Return the escape code for a given color. ",2],["init","Wirble","classes/Wirble.html#M000025","(opt = nil)","Load everything except color. ",2],["init","Wirble::Internals","classes/Wirble/Internals.html#M000002","(opt = nil)","Load all Ruby internal features. ",2],["init","Wirble::RiShortcut","classes/Wirble/RiShortcut.html#M000021","()","",2],["init_libraries","Wirble::Internals","classes/Wirble/Internals.html#M000000","()","load libraries ",2],["init_prompt","Wirble::Internals","classes/Wirble/Internals.html#M000001","()","Set a simple prompt, unless a custom one has been specified. ",2],["load_history","Wirble::History","classes/Wirble/History.html#M000006","()","",2],["new","Wirble::History","classes/Wirble/History.html#M000007","(opt = nil)","",2],["non_color_output_value","Wirble::Colorize","classes/Wirble/Colorize.html#M000016","()","Alias for #output_value",2],["output_value","Wirble::Colorize","classes/Wirble/Colorize.html#M000015","()","",2],["output_value","Wirble::Colorize","classes/Wirble/Colorize.html#M000018","()","Alias for #non_color_output_value",2],["po","Wirble::Shortcuts","classes/Wirble/Shortcuts.html#M000019","(o)","Print object methods, sorted by name. (excluding methods that exist in the class Object) . ",2],["poc","Wirble::Shortcuts","classes/Wirble/Shortcuts.html#M000020","(o)","Print object constants, sorted by name. ",2],["ri","Wirble::RiShortcut","classes/Wirble/RiShortcut.html#M000023","(meth=nil)","",2],["ri","Wirble::RiShortcut","classes/Wirble/RiShortcut.html#M000022","(arg)","",2],["save_history","Wirble::History","classes/Wirble/History.html#M000005","()","",2],["say","Wirble::History","classes/Wirble/History.html#M000003","(*args)","",2],["tokenize","Wirble::Colorize::Tokenizer","classes/Wirble/Colorize/Tokenizer.html#M000008","(str)","",2],["COPYING","files/COPYING.html","files/COPYING.html","","Copyright (C) 2006-2009 Paul Duncan <pabs@pablotron.org>   Permission is hereby granted, free of charge,",3],["ChangeLog","files/ChangeLog.html","files/ChangeLog.html",""," * Wed Sep 06 00:01:21 2006, pabs <pabs@pablotron.org>   * initial import  * Wed Sep 06 00:10:13 2006,",3],["README","files/README.html","files/README.html","","Wirble 0.1.3 README ===================  This document was last updated on 2009-05-30.  See the file",3],["wirble.rb","files/lib/wirble_rb.html","files/lib/wirble_rb.html","","",3]],"searchIndex":["wirble","colorize","color","tokenizer","history","internals","rishortcut","shortcuts","cfg()","colorize()","colorize()","colorize_string()","colors()","colors=()","disable()","enable()","escape()","init()","init()","init()","init_libraries()","init_prompt()","load_history()","new()","non_color_output_value()","output_value()","output_value()","po()","poc()","ri()","ri()","save_history()","say()","tokenize()","copying","changelog","readme","wirble.rb"],"longSearchIndex":["lib/wirble.rb","wirble","wirble::colorize","wirble::colorize","wirble","wirble","wirble","wirble","wirble::history","wirble","wirble::colorize","wirble::colorize","wirble::colorize","wirble::colorize","wirble::colorize","wirble::colorize","wirble::colorize::color","wirble","wirble::internals","wirble::rishortcut","wirble::internals","wirble::internals","wirble::history","wirble::history","wirble::colorize","wirble::colorize","wirble::colorize","wirble::shortcuts","wirble::shortcuts","wirble::rishortcut","wirble::rishortcut","wirble::history","wirble::history","wirble::colorize::tokenizer","files/copying.html","files/changelog.html","files/readme.html","files/lib/wirble_rb.html"]}}